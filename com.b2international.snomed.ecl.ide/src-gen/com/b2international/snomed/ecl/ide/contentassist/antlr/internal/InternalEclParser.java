package com.b2international.snomed.ecl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.ecl.services.EclGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEclParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CaseSignificanceId", "LanguageRefSetId", "EffectiveTime", "AcceptableIn", "Description", "PreferredIn", "SemanticTag", "DialectId", "Language", "ModuleId", "Concept", "Dialect", "Active", "TypeId", "MINUS", "Exact", "False", "Match", "Regex", "Term", "True", "Type", "Wild", "AND", "OR", "RULE_TERM_STRING", "RULE_REVERSED", "RULE_TO", "RULE_COMMA", "RULE_ZERO", "RULE_DIGIT_NONZERO", "RULE_COLON", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_PLUS", "RULE_DASH", "RULE_CARET", "RULE_DOT", "RULE_WILDCARD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_LT", "RULE_GT", "RULE_DBL_LT", "RULE_DBL_GT", "RULE_LT_EM", "RULE_DBL_LT_EM", "RULE_GT_EM", "RULE_DBL_GT_EM", "RULE_GTE", "RULE_LTE", "RULE_HASH", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_ALPHA", "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_STRING"
    };
    public static final int RULE_DIGIT_NONZERO=34;
    public static final int RULE_CURLY_OPEN=36;
    public static final int RULE_TO=31;
    public static final int RULE_ROUND_CLOSE=39;
    public static final int RULE_DBL_GT=52;
    public static final int True=24;
    public static final int RULE_GT=50;
    public static final int False=20;
    public static final int DialectId=11;
    public static final int MINUS=18;
    public static final int RULE_GTE=57;
    public static final int ModuleId=13;
    public static final int Regex=22;
    public static final int RULE_ROUND_OPEN=38;
    public static final int RULE_DBL_LT=51;
    public static final int RULE_NOT_EQUAL=48;
    public static final int Concept=14;
    public static final int AcceptableIn=7;
    public static final int TypeId=17;
    public static final int RULE_SQUARE_CLOSE=41;
    public static final int RULE_SQUARE_OPEN=40;
    public static final int RULE_EQUAL=47;
    public static final int RULE_COMMA=32;
    public static final int RULE_LT_EM=53;
    public static final int RULE_CURLY_CLOSE=37;
    public static final int RULE_ZERO=33;
    public static final int RULE_DBL_GT_EM=56;
    public static final int Term=23;
    public static final int RULE_COLON=35;
    public static final int RULE_LT=49;
    public static final int Active=16;
    public static final int RULE_DOUBLE_CURLY_CLOSE=61;
    public static final int AND=27;
    public static final int RULE_ML_COMMENT=64;
    public static final int SemanticTag=10;
    public static final int RULE_LTE=58;
    public static final int RULE_ALPHA=62;
    public static final int Description=8;
    public static final int Wild=26;
    public static final int EffectiveTime=6;
    public static final int RULE_STRING=66;
    public static final int RULE_REVERSED=30;
    public static final int Match=21;
    public static final int RULE_SL_COMMENT=65;
    public static final int PreferredIn=9;
    public static final int RULE_HASH=59;
    public static final int Language=12;
    public static final int RULE_DASH=43;
    public static final int Dialect=15;
    public static final int RULE_PLUS=42;
    public static final int Exact=19;
    public static final int RULE_DOT=45;
    public static final int EOF=-1;
    public static final int OR=28;
    public static final int RULE_GT_EM=55;
    public static final int RULE_WS=63;
    public static final int RULE_CARET=44;
    public static final int Type=25;
    public static final int RULE_DOUBLE_CURLY_OPEN=60;
    public static final int RULE_WILDCARD=46;
    public static final int LanguageRefSetId=5;
    public static final int RULE_TERM_STRING=29;
    public static final int RULE_DBL_LT_EM=54;
    public static final int CaseSignificanceId=4;

    // delegates
    // delegators


        public InternalEclParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEclParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEclParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEclParser.g"; }


    	private EclGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("Term", "'term'");
    		tokenNameToValue.put("True", "'true'");
    		tokenNameToValue.put("Type", "'type'");
    		tokenNameToValue.put("Wild", "'wild'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("Exact", "'exact'");
    		tokenNameToValue.put("False", "'false'");
    		tokenNameToValue.put("Match", "'match'");
    		tokenNameToValue.put("Regex", "'regex'");
    		tokenNameToValue.put("Active", "'active'");
    		tokenNameToValue.put("TypeId", "'typeId'");
    		tokenNameToValue.put("Concept", "'Concept'");
    		tokenNameToValue.put("Dialect", "'dialect'");
    		tokenNameToValue.put("Language", "'language'");
    		tokenNameToValue.put("ModuleId", "'moduleId'");
    		tokenNameToValue.put("DialectId", "'dialectId'");
    		tokenNameToValue.put("Description", "'Description'");
    		tokenNameToValue.put("PreferredIn", "'preferredIn'");
    		tokenNameToValue.put("SemanticTag", "'semanticTag'");
    		tokenNameToValue.put("AcceptableIn", "'acceptableIn'");
    		tokenNameToValue.put("EffectiveTime", "'effectiveTime'");
    		tokenNameToValue.put("LanguageRefSetId", "'languageRefSetId'");
    		tokenNameToValue.put("CaseSignificanceId", "'caseSignificanceId'");
    	}

    	public void setGrammarAccess(EclGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleScript"
    // InternalEclParser.g:93:1: entryRuleScript : ruleScript EOF ;
    public final void entryRuleScript() throws RecognitionException {
        try {
            // InternalEclParser.g:94:1: ( ruleScript EOF )
            // InternalEclParser.g:95:1: ruleScript EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleScript();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScript"


    // $ANTLR start "ruleScript"
    // InternalEclParser.g:102:1: ruleScript : ( ( rule__Script__Group__0 ) ) ;
    public final void ruleScript() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:106:2: ( ( ( rule__Script__Group__0 ) ) )
            // InternalEclParser.g:107:2: ( ( rule__Script__Group__0 ) )
            {
            // InternalEclParser.g:107:2: ( ( rule__Script__Group__0 ) )
            // InternalEclParser.g:108:3: ( rule__Script__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getGroup()); 
            }
            // InternalEclParser.g:109:3: ( rule__Script__Group__0 )
            // InternalEclParser.g:109:4: rule__Script__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScript"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEclParser.g:118:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:119:1: ( ruleExpressionConstraint EOF )
            // InternalEclParser.g:120:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEclParser.g:127:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:131:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEclParser.g:132:2: ( ruleOrExpressionConstraint )
            {
            // InternalEclParser.g:132:2: ( ruleOrExpressionConstraint )
            // InternalEclParser.g:133:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEclParser.g:143:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:144:1: ( ruleOrExpressionConstraint EOF )
            // InternalEclParser.g:145:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEclParser.g:152:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:156:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:157:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:157:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:158:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:159:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEclParser.g:159:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEclParser.g:168:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:169:1: ( ruleAndExpressionConstraint EOF )
            // InternalEclParser.g:170:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEclParser.g:177:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:181:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:182:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:182:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:183:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:184:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEclParser.g:184:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEclParser.g:193:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:194:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEclParser.g:195:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEclParser.g:202:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:206:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:207:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:207:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:208:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:209:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEclParser.g:209:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEclParser.g:218:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:219:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEclParser.g:220:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEclParser.g:227:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:231:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:232:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:232:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:233:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:234:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEclParser.g:234:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEclParser.g:243:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:244:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEclParser.g:245:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEclParser.g:252:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:256:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:257:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:257:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:258:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:259:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEclParser.g:259:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleFilteredExpressionConstraint"
    // InternalEclParser.g:268:1: entryRuleFilteredExpressionConstraint : ruleFilteredExpressionConstraint EOF ;
    public final void entryRuleFilteredExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:269:1: ( ruleFilteredExpressionConstraint EOF )
            // InternalEclParser.g:270:1: ruleFilteredExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilteredExpressionConstraint"


    // $ANTLR start "ruleFilteredExpressionConstraint"
    // InternalEclParser.g:277:1: ruleFilteredExpressionConstraint : ( ( rule__FilteredExpressionConstraint__Group__0 ) ) ;
    public final void ruleFilteredExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:281:2: ( ( ( rule__FilteredExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:282:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:282:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:283:3: ( rule__FilteredExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:284:3: ( rule__FilteredExpressionConstraint__Group__0 )
            // InternalEclParser.g:284:4: rule__FilteredExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilteredExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEclParser.g:293:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:294:1: ( ruleSubExpressionConstraint EOF )
            // InternalEclParser.g:295:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEclParser.g:302:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:306:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEclParser.g:307:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEclParser.g:307:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEclParser.g:308:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEclParser.g:309:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEclParser.g:309:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEclParser.g:318:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEclParser.g:319:1: ( ruleEclFocusConcept EOF )
            // InternalEclParser.g:320:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEclParser.g:327:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:331:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEclParser.g:332:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEclParser.g:332:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEclParser.g:333:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEclParser.g:334:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEclParser.g:334:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEclParser.g:343:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEclParser.g:344:1: ( ruleChildOf EOF )
            // InternalEclParser.g:345:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEclParser.g:352:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:356:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEclParser.g:357:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEclParser.g:357:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEclParser.g:358:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEclParser.g:359:3: ( rule__ChildOf__Group__0 )
            // InternalEclParser.g:359:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEclParser.g:368:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:369:1: ( ruleChildOrSelfOf EOF )
            // InternalEclParser.g:370:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEclParser.g:377:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:381:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:382:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:382:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEclParser.g:383:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:384:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEclParser.g:384:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEclParser.g:393:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEclParser.g:394:1: ( ruleDescendantOf EOF )
            // InternalEclParser.g:395:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEclParser.g:402:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:406:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEclParser.g:407:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEclParser.g:407:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEclParser.g:408:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEclParser.g:409:3: ( rule__DescendantOf__Group__0 )
            // InternalEclParser.g:409:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEclParser.g:418:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:419:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEclParser.g:420:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEclParser.g:427:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:431:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:432:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:432:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEclParser.g:433:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:434:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEclParser.g:434:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEclParser.g:443:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEclParser.g:444:1: ( ruleParentOf EOF )
            // InternalEclParser.g:445:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEclParser.g:452:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:456:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEclParser.g:457:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEclParser.g:457:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEclParser.g:458:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEclParser.g:459:3: ( rule__ParentOf__Group__0 )
            // InternalEclParser.g:459:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEclParser.g:468:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:469:1: ( ruleParentOrSelfOf EOF )
            // InternalEclParser.g:470:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEclParser.g:477:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:481:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:482:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:482:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEclParser.g:483:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:484:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEclParser.g:484:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEclParser.g:493:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEclParser.g:494:1: ( ruleAncestorOf EOF )
            // InternalEclParser.g:495:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEclParser.g:502:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:506:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEclParser.g:507:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEclParser.g:507:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEclParser.g:508:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEclParser.g:509:3: ( rule__AncestorOf__Group__0 )
            // InternalEclParser.g:509:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEclParser.g:518:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:519:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEclParser.g:520:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEclParser.g:527:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:531:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:532:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:532:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEclParser.g:533:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:534:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEclParser.g:534:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEclParser.g:543:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEclParser.g:544:1: ( ruleMemberOf EOF )
            // InternalEclParser.g:545:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEclParser.g:552:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:556:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEclParser.g:557:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEclParser.g:557:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEclParser.g:558:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEclParser.g:559:3: ( rule__MemberOf__Group__0 )
            // InternalEclParser.g:559:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEclParser.g:568:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEclParser.g:569:1: ( ruleEclConceptReference EOF )
            // InternalEclParser.g:570:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEclParser.g:577:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:581:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEclParser.g:582:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEclParser.g:582:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEclParser.g:583:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEclParser.g:584:3: ( rule__EclConceptReference__Group__0 )
            // InternalEclParser.g:584:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEclParser.g:593:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEclParser.g:594:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEclParser.g:595:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEclParser.g:602:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:606:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEclParser.g:607:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEclParser.g:607:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEclParser.g:608:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEclParser.g:609:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEclParser.g:609:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEclParser.g:618:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEclParser.g:619:1: ( ruleAny EOF )
            // InternalEclParser.g:620:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEclParser.g:627:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:631:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEclParser.g:632:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEclParser.g:632:2: ( ( rule__Any__Group__0 ) )
            // InternalEclParser.g:633:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEclParser.g:634:3: ( rule__Any__Group__0 )
            // InternalEclParser.g:634:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEclParser.g:643:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:644:1: ( ruleEclRefinement EOF )
            // InternalEclParser.g:645:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEclParser.g:652:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:656:2: ( ( ruleOrRefinement ) )
            // InternalEclParser.g:657:2: ( ruleOrRefinement )
            {
            // InternalEclParser.g:657:2: ( ruleOrRefinement )
            // InternalEclParser.g:658:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEclParser.g:668:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:669:1: ( ruleOrRefinement EOF )
            // InternalEclParser.g:670:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEclParser.g:677:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:681:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEclParser.g:682:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEclParser.g:682:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEclParser.g:683:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:684:3: ( rule__OrRefinement__Group__0 )
            // InternalEclParser.g:684:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEclParser.g:693:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:694:1: ( ruleAndRefinement EOF )
            // InternalEclParser.g:695:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEclParser.g:702:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:706:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEclParser.g:707:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEclParser.g:707:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEclParser.g:708:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:709:3: ( rule__AndRefinement__Group__0 )
            // InternalEclParser.g:709:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEclParser.g:718:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:719:1: ( ruleSubRefinement EOF )
            // InternalEclParser.g:720:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEclParser.g:727:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:731:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEclParser.g:732:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEclParser.g:732:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEclParser.g:733:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEclParser.g:734:3: ( rule__SubRefinement__Alternatives )
            // InternalEclParser.g:734:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEclParser.g:743:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:744:1: ( ruleNestedRefinement EOF )
            // InternalEclParser.g:745:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEclParser.g:752:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:756:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEclParser.g:757:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEclParser.g:757:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEclParser.g:758:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:759:3: ( rule__NestedRefinement__Group__0 )
            // InternalEclParser.g:759:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEclParser.g:768:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEclParser.g:769:1: ( ruleEclAttributeGroup EOF )
            // InternalEclParser.g:770:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEclParser.g:777:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:781:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEclParser.g:782:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEclParser.g:782:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEclParser.g:783:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEclParser.g:784:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEclParser.g:784:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEclParser.g:793:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:794:1: ( ruleEclAttributeSet EOF )
            // InternalEclParser.g:795:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEclParser.g:802:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:806:2: ( ( ruleOrAttributeSet ) )
            // InternalEclParser.g:807:2: ( ruleOrAttributeSet )
            {
            // InternalEclParser.g:807:2: ( ruleOrAttributeSet )
            // InternalEclParser.g:808:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEclParser.g:818:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:819:1: ( ruleOrAttributeSet EOF )
            // InternalEclParser.g:820:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEclParser.g:827:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:831:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:832:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:832:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEclParser.g:833:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:834:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEclParser.g:834:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEclParser.g:843:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:844:1: ( ruleAndAttributeSet EOF )
            // InternalEclParser.g:845:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEclParser.g:852:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:856:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:857:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:857:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEclParser.g:858:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:859:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEclParser.g:859:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEclParser.g:868:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:869:1: ( ruleSubAttributeSet EOF )
            // InternalEclParser.g:870:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEclParser.g:877:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:881:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEclParser.g:882:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEclParser.g:882:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEclParser.g:883:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEclParser.g:884:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEclParser.g:884:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEclParser.g:893:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:894:1: ( ruleNestedAttributeSet EOF )
            // InternalEclParser.g:895:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEclParser.g:902:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:906:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:907:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:907:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEclParser.g:908:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:909:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEclParser.g:909:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEclParser.g:918:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:919:1: ( ruleAttributeConstraint EOF )
            // InternalEclParser.g:920:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEclParser.g:927:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:931:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEclParser.g:932:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEclParser.g:932:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEclParser.g:933:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:934:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEclParser.g:934:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEclParser.g:943:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEclParser.g:944:1: ( ruleCardinality EOF )
            // InternalEclParser.g:945:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEclParser.g:952:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:956:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEclParser.g:957:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEclParser.g:957:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEclParser.g:958:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEclParser.g:959:3: ( rule__Cardinality__Group__0 )
            // InternalEclParser.g:959:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEclParser.g:968:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:969:1: ( ruleComparison EOF )
            // InternalEclParser.g:970:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEclParser.g:977:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:981:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEclParser.g:982:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEclParser.g:982:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEclParser.g:983:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEclParser.g:984:3: ( rule__Comparison__Alternatives )
            // InternalEclParser.g:984:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEclParser.g:993:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:994:1: ( ruleAttributeComparison EOF )
            // InternalEclParser.g:995:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEclParser.g:1002:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1006:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEclParser.g:1007:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEclParser.g:1007:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEclParser.g:1008:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1009:3: ( rule__AttributeComparison__Group__0 )
            // InternalEclParser.g:1009:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEclParser.g:1018:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1019:1: ( ruleDataTypeComparison EOF )
            // InternalEclParser.g:1020:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEclParser.g:1027:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1031:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEclParser.g:1032:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEclParser.g:1032:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEclParser.g:1033:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1034:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEclParser.g:1034:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEclParser.g:1043:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1044:1: ( ruleBooleanValueComparison EOF )
            // InternalEclParser.g:1045:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEclParser.g:1052:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1056:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1057:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1057:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEclParser.g:1058:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1059:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEclParser.g:1059:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEclParser.g:1068:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1069:1: ( ruleStringValueComparison EOF )
            // InternalEclParser.g:1070:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEclParser.g:1077:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1081:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1082:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1082:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEclParser.g:1083:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1084:3: ( rule__StringValueComparison__Group__0 )
            // InternalEclParser.g:1084:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEclParser.g:1093:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1094:1: ( ruleIntegerValueComparison EOF )
            // InternalEclParser.g:1095:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEclParser.g:1102:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1106:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1107:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1107:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEclParser.g:1108:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1109:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEclParser.g:1109:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEclParser.g:1118:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1119:1: ( ruleDecimalValueComparison EOF )
            // InternalEclParser.g:1120:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEclParser.g:1127:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1131:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1132:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1132:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEclParser.g:1133:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1134:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEclParser.g:1134:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEclParser.g:1143:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEclParser.g:1144:1: ( ruleNestedExpression EOF )
            // InternalEclParser.g:1145:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEclParser.g:1152:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1156:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEclParser.g:1157:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEclParser.g:1157:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEclParser.g:1158:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEclParser.g:1159:3: ( rule__NestedExpression__Group__0 )
            // InternalEclParser.g:1159:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEclParser.g:1168:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:1169:1: ( ruleFilterConstraint EOF )
            // InternalEclParser.g:1170:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEclParser.g:1177:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1181:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEclParser.g:1182:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEclParser.g:1182:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEclParser.g:1183:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:1184:3: ( rule__FilterConstraint__Group__0 )
            // InternalEclParser.g:1184:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEclParser.g:1193:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1194:1: ( ruleFilter EOF )
            // InternalEclParser.g:1195:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEclParser.g:1202:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1206:2: ( ( ruleDisjunctionFilter ) )
            // InternalEclParser.g:1207:2: ( ruleDisjunctionFilter )
            {
            // InternalEclParser.g:1207:2: ( ruleDisjunctionFilter )
            // InternalEclParser.g:1208:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEclParser.g:1218:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1219:1: ( ruleDisjunctionFilter EOF )
            // InternalEclParser.g:1220:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEclParser.g:1227:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1231:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEclParser.g:1232:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEclParser.g:1232:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEclParser.g:1233:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1234:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEclParser.g:1234:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEclParser.g:1243:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1244:1: ( ruleConjunctionFilter EOF )
            // InternalEclParser.g:1245:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEclParser.g:1252:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1256:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEclParser.g:1257:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEclParser.g:1257:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEclParser.g:1258:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1259:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEclParser.g:1259:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEclParser.g:1268:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1269:1: ( ruleNestedFilter EOF )
            // InternalEclParser.g:1270:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEclParser.g:1277:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1281:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEclParser.g:1282:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEclParser.g:1282:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEclParser.g:1283:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1284:3: ( rule__NestedFilter__Group__0 )
            // InternalEclParser.g:1284:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEclParser.g:1293:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1294:1: ( rulePropertyFilter EOF )
            // InternalEclParser.g:1295:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEclParser.g:1302:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1306:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEclParser.g:1307:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEclParser.g:1307:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEclParser.g:1308:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1309:3: ( rule__PropertyFilter__Alternatives )
            // InternalEclParser.g:1309:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEclParser.g:1318:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1319:1: ( ruleTermFilter EOF )
            // InternalEclParser.g:1320:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEclParser.g:1327:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1331:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEclParser.g:1332:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEclParser.g:1332:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEclParser.g:1333:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1334:3: ( rule__TermFilter__Group__0 )
            // InternalEclParser.g:1334:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleTypedTermFilter"
    // InternalEclParser.g:1343:1: entryRuleTypedTermFilter : ruleTypedTermFilter EOF ;
    public final void entryRuleTypedTermFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1344:1: ( ruleTypedTermFilter EOF )
            // InternalEclParser.g:1345:1: ruleTypedTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilter"


    // $ANTLR start "ruleTypedTermFilter"
    // InternalEclParser.g:1352:1: ruleTypedTermFilter : ( ( rule__TypedTermFilter__Group__0 ) ) ;
    public final void ruleTypedTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1356:2: ( ( ( rule__TypedTermFilter__Group__0 ) ) )
            // InternalEclParser.g:1357:2: ( ( rule__TypedTermFilter__Group__0 ) )
            {
            // InternalEclParser.g:1357:2: ( ( rule__TypedTermFilter__Group__0 ) )
            // InternalEclParser.g:1358:3: ( rule__TypedTermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1359:3: ( rule__TypedTermFilter__Group__0 )
            // InternalEclParser.g:1359:4: rule__TypedTermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilter"


    // $ANTLR start "entryRuleTypedTermFilterSet"
    // InternalEclParser.g:1368:1: entryRuleTypedTermFilterSet : ruleTypedTermFilterSet EOF ;
    public final void entryRuleTypedTermFilterSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1369:1: ( ruleTypedTermFilterSet EOF )
            // InternalEclParser.g:1370:1: ruleTypedTermFilterSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterSet"


    // $ANTLR start "ruleTypedTermFilterSet"
    // InternalEclParser.g:1377:1: ruleTypedTermFilterSet : ( ( rule__TypedTermFilterSet__Group__0 ) ) ;
    public final void ruleTypedTermFilterSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1381:2: ( ( ( rule__TypedTermFilterSet__Group__0 ) ) )
            // InternalEclParser.g:1382:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            {
            // InternalEclParser.g:1382:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            // InternalEclParser.g:1383:3: ( rule__TypedTermFilterSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }
            // InternalEclParser.g:1384:3: ( rule__TypedTermFilterSet__Group__0 )
            // InternalEclParser.g:1384:4: rule__TypedTermFilterSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterSet"


    // $ANTLR start "entryRuleLanguageFilter"
    // InternalEclParser.g:1393:1: entryRuleLanguageFilter : ruleLanguageFilter EOF ;
    public final void entryRuleLanguageFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1394:1: ( ruleLanguageFilter EOF )
            // InternalEclParser.g:1395:1: ruleLanguageFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageFilter"


    // $ANTLR start "ruleLanguageFilter"
    // InternalEclParser.g:1402:1: ruleLanguageFilter : ( ( rule__LanguageFilter__Group__0 ) ) ;
    public final void ruleLanguageFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1406:2: ( ( ( rule__LanguageFilter__Group__0 ) ) )
            // InternalEclParser.g:1407:2: ( ( rule__LanguageFilter__Group__0 ) )
            {
            // InternalEclParser.g:1407:2: ( ( rule__LanguageFilter__Group__0 ) )
            // InternalEclParser.g:1408:3: ( rule__LanguageFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1409:3: ( rule__LanguageFilter__Group__0 )
            // InternalEclParser.g:1409:4: rule__LanguageFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEclParser.g:1418:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1419:1: ( ruleTypeFilter EOF )
            // InternalEclParser.g:1420:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEclParser.g:1427:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1431:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEclParser.g:1432:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEclParser.g:1432:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEclParser.g:1433:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1434:3: ( rule__TypeFilter__Alternatives )
            // InternalEclParser.g:1434:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEclParser.g:1443:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1444:1: ( ruleTypeIdFilter EOF )
            // InternalEclParser.g:1445:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEclParser.g:1452:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1456:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEclParser.g:1457:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEclParser.g:1457:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEclParser.g:1458:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1459:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEclParser.g:1459:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEclParser.g:1468:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1469:1: ( ruleTypeTokenFilter EOF )
            // InternalEclParser.g:1470:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEclParser.g:1477:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1481:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEclParser.g:1482:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEclParser.g:1482:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEclParser.g:1483:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1484:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEclParser.g:1484:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEclParser.g:1493:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1494:1: ( ruleDialectFilter EOF )
            // InternalEclParser.g:1495:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEclParser.g:1502:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1506:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEclParser.g:1507:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEclParser.g:1507:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEclParser.g:1508:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1509:3: ( rule__DialectFilter__Alternatives )
            // InternalEclParser.g:1509:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEclParser.g:1518:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1519:1: ( ruleDialectIdFilter EOF )
            // InternalEclParser.g:1520:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEclParser.g:1527:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1531:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEclParser.g:1532:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEclParser.g:1532:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEclParser.g:1533:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1534:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEclParser.g:1534:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEclParser.g:1543:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1544:1: ( ruleDialectAliasFilter EOF )
            // InternalEclParser.g:1545:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEclParser.g:1552:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1556:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEclParser.g:1557:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEclParser.g:1557:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEclParser.g:1558:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1559:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEclParser.g:1559:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEclParser.g:1568:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEclParser.g:1569:1: ( ruleDialect EOF )
            // InternalEclParser.g:1570:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEclParser.g:1577:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1581:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEclParser.g:1582:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEclParser.g:1582:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEclParser.g:1583:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEclParser.g:1584:3: ( rule__Dialect__Group__0 )
            // InternalEclParser.g:1584:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEclParser.g:1593:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
        try {
            // InternalEclParser.g:1594:1: ( ruleDialectAlias EOF )
            // InternalEclParser.g:1595:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEclParser.g:1602:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1606:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEclParser.g:1607:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEclParser.g:1607:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEclParser.g:1608:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEclParser.g:1609:3: ( rule__DialectAlias__Group__0 )
            // InternalEclParser.g:1609:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEclParser.g:1618:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEclParser.g:1619:1: ( ruleAcceptability EOF )
            // InternalEclParser.g:1620:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEclParser.g:1627:1: ruleAcceptability : ( ( rule__Acceptability__Alternatives ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1631:2: ( ( ( rule__Acceptability__Alternatives ) ) )
            // InternalEclParser.g:1632:2: ( ( rule__Acceptability__Alternatives ) )
            {
            // InternalEclParser.g:1632:2: ( ( rule__Acceptability__Alternatives ) )
            // InternalEclParser.g:1633:3: ( rule__Acceptability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1634:3: ( rule__Acceptability__Alternatives )
            // InternalEclParser.g:1634:4: rule__Acceptability__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleAcceptabilityIdSet"
    // InternalEclParser.g:1643:1: entryRuleAcceptabilityIdSet : ruleAcceptabilityIdSet EOF ;
    public final void entryRuleAcceptabilityIdSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1644:1: ( ruleAcceptabilityIdSet EOF )
            // InternalEclParser.g:1645:1: ruleAcceptabilityIdSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityIdSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityIdSet"


    // $ANTLR start "ruleAcceptabilityIdSet"
    // InternalEclParser.g:1652:1: ruleAcceptabilityIdSet : ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptabilityIdSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1656:2: ( ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) )
            // InternalEclParser.g:1657:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            {
            // InternalEclParser.g:1657:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            // InternalEclParser.g:1658:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEclParser.g:1659:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            // InternalEclParser.g:1659:4: rule__AcceptabilityIdSet__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityIdSet__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityIdSet"


    // $ANTLR start "entryRuleAcceptabilityTokenSet"
    // InternalEclParser.g:1668:1: entryRuleAcceptabilityTokenSet : ruleAcceptabilityTokenSet EOF ;
    public final void entryRuleAcceptabilityTokenSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1669:1: ( ruleAcceptabilityTokenSet EOF )
            // InternalEclParser.g:1670:1: ruleAcceptabilityTokenSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityTokenSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityTokenSet"


    // $ANTLR start "ruleAcceptabilityTokenSet"
    // InternalEclParser.g:1677:1: ruleAcceptabilityTokenSet : ( ( rule__AcceptabilityTokenSet__Group__0 ) ) ;
    public final void ruleAcceptabilityTokenSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1681:2: ( ( ( rule__AcceptabilityTokenSet__Group__0 ) ) )
            // InternalEclParser.g:1682:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            {
            // InternalEclParser.g:1682:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            // InternalEclParser.g:1683:3: ( rule__AcceptabilityTokenSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }
            // InternalEclParser.g:1684:3: ( rule__AcceptabilityTokenSet__Group__0 )
            // InternalEclParser.g:1684:4: rule__AcceptabilityTokenSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityTokenSet"


    // $ANTLR start "entryRuleActiveFilter"
    // InternalEclParser.g:1693:1: entryRuleActiveFilter : ruleActiveFilter EOF ;
    public final void entryRuleActiveFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1694:1: ( ruleActiveFilter EOF )
            // InternalEclParser.g:1695:1: ruleActiveFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveFilter"


    // $ANTLR start "ruleActiveFilter"
    // InternalEclParser.g:1702:1: ruleActiveFilter : ( ( rule__ActiveFilter__Group__0 ) ) ;
    public final void ruleActiveFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1706:2: ( ( ( rule__ActiveFilter__Group__0 ) ) )
            // InternalEclParser.g:1707:2: ( ( rule__ActiveFilter__Group__0 ) )
            {
            // InternalEclParser.g:1707:2: ( ( rule__ActiveFilter__Group__0 ) )
            // InternalEclParser.g:1708:3: ( rule__ActiveFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1709:3: ( rule__ActiveFilter__Group__0 )
            // InternalEclParser.g:1709:4: rule__ActiveFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveFilter"


    // $ANTLR start "entryRuleModuleFilter"
    // InternalEclParser.g:1718:1: entryRuleModuleFilter : ruleModuleFilter EOF ;
    public final void entryRuleModuleFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1719:1: ( ruleModuleFilter EOF )
            // InternalEclParser.g:1720:1: ruleModuleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModuleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModuleFilter"


    // $ANTLR start "ruleModuleFilter"
    // InternalEclParser.g:1727:1: ruleModuleFilter : ( ( rule__ModuleFilter__Group__0 ) ) ;
    public final void ruleModuleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1731:2: ( ( ( rule__ModuleFilter__Group__0 ) ) )
            // InternalEclParser.g:1732:2: ( ( rule__ModuleFilter__Group__0 ) )
            {
            // InternalEclParser.g:1732:2: ( ( rule__ModuleFilter__Group__0 ) )
            // InternalEclParser.g:1733:3: ( rule__ModuleFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1734:3: ( rule__ModuleFilter__Group__0 )
            // InternalEclParser.g:1734:4: rule__ModuleFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModuleFilter"


    // $ANTLR start "entryRuleSemanticTagFilter"
    // InternalEclParser.g:1743:1: entryRuleSemanticTagFilter : ruleSemanticTagFilter EOF ;
    public final void entryRuleSemanticTagFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1744:1: ( ruleSemanticTagFilter EOF )
            // InternalEclParser.g:1745:1: ruleSemanticTagFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSemanticTagFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSemanticTagFilter"


    // $ANTLR start "ruleSemanticTagFilter"
    // InternalEclParser.g:1752:1: ruleSemanticTagFilter : ( ( rule__SemanticTagFilter__Group__0 ) ) ;
    public final void ruleSemanticTagFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1756:2: ( ( ( rule__SemanticTagFilter__Group__0 ) ) )
            // InternalEclParser.g:1757:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            {
            // InternalEclParser.g:1757:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            // InternalEclParser.g:1758:3: ( rule__SemanticTagFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1759:3: ( rule__SemanticTagFilter__Group__0 )
            // InternalEclParser.g:1759:4: rule__SemanticTagFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSemanticTagFilter"


    // $ANTLR start "entryRuleEffectiveTimeFilter"
    // InternalEclParser.g:1768:1: entryRuleEffectiveTimeFilter : ruleEffectiveTimeFilter EOF ;
    public final void entryRuleEffectiveTimeFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1769:1: ( ruleEffectiveTimeFilter EOF )
            // InternalEclParser.g:1770:1: ruleEffectiveTimeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEffectiveTimeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEffectiveTimeFilter"


    // $ANTLR start "ruleEffectiveTimeFilter"
    // InternalEclParser.g:1777:1: ruleEffectiveTimeFilter : ( ( rule__EffectiveTimeFilter__Group__0 ) ) ;
    public final void ruleEffectiveTimeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1781:2: ( ( ( rule__EffectiveTimeFilter__Group__0 ) ) )
            // InternalEclParser.g:1782:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            {
            // InternalEclParser.g:1782:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            // InternalEclParser.g:1783:3: ( rule__EffectiveTimeFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1784:3: ( rule__EffectiveTimeFilter__Group__0 )
            // InternalEclParser.g:1784:4: rule__EffectiveTimeFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEffectiveTimeFilter"


    // $ANTLR start "entryRulePreferredInFilter"
    // InternalEclParser.g:1793:1: entryRulePreferredInFilter : rulePreferredInFilter EOF ;
    public final void entryRulePreferredInFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1794:1: ( rulePreferredInFilter EOF )
            // InternalEclParser.g:1795:1: rulePreferredInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreferredInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreferredInFilter"


    // $ANTLR start "rulePreferredInFilter"
    // InternalEclParser.g:1802:1: rulePreferredInFilter : ( ( rule__PreferredInFilter__Group__0 ) ) ;
    public final void rulePreferredInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1806:2: ( ( ( rule__PreferredInFilter__Group__0 ) ) )
            // InternalEclParser.g:1807:2: ( ( rule__PreferredInFilter__Group__0 ) )
            {
            // InternalEclParser.g:1807:2: ( ( rule__PreferredInFilter__Group__0 ) )
            // InternalEclParser.g:1808:3: ( rule__PreferredInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1809:3: ( rule__PreferredInFilter__Group__0 )
            // InternalEclParser.g:1809:4: rule__PreferredInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreferredInFilter"


    // $ANTLR start "entryRuleAcceptableInFilter"
    // InternalEclParser.g:1818:1: entryRuleAcceptableInFilter : ruleAcceptableInFilter EOF ;
    public final void entryRuleAcceptableInFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1819:1: ( ruleAcceptableInFilter EOF )
            // InternalEclParser.g:1820:1: ruleAcceptableInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptableInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptableInFilter"


    // $ANTLR start "ruleAcceptableInFilter"
    // InternalEclParser.g:1827:1: ruleAcceptableInFilter : ( ( rule__AcceptableInFilter__Group__0 ) ) ;
    public final void ruleAcceptableInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1831:2: ( ( ( rule__AcceptableInFilter__Group__0 ) ) )
            // InternalEclParser.g:1832:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            {
            // InternalEclParser.g:1832:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            // InternalEclParser.g:1833:3: ( rule__AcceptableInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1834:3: ( rule__AcceptableInFilter__Group__0 )
            // InternalEclParser.g:1834:4: rule__AcceptableInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptableInFilter"


    // $ANTLR start "entryRuleLanguageRefSetFilter"
    // InternalEclParser.g:1843:1: entryRuleLanguageRefSetFilter : ruleLanguageRefSetFilter EOF ;
    public final void entryRuleLanguageRefSetFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1844:1: ( ruleLanguageRefSetFilter EOF )
            // InternalEclParser.g:1845:1: ruleLanguageRefSetFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageRefSetFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageRefSetFilter"


    // $ANTLR start "ruleLanguageRefSetFilter"
    // InternalEclParser.g:1852:1: ruleLanguageRefSetFilter : ( ( rule__LanguageRefSetFilter__Group__0 ) ) ;
    public final void ruleLanguageRefSetFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1856:2: ( ( ( rule__LanguageRefSetFilter__Group__0 ) ) )
            // InternalEclParser.g:1857:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            {
            // InternalEclParser.g:1857:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            // InternalEclParser.g:1858:3: ( rule__LanguageRefSetFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1859:3: ( rule__LanguageRefSetFilter__Group__0 )
            // InternalEclParser.g:1859:4: rule__LanguageRefSetFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageRefSetFilter"


    // $ANTLR start "entryRuleCaseSignificanceFilter"
    // InternalEclParser.g:1868:1: entryRuleCaseSignificanceFilter : ruleCaseSignificanceFilter EOF ;
    public final void entryRuleCaseSignificanceFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1869:1: ( ruleCaseSignificanceFilter EOF )
            // InternalEclParser.g:1870:1: ruleCaseSignificanceFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCaseSignificanceFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseSignificanceFilter"


    // $ANTLR start "ruleCaseSignificanceFilter"
    // InternalEclParser.g:1877:1: ruleCaseSignificanceFilter : ( ( rule__CaseSignificanceFilter__Group__0 ) ) ;
    public final void ruleCaseSignificanceFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1881:2: ( ( ( rule__CaseSignificanceFilter__Group__0 ) ) )
            // InternalEclParser.g:1882:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            {
            // InternalEclParser.g:1882:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            // InternalEclParser.g:1883:3: ( rule__CaseSignificanceFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1884:3: ( rule__CaseSignificanceFilter__Group__0 )
            // InternalEclParser.g:1884:4: rule__CaseSignificanceFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseSignificanceFilter"


    // $ANTLR start "entryRuleSnomedIdentifier"
    // InternalEclParser.g:1893:1: entryRuleSnomedIdentifier : ruleSnomedIdentifier EOF ;
    public final void entryRuleSnomedIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1897:1: ( ruleSnomedIdentifier EOF )
            // InternalEclParser.g:1898:1: ruleSnomedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSnomedIdentifier"


    // $ANTLR start "ruleSnomedIdentifier"
    // InternalEclParser.g:1908:1: ruleSnomedIdentifier : ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) ;
    public final void ruleSnomedIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1913:2: ( ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) )
            // InternalEclParser.g:1914:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            {
            // InternalEclParser.g:1914:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            // InternalEclParser.g:1915:3: ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* )
            {
            // InternalEclParser.g:1915:3: ( ( rule__SnomedIdentifier__Alternatives ) )
            // InternalEclParser.g:1916:4: ( rule__SnomedIdentifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1917:4: ( rule__SnomedIdentifier__Alternatives )
            // InternalEclParser.g:1917:5: rule__SnomedIdentifier__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__SnomedIdentifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }

            // InternalEclParser.g:1920:3: ( ( rule__SnomedIdentifier__Alternatives )* )
            // InternalEclParser.g:1921:4: ( rule__SnomedIdentifier__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1922:4: ( rule__SnomedIdentifier__Alternatives )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_DIGIT_NONZERO) ) {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalEclParser()) ) {
                        alt1=1;
                    }


                }
                else if ( (LA1_0==RULE_ZERO) ) {
                    int LA1_3 = input.LA(2);

                    if ( (synpred1_InternalEclParser()) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // InternalEclParser.g:1922:5: rule__SnomedIdentifier__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__SnomedIdentifier__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSnomedIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEclParser.g:1933:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1937:1: ( ruleNonNegativeInteger EOF )
            // InternalEclParser.g:1938:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEclParser.g:1948:1: ruleNonNegativeInteger : ( ( rule__NonNegativeInteger__Alternatives ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1953:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) )
            // InternalEclParser.g:1954:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            {
            // InternalEclParser.g:1954:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            // InternalEclParser.g:1955:3: ( rule__NonNegativeInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1956:3: ( rule__NonNegativeInteger__Alternatives )
            // InternalEclParser.g:1956:4: rule__NonNegativeInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEclParser.g:1966:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1970:1: ( ruleMaxValue EOF )
            // InternalEclParser.g:1971:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEclParser.g:1981:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1986:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEclParser.g:1987:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEclParser.g:1987:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEclParser.g:1988:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1989:3: ( rule__MaxValue__Alternatives )
            // InternalEclParser.g:1989:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEclParser.g:1999:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2003:1: ( ruleInteger EOF )
            // InternalEclParser.g:2004:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEclParser.g:2014:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2019:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEclParser.g:2020:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEclParser.g:2020:2: ( ( rule__Integer__Group__0 ) )
            // InternalEclParser.g:2021:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEclParser.g:2022:3: ( rule__Integer__Group__0 )
            // InternalEclParser.g:2022:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEclParser.g:2032:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2036:1: ( ruleDecimal EOF )
            // InternalEclParser.g:2037:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEclParser.g:2047:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2052:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEclParser.g:2053:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEclParser.g:2053:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEclParser.g:2054:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEclParser.g:2055:3: ( rule__Decimal__Group__0 )
            // InternalEclParser.g:2055:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEclParser.g:2065:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2069:1: ( ruleNonNegativeDecimal EOF )
            // InternalEclParser.g:2070:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEclParser.g:2080:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2085:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEclParser.g:2086:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEclParser.g:2086:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEclParser.g:2087:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEclParser.g:2088:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEclParser.g:2088:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEclParser.g:2098:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2102:1: ( ruleBoolean EOF )
            // InternalEclParser.g:2103:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEclParser.g:2113:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2118:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEclParser.g:2119:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEclParser.g:2119:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEclParser.g:2120:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2121:3: ( rule__Boolean__Alternatives )
            // InternalEclParser.g:2121:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEclParser.g:2131:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2135:1: ( ruleDialectAliasValue EOF )
            // InternalEclParser.g:2136:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEclParser.g:2146:1: ruleDialectAliasValue : ( ( rule__DialectAliasValue__Group__0 ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2151:2: ( ( ( rule__DialectAliasValue__Group__0 ) ) )
            // InternalEclParser.g:2152:2: ( ( rule__DialectAliasValue__Group__0 ) )
            {
            // InternalEclParser.g:2152:2: ( ( rule__DialectAliasValue__Group__0 ) )
            // InternalEclParser.g:2153:3: ( rule__DialectAliasValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getGroup()); 
            }
            // InternalEclParser.g:2154:3: ( rule__DialectAliasValue__Group__0 )
            // InternalEclParser.g:2154:4: rule__DialectAliasValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleAlphabetical"
    // InternalEclParser.g:2164:1: entryRuleAlphabetical : ruleAlphabetical EOF ;
    public final void entryRuleAlphabetical() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2168:1: ( ruleAlphabetical EOF )
            // InternalEclParser.g:2169:1: ruleAlphabetical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAlphabetical"


    // $ANTLR start "ruleAlphabetical"
    // InternalEclParser.g:2179:1: ruleAlphabetical : ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) ) ;
    public final void ruleAlphabetical() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2184:2: ( ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) ) )
            // InternalEclParser.g:2185:2: ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) )
            {
            // InternalEclParser.g:2185:2: ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) )
            // InternalEclParser.g:2186:3: ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* )
            {
            // InternalEclParser.g:2186:3: ( ( RULE_ALPHA ) )
            // InternalEclParser.g:2187:4: ( RULE_ALPHA )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }
            // InternalEclParser.g:2188:4: ( RULE_ALPHA )
            // InternalEclParser.g:2188:5: RULE_ALPHA
            {
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_4); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }

            }

            // InternalEclParser.g:2191:3: ( ( RULE_ALPHA )* )
            // InternalEclParser.g:2192:4: ( RULE_ALPHA )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }
            // InternalEclParser.g:2193:4: ( RULE_ALPHA )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_ALPHA) ) {
                    int LA2_2 = input.LA(2);

                    if ( (synpred2_InternalEclParser()) ) {
                        alt2=1;
                    }


                }


                switch (alt2) {
            	case 1 :
            	    // InternalEclParser.g:2193:5: RULE_ALPHA
            	    {
            	    match(input,RULE_ALPHA,FollowSets000.FOLLOW_4); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAlphabetical"


    // $ANTLR start "entryRuleCONJUNCTION"
    // InternalEclParser.g:2204:1: entryRuleCONJUNCTION : ruleCONJUNCTION EOF ;
    public final void entryRuleCONJUNCTION() throws RecognitionException {
        try {
            // InternalEclParser.g:2205:1: ( ruleCONJUNCTION EOF )
            // InternalEclParser.g:2206:1: ruleCONJUNCTION EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCONJUNCTIONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCONJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCONJUNCTIONRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCONJUNCTION"


    // $ANTLR start "ruleCONJUNCTION"
    // InternalEclParser.g:2213:1: ruleCONJUNCTION : ( AND ) ;
    public final void ruleCONJUNCTION() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2217:2: ( ( AND ) )
            // InternalEclParser.g:2218:2: ( AND )
            {
            // InternalEclParser.g:2218:2: ( AND )
            // InternalEclParser.g:2219:3: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCONJUNCTIONAccess().getANDKeyword()); 
            }
            match(input,AND,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCONJUNCTIONAccess().getANDKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCONJUNCTION"


    // $ANTLR start "entryRuleDISJUNCTION"
    // InternalEclParser.g:2229:1: entryRuleDISJUNCTION : ruleDISJUNCTION EOF ;
    public final void entryRuleDISJUNCTION() throws RecognitionException {
        try {
            // InternalEclParser.g:2230:1: ( ruleDISJUNCTION EOF )
            // InternalEclParser.g:2231:1: ruleDISJUNCTION EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDISJUNCTIONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDISJUNCTIONRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDISJUNCTION"


    // $ANTLR start "ruleDISJUNCTION"
    // InternalEclParser.g:2238:1: ruleDISJUNCTION : ( OR ) ;
    public final void ruleDISJUNCTION() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2242:2: ( ( OR ) )
            // InternalEclParser.g:2243:2: ( OR )
            {
            // InternalEclParser.g:2243:2: ( OR )
            // InternalEclParser.g:2244:3: OR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDISJUNCTIONAccess().getORKeyword()); 
            }
            match(input,OR,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDISJUNCTIONAccess().getORKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDISJUNCTION"


    // $ANTLR start "entryRuleEXCLUSION"
    // InternalEclParser.g:2254:1: entryRuleEXCLUSION : ruleEXCLUSION EOF ;
    public final void entryRuleEXCLUSION() throws RecognitionException {
        try {
            // InternalEclParser.g:2255:1: ( ruleEXCLUSION EOF )
            // InternalEclParser.g:2256:1: ruleEXCLUSION EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXCLUSIONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEXCLUSION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXCLUSIONRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEXCLUSION"


    // $ANTLR start "ruleEXCLUSION"
    // InternalEclParser.g:2263:1: ruleEXCLUSION : ( MINUS ) ;
    public final void ruleEXCLUSION() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2267:2: ( ( MINUS ) )
            // InternalEclParser.g:2268:2: ( MINUS )
            {
            // InternalEclParser.g:2268:2: ( MINUS )
            // InternalEclParser.g:2269:3: MINUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXCLUSIONAccess().getMINUSKeyword()); 
            }
            match(input,MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXCLUSIONAccess().getMINUSKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXCLUSION"


    // $ANTLR start "entryRuleTERM_KEYWORD"
    // InternalEclParser.g:2279:1: entryRuleTERM_KEYWORD : ruleTERM_KEYWORD EOF ;
    public final void entryRuleTERM_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2280:1: ( ruleTERM_KEYWORD EOF )
            // InternalEclParser.g:2281:1: ruleTERM_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTERM_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTERM_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTERM_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTERM_KEYWORD"


    // $ANTLR start "ruleTERM_KEYWORD"
    // InternalEclParser.g:2288:1: ruleTERM_KEYWORD : ( Term ) ;
    public final void ruleTERM_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2292:2: ( ( Term ) )
            // InternalEclParser.g:2293:2: ( Term )
            {
            // InternalEclParser.g:2293:2: ( Term )
            // InternalEclParser.g:2294:3: Term
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTERM_KEYWORDAccess().getTermKeyword()); 
            }
            match(input,Term,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTERM_KEYWORDAccess().getTermKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTERM_KEYWORD"


    // $ANTLR start "entryRuleLANGUAGE_KEYWORD"
    // InternalEclParser.g:2304:1: entryRuleLANGUAGE_KEYWORD : ruleLANGUAGE_KEYWORD EOF ;
    public final void entryRuleLANGUAGE_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2305:1: ( ruleLANGUAGE_KEYWORD EOF )
            // InternalEclParser.g:2306:1: ruleLANGUAGE_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLANGUAGE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLANGUAGE_KEYWORD"


    // $ANTLR start "ruleLANGUAGE_KEYWORD"
    // InternalEclParser.g:2313:1: ruleLANGUAGE_KEYWORD : ( Language ) ;
    public final void ruleLANGUAGE_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2317:2: ( ( Language ) )
            // InternalEclParser.g:2318:2: ( Language )
            {
            // InternalEclParser.g:2318:2: ( Language )
            // InternalEclParser.g:2319:3: Language
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_KEYWORDAccess().getLanguageKeyword()); 
            }
            match(input,Language,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_KEYWORDAccess().getLanguageKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLANGUAGE_KEYWORD"


    // $ANTLR start "entryRuleTYPEID_KEYWORD"
    // InternalEclParser.g:2329:1: entryRuleTYPEID_KEYWORD : ruleTYPEID_KEYWORD EOF ;
    public final void entryRuleTYPEID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2330:1: ( ruleTYPEID_KEYWORD EOF )
            // InternalEclParser.g:2331:1: ruleTYPEID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPEID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTYPEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPEID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTYPEID_KEYWORD"


    // $ANTLR start "ruleTYPEID_KEYWORD"
    // InternalEclParser.g:2338:1: ruleTYPEID_KEYWORD : ( TypeId ) ;
    public final void ruleTYPEID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2342:2: ( ( TypeId ) )
            // InternalEclParser.g:2343:2: ( TypeId )
            {
            // InternalEclParser.g:2343:2: ( TypeId )
            // InternalEclParser.g:2344:3: TypeId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPEID_KEYWORDAccess().getTypeIdKeyword()); 
            }
            match(input,TypeId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPEID_KEYWORDAccess().getTypeIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTYPEID_KEYWORD"


    // $ANTLR start "entryRuleTYPE_KEYWORD"
    // InternalEclParser.g:2354:1: entryRuleTYPE_KEYWORD : ruleTYPE_KEYWORD EOF ;
    public final void entryRuleTYPE_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2355:1: ( ruleTYPE_KEYWORD EOF )
            // InternalEclParser.g:2356:1: ruleTYPE_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPE_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTYPE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPE_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTYPE_KEYWORD"


    // $ANTLR start "ruleTYPE_KEYWORD"
    // InternalEclParser.g:2363:1: ruleTYPE_KEYWORD : ( Type ) ;
    public final void ruleTYPE_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2367:2: ( ( Type ) )
            // InternalEclParser.g:2368:2: ( Type )
            {
            // InternalEclParser.g:2368:2: ( Type )
            // InternalEclParser.g:2369:3: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPE_KEYWORDAccess().getTypeKeyword()); 
            }
            match(input,Type,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPE_KEYWORDAccess().getTypeKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTYPE_KEYWORD"


    // $ANTLR start "entryRuleDIALECTID_KEYWORD"
    // InternalEclParser.g:2379:1: entryRuleDIALECTID_KEYWORD : ruleDIALECTID_KEYWORD EOF ;
    public final void entryRuleDIALECTID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2380:1: ( ruleDIALECTID_KEYWORD EOF )
            // InternalEclParser.g:2381:1: ruleDIALECTID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECTID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDIALECTID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECTID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDIALECTID_KEYWORD"


    // $ANTLR start "ruleDIALECTID_KEYWORD"
    // InternalEclParser.g:2388:1: ruleDIALECTID_KEYWORD : ( DialectId ) ;
    public final void ruleDIALECTID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2392:2: ( ( DialectId ) )
            // InternalEclParser.g:2393:2: ( DialectId )
            {
            // InternalEclParser.g:2393:2: ( DialectId )
            // InternalEclParser.g:2394:3: DialectId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECTID_KEYWORDAccess().getDialectIdKeyword()); 
            }
            match(input,DialectId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECTID_KEYWORDAccess().getDialectIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDIALECTID_KEYWORD"


    // $ANTLR start "entryRuleDIALECT_KEYWORD"
    // InternalEclParser.g:2404:1: entryRuleDIALECT_KEYWORD : ruleDIALECT_KEYWORD EOF ;
    public final void entryRuleDIALECT_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2405:1: ( ruleDIALECT_KEYWORD EOF )
            // InternalEclParser.g:2406:1: ruleDIALECT_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECT_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDIALECT_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECT_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDIALECT_KEYWORD"


    // $ANTLR start "ruleDIALECT_KEYWORD"
    // InternalEclParser.g:2413:1: ruleDIALECT_KEYWORD : ( Dialect ) ;
    public final void ruleDIALECT_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2417:2: ( ( Dialect ) )
            // InternalEclParser.g:2418:2: ( Dialect )
            {
            // InternalEclParser.g:2418:2: ( Dialect )
            // InternalEclParser.g:2419:3: Dialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECT_KEYWORDAccess().getDialectKeyword()); 
            }
            match(input,Dialect,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECT_KEYWORDAccess().getDialectKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDIALECT_KEYWORD"


    // $ANTLR start "entryRuleACTIVE_KEYWORD"
    // InternalEclParser.g:2429:1: entryRuleACTIVE_KEYWORD : ruleACTIVE_KEYWORD EOF ;
    public final void entryRuleACTIVE_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2430:1: ( ruleACTIVE_KEYWORD EOF )
            // InternalEclParser.g:2431:1: ruleACTIVE_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACTIVE_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleACTIVE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACTIVE_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleACTIVE_KEYWORD"


    // $ANTLR start "ruleACTIVE_KEYWORD"
    // InternalEclParser.g:2438:1: ruleACTIVE_KEYWORD : ( Active ) ;
    public final void ruleACTIVE_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2442:2: ( ( Active ) )
            // InternalEclParser.g:2443:2: ( Active )
            {
            // InternalEclParser.g:2443:2: ( Active )
            // InternalEclParser.g:2444:3: Active
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACTIVE_KEYWORDAccess().getActiveKeyword()); 
            }
            match(input,Active,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACTIVE_KEYWORDAccess().getActiveKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleACTIVE_KEYWORD"


    // $ANTLR start "entryRuleMODULEID_KEYWORD"
    // InternalEclParser.g:2454:1: entryRuleMODULEID_KEYWORD : ruleMODULEID_KEYWORD EOF ;
    public final void entryRuleMODULEID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2455:1: ( ruleMODULEID_KEYWORD EOF )
            // InternalEclParser.g:2456:1: ruleMODULEID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMODULEID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMODULEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMODULEID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMODULEID_KEYWORD"


    // $ANTLR start "ruleMODULEID_KEYWORD"
    // InternalEclParser.g:2463:1: ruleMODULEID_KEYWORD : ( ModuleId ) ;
    public final void ruleMODULEID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2467:2: ( ( ModuleId ) )
            // InternalEclParser.g:2468:2: ( ModuleId )
            {
            // InternalEclParser.g:2468:2: ( ModuleId )
            // InternalEclParser.g:2469:3: ModuleId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMODULEID_KEYWORDAccess().getModuleIdKeyword()); 
            }
            match(input,ModuleId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMODULEID_KEYWORDAccess().getModuleIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMODULEID_KEYWORD"


    // $ANTLR start "entryRuleSEMANTIC_TAG_KEYWORD"
    // InternalEclParser.g:2479:1: entryRuleSEMANTIC_TAG_KEYWORD : ruleSEMANTIC_TAG_KEYWORD EOF ;
    public final void entryRuleSEMANTIC_TAG_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2480:1: ( ruleSEMANTIC_TAG_KEYWORD EOF )
            // InternalEclParser.g:2481:1: ruleSEMANTIC_TAG_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSEMANTIC_TAG_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSEMANTIC_TAG_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSEMANTIC_TAG_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSEMANTIC_TAG_KEYWORD"


    // $ANTLR start "ruleSEMANTIC_TAG_KEYWORD"
    // InternalEclParser.g:2488:1: ruleSEMANTIC_TAG_KEYWORD : ( SemanticTag ) ;
    public final void ruleSEMANTIC_TAG_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2492:2: ( ( SemanticTag ) )
            // InternalEclParser.g:2493:2: ( SemanticTag )
            {
            // InternalEclParser.g:2493:2: ( SemanticTag )
            // InternalEclParser.g:2494:3: SemanticTag
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSEMANTIC_TAG_KEYWORDAccess().getSemanticTagKeyword()); 
            }
            match(input,SemanticTag,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSEMANTIC_TAG_KEYWORDAccess().getSemanticTagKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSEMANTIC_TAG_KEYWORD"


    // $ANTLR start "entryRuleEFFECTIVE_TIME_KEYWORD"
    // InternalEclParser.g:2504:1: entryRuleEFFECTIVE_TIME_KEYWORD : ruleEFFECTIVE_TIME_KEYWORD EOF ;
    public final void entryRuleEFFECTIVE_TIME_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2505:1: ( ruleEFFECTIVE_TIME_KEYWORD EOF )
            // InternalEclParser.g:2506:1: ruleEFFECTIVE_TIME_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEFFECTIVE_TIME_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEFFECTIVE_TIME_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEFFECTIVE_TIME_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEFFECTIVE_TIME_KEYWORD"


    // $ANTLR start "ruleEFFECTIVE_TIME_KEYWORD"
    // InternalEclParser.g:2513:1: ruleEFFECTIVE_TIME_KEYWORD : ( EffectiveTime ) ;
    public final void ruleEFFECTIVE_TIME_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2517:2: ( ( EffectiveTime ) )
            // InternalEclParser.g:2518:2: ( EffectiveTime )
            {
            // InternalEclParser.g:2518:2: ( EffectiveTime )
            // InternalEclParser.g:2519:3: EffectiveTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEFFECTIVE_TIME_KEYWORDAccess().getEffectiveTimeKeyword()); 
            }
            match(input,EffectiveTime,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEFFECTIVE_TIME_KEYWORDAccess().getEffectiveTimeKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEFFECTIVE_TIME_KEYWORD"


    // $ANTLR start "entryRulePREFERRED_IN_KEYWORD"
    // InternalEclParser.g:2529:1: entryRulePREFERRED_IN_KEYWORD : rulePREFERRED_IN_KEYWORD EOF ;
    public final void entryRulePREFERRED_IN_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2530:1: ( rulePREFERRED_IN_KEYWORD EOF )
            // InternalEclParser.g:2531:1: rulePREFERRED_IN_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPREFERRED_IN_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePREFERRED_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPREFERRED_IN_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePREFERRED_IN_KEYWORD"


    // $ANTLR start "rulePREFERRED_IN_KEYWORD"
    // InternalEclParser.g:2538:1: rulePREFERRED_IN_KEYWORD : ( PreferredIn ) ;
    public final void rulePREFERRED_IN_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2542:2: ( ( PreferredIn ) )
            // InternalEclParser.g:2543:2: ( PreferredIn )
            {
            // InternalEclParser.g:2543:2: ( PreferredIn )
            // InternalEclParser.g:2544:3: PreferredIn
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPREFERRED_IN_KEYWORDAccess().getPreferredInKeyword()); 
            }
            match(input,PreferredIn,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPREFERRED_IN_KEYWORDAccess().getPreferredInKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePREFERRED_IN_KEYWORD"


    // $ANTLR start "entryRuleACCEPTABLE_IN_KEYWORD"
    // InternalEclParser.g:2554:1: entryRuleACCEPTABLE_IN_KEYWORD : ruleACCEPTABLE_IN_KEYWORD EOF ;
    public final void entryRuleACCEPTABLE_IN_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2555:1: ( ruleACCEPTABLE_IN_KEYWORD EOF )
            // InternalEclParser.g:2556:1: ruleACCEPTABLE_IN_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACCEPTABLE_IN_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleACCEPTABLE_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACCEPTABLE_IN_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleACCEPTABLE_IN_KEYWORD"


    // $ANTLR start "ruleACCEPTABLE_IN_KEYWORD"
    // InternalEclParser.g:2563:1: ruleACCEPTABLE_IN_KEYWORD : ( AcceptableIn ) ;
    public final void ruleACCEPTABLE_IN_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2567:2: ( ( AcceptableIn ) )
            // InternalEclParser.g:2568:2: ( AcceptableIn )
            {
            // InternalEclParser.g:2568:2: ( AcceptableIn )
            // InternalEclParser.g:2569:3: AcceptableIn
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACCEPTABLE_IN_KEYWORDAccess().getAcceptableInKeyword()); 
            }
            match(input,AcceptableIn,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACCEPTABLE_IN_KEYWORDAccess().getAcceptableInKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleACCEPTABLE_IN_KEYWORD"


    // $ANTLR start "entryRuleLANGUAGE_REFSET_ID_KEYWORD"
    // InternalEclParser.g:2579:1: entryRuleLANGUAGE_REFSET_ID_KEYWORD : ruleLANGUAGE_REFSET_ID_KEYWORD EOF ;
    public final void entryRuleLANGUAGE_REFSET_ID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2580:1: ( ruleLANGUAGE_REFSET_ID_KEYWORD EOF )
            // InternalEclParser.g:2581:1: ruleLANGUAGE_REFSET_ID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLANGUAGE_REFSET_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLANGUAGE_REFSET_ID_KEYWORD"


    // $ANTLR start "ruleLANGUAGE_REFSET_ID_KEYWORD"
    // InternalEclParser.g:2588:1: ruleLANGUAGE_REFSET_ID_KEYWORD : ( LanguageRefSetId ) ;
    public final void ruleLANGUAGE_REFSET_ID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2592:2: ( ( LanguageRefSetId ) )
            // InternalEclParser.g:2593:2: ( LanguageRefSetId )
            {
            // InternalEclParser.g:2593:2: ( LanguageRefSetId )
            // InternalEclParser.g:2594:3: LanguageRefSetId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDAccess().getLanguageRefSetIdKeyword()); 
            }
            match(input,LanguageRefSetId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDAccess().getLanguageRefSetIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLANGUAGE_REFSET_ID_KEYWORD"


    // $ANTLR start "entryRuleCASE_SIGNIFICANCE_ID_KEYWORD"
    // InternalEclParser.g:2604:1: entryRuleCASE_SIGNIFICANCE_ID_KEYWORD : ruleCASE_SIGNIFICANCE_ID_KEYWORD EOF ;
    public final void entryRuleCASE_SIGNIFICANCE_ID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2605:1: ( ruleCASE_SIGNIFICANCE_ID_KEYWORD EOF )
            // InternalEclParser.g:2606:1: ruleCASE_SIGNIFICANCE_ID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCASE_SIGNIFICANCE_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCASE_SIGNIFICANCE_ID_KEYWORD"


    // $ANTLR start "ruleCASE_SIGNIFICANCE_ID_KEYWORD"
    // InternalEclParser.g:2613:1: ruleCASE_SIGNIFICANCE_ID_KEYWORD : ( CaseSignificanceId ) ;
    public final void ruleCASE_SIGNIFICANCE_ID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2617:2: ( ( CaseSignificanceId ) )
            // InternalEclParser.g:2618:2: ( CaseSignificanceId )
            {
            // InternalEclParser.g:2618:2: ( CaseSignificanceId )
            // InternalEclParser.g:2619:3: CaseSignificanceId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDAccess().getCaseSignificanceIdKeyword()); 
            }
            match(input,CaseSignificanceId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDAccess().getCaseSignificanceIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCASE_SIGNIFICANCE_ID_KEYWORD"


    // $ANTLR start "entryRuleLEXICAL_SEARCH_TYPE"
    // InternalEclParser.g:2629:1: entryRuleLEXICAL_SEARCH_TYPE : ruleLEXICAL_SEARCH_TYPE EOF ;
    public final void entryRuleLEXICAL_SEARCH_TYPE() throws RecognitionException {
        try {
            // InternalEclParser.g:2630:1: ( ruleLEXICAL_SEARCH_TYPE EOF )
            // InternalEclParser.g:2631:1: ruleLEXICAL_SEARCH_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "ruleLEXICAL_SEARCH_TYPE"
    // InternalEclParser.g:2638:1: ruleLEXICAL_SEARCH_TYPE : ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) ;
    public final void ruleLEXICAL_SEARCH_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2642:2: ( ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) )
            // InternalEclParser.g:2643:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            {
            // InternalEclParser.g:2643:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            // InternalEclParser.g:2644:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2645:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            // InternalEclParser.g:2645:4: rule__LEXICAL_SEARCH_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LEXICAL_SEARCH_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "entryRuleDOMAIN"
    // InternalEclParser.g:2654:1: entryRuleDOMAIN : ruleDOMAIN EOF ;
    public final void entryRuleDOMAIN() throws RecognitionException {
        try {
            // InternalEclParser.g:2655:1: ( ruleDOMAIN EOF )
            // InternalEclParser.g:2656:1: ruleDOMAIN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDOMAIN"


    // $ANTLR start "ruleDOMAIN"
    // InternalEclParser.g:2663:1: ruleDOMAIN : ( ( rule__DOMAIN__Alternatives ) ) ;
    public final void ruleDOMAIN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2667:2: ( ( ( rule__DOMAIN__Alternatives ) ) )
            // InternalEclParser.g:2668:2: ( ( rule__DOMAIN__Alternatives ) )
            {
            // InternalEclParser.g:2668:2: ( ( rule__DOMAIN__Alternatives ) )
            // InternalEclParser.g:2669:3: ( rule__DOMAIN__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2670:3: ( rule__DOMAIN__Alternatives )
            // InternalEclParser.g:2670:4: rule__DOMAIN__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DOMAIN__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDOMAIN"


    // $ANTLR start "entryRuleNON_NUMERIC_OPERATOR"
    // InternalEclParser.g:2679:1: entryRuleNON_NUMERIC_OPERATOR : ruleNON_NUMERIC_OPERATOR EOF ;
    public final void entryRuleNON_NUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEclParser.g:2680:1: ( ruleNON_NUMERIC_OPERATOR EOF )
            // InternalEclParser.g:2681:1: ruleNON_NUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNON_NUMERIC_OPERATOR"


    // $ANTLR start "ruleNON_NUMERIC_OPERATOR"
    // InternalEclParser.g:2688:1: ruleNON_NUMERIC_OPERATOR : ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNON_NUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2692:2: ( ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEclParser.g:2693:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEclParser.g:2693:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            // InternalEclParser.g:2694:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2695:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            // InternalEclParser.g:2695:4: rule__NON_NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NON_NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNON_NUMERIC_OPERATOR"


    // $ANTLR start "entryRuleNUMERIC_OPERATOR"
    // InternalEclParser.g:2704:1: entryRuleNUMERIC_OPERATOR : ruleNUMERIC_OPERATOR EOF ;
    public final void entryRuleNUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEclParser.g:2705:1: ( ruleNUMERIC_OPERATOR EOF )
            // InternalEclParser.g:2706:1: ruleNUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_OPERATOR"


    // $ANTLR start "ruleNUMERIC_OPERATOR"
    // InternalEclParser.g:2713:1: ruleNUMERIC_OPERATOR : ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2717:2: ( ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEclParser.g:2718:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEclParser.g:2718:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            // InternalEclParser.g:2719:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2720:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            // InternalEclParser.g:2720:4: rule__NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_OPERATOR"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEclParser.g:2728:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2732:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==AND) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_COMMA) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalEclParser.g:2733:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:2733:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:2734:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2739:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2739:2: ( RULE_COMMA )
                    // InternalEclParser.g:2740:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEclParser.g:2749:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2753:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt4=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt4=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt4=2;
                }
                break;
            case RULE_LT:
                {
                alt4=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt4=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt4=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt4=6;
                }
                break;
            case RULE_GT:
                {
                alt4=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt4=8;
                }
                break;
            case RULE_ZERO:
            case RULE_DIGIT_NONZERO:
            case RULE_ROUND_OPEN:
            case RULE_CARET:
            case RULE_WILDCARD:
                {
                alt4=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalEclParser.g:2754:2: ( ruleChildOf )
                    {
                    // InternalEclParser.g:2754:2: ( ruleChildOf )
                    // InternalEclParser.g:2755:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2760:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEclParser.g:2760:2: ( ruleChildOrSelfOf )
                    // InternalEclParser.g:2761:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2766:2: ( ruleDescendantOf )
                    {
                    // InternalEclParser.g:2766:2: ( ruleDescendantOf )
                    // InternalEclParser.g:2767:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2772:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEclParser.g:2772:2: ( ruleDescendantOrSelfOf )
                    // InternalEclParser.g:2773:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:2778:2: ( ruleParentOf )
                    {
                    // InternalEclParser.g:2778:2: ( ruleParentOf )
                    // InternalEclParser.g:2779:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:2784:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEclParser.g:2784:2: ( ruleParentOrSelfOf )
                    // InternalEclParser.g:2785:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEclParser.g:2790:2: ( ruleAncestorOf )
                    {
                    // InternalEclParser.g:2790:2: ( ruleAncestorOf )
                    // InternalEclParser.g:2791:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEclParser.g:2796:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEclParser.g:2796:2: ( ruleAncestorOrSelfOf )
                    // InternalEclParser.g:2797:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEclParser.g:2802:2: ( ruleEclFocusConcept )
                    {
                    // InternalEclParser.g:2802:2: ( ruleEclFocusConcept )
                    // InternalEclParser.g:2803:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEclParser.g:2812:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2816:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt5=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt5=1;
                }
                break;
            case RULE_ZERO:
            case RULE_DIGIT_NONZERO:
                {
                alt5=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt5=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt5=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalEclParser.g:2817:2: ( ruleMemberOf )
                    {
                    // InternalEclParser.g:2817:2: ( ruleMemberOf )
                    // InternalEclParser.g:2818:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2823:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:2823:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:2824:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2829:2: ( ruleAny )
                    {
                    // InternalEclParser.g:2829:2: ( ruleAny )
                    // InternalEclParser.g:2830:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2835:2: ( ruleNestedExpression )
                    {
                    // InternalEclParser.g:2835:2: ( ruleNestedExpression )
                    // InternalEclParser.g:2836:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_1_0"
    // InternalEclParser.g:2845:1: rule__MemberOf__ConstraintAlternatives_1_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2849:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case RULE_ZERO:
            case RULE_DIGIT_NONZERO:
                {
                alt6=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt6=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalEclParser.g:2850:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:2850:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:2851:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2856:2: ( ruleAny )
                    {
                    // InternalEclParser.g:2856:2: ( ruleAny )
                    // InternalEclParser.g:2857:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2862:2: ( ruleNestedExpression )
                    {
                    // InternalEclParser.g:2862:2: ( ruleNestedExpression )
                    // InternalEclParser.g:2863:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_1_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEclParser.g:2872:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2876:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==AND) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_COMMA) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalEclParser.g:2877:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:2877:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:2878:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTIONParserRuleCall_1_0_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTIONParserRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2883:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2883:2: ( RULE_COMMA )
                    // InternalEclParser.g:2884:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEclParser.g:2893:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2897:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt8=3;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalEclParser.g:2898:2: ( ruleAttributeConstraint )
                    {
                    // InternalEclParser.g:2898:2: ( ruleAttributeConstraint )
                    // InternalEclParser.g:2899:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2904:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEclParser.g:2904:2: ( ruleEclAttributeGroup )
                    // InternalEclParser.g:2905:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2910:2: ( ruleNestedRefinement )
                    {
                    // InternalEclParser.g:2910:2: ( ruleNestedRefinement )
                    // InternalEclParser.g:2911:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEclParser.g:2920:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2924:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==AND) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_COMMA) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalEclParser.g:2925:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:2925:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:2926:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2931:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2931:2: ( RULE_COMMA )
                    // InternalEclParser.g:2932:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEclParser.g:2941:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2945:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalEclParser.g:2946:2: ( ruleAttributeConstraint )
                    {
                    // InternalEclParser.g:2946:2: ( ruleAttributeConstraint )
                    // InternalEclParser.g:2947:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2952:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEclParser.g:2952:2: ( ruleNestedAttributeSet )
                    // InternalEclParser.g:2953:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEclParser.g:2962:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2966:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt11=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                int LA11_1 = input.LA(2);

                if ( (LA11_1==False||LA11_1==True||LA11_1==RULE_HASH||LA11_1==RULE_STRING) ) {
                    alt11=2;
                }
                else if ( ((LA11_1>=RULE_ZERO && LA11_1<=RULE_DIGIT_NONZERO)||LA11_1==RULE_ROUND_OPEN||LA11_1==RULE_CARET||LA11_1==RULE_WILDCARD||(LA11_1>=RULE_LT && LA11_1<=RULE_DBL_GT_EM)) ) {
                    alt11=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NOT_EQUAL:
                {
                int LA11_2 = input.LA(2);

                if ( (LA11_2==False||LA11_2==True||LA11_2==RULE_HASH||LA11_2==RULE_STRING) ) {
                    alt11=2;
                }
                else if ( ((LA11_2>=RULE_ZERO && LA11_2<=RULE_DIGIT_NONZERO)||LA11_2==RULE_ROUND_OPEN||LA11_2==RULE_CARET||LA11_2==RULE_WILDCARD||(LA11_2>=RULE_LT && LA11_2<=RULE_DBL_GT_EM)) ) {
                    alt11=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LT:
            case RULE_GT:
            case RULE_GTE:
            case RULE_LTE:
                {
                alt11=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalEclParser.g:2967:2: ( ruleAttributeComparison )
                    {
                    // InternalEclParser.g:2967:2: ( ruleAttributeComparison )
                    // InternalEclParser.g:2968:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2973:2: ( ruleDataTypeComparison )
                    {
                    // InternalEclParser.g:2973:2: ( ruleDataTypeComparison )
                    // InternalEclParser.g:2974:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEclParser.g:2983:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2987:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt12=4;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalEclParser.g:2988:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEclParser.g:2988:2: ( ruleBooleanValueComparison )
                    // InternalEclParser.g:2989:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2994:2: ( ruleStringValueComparison )
                    {
                    // InternalEclParser.g:2994:2: ( ruleStringValueComparison )
                    // InternalEclParser.g:2995:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3000:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEclParser.g:3000:2: ( ruleIntegerValueComparison )
                    // InternalEclParser.g:3001:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3006:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEclParser.g:3006:2: ( ruleDecimalValueComparison )
                    // InternalEclParser.g:3007:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEclParser.g:3016:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3020:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==AND) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_COMMA) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalEclParser.g:3021:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:3021:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:3022:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3027:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:3027:2: ( RULE_COMMA )
                    // InternalEclParser.g:3028:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEclParser.g:3037:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3041:1: ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) )
            int alt14=13;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalEclParser.g:3042:2: ( ruleTermFilter )
                    {
                    // InternalEclParser.g:3042:2: ( ruleTermFilter )
                    // InternalEclParser.g:3043:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3048:2: ( ruleLanguageFilter )
                    {
                    // InternalEclParser.g:3048:2: ( ruleLanguageFilter )
                    // InternalEclParser.g:3049:3: ruleLanguageFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3054:2: ( ruleTypeFilter )
                    {
                    // InternalEclParser.g:3054:2: ( ruleTypeFilter )
                    // InternalEclParser.g:3055:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3060:2: ( ruleDialectFilter )
                    {
                    // InternalEclParser.g:3060:2: ( ruleDialectFilter )
                    // InternalEclParser.g:3061:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:3066:2: ( ruleActiveFilter )
                    {
                    // InternalEclParser.g:3066:2: ( ruleActiveFilter )
                    // InternalEclParser.g:3067:3: ruleActiveFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleActiveFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:3072:2: ( rulePreferredInFilter )
                    {
                    // InternalEclParser.g:3072:2: ( rulePreferredInFilter )
                    // InternalEclParser.g:3073:3: rulePreferredInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreferredInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEclParser.g:3078:2: ( ruleAcceptableInFilter )
                    {
                    // InternalEclParser.g:3078:2: ( ruleAcceptableInFilter )
                    // InternalEclParser.g:3079:3: ruleAcceptableInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptableInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEclParser.g:3084:2: ( ruleLanguageRefSetFilter )
                    {
                    // InternalEclParser.g:3084:2: ( ruleLanguageRefSetFilter )
                    // InternalEclParser.g:3085:3: ruleLanguageRefSetFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageRefSetFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEclParser.g:3090:2: ( ruleModuleFilter )
                    {
                    // InternalEclParser.g:3090:2: ( ruleModuleFilter )
                    // InternalEclParser.g:3091:3: ruleModuleFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleModuleFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEclParser.g:3096:2: ( ruleSemanticTagFilter )
                    {
                    // InternalEclParser.g:3096:2: ( ruleSemanticTagFilter )
                    // InternalEclParser.g:3097:3: ruleSemanticTagFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSemanticTagFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEclParser.g:3102:2: ( ruleEffectiveTimeFilter )
                    {
                    // InternalEclParser.g:3102:2: ( ruleEffectiveTimeFilter )
                    // InternalEclParser.g:3103:3: ruleEffectiveTimeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEffectiveTimeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEclParser.g:3108:2: ( ruleCaseSignificanceFilter )
                    {
                    // InternalEclParser.g:3108:2: ( ruleCaseSignificanceFilter )
                    // InternalEclParser.g:3109:3: ruleCaseSignificanceFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCaseSignificanceFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEclParser.g:3114:2: ( ruleNestedFilter )
                    {
                    // InternalEclParser.g:3114:2: ( ruleNestedFilter )
                    // InternalEclParser.g:3115:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__TermFilter__Alternatives_1"
    // InternalEclParser.g:3124:1: rule__TermFilter__Alternatives_1 : ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) );
    public final void rule__TermFilter__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3128:1: ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_EQUAL) ) {
                int LA15_1 = input.LA(2);

                if ( (LA15_1==RULE_ROUND_OPEN) ) {
                    alt15=2;
                }
                else if ( (LA15_1==Exact||(LA15_1>=Match && LA15_1<=Regex)||LA15_1==Wild||LA15_1==RULE_STRING) ) {
                    alt15=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA15_0==RULE_NOT_EQUAL) ) {
                int LA15_2 = input.LA(2);

                if ( (LA15_2==RULE_ROUND_OPEN) ) {
                    alt15=2;
                }
                else if ( (LA15_2==Exact||(LA15_2>=Match && LA15_2<=Regex)||LA15_2==Wild||LA15_2==RULE_STRING) ) {
                    alt15=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 15, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEclParser.g:3129:2: ( ruleTypedTermFilter )
                    {
                    // InternalEclParser.g:3129:2: ( ruleTypedTermFilter )
                    // InternalEclParser.g:3130:3: ruleTypedTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3135:2: ( ruleTypedTermFilterSet )
                    {
                    // InternalEclParser.g:3135:2: ( ruleTypedTermFilterSet )
                    // InternalEclParser.g:3136:3: ruleTypedTermFilterSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilterSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Alternatives_1"


    // $ANTLR start "rule__LanguageFilter__Alternatives_2"
    // InternalEclParser.g:3145:1: rule__LanguageFilter__Alternatives_2 : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3149:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_ALPHA) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ROUND_OPEN) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEclParser.g:3150:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3150:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEclParser.g:3151:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3152:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    // InternalEclParser.g:3152:4: rule__LanguageFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3156:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3156:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3157:3: ( rule__LanguageFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3158:3: ( rule__LanguageFilter__Group_2_1__0 )
                    // InternalEclParser.g:3158:4: rule__LanguageFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEclParser.g:3166:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3170:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==TypeId) ) {
                alt17=1;
            }
            else if ( (LA17_0==Type) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEclParser.g:3171:2: ( ruleTypeIdFilter )
                    {
                    // InternalEclParser.g:3171:2: ( ruleTypeIdFilter )
                    // InternalEclParser.g:3172:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3177:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEclParser.g:3177:2: ( ruleTypeTokenFilter )
                    // InternalEclParser.g:3178:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeIdFilter__TypeAlternatives_2_0"
    // InternalEclParser.g:3187:1: rule__TypeIdFilter__TypeAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__TypeIdFilter__TypeAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3191:1: ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( ((LA18_0>=RULE_ZERO && LA18_0<=RULE_DIGIT_NONZERO)) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ROUND_OPEN) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalEclParser.g:3192:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:3192:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:3193:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3198:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEclParser.g:3198:2: ( ruleEclConceptReferenceSet )
                    // InternalEclParser.g:3199:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAlternatives_2_0"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEclParser.g:3208:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3212:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ALPHA) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_ROUND_OPEN) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEclParser.g:3213:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3213:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEclParser.g:3214:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3215:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEclParser.g:3215:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3219:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3219:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3220:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3221:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEclParser.g:3221:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEclParser.g:3229:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3233:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==DialectId) ) {
                alt20=1;
            }
            else if ( (LA20_0==Dialect) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalEclParser.g:3234:2: ( ruleDialectIdFilter )
                    {
                    // InternalEclParser.g:3234:2: ( ruleDialectIdFilter )
                    // InternalEclParser.g:3235:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3240:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEclParser.g:3240:2: ( ruleDialectAliasFilter )
                    // InternalEclParser.g:3241:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEclParser.g:3250:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3254:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( ((LA21_0>=RULE_ZERO && LA21_0<=RULE_DIGIT_NONZERO)) ) {
                alt21=1;
            }
            else if ( (LA21_0==RULE_ROUND_OPEN) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalEclParser.g:3255:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3255:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEclParser.g:3256:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3257:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEclParser.g:3257:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3261:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3261:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3262:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3263:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEclParser.g:3263:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEclParser.g:3271:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3275:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ALPHA) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_ROUND_OPEN) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEclParser.g:3276:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3276:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEclParser.g:3277:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3278:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEclParser.g:3278:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3282:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3282:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3283:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3284:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEclParser.g:3284:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__Acceptability__Alternatives"
    // InternalEclParser.g:3292:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );
    public final void rule__Acceptability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3296:1: ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ROUND_OPEN) ) {
                int LA23_1 = input.LA(2);

                if ( (LA23_1==RULE_ALPHA) ) {
                    alt23=2;
                }
                else if ( ((LA23_1>=RULE_ZERO && LA23_1<=RULE_DIGIT_NONZERO)) ) {
                    alt23=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 23, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalEclParser.g:3297:2: ( ruleAcceptabilityIdSet )
                    {
                    // InternalEclParser.g:3297:2: ( ruleAcceptabilityIdSet )
                    // InternalEclParser.g:3298:3: ruleAcceptabilityIdSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityIdSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3303:2: ( ruleAcceptabilityTokenSet )
                    {
                    // InternalEclParser.g:3303:2: ( ruleAcceptabilityTokenSet )
                    // InternalEclParser.g:3304:3: ruleAcceptabilityTokenSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityTokenSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__Alternatives"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives"
    // InternalEclParser.g:3313:1: rule__SnomedIdentifier__Alternatives : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3317:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_DIGIT_NONZERO) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_ZERO) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEclParser.g:3318:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3318:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3319:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3324:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3324:2: ( RULE_ZERO )
                    // InternalEclParser.g:3325:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives"
    // InternalEclParser.g:3334:1: rule__NonNegativeInteger__Alternatives : ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) );
    public final void rule__NonNegativeInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3338:1: ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_ZERO) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_DIGIT_NONZERO) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalEclParser.g:3339:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3339:2: ( RULE_ZERO )
                    // InternalEclParser.g:3340:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3345:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    {
                    // InternalEclParser.g:3345:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    // InternalEclParser.g:3346:3: ( rule__NonNegativeInteger__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }
                    // InternalEclParser.g:3347:3: ( rule__NonNegativeInteger__Group_1__0 )
                    // InternalEclParser.g:3347:4: rule__NonNegativeInteger__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NonNegativeInteger__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives_1_1"
    // InternalEclParser.g:3355:1: rule__NonNegativeInteger__Alternatives_1_1 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeInteger__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3359:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_DIGIT_NONZERO) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_ZERO) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEclParser.g:3360:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3360:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3361:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3366:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3366:2: ( RULE_ZERO )
                    // InternalEclParser.g:3367:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives_1_1"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEclParser.g:3376:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3380:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_ZERO && LA27_0<=RULE_DIGIT_NONZERO)) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_WILDCARD) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalEclParser.g:3381:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEclParser.g:3381:2: ( ruleNonNegativeInteger )
                    // InternalEclParser.g:3382:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3387:2: ( RULE_WILDCARD )
                    {
                    // InternalEclParser.g:3387:2: ( RULE_WILDCARD )
                    // InternalEclParser.g:3388:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEclParser.g:3397:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3401:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_PLUS) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_DASH) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEclParser.g:3402:2: ( RULE_PLUS )
                    {
                    // InternalEclParser.g:3402:2: ( RULE_PLUS )
                    // InternalEclParser.g:3403:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3408:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3408:2: ( RULE_DASH )
                    // InternalEclParser.g:3409:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEclParser.g:3418:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3422:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_PLUS) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_DASH) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEclParser.g:3423:2: ( RULE_PLUS )
                    {
                    // InternalEclParser.g:3423:2: ( RULE_PLUS )
                    // InternalEclParser.g:3424:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3429:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3429:2: ( RULE_DASH )
                    // InternalEclParser.g:3430:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__NonNegativeDecimal__Alternatives_2"
    // InternalEclParser.g:3439:1: rule__NonNegativeDecimal__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeDecimal__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3443:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_DIGIT_NONZERO) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_ZERO) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEclParser.g:3444:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3444:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3445:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3450:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3450:2: ( RULE_ZERO )
                    // InternalEclParser.g:3451:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Alternatives_2"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEclParser.g:3460:1: rule__Boolean__Alternatives : ( ( True ) | ( False ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3464:1: ( ( True ) | ( False ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==True) ) {
                alt31=1;
            }
            else if ( (LA31_0==False) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEclParser.g:3465:2: ( True )
                    {
                    // InternalEclParser.g:3465:2: ( True )
                    // InternalEclParser.g:3466:3: True
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }
                    match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3471:2: ( False )
                    {
                    // InternalEclParser.g:3471:2: ( False )
                    // InternalEclParser.g:3472:3: False
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }
                    match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives_1"
    // InternalEclParser.g:3481:1: rule__DialectAliasValue__Alternatives_1 : ( ( RULE_DASH ) | ( RULE_ALPHA ) | ( RULE_ZERO ) | ( RULE_DIGIT_NONZERO ) );
    public final void rule__DialectAliasValue__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3485:1: ( ( RULE_DASH ) | ( RULE_ALPHA ) | ( RULE_ZERO ) | ( RULE_DIGIT_NONZERO ) )
            int alt32=4;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt32=1;
                }
                break;
            case RULE_ALPHA:
                {
                alt32=2;
                }
                break;
            case RULE_ZERO:
                {
                alt32=3;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt32=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalEclParser.g:3486:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3486:2: ( RULE_DASH )
                    // InternalEclParser.g:3487:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3492:2: ( RULE_ALPHA )
                    {
                    // InternalEclParser.g:3492:2: ( RULE_ALPHA )
                    // InternalEclParser.g:3493:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3498:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3498:2: ( RULE_ZERO )
                    // InternalEclParser.g:3499:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getZEROTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getZEROTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3504:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3504:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3505:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_1_3()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives_1"


    // $ANTLR start "rule__LEXICAL_SEARCH_TYPE__Alternatives"
    // InternalEclParser.g:3514:1: rule__LEXICAL_SEARCH_TYPE__Alternatives : ( ( Match ) | ( Wild ) | ( Regex ) | ( Exact ) );
    public final void rule__LEXICAL_SEARCH_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3518:1: ( ( Match ) | ( Wild ) | ( Regex ) | ( Exact ) )
            int alt33=4;
            switch ( input.LA(1) ) {
            case Match:
                {
                alt33=1;
                }
                break;
            case Wild:
                {
                alt33=2;
                }
                break;
            case Regex:
                {
                alt33=3;
                }
                break;
            case Exact:
                {
                alt33=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalEclParser.g:3519:2: ( Match )
                    {
                    // InternalEclParser.g:3519:2: ( Match )
                    // InternalEclParser.g:3520:3: Match
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMatchKeyword_0()); 
                    }
                    match(input,Match,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMatchKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3525:2: ( Wild )
                    {
                    // InternalEclParser.g:3525:2: ( Wild )
                    // InternalEclParser.g:3526:3: Wild
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWildKeyword_1()); 
                    }
                    match(input,Wild,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWildKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3531:2: ( Regex )
                    {
                    // InternalEclParser.g:3531:2: ( Regex )
                    // InternalEclParser.g:3532:3: Regex
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getRegexKeyword_2()); 
                    }
                    match(input,Regex,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getRegexKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3537:2: ( Exact )
                    {
                    // InternalEclParser.g:3537:2: ( Exact )
                    // InternalEclParser.g:3538:3: Exact
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getExactKeyword_3()); 
                    }
                    match(input,Exact,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getExactKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LEXICAL_SEARCH_TYPE__Alternatives"


    // $ANTLR start "rule__DOMAIN__Alternatives"
    // InternalEclParser.g:3547:1: rule__DOMAIN__Alternatives : ( ( Concept ) | ( Description ) );
    public final void rule__DOMAIN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3551:1: ( ( Concept ) | ( Description ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==Concept) ) {
                alt34=1;
            }
            else if ( (LA34_0==Description) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalEclParser.g:3552:2: ( Concept )
                    {
                    // InternalEclParser.g:3552:2: ( Concept )
                    // InternalEclParser.g:3553:3: Concept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getConceptKeyword_0()); 
                    }
                    match(input,Concept,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getConceptKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3558:2: ( Description )
                    {
                    // InternalEclParser.g:3558:2: ( Description )
                    // InternalEclParser.g:3559:3: Description
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getDescriptionKeyword_1()); 
                    }
                    match(input,Description,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getDescriptionKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DOMAIN__Alternatives"


    // $ANTLR start "rule__NON_NUMERIC_OPERATOR__Alternatives"
    // InternalEclParser.g:3568:1: rule__NON_NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__NON_NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3572:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_EQUAL) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_NOT_EQUAL) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEclParser.g:3573:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:3573:2: ( RULE_EQUAL )
                    // InternalEclParser.g:3574:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3579:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:3579:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:3580:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NON_NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__NUMERIC_OPERATOR__Alternatives"
    // InternalEclParser.g:3589:1: rule__NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3593:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt36=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt36=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt36=2;
                }
                break;
            case RULE_GT:
                {
                alt36=3;
                }
                break;
            case RULE_LT:
                {
                alt36=4;
                }
                break;
            case RULE_GTE:
                {
                alt36=5;
                }
                break;
            case RULE_LTE:
                {
                alt36=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalEclParser.g:3594:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:3594:2: ( RULE_EQUAL )
                    // InternalEclParser.g:3595:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3600:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:3600:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:3601:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3606:2: ( RULE_GT )
                    {
                    // InternalEclParser.g:3606:2: ( RULE_GT )
                    // InternalEclParser.g:3607:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3612:2: ( RULE_LT )
                    {
                    // InternalEclParser.g:3612:2: ( RULE_LT )
                    // InternalEclParser.g:3613:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:3618:2: ( RULE_GTE )
                    {
                    // InternalEclParser.g:3618:2: ( RULE_GTE )
                    // InternalEclParser.g:3619:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:3624:2: ( RULE_LTE )
                    {
                    // InternalEclParser.g:3624:2: ( RULE_LTE )
                    // InternalEclParser.g:3625:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__Script__Group__0"
    // InternalEclParser.g:3634:1: rule__Script__Group__0 : rule__Script__Group__0__Impl rule__Script__Group__1 ;
    public final void rule__Script__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3638:1: ( rule__Script__Group__0__Impl rule__Script__Group__1 )
            // InternalEclParser.g:3639:2: rule__Script__Group__0__Impl rule__Script__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Script__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0"


    // $ANTLR start "rule__Script__Group__0__Impl"
    // InternalEclParser.g:3646:1: rule__Script__Group__0__Impl : ( () ) ;
    public final void rule__Script__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3650:1: ( ( () ) )
            // InternalEclParser.g:3651:1: ( () )
            {
            // InternalEclParser.g:3651:1: ( () )
            // InternalEclParser.g:3652:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }
            // InternalEclParser.g:3653:2: ()
            // InternalEclParser.g:3653:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0__Impl"


    // $ANTLR start "rule__Script__Group__1"
    // InternalEclParser.g:3661:1: rule__Script__Group__1 : rule__Script__Group__1__Impl ;
    public final void rule__Script__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3665:1: ( rule__Script__Group__1__Impl )
            // InternalEclParser.g:3666:2: rule__Script__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1"


    // $ANTLR start "rule__Script__Group__1__Impl"
    // InternalEclParser.g:3672:1: rule__Script__Group__1__Impl : ( ( rule__Script__ConstraintAssignment_1 )? ) ;
    public final void rule__Script__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3676:1: ( ( ( rule__Script__ConstraintAssignment_1 )? ) )
            // InternalEclParser.g:3677:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            {
            // InternalEclParser.g:3677:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            // InternalEclParser.g:3678:2: ( rule__Script__ConstraintAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:3679:2: ( rule__Script__ConstraintAssignment_1 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( ((LA37_0>=RULE_ZERO && LA37_0<=RULE_DIGIT_NONZERO)||LA37_0==RULE_ROUND_OPEN||LA37_0==RULE_CARET||LA37_0==RULE_WILDCARD||(LA37_0>=RULE_LT && LA37_0<=RULE_DBL_GT_EM)) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalEclParser.g:3679:3: rule__Script__ConstraintAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Script__ConstraintAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEclParser.g:3688:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3692:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEclParser.g:3693:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3700:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3704:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEclParser.g:3705:1: ( ruleAndExpressionConstraint )
            {
            // InternalEclParser.g:3705:1: ( ruleAndExpressionConstraint )
            // InternalEclParser.g:3706:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEclParser.g:3715:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3719:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3720:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3726:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3730:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:3731:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:3731:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:3732:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3733:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==OR) ) {
                    int LA38_5 = input.LA(2);

                    if ( (synpred70_InternalEclParser()) ) {
                        alt38=1;
                    }


                }


                switch (alt38) {
            	case 1 :
            	    // InternalEclParser.g:3733:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3742:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3746:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3747:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3754:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3758:1: ( ( () ) )
            // InternalEclParser.g:3759:1: ( () )
            {
            // InternalEclParser.g:3759:1: ( () )
            // InternalEclParser.g:3760:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3761:2: ()
            // InternalEclParser.g:3761:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3769:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3773:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3774:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3781:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3785:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:3786:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:3786:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:3787:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3796:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3800:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3801:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3807:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3811:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:3812:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:3812:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:3813:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:3814:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:3814:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEclParser.g:3823:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3827:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEclParser.g:3828:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3835:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3839:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEclParser.g:3840:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEclParser.g:3840:1: ( ruleExclusionExpressionConstraint )
            // InternalEclParser.g:3841:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEclParser.g:3850:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3854:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3855:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3861:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3865:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:3866:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:3866:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:3867:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3868:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==AND) ) {
                    int LA39_4 = input.LA(2);

                    if ( (synpred71_InternalEclParser()) ) {
                        alt39=1;
                    }


                }
                else if ( (LA39_0==RULE_COMMA) ) {
                    int LA39_5 = input.LA(2);

                    if ( (synpred71_InternalEclParser()) ) {
                        alt39=1;
                    }


                }


                switch (alt39) {
            	case 1 :
            	    // InternalEclParser.g:3868:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3877:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3881:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3882:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3889:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3893:1: ( ( () ) )
            // InternalEclParser.g:3894:1: ( () )
            {
            // InternalEclParser.g:3894:1: ( () )
            // InternalEclParser.g:3895:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3896:2: ()
            // InternalEclParser.g:3896:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3904:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3908:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3909:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3916:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3920:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEclParser.g:3921:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:3921:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEclParser.g:3922:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:3923:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEclParser.g:3923:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3931:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3935:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3936:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3942:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3946:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:3947:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:3947:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:3948:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:3949:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:3949:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEclParser.g:3958:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3962:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEclParser.g:3963:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3970:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3974:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEclParser.g:3975:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEclParser.g:3975:1: ( ruleRefinedExpressionConstraint )
            // InternalEclParser.g:3976:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEclParser.g:3985:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3989:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3990:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3996:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4000:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEclParser.g:4001:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEclParser.g:4001:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEclParser.g:4002:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4003:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==MINUS) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalEclParser.g:4003:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEclParser.g:4012:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4016:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:4017:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:4024:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4028:1: ( ( () ) )
            // InternalEclParser.g:4029:1: ( () )
            {
            // InternalEclParser.g:4029:1: ( () )
            // InternalEclParser.g:4030:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:4031:2: ()
            // InternalEclParser.g:4031:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEclParser.g:4039:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4043:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:4044:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:4051:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( ruleEXCLUSION ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4055:1: ( ( ruleEXCLUSION ) )
            // InternalEclParser.g:4056:1: ( ruleEXCLUSION )
            {
            // InternalEclParser.g:4056:1: ( ruleEXCLUSION )
            // InternalEclParser.g:4057:2: ruleEXCLUSION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEXCLUSION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEclParser.g:4066:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4070:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:4071:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:4077:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4081:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:4082:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:4082:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:4083:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:4084:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:4084:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEclParser.g:4093:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4097:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEclParser.g:4098:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:4105:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4109:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEclParser.g:4110:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEclParser.g:4110:1: ( ruleDottedExpressionConstraint )
            // InternalEclParser.g:4111:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEclParser.g:4120:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4124:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:4125:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:4131:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4135:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEclParser.g:4136:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEclParser.g:4136:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEclParser.g:4137:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4138:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_COLON) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalEclParser.g:4138:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEclParser.g:4147:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4151:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:4152:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:4159:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4163:1: ( ( () ) )
            // InternalEclParser.g:4164:1: ( () )
            {
            // InternalEclParser.g:4164:1: ( () )
            // InternalEclParser.g:4165:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEclParser.g:4166:2: ()
            // InternalEclParser.g:4166:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEclParser.g:4174:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4178:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:4179:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:4186:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4190:1: ( ( RULE_COLON ) )
            // InternalEclParser.g:4191:1: ( RULE_COLON )
            {
            // InternalEclParser.g:4191:1: ( RULE_COLON )
            // InternalEclParser.g:4192:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEclParser.g:4201:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4205:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:4206:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:4212:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4216:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEclParser.g:4217:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEclParser.g:4217:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEclParser.g:4218:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEclParser.g:4219:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEclParser.g:4219:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEclParser.g:4228:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4232:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEclParser.g:4233:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:4240:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4244:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:4245:1: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:4245:1: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:4246:2: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEclParser.g:4255:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4259:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:4260:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:4266:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4270:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:4271:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:4271:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:4272:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4273:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_DOT) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalEclParser.g:4273:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEclParser.g:4282:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4286:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:4287:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:4294:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4298:1: ( ( () ) )
            // InternalEclParser.g:4299:1: ( () )
            {
            // InternalEclParser.g:4299:1: ( () )
            // InternalEclParser.g:4300:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEclParser.g:4301:2: ()
            // InternalEclParser.g:4301:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEclParser.g:4309:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4313:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:4314:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:4321:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4325:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:4326:1: ( RULE_DOT )
            {
            // InternalEclParser.g:4326:1: ( RULE_DOT )
            // InternalEclParser.g:4327:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEclParser.g:4336:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4340:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:4341:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:4347:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4351:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEclParser.g:4352:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEclParser.g:4352:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEclParser.g:4353:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEclParser.g:4354:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEclParser.g:4354:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0"
    // InternalEclParser.g:4363:1: rule__FilteredExpressionConstraint__Group__0 : rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 ;
    public final void rule__FilteredExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4367:1: ( rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 )
            // InternalEclParser.g:4368:2: rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__FilteredExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:4375:1: rule__FilteredExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__FilteredExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4379:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEclParser.g:4380:1: ( ruleSubExpressionConstraint )
            {
            // InternalEclParser.g:4380:1: ( ruleSubExpressionConstraint )
            // InternalEclParser.g:4381:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1"
    // InternalEclParser.g:4390:1: rule__FilteredExpressionConstraint__Group__1 : rule__FilteredExpressionConstraint__Group__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4394:1: ( rule__FilteredExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:4395:2: rule__FilteredExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:4401:1: rule__FilteredExpressionConstraint__Group__1__Impl : ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__FilteredExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4405:1: ( ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:4406:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:4406:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:4407:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4408:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==RULE_DOUBLE_CURLY_OPEN) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalEclParser.g:4408:3: rule__FilteredExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_16);
            	    rule__FilteredExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0"
    // InternalEclParser.g:4417:1: rule__FilteredExpressionConstraint__Group_1__0 : rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 ;
    public final void rule__FilteredExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4421:1: ( rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:4422:2: rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__FilteredExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:4429:1: rule__FilteredExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4433:1: ( ( () ) )
            // InternalEclParser.g:4434:1: ( () )
            {
            // InternalEclParser.g:4434:1: ( () )
            // InternalEclParser.g:4435:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEclParser.g:4436:2: ()
            // InternalEclParser.g:4436:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1"
    // InternalEclParser.g:4444:1: rule__FilteredExpressionConstraint__Group_1__1 : rule__FilteredExpressionConstraint__Group_1__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4448:1: ( rule__FilteredExpressionConstraint__Group_1__1__Impl )
            // InternalEclParser.g:4449:2: rule__FilteredExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:4455:1: rule__FilteredExpressionConstraint__Group_1__1__Impl : ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4459:1: ( ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) )
            // InternalEclParser.g:4460:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            {
            // InternalEclParser.g:4460:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            // InternalEclParser.g:4461:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }
            // InternalEclParser.g:4462:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            // InternalEclParser.g:4462:3: rule__FilteredExpressionConstraint__FilterAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__FilterAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEclParser.g:4471:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4475:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEclParser.g:4476:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEclParser.g:4483:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4487:1: ( ( RULE_LT_EM ) )
            // InternalEclParser.g:4488:1: ( RULE_LT_EM )
            {
            // InternalEclParser.g:4488:1: ( RULE_LT_EM )
            // InternalEclParser.g:4489:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEclParser.g:4498:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4502:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEclParser.g:4503:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEclParser.g:4509:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4513:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4514:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4514:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4515:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4516:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4516:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEclParser.g:4525:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4529:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEclParser.g:4530:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4537:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4541:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEclParser.g:4542:1: ( RULE_DBL_LT_EM )
            {
            // InternalEclParser.g:4542:1: ( RULE_DBL_LT_EM )
            // InternalEclParser.g:4543:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEclParser.g:4552:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4556:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4557:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4563:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4567:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4568:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4568:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4569:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4570:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4570:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEclParser.g:4579:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4583:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEclParser.g:4584:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEclParser.g:4591:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4595:1: ( ( RULE_LT ) )
            // InternalEclParser.g:4596:1: ( RULE_LT )
            {
            // InternalEclParser.g:4596:1: ( RULE_LT )
            // InternalEclParser.g:4597:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEclParser.g:4606:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4610:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEclParser.g:4611:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEclParser.g:4617:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4621:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4622:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4622:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4623:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4624:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4624:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEclParser.g:4633:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4637:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEclParser.g:4638:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4645:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4649:1: ( ( RULE_DBL_LT ) )
            // InternalEclParser.g:4650:1: ( RULE_DBL_LT )
            {
            // InternalEclParser.g:4650:1: ( RULE_DBL_LT )
            // InternalEclParser.g:4651:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEclParser.g:4660:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4664:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4665:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4671:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4675:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4676:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4676:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4677:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4678:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4678:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEclParser.g:4687:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4691:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEclParser.g:4692:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEclParser.g:4699:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4703:1: ( ( RULE_GT_EM ) )
            // InternalEclParser.g:4704:1: ( RULE_GT_EM )
            {
            // InternalEclParser.g:4704:1: ( RULE_GT_EM )
            // InternalEclParser.g:4705:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEclParser.g:4714:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4718:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEclParser.g:4719:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEclParser.g:4725:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4729:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4730:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4730:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4731:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4732:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4732:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEclParser.g:4741:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4745:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEclParser.g:4746:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4753:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4757:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEclParser.g:4758:1: ( RULE_DBL_GT_EM )
            {
            // InternalEclParser.g:4758:1: ( RULE_DBL_GT_EM )
            // InternalEclParser.g:4759:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEclParser.g:4768:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4772:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4773:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4779:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4783:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4784:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4784:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4785:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4786:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4786:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEclParser.g:4795:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4799:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEclParser.g:4800:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEclParser.g:4807:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4811:1: ( ( RULE_GT ) )
            // InternalEclParser.g:4812:1: ( RULE_GT )
            {
            // InternalEclParser.g:4812:1: ( RULE_GT )
            // InternalEclParser.g:4813:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEclParser.g:4822:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4826:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEclParser.g:4827:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEclParser.g:4833:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4837:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4838:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4838:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4839:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4840:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4840:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEclParser.g:4849:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4853:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEclParser.g:4854:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4861:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4865:1: ( ( RULE_DBL_GT ) )
            // InternalEclParser.g:4866:1: ( RULE_DBL_GT )
            {
            // InternalEclParser.g:4866:1: ( RULE_DBL_GT )
            // InternalEclParser.g:4867:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEclParser.g:4876:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4880:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4881:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4887:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4891:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4892:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4892:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4893:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4894:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4894:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEclParser.g:4903:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4907:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEclParser.g:4908:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEclParser.g:4915:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4919:1: ( ( RULE_CARET ) )
            // InternalEclParser.g:4920:1: ( RULE_CARET )
            {
            // InternalEclParser.g:4920:1: ( RULE_CARET )
            // InternalEclParser.g:4921:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEclParser.g:4930:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4934:1: ( rule__MemberOf__Group__1__Impl )
            // InternalEclParser.g:4935:2: rule__MemberOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEclParser.g:4941:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__ConstraintAssignment_1 ) ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4945:1: ( ( ( rule__MemberOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4946:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4946:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4947:2: ( rule__MemberOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4948:2: ( rule__MemberOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4948:3: rule__MemberOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEclParser.g:4957:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4961:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEclParser.g:4962:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEclParser.g:4969:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4973:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEclParser.g:4974:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEclParser.g:4974:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEclParser.g:4975:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEclParser.g:4976:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEclParser.g:4976:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEclParser.g:4984:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4988:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEclParser.g:4989:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEclParser.g:4995:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4999:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEclParser.g:5000:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEclParser.g:5000:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEclParser.g:5001:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEclParser.g:5002:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_TERM_STRING) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalEclParser.g:5002:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEclParser.g:5011:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5015:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEclParser.g:5016:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEclParser.g:5023:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5027:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:5028:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:5028:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:5029:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEclParser.g:5038:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5042:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEclParser.g:5043:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEclParser.g:5050:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5054:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) )
            // InternalEclParser.g:5055:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            {
            // InternalEclParser.g:5055:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEclParser.g:5056:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEclParser.g:5057:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEclParser.g:5057:3: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEclParser.g:5065:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3 ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5069:1: ( rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3 )
            // InternalEclParser.g:5070:2: rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEclParser.g:5077:1: rule__EclConceptReferenceSet__Group__2__Impl : ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5081:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* ) )
            // InternalEclParser.g:5082:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* )
            {
            // InternalEclParser.g:5082:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* )
            // InternalEclParser.g:5083:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_2()); 
            }
            // InternalEclParser.g:5084:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=RULE_ZERO && LA45_0<=RULE_DIGIT_NONZERO)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalEclParser.g:5084:3: rule__EclConceptReferenceSet__ConceptsAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__3"
    // InternalEclParser.g:5092:1: rule__EclConceptReferenceSet__Group__3 : rule__EclConceptReferenceSet__Group__3__Impl ;
    public final void rule__EclConceptReferenceSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5096:1: ( rule__EclConceptReferenceSet__Group__3__Impl )
            // InternalEclParser.g:5097:2: rule__EclConceptReferenceSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__3"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__3__Impl"
    // InternalEclParser.g:5103:1: rule__EclConceptReferenceSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5107:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:5108:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:5108:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:5109:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__3__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEclParser.g:5119:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5123:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEclParser.g:5124:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEclParser.g:5131:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5135:1: ( ( RULE_WILDCARD ) )
            // InternalEclParser.g:5136:1: ( RULE_WILDCARD )
            {
            // InternalEclParser.g:5136:1: ( RULE_WILDCARD )
            // InternalEclParser.g:5137:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEclParser.g:5146:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5150:1: ( rule__Any__Group__1__Impl )
            // InternalEclParser.g:5151:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEclParser.g:5157:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5161:1: ( ( () ) )
            // InternalEclParser.g:5162:1: ( () )
            {
            // InternalEclParser.g:5162:1: ( () )
            // InternalEclParser.g:5163:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEclParser.g:5164:2: ()
            // InternalEclParser.g:5164:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEclParser.g:5173:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5177:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEclParser.g:5178:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEclParser.g:5185:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5189:1: ( ( ruleAndRefinement ) )
            // InternalEclParser.g:5190:1: ( ruleAndRefinement )
            {
            // InternalEclParser.g:5190:1: ( ruleAndRefinement )
            // InternalEclParser.g:5191:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEclParser.g:5200:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5204:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEclParser.g:5205:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEclParser.g:5211:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5215:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEclParser.g:5216:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEclParser.g:5216:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEclParser.g:5217:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5218:2: ( rule__OrRefinement__Group_1__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==OR) ) {
                    int LA46_5 = input.LA(2);

                    if ( (synpred78_InternalEclParser()) ) {
                        alt46=1;
                    }


                }


                switch (alt46) {
            	case 1 :
            	    // InternalEclParser.g:5218:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEclParser.g:5227:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5231:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEclParser.g:5232:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEclParser.g:5238:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5242:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEclParser.g:5243:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEclParser.g:5243:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEclParser.g:5244:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEclParser.g:5245:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEclParser.g:5245:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEclParser.g:5254:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5258:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEclParser.g:5259:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEclParser.g:5266:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5270:1: ( ( () ) )
            // InternalEclParser.g:5271:1: ( () )
            {
            // InternalEclParser.g:5271:1: ( () )
            // InternalEclParser.g:5272:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEclParser.g:5273:2: ()
            // InternalEclParser.g:5273:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEclParser.g:5281:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5285:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEclParser.g:5286:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEclParser.g:5293:1: rule__OrRefinement__Group_1_0__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5297:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:5298:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:5298:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:5299:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTIONParserRuleCall_1_0_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTIONParserRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEclParser.g:5308:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5312:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEclParser.g:5313:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEclParser.g:5319:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5323:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEclParser.g:5324:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEclParser.g:5324:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEclParser.g:5325:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEclParser.g:5326:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEclParser.g:5326:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEclParser.g:5335:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5339:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEclParser.g:5340:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEclParser.g:5347:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5351:1: ( ( ruleSubRefinement ) )
            // InternalEclParser.g:5352:1: ( ruleSubRefinement )
            {
            // InternalEclParser.g:5352:1: ( ruleSubRefinement )
            // InternalEclParser.g:5353:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEclParser.g:5362:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5366:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEclParser.g:5367:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEclParser.g:5373:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5377:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEclParser.g:5378:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEclParser.g:5378:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEclParser.g:5379:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5380:2: ( rule__AndRefinement__Group_1__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==AND) ) {
                    int LA47_4 = input.LA(2);

                    if ( (synpred79_InternalEclParser()) ) {
                        alt47=1;
                    }


                }
                else if ( (LA47_0==RULE_COMMA) ) {
                    int LA47_5 = input.LA(2);

                    if ( (synpred79_InternalEclParser()) ) {
                        alt47=1;
                    }


                }


                switch (alt47) {
            	case 1 :
            	    // InternalEclParser.g:5380:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEclParser.g:5389:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5393:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEclParser.g:5394:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEclParser.g:5400:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5404:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEclParser.g:5405:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEclParser.g:5405:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEclParser.g:5406:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEclParser.g:5407:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEclParser.g:5407:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEclParser.g:5416:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5420:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEclParser.g:5421:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEclParser.g:5428:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5432:1: ( ( () ) )
            // InternalEclParser.g:5433:1: ( () )
            {
            // InternalEclParser.g:5433:1: ( () )
            // InternalEclParser.g:5434:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEclParser.g:5435:2: ()
            // InternalEclParser.g:5435:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEclParser.g:5443:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5447:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEclParser.g:5448:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEclParser.g:5455:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5459:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEclParser.g:5460:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEclParser.g:5460:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEclParser.g:5461:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEclParser.g:5462:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEclParser.g:5462:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEclParser.g:5470:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5474:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEclParser.g:5475:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEclParser.g:5481:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5485:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEclParser.g:5486:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEclParser.g:5486:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEclParser.g:5487:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEclParser.g:5488:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEclParser.g:5488:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEclParser.g:5497:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5501:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEclParser.g:5502:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEclParser.g:5509:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5513:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:5514:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:5514:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:5515:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEclParser.g:5524:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5528:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEclParser.g:5529:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEclParser.g:5536:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5540:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEclParser.g:5541:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:5541:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEclParser.g:5542:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:5543:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEclParser.g:5543:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEclParser.g:5551:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5555:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEclParser.g:5556:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEclParser.g:5562:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5566:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:5567:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:5567:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:5568:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEclParser.g:5578:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5582:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEclParser.g:5583:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEclParser.g:5590:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5594:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEclParser.g:5595:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEclParser.g:5595:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEclParser.g:5596:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEclParser.g:5597:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_SQUARE_OPEN) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalEclParser.g:5597:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEclParser.g:5605:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5609:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEclParser.g:5610:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEclParser.g:5617:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5621:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEclParser.g:5622:1: ( RULE_CURLY_OPEN )
            {
            // InternalEclParser.g:5622:1: ( RULE_CURLY_OPEN )
            // InternalEclParser.g:5623:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEclParser.g:5632:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5636:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEclParser.g:5637:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEclParser.g:5644:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5648:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEclParser.g:5649:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEclParser.g:5649:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEclParser.g:5650:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEclParser.g:5651:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEclParser.g:5651:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEclParser.g:5659:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5663:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEclParser.g:5664:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEclParser.g:5670:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5674:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEclParser.g:5675:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEclParser.g:5675:1: ( RULE_CURLY_CLOSE )
            // InternalEclParser.g:5676:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEclParser.g:5686:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5690:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEclParser.g:5691:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5698:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5702:1: ( ( ruleAndAttributeSet ) )
            // InternalEclParser.g:5703:1: ( ruleAndAttributeSet )
            {
            // InternalEclParser.g:5703:1: ( ruleAndAttributeSet )
            // InternalEclParser.g:5704:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEclParser.g:5713:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5717:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEclParser.g:5718:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5724:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5728:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEclParser.g:5729:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEclParser.g:5729:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEclParser.g:5730:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5731:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==OR) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalEclParser.g:5731:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEclParser.g:5740:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5744:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEclParser.g:5745:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEclParser.g:5752:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5756:1: ( ( () ) )
            // InternalEclParser.g:5757:1: ( () )
            {
            // InternalEclParser.g:5757:1: ( () )
            // InternalEclParser.g:5758:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEclParser.g:5759:2: ()
            // InternalEclParser.g:5759:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEclParser.g:5767:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5771:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEclParser.g:5772:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEclParser.g:5779:1: rule__OrAttributeSet__Group_1__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5783:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:5784:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:5784:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:5785:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEclParser.g:5794:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5798:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEclParser.g:5799:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEclParser.g:5805:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5809:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:5810:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:5810:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEclParser.g:5811:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:5812:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEclParser.g:5812:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEclParser.g:5821:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5825:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEclParser.g:5826:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5833:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5837:1: ( ( ruleSubAttributeSet ) )
            // InternalEclParser.g:5838:1: ( ruleSubAttributeSet )
            {
            // InternalEclParser.g:5838:1: ( ruleSubAttributeSet )
            // InternalEclParser.g:5839:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEclParser.g:5848:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5852:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEclParser.g:5853:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5859:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5863:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEclParser.g:5864:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEclParser.g:5864:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEclParser.g:5865:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5866:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==AND||LA50_0==RULE_COMMA) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalEclParser.g:5866:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEclParser.g:5875:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5879:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEclParser.g:5880:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEclParser.g:5887:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5891:1: ( ( () ) )
            // InternalEclParser.g:5892:1: ( () )
            {
            // InternalEclParser.g:5892:1: ( () )
            // InternalEclParser.g:5893:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEclParser.g:5894:2: ()
            // InternalEclParser.g:5894:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEclParser.g:5902:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5906:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEclParser.g:5907:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEclParser.g:5914:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5918:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEclParser.g:5919:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:5919:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEclParser.g:5920:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:5921:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEclParser.g:5921:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEclParser.g:5929:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5933:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEclParser.g:5934:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEclParser.g:5940:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5944:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:5945:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:5945:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEclParser.g:5946:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:5947:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEclParser.g:5947:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEclParser.g:5956:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5960:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEclParser.g:5961:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5968:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5972:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:5973:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:5973:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:5974:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEclParser.g:5983:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5987:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEclParser.g:5988:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5995:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5999:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEclParser.g:6000:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:6000:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEclParser.g:6001:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:6002:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEclParser.g:6002:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEclParser.g:6010:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6014:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEclParser.g:6015:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEclParser.g:6021:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6025:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:6026:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:6026:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:6027:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEclParser.g:6037:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6041:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEclParser.g:6042:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEclParser.g:6049:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6053:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEclParser.g:6054:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEclParser.g:6054:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEclParser.g:6055:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEclParser.g:6056:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_SQUARE_OPEN) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalEclParser.g:6056:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEclParser.g:6064:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6068:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEclParser.g:6069:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEclParser.g:6076:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6080:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEclParser.g:6081:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEclParser.g:6081:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEclParser.g:6082:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEclParser.g:6083:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_REVERSED) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalEclParser.g:6083:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEclParser.g:6091:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6095:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEclParser.g:6096:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEclParser.g:6103:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6107:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEclParser.g:6108:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEclParser.g:6108:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEclParser.g:6109:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEclParser.g:6110:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEclParser.g:6110:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEclParser.g:6118:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6122:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEclParser.g:6123:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEclParser.g:6129:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6133:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) )
            // InternalEclParser.g:6134:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            {
            // InternalEclParser.g:6134:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            // InternalEclParser.g:6135:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEclParser.g:6136:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( ((LA53_0>=RULE_EQUAL && LA53_0<=RULE_GT)||(LA53_0>=RULE_GTE && LA53_0<=RULE_LTE)) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalEclParser.g:6136:3: rule__AttributeConstraint__ComparisonAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ComparisonAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEclParser.g:6145:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6149:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEclParser.g:6150:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEclParser.g:6157:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6161:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEclParser.g:6162:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEclParser.g:6162:1: ( RULE_SQUARE_OPEN )
            // InternalEclParser.g:6163:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEclParser.g:6172:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6176:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEclParser.g:6177:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEclParser.g:6184:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6188:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEclParser.g:6189:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEclParser.g:6189:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEclParser.g:6190:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEclParser.g:6191:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEclParser.g:6191:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEclParser.g:6199:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6203:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEclParser.g:6204:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEclParser.g:6211:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6215:1: ( ( RULE_TO ) )
            // InternalEclParser.g:6216:1: ( RULE_TO )
            {
            // InternalEclParser.g:6216:1: ( RULE_TO )
            // InternalEclParser.g:6217:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEclParser.g:6226:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6230:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEclParser.g:6231:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEclParser.g:6238:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6242:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEclParser.g:6243:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEclParser.g:6243:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEclParser.g:6244:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEclParser.g:6245:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEclParser.g:6245:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEclParser.g:6253:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6257:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEclParser.g:6258:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEclParser.g:6264:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6268:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEclParser.g:6269:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEclParser.g:6269:1: ( RULE_SQUARE_CLOSE )
            // InternalEclParser.g:6270:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEclParser.g:6280:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6284:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEclParser.g:6285:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEclParser.g:6292:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6296:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6297:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6297:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6298:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6299:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEclParser.g:6299:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEclParser.g:6307:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6311:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEclParser.g:6312:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEclParser.g:6318:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6322:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:6323:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:6323:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:6324:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:6325:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEclParser.g:6325:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEclParser.g:6334:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6338:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEclParser.g:6339:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEclParser.g:6346:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6350:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6351:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6351:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6352:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6353:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6353:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEclParser.g:6361:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6365:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEclParser.g:6366:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEclParser.g:6372:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6376:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:6377:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:6377:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:6378:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:6379:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEclParser.g:6379:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEclParser.g:6388:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6392:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEclParser.g:6393:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEclParser.g:6400:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6404:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6405:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6405:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6406:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6407:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6407:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEclParser.g:6415:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6419:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEclParser.g:6420:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEclParser.g:6426:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6430:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:6431:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:6431:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:6432:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:6433:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEclParser.g:6433:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEclParser.g:6442:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6446:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEclParser.g:6447:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEclParser.g:6454:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6458:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6459:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6459:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6460:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6461:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6461:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEclParser.g:6469:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6473:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEclParser.g:6474:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEclParser.g:6481:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6485:1: ( ( RULE_HASH ) )
            // InternalEclParser.g:6486:1: ( RULE_HASH )
            {
            // InternalEclParser.g:6486:1: ( RULE_HASH )
            // InternalEclParser.g:6487:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEclParser.g:6496:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6500:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEclParser.g:6501:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEclParser.g:6507:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6511:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEclParser.g:6512:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEclParser.g:6512:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEclParser.g:6513:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEclParser.g:6514:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEclParser.g:6514:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEclParser.g:6523:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6527:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEclParser.g:6528:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEclParser.g:6535:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6539:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6540:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6540:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6541:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6542:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6542:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEclParser.g:6550:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6554:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEclParser.g:6555:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEclParser.g:6562:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6566:1: ( ( RULE_HASH ) )
            // InternalEclParser.g:6567:1: ( RULE_HASH )
            {
            // InternalEclParser.g:6567:1: ( RULE_HASH )
            // InternalEclParser.g:6568:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEclParser.g:6577:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6581:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEclParser.g:6582:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEclParser.g:6588:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6592:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEclParser.g:6593:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEclParser.g:6593:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEclParser.g:6594:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEclParser.g:6595:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEclParser.g:6595:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEclParser.g:6604:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6608:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEclParser.g:6609:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEclParser.g:6616:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6620:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:6621:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:6621:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:6622:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEclParser.g:6631:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6635:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEclParser.g:6636:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEclParser.g:6643:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6647:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEclParser.g:6648:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:6648:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEclParser.g:6649:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:6650:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEclParser.g:6650:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEclParser.g:6658:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6662:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEclParser.g:6663:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEclParser.g:6669:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6673:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:6674:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:6674:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:6675:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEclParser.g:6685:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6689:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEclParser.g:6690:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEclParser.g:6697:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6701:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEclParser.g:6702:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEclParser.g:6702:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEclParser.g:6703:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEclParser.g:6712:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6716:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEclParser.g:6717:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEclParser.g:6724:1: rule__FilterConstraint__Group__1__Impl : ( ruleFilter ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6728:1: ( ( ruleFilter ) )
            // InternalEclParser.g:6729:1: ( ruleFilter )
            {
            // InternalEclParser.g:6729:1: ( ruleFilter )
            // InternalEclParser.g:6730:2: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEclParser.g:6739:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6743:1: ( rule__FilterConstraint__Group__2__Impl )
            // InternalEclParser.g:6744:2: rule__FilterConstraint__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEclParser.g:6750:1: rule__FilterConstraint__Group__2__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6754:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEclParser.g:6755:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEclParser.g:6755:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEclParser.g:6756:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEclParser.g:6766:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6770:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEclParser.g:6771:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEclParser.g:6778:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6782:1: ( ( ruleConjunctionFilter ) )
            // InternalEclParser.g:6783:1: ( ruleConjunctionFilter )
            {
            // InternalEclParser.g:6783:1: ( ruleConjunctionFilter )
            // InternalEclParser.g:6784:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEclParser.g:6793:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6797:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEclParser.g:6798:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEclParser.g:6804:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6808:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEclParser.g:6809:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEclParser.g:6809:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEclParser.g:6810:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6811:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==OR) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalEclParser.g:6811:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEclParser.g:6820:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6824:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEclParser.g:6825:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEclParser.g:6832:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6836:1: ( ( () ) )
            // InternalEclParser.g:6837:1: ( () )
            {
            // InternalEclParser.g:6837:1: ( () )
            // InternalEclParser.g:6838:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEclParser.g:6839:2: ()
            // InternalEclParser.g:6839:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEclParser.g:6847:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6851:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEclParser.g:6852:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEclParser.g:6859:1: rule__DisjunctionFilter__Group_1__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6863:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:6864:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:6864:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:6865:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEclParser.g:6874:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6878:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEclParser.g:6879:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEclParser.g:6885:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6889:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:6890:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:6890:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEclParser.g:6891:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:6892:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEclParser.g:6892:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEclParser.g:6901:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6905:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEclParser.g:6906:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEclParser.g:6913:1: rule__ConjunctionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6917:1: ( ( rulePropertyFilter ) )
            // InternalEclParser.g:6918:1: ( rulePropertyFilter )
            {
            // InternalEclParser.g:6918:1: ( rulePropertyFilter )
            // InternalEclParser.g:6919:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEclParser.g:6928:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6932:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEclParser.g:6933:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEclParser.g:6939:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6943:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEclParser.g:6944:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEclParser.g:6944:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEclParser.g:6945:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6946:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==AND||LA55_0==RULE_COMMA) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalEclParser.g:6946:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEclParser.g:6955:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6959:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEclParser.g:6960:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEclParser.g:6967:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6971:1: ( ( () ) )
            // InternalEclParser.g:6972:1: ( () )
            {
            // InternalEclParser.g:6972:1: ( () )
            // InternalEclParser.g:6973:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEclParser.g:6974:2: ()
            // InternalEclParser.g:6974:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEclParser.g:6982:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6986:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEclParser.g:6987:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEclParser.g:6994:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6998:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEclParser.g:6999:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:6999:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEclParser.g:7000:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:7001:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEclParser.g:7001:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEclParser.g:7009:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7013:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEclParser.g:7014:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEclParser.g:7020:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7024:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:7025:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:7025:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEclParser.g:7026:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:7027:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEclParser.g:7027:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEclParser.g:7036:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7040:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEclParser.g:7041:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEclParser.g:7048:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7052:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7053:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7053:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7054:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEclParser.g:7063:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7067:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEclParser.g:7068:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEclParser.g:7075:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7079:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEclParser.g:7080:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:7080:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEclParser.g:7081:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:7082:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEclParser.g:7082:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEclParser.g:7090:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7094:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEclParser.g:7095:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEclParser.g:7101:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7105:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7106:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7106:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7107:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEclParser.g:7117:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7121:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEclParser.g:7122:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEclParser.g:7129:1: rule__TermFilter__Group__0__Impl : ( ruleTERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7133:1: ( ( ruleTERM_KEYWORD ) )
            // InternalEclParser.g:7134:1: ( ruleTERM_KEYWORD )
            {
            // InternalEclParser.g:7134:1: ( ruleTERM_KEYWORD )
            // InternalEclParser.g:7135:2: ruleTERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTERM_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEclParser.g:7144:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7148:1: ( rule__TermFilter__Group__1__Impl )
            // InternalEclParser.g:7149:2: rule__TermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEclParser.g:7155:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__Alternatives_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7159:1: ( ( ( rule__TermFilter__Alternatives_1 ) ) )
            // InternalEclParser.g:7160:1: ( ( rule__TermFilter__Alternatives_1 ) )
            {
            // InternalEclParser.g:7160:1: ( ( rule__TermFilter__Alternatives_1 ) )
            // InternalEclParser.g:7161:2: ( rule__TermFilter__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:7162:2: ( rule__TermFilter__Alternatives_1 )
            // InternalEclParser.g:7162:3: rule__TermFilter__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__0"
    // InternalEclParser.g:7171:1: rule__TypedTermFilter__Group__0 : rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 ;
    public final void rule__TypedTermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7175:1: ( rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 )
            // InternalEclParser.g:7176:2: rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypedTermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0"


    // $ANTLR start "rule__TypedTermFilter__Group__0__Impl"
    // InternalEclParser.g:7183:1: rule__TypedTermFilter__Group__0__Impl : ( ( rule__TypedTermFilter__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7187:1: ( ( ( rule__TypedTermFilter__OpAssignment_0 ) ) )
            // InternalEclParser.g:7188:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            {
            // InternalEclParser.g:7188:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            // InternalEclParser.g:7189:2: ( rule__TypedTermFilter__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:7190:2: ( rule__TypedTermFilter__OpAssignment_0 )
            // InternalEclParser.g:7190:3: rule__TypedTermFilter__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__1"
    // InternalEclParser.g:7198:1: rule__TypedTermFilter__Group__1 : rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 ;
    public final void rule__TypedTermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7202:1: ( rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 )
            // InternalEclParser.g:7203:2: rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypedTermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1"


    // $ANTLR start "rule__TypedTermFilter__Group__1__Impl"
    // InternalEclParser.g:7210:1: rule__TypedTermFilter__Group__1__Impl : ( ( rule__TypedTermFilter__Group_1__0 )? ) ;
    public final void rule__TypedTermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7214:1: ( ( ( rule__TypedTermFilter__Group_1__0 )? ) )
            // InternalEclParser.g:7215:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            {
            // InternalEclParser.g:7215:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            // InternalEclParser.g:7216:2: ( rule__TypedTermFilter__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:7217:2: ( rule__TypedTermFilter__Group_1__0 )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==Exact||(LA56_0>=Match && LA56_0<=Regex)||LA56_0==Wild) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalEclParser.g:7217:3: rule__TypedTermFilter__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilter__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__2"
    // InternalEclParser.g:7225:1: rule__TypedTermFilter__Group__2 : rule__TypedTermFilter__Group__2__Impl ;
    public final void rule__TypedTermFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7229:1: ( rule__TypedTermFilter__Group__2__Impl )
            // InternalEclParser.g:7230:2: rule__TypedTermFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2"


    // $ANTLR start "rule__TypedTermFilter__Group__2__Impl"
    // InternalEclParser.g:7236:1: rule__TypedTermFilter__Group__2__Impl : ( ( rule__TypedTermFilter__TermAssignment_2 ) ) ;
    public final void rule__TypedTermFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7240:1: ( ( ( rule__TypedTermFilter__TermAssignment_2 ) ) )
            // InternalEclParser.g:7241:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            {
            // InternalEclParser.g:7241:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            // InternalEclParser.g:7242:2: ( rule__TypedTermFilter__TermAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }
            // InternalEclParser.g:7243:2: ( rule__TypedTermFilter__TermAssignment_2 )
            // InternalEclParser.g:7243:3: rule__TypedTermFilter__TermAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__TermAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0"
    // InternalEclParser.g:7252:1: rule__TypedTermFilter__Group_1__0 : rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 ;
    public final void rule__TypedTermFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7256:1: ( rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 )
            // InternalEclParser.g:7257:2: rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__TypedTermFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0__Impl"
    // InternalEclParser.g:7264:1: rule__TypedTermFilter__Group_1__0__Impl : ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) ;
    public final void rule__TypedTermFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7268:1: ( ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) )
            // InternalEclParser.g:7269:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            {
            // InternalEclParser.g:7269:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            // InternalEclParser.g:7270:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }
            // InternalEclParser.g:7271:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            // InternalEclParser.g:7271:3: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1"
    // InternalEclParser.g:7279:1: rule__TypedTermFilter__Group_1__1 : rule__TypedTermFilter__Group_1__1__Impl ;
    public final void rule__TypedTermFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7283:1: ( rule__TypedTermFilter__Group_1__1__Impl )
            // InternalEclParser.g:7284:2: rule__TypedTermFilter__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1__Impl"
    // InternalEclParser.g:7290:1: rule__TypedTermFilter__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedTermFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7294:1: ( ( RULE_COLON ) )
            // InternalEclParser.g:7295:1: ( RULE_COLON )
            {
            // InternalEclParser.g:7295:1: ( RULE_COLON )
            // InternalEclParser.g:7296:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0"
    // InternalEclParser.g:7306:1: rule__TypedTermFilterSet__Group__0 : rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 ;
    public final void rule__TypedTermFilterSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7310:1: ( rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 )
            // InternalEclParser.g:7311:2: rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__TypedTermFilterSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0__Impl"
    // InternalEclParser.g:7318:1: rule__TypedTermFilterSet__Group__0__Impl : ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilterSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7322:1: ( ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) )
            // InternalEclParser.g:7323:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            {
            // InternalEclParser.g:7323:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            // InternalEclParser.g:7324:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:7325:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            // InternalEclParser.g:7325:3: rule__TypedTermFilterSet__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1"
    // InternalEclParser.g:7333:1: rule__TypedTermFilterSet__Group__1 : rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 ;
    public final void rule__TypedTermFilterSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7337:1: ( rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 )
            // InternalEclParser.g:7338:2: rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypedTermFilterSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1__Impl"
    // InternalEclParser.g:7345:1: rule__TypedTermFilterSet__Group__1__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedTermFilterSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7349:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7350:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7350:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7351:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2"
    // InternalEclParser.g:7360:1: rule__TypedTermFilterSet__Group__2 : rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 ;
    public final void rule__TypedTermFilterSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7364:1: ( rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 )
            // InternalEclParser.g:7365:2: rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__TypedTermFilterSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2__Impl"
    // InternalEclParser.g:7372:1: rule__TypedTermFilterSet__Group__2__Impl : ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ;
    public final void rule__TypedTermFilterSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7376:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) )
            // InternalEclParser.g:7377:1: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) )
            {
            // InternalEclParser.g:7377:1: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) )
            // InternalEclParser.g:7378:2: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }
            // InternalEclParser.g:7379:2: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            // InternalEclParser.g:7379:3: rule__TypedTermFilterSet__TermsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__TermsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3"
    // InternalEclParser.g:7387:1: rule__TypedTermFilterSet__Group__3 : rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4 ;
    public final void rule__TypedTermFilterSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7391:1: ( rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4 )
            // InternalEclParser.g:7392:2: rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__TypedTermFilterSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3__Impl"
    // InternalEclParser.g:7399:1: rule__TypedTermFilterSet__Group__3__Impl : ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* ) ;
    public final void rule__TypedTermFilterSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7403:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* ) )
            // InternalEclParser.g:7404:1: ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* )
            {
            // InternalEclParser.g:7404:1: ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* )
            // InternalEclParser.g:7405:2: ( rule__TypedTermFilterSet__TermsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_3()); 
            }
            // InternalEclParser.g:7406:2: ( rule__TypedTermFilterSet__TermsAssignment_3 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( ((LA57_0>=RULE_EQUAL && LA57_0<=RULE_NOT_EQUAL)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalEclParser.g:7406:3: rule__TypedTermFilterSet__TermsAssignment_3
            	    {
            	    pushFollow(FollowSets000.FOLLOW_38);
            	    rule__TypedTermFilterSet__TermsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__4"
    // InternalEclParser.g:7414:1: rule__TypedTermFilterSet__Group__4 : rule__TypedTermFilterSet__Group__4__Impl ;
    public final void rule__TypedTermFilterSet__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7418:1: ( rule__TypedTermFilterSet__Group__4__Impl )
            // InternalEclParser.g:7419:2: rule__TypedTermFilterSet__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__4"


    // $ANTLR start "rule__TypedTermFilterSet__Group__4__Impl"
    // InternalEclParser.g:7425:1: rule__TypedTermFilterSet__Group__4__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedTermFilterSet__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7429:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7430:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7430:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7431:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__4__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__0"
    // InternalEclParser.g:7441:1: rule__LanguageFilter__Group__0 : rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 ;
    public final void rule__LanguageFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7445:1: ( rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 )
            // InternalEclParser.g:7446:2: rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__LanguageFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0"


    // $ANTLR start "rule__LanguageFilter__Group__0__Impl"
    // InternalEclParser.g:7453:1: rule__LanguageFilter__Group__0__Impl : ( ruleLANGUAGE_KEYWORD ) ;
    public final void rule__LanguageFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7457:1: ( ( ruleLANGUAGE_KEYWORD ) )
            // InternalEclParser.g:7458:1: ( ruleLANGUAGE_KEYWORD )
            {
            // InternalEclParser.g:7458:1: ( ruleLANGUAGE_KEYWORD )
            // InternalEclParser.g:7459:2: ruleLANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLANGUAGE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__1"
    // InternalEclParser.g:7468:1: rule__LanguageFilter__Group__1 : rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 ;
    public final void rule__LanguageFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7472:1: ( rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 )
            // InternalEclParser.g:7473:2: rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__LanguageFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1"


    // $ANTLR start "rule__LanguageFilter__Group__1__Impl"
    // InternalEclParser.g:7480:1: rule__LanguageFilter__Group__1__Impl : ( ( rule__LanguageFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7484:1: ( ( ( rule__LanguageFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7485:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7485:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7486:2: ( rule__LanguageFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7487:2: ( rule__LanguageFilter__OpAssignment_1 )
            // InternalEclParser.g:7487:3: rule__LanguageFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__2"
    // InternalEclParser.g:7495:1: rule__LanguageFilter__Group__2 : rule__LanguageFilter__Group__2__Impl ;
    public final void rule__LanguageFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7499:1: ( rule__LanguageFilter__Group__2__Impl )
            // InternalEclParser.g:7500:2: rule__LanguageFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2"


    // $ANTLR start "rule__LanguageFilter__Group__2__Impl"
    // InternalEclParser.g:7506:1: rule__LanguageFilter__Group__2__Impl : ( ( rule__LanguageFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7510:1: ( ( ( rule__LanguageFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7511:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7511:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            // InternalEclParser.g:7512:2: ( rule__LanguageFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7513:2: ( rule__LanguageFilter__Alternatives_2 )
            // InternalEclParser.g:7513:3: rule__LanguageFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0"
    // InternalEclParser.g:7522:1: rule__LanguageFilter__Group_2_1__0 : rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 ;
    public final void rule__LanguageFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7526:1: ( rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 )
            // InternalEclParser.g:7527:2: rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__LanguageFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7534:1: rule__LanguageFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7538:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7539:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7539:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7540:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1"
    // InternalEclParser.g:7549:1: rule__LanguageFilter__Group_2_1__1 : rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 ;
    public final void rule__LanguageFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7553:1: ( rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 )
            // InternalEclParser.g:7554:2: rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__LanguageFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7561:1: rule__LanguageFilter__Group_2_1__1__Impl : ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ;
    public final void rule__LanguageFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7565:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7566:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7566:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEclParser.g:7567:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7568:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEclParser.g:7568:3: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2"
    // InternalEclParser.g:7576:1: rule__LanguageFilter__Group_2_1__2 : rule__LanguageFilter__Group_2_1__2__Impl rule__LanguageFilter__Group_2_1__3 ;
    public final void rule__LanguageFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7580:1: ( rule__LanguageFilter__Group_2_1__2__Impl rule__LanguageFilter__Group_2_1__3 )
            // InternalEclParser.g:7581:2: rule__LanguageFilter__Group_2_1__2__Impl rule__LanguageFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__LanguageFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7588:1: rule__LanguageFilter__Group_2_1__2__Impl : ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* ) ;
    public final void rule__LanguageFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7592:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7593:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7593:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* )
            // InternalEclParser.g:7594:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7595:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_ALPHA) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalEclParser.g:7595:3: rule__LanguageFilter__LanguageCodesAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__LanguageFilter__LanguageCodesAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__3"
    // InternalEclParser.g:7603:1: rule__LanguageFilter__Group_2_1__3 : rule__LanguageFilter__Group_2_1__3__Impl ;
    public final void rule__LanguageFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7607:1: ( rule__LanguageFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7608:2: rule__LanguageFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__3"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7614:1: rule__LanguageFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7618:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7619:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7619:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7620:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEclParser.g:7630:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7634:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEclParser.g:7635:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEclParser.g:7642:1: rule__TypeIdFilter__Group__0__Impl : ( ruleTYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7646:1: ( ( ruleTYPEID_KEYWORD ) )
            // InternalEclParser.g:7647:1: ( ruleTYPEID_KEYWORD )
            {
            // InternalEclParser.g:7647:1: ( ruleTYPEID_KEYWORD )
            // InternalEclParser.g:7648:2: ruleTYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTYPEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEclParser.g:7657:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7661:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEclParser.g:7662:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEclParser.g:7669:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7673:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7674:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7674:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7675:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7676:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEclParser.g:7676:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEclParser.g:7684:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7688:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEclParser.g:7689:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEclParser.g:7695:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7699:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEclParser.g:7700:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEclParser.g:7700:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEclParser.g:7701:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEclParser.g:7702:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEclParser.g:7702:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEclParser.g:7711:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7715:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEclParser.g:7716:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEclParser.g:7723:1: rule__TypeTokenFilter__Group__0__Impl : ( ruleTYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7727:1: ( ( ruleTYPE_KEYWORD ) )
            // InternalEclParser.g:7728:1: ( ruleTYPE_KEYWORD )
            {
            // InternalEclParser.g:7728:1: ( ruleTYPE_KEYWORD )
            // InternalEclParser.g:7729:2: ruleTYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTYPE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEclParser.g:7738:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7742:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEclParser.g:7743:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEclParser.g:7750:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7754:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7755:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7755:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7756:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7757:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEclParser.g:7757:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEclParser.g:7765:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7769:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEclParser.g:7770:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEclParser.g:7776:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7780:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7781:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7781:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEclParser.g:7782:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7783:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEclParser.g:7783:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEclParser.g:7792:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7796:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEclParser.g:7797:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7804:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7808:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7809:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7809:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7810:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEclParser.g:7819:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7823:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEclParser.g:7824:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7831:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7835:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7836:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7836:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEclParser.g:7837:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7838:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEclParser.g:7838:3: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEclParser.g:7846:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3 ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7850:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3 )
            // InternalEclParser.g:7851:2: rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7858:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7862:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7863:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7863:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* )
            // InternalEclParser.g:7864:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7865:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_ALPHA) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalEclParser.g:7865:3: rule__TypeTokenFilter__TokensAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__3"
    // InternalEclParser.g:7873:1: rule__TypeTokenFilter__Group_2_1__3 : rule__TypeTokenFilter__Group_2_1__3__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7877:1: ( rule__TypeTokenFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7878:2: rule__TypeTokenFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__3"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7884:1: rule__TypeTokenFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7888:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7889:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7889:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7890:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEclParser.g:7900:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7904:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEclParser.g:7905:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEclParser.g:7912:1: rule__DialectIdFilter__Group__0__Impl : ( ruleDIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7916:1: ( ( ruleDIALECTID_KEYWORD ) )
            // InternalEclParser.g:7917:1: ( ruleDIALECTID_KEYWORD )
            {
            // InternalEclParser.g:7917:1: ( ruleDIALECTID_KEYWORD )
            // InternalEclParser.g:7918:2: ruleDIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDIALECTID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEclParser.g:7927:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7931:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEclParser.g:7932:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEclParser.g:7939:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7943:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7944:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7944:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7945:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7946:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEclParser.g:7946:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEclParser.g:7954:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7958:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEclParser.g:7959:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEclParser.g:7965:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7969:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7970:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7970:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEclParser.g:7971:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7972:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEclParser.g:7972:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEclParser.g:7981:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7985:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEclParser.g:7986:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7993:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7997:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7998:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7998:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7999:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEclParser.g:8008:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8012:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEclParser.g:8013:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:8020:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8024:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) )
            // InternalEclParser.g:8025:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:8025:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEclParser.g:8026:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEclParser.g:8027:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEclParser.g:8027:3: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEclParser.g:8035:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3 ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8039:1: ( rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3 )
            // InternalEclParser.g:8040:2: rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:8047:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8051:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* ) )
            // InternalEclParser.g:8052:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:8052:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* )
            // InternalEclParser.g:8053:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_2()); 
            }
            // InternalEclParser.g:8054:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=RULE_ZERO && LA60_0<=RULE_DIGIT_NONZERO)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalEclParser.g:8054:3: rule__DialectIdFilter__DialectsAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__3"
    // InternalEclParser.g:8062:1: rule__DialectIdFilter__Group_2_1__3 : rule__DialectIdFilter__Group_2_1__3__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8066:1: ( rule__DialectIdFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:8067:2: rule__DialectIdFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__3"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:8073:1: rule__DialectIdFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8077:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:8078:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:8078:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:8079:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEclParser.g:8089:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8093:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEclParser.g:8094:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEclParser.g:8101:1: rule__DialectAliasFilter__Group__0__Impl : ( ruleDIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8105:1: ( ( ruleDIALECT_KEYWORD ) )
            // InternalEclParser.g:8106:1: ( ruleDIALECT_KEYWORD )
            {
            // InternalEclParser.g:8106:1: ( ruleDIALECT_KEYWORD )
            // InternalEclParser.g:8107:2: ruleDIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDIALECT_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEclParser.g:8116:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8120:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEclParser.g:8121:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEclParser.g:8128:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8132:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:8133:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:8133:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEclParser.g:8134:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:8135:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEclParser.g:8135:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEclParser.g:8143:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8147:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEclParser.g:8148:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEclParser.g:8154:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8158:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:8159:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:8159:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEclParser.g:8160:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:8161:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEclParser.g:8161:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEclParser.g:8170:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8174:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEclParser.g:8175:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:8182:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8186:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:8187:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:8187:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:8188:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEclParser.g:8197:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8201:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEclParser.g:8202:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:8209:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8213:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) )
            // InternalEclParser.g:8214:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:8214:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEclParser.g:8215:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEclParser.g:8216:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEclParser.g:8216:3: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEclParser.g:8224:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3 ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8228:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3 )
            // InternalEclParser.g:8229:2: rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:8236:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8240:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* ) )
            // InternalEclParser.g:8241:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:8241:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* )
            // InternalEclParser.g:8242:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_2()); 
            }
            // InternalEclParser.g:8243:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==RULE_ALPHA) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalEclParser.g:8243:3: rule__DialectAliasFilter__DialectsAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__3"
    // InternalEclParser.g:8251:1: rule__DialectAliasFilter__Group_2_1__3 : rule__DialectAliasFilter__Group_2_1__3__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8255:1: ( rule__DialectAliasFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:8256:2: rule__DialectAliasFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__3"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:8262:1: rule__DialectAliasFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8266:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:8267:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:8267:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:8268:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEclParser.g:8278:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8282:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEclParser.g:8283:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEclParser.g:8290:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8294:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEclParser.g:8295:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEclParser.g:8295:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEclParser.g:8296:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEclParser.g:8297:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEclParser.g:8297:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEclParser.g:8305:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8309:1: ( rule__Dialect__Group__1__Impl )
            // InternalEclParser.g:8310:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEclParser.g:8316:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8320:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEclParser.g:8321:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEclParser.g:8321:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEclParser.g:8322:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEclParser.g:8323:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_ROUND_OPEN) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalEclParser.g:8323:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEclParser.g:8332:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8336:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEclParser.g:8337:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEclParser.g:8344:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8348:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEclParser.g:8349:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEclParser.g:8349:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEclParser.g:8350:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEclParser.g:8351:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEclParser.g:8351:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEclParser.g:8359:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8363:1: ( rule__DialectAlias__Group__1__Impl )
            // InternalEclParser.g:8364:2: rule__DialectAlias__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEclParser.g:8370:1: rule__DialectAlias__Group__1__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8374:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) )
            // InternalEclParser.g:8375:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            {
            // InternalEclParser.g:8375:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            // InternalEclParser.g:8376:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEclParser.g:8377:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_ROUND_OPEN) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEclParser.g:8377:3: rule__DialectAlias__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0"
    // InternalEclParser.g:8386:1: rule__AcceptabilityTokenSet__Group__0 : rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 ;
    public final void rule__AcceptabilityTokenSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8390:1: ( rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 )
            // InternalEclParser.g:8391:2: rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__AcceptabilityTokenSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0__Impl"
    // InternalEclParser.g:8398:1: rule__AcceptabilityTokenSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AcceptabilityTokenSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8402:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:8403:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:8403:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:8404:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1"
    // InternalEclParser.g:8413:1: rule__AcceptabilityTokenSet__Group__1 : rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 ;
    public final void rule__AcceptabilityTokenSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8417:1: ( rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 )
            // InternalEclParser.g:8418:2: rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__AcceptabilityTokenSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1__Impl"
    // InternalEclParser.g:8425:1: rule__AcceptabilityTokenSet__Group__1__Impl : ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ;
    public final void rule__AcceptabilityTokenSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8429:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) )
            // InternalEclParser.g:8430:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            {
            // InternalEclParser.g:8430:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            // InternalEclParser.g:8431:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEclParser.g:8432:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            // InternalEclParser.g:8432:3: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2"
    // InternalEclParser.g:8440:1: rule__AcceptabilityTokenSet__Group__2 : rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3 ;
    public final void rule__AcceptabilityTokenSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8444:1: ( rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3 )
            // InternalEclParser.g:8445:2: rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__AcceptabilityTokenSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2__Impl"
    // InternalEclParser.g:8452:1: rule__AcceptabilityTokenSet__Group__2__Impl : ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* ) ;
    public final void rule__AcceptabilityTokenSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8456:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* ) )
            // InternalEclParser.g:8457:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* )
            {
            // InternalEclParser.g:8457:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* )
            // InternalEclParser.g:8458:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_2()); 
            }
            // InternalEclParser.g:8459:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==RULE_ALPHA) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalEclParser.g:8459:3: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__3"
    // InternalEclParser.g:8467:1: rule__AcceptabilityTokenSet__Group__3 : rule__AcceptabilityTokenSet__Group__3__Impl ;
    public final void rule__AcceptabilityTokenSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8471:1: ( rule__AcceptabilityTokenSet__Group__3__Impl )
            // InternalEclParser.g:8472:2: rule__AcceptabilityTokenSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__3"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__3__Impl"
    // InternalEclParser.g:8478:1: rule__AcceptabilityTokenSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AcceptabilityTokenSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8482:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:8483:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:8483:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:8484:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__3__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__0"
    // InternalEclParser.g:8494:1: rule__ActiveFilter__Group__0 : rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 ;
    public final void rule__ActiveFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8498:1: ( rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 )
            // InternalEclParser.g:8499:2: rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__ActiveFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0"


    // $ANTLR start "rule__ActiveFilter__Group__0__Impl"
    // InternalEclParser.g:8506:1: rule__ActiveFilter__Group__0__Impl : ( ( rule__ActiveFilter__Group_0__0 )? ) ;
    public final void rule__ActiveFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8510:1: ( ( ( rule__ActiveFilter__Group_0__0 )? ) )
            // InternalEclParser.g:8511:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            {
            // InternalEclParser.g:8511:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            // InternalEclParser.g:8512:2: ( rule__ActiveFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }
            // InternalEclParser.g:8513:2: ( rule__ActiveFilter__Group_0__0 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Description||LA65_0==Concept) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalEclParser.g:8513:3: rule__ActiveFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ActiveFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__1"
    // InternalEclParser.g:8521:1: rule__ActiveFilter__Group__1 : rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 ;
    public final void rule__ActiveFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8525:1: ( rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 )
            // InternalEclParser.g:8526:2: rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__ActiveFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1"


    // $ANTLR start "rule__ActiveFilter__Group__1__Impl"
    // InternalEclParser.g:8533:1: rule__ActiveFilter__Group__1__Impl : ( ruleACTIVE_KEYWORD ) ;
    public final void rule__ActiveFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8537:1: ( ( ruleACTIVE_KEYWORD ) )
            // InternalEclParser.g:8538:1: ( ruleACTIVE_KEYWORD )
            {
            // InternalEclParser.g:8538:1: ( ruleACTIVE_KEYWORD )
            // InternalEclParser.g:8539:2: ruleACTIVE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleACTIVE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__2"
    // InternalEclParser.g:8548:1: rule__ActiveFilter__Group__2 : rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 ;
    public final void rule__ActiveFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8552:1: ( rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 )
            // InternalEclParser.g:8553:2: rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__ActiveFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2"


    // $ANTLR start "rule__ActiveFilter__Group__2__Impl"
    // InternalEclParser.g:8560:1: rule__ActiveFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ActiveFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8564:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:8565:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:8565:1: ( RULE_EQUAL )
            // InternalEclParser.g:8566:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__3"
    // InternalEclParser.g:8575:1: rule__ActiveFilter__Group__3 : rule__ActiveFilter__Group__3__Impl ;
    public final void rule__ActiveFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8579:1: ( rule__ActiveFilter__Group__3__Impl )
            // InternalEclParser.g:8580:2: rule__ActiveFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3"


    // $ANTLR start "rule__ActiveFilter__Group__3__Impl"
    // InternalEclParser.g:8586:1: rule__ActiveFilter__Group__3__Impl : ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) ;
    public final void rule__ActiveFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8590:1: ( ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) )
            // InternalEclParser.g:8591:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            {
            // InternalEclParser.g:8591:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            // InternalEclParser.g:8592:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }
            // InternalEclParser.g:8593:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            // InternalEclParser.g:8593:3: rule__ActiveFilter__ActiveAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__ActiveAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__0"
    // InternalEclParser.g:8602:1: rule__ActiveFilter__Group_0__0 : rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 ;
    public final void rule__ActiveFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8606:1: ( rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 )
            // InternalEclParser.g:8607:2: rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__ActiveFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0"


    // $ANTLR start "rule__ActiveFilter__Group_0__0__Impl"
    // InternalEclParser.g:8614:1: rule__ActiveFilter__Group_0__0__Impl : ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ActiveFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8618:1: ( ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) )
            // InternalEclParser.g:8619:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            {
            // InternalEclParser.g:8619:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            // InternalEclParser.g:8620:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEclParser.g:8621:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            // InternalEclParser.g:8621:3: rule__ActiveFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__1"
    // InternalEclParser.g:8629:1: rule__ActiveFilter__Group_0__1 : rule__ActiveFilter__Group_0__1__Impl ;
    public final void rule__ActiveFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8633:1: ( rule__ActiveFilter__Group_0__1__Impl )
            // InternalEclParser.g:8634:2: rule__ActiveFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1"


    // $ANTLR start "rule__ActiveFilter__Group_0__1__Impl"
    // InternalEclParser.g:8640:1: rule__ActiveFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ActiveFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8644:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:8645:1: ( RULE_DOT )
            {
            // InternalEclParser.g:8645:1: ( RULE_DOT )
            // InternalEclParser.g:8646:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__0"
    // InternalEclParser.g:8656:1: rule__ModuleFilter__Group__0 : rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 ;
    public final void rule__ModuleFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8660:1: ( rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 )
            // InternalEclParser.g:8661:2: rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ModuleFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0"


    // $ANTLR start "rule__ModuleFilter__Group__0__Impl"
    // InternalEclParser.g:8668:1: rule__ModuleFilter__Group__0__Impl : ( ( rule__ModuleFilter__Group_0__0 )? ) ;
    public final void rule__ModuleFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8672:1: ( ( ( rule__ModuleFilter__Group_0__0 )? ) )
            // InternalEclParser.g:8673:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            {
            // InternalEclParser.g:8673:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            // InternalEclParser.g:8674:2: ( rule__ModuleFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }
            // InternalEclParser.g:8675:2: ( rule__ModuleFilter__Group_0__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Description||LA66_0==Concept) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalEclParser.g:8675:3: rule__ModuleFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ModuleFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__1"
    // InternalEclParser.g:8683:1: rule__ModuleFilter__Group__1 : rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 ;
    public final void rule__ModuleFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8687:1: ( rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 )
            // InternalEclParser.g:8688:2: rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__ModuleFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1"


    // $ANTLR start "rule__ModuleFilter__Group__1__Impl"
    // InternalEclParser.g:8695:1: rule__ModuleFilter__Group__1__Impl : ( ruleMODULEID_KEYWORD ) ;
    public final void rule__ModuleFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8699:1: ( ( ruleMODULEID_KEYWORD ) )
            // InternalEclParser.g:8700:1: ( ruleMODULEID_KEYWORD )
            {
            // InternalEclParser.g:8700:1: ( ruleMODULEID_KEYWORD )
            // InternalEclParser.g:8701:2: ruleMODULEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMODULEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__2"
    // InternalEclParser.g:8710:1: rule__ModuleFilter__Group__2 : rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 ;
    public final void rule__ModuleFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8714:1: ( rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 )
            // InternalEclParser.g:8715:2: rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ModuleFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2"


    // $ANTLR start "rule__ModuleFilter__Group__2__Impl"
    // InternalEclParser.g:8722:1: rule__ModuleFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ModuleFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8726:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:8727:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:8727:1: ( RULE_EQUAL )
            // InternalEclParser.g:8728:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__3"
    // InternalEclParser.g:8737:1: rule__ModuleFilter__Group__3 : rule__ModuleFilter__Group__3__Impl ;
    public final void rule__ModuleFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8741:1: ( rule__ModuleFilter__Group__3__Impl )
            // InternalEclParser.g:8742:2: rule__ModuleFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3"


    // $ANTLR start "rule__ModuleFilter__Group__3__Impl"
    // InternalEclParser.g:8748:1: rule__ModuleFilter__Group__3__Impl : ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) ;
    public final void rule__ModuleFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8752:1: ( ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) )
            // InternalEclParser.g:8753:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            {
            // InternalEclParser.g:8753:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            // InternalEclParser.g:8754:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }
            // InternalEclParser.g:8755:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            // InternalEclParser.g:8755:3: rule__ModuleFilter__ModuleIdAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__ModuleIdAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__0"
    // InternalEclParser.g:8764:1: rule__ModuleFilter__Group_0__0 : rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 ;
    public final void rule__ModuleFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8768:1: ( rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 )
            // InternalEclParser.g:8769:2: rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__ModuleFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0"


    // $ANTLR start "rule__ModuleFilter__Group_0__0__Impl"
    // InternalEclParser.g:8776:1: rule__ModuleFilter__Group_0__0__Impl : ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ModuleFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8780:1: ( ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) )
            // InternalEclParser.g:8781:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            {
            // InternalEclParser.g:8781:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            // InternalEclParser.g:8782:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEclParser.g:8783:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            // InternalEclParser.g:8783:3: rule__ModuleFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__1"
    // InternalEclParser.g:8791:1: rule__ModuleFilter__Group_0__1 : rule__ModuleFilter__Group_0__1__Impl ;
    public final void rule__ModuleFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8795:1: ( rule__ModuleFilter__Group_0__1__Impl )
            // InternalEclParser.g:8796:2: rule__ModuleFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1"


    // $ANTLR start "rule__ModuleFilter__Group_0__1__Impl"
    // InternalEclParser.g:8802:1: rule__ModuleFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ModuleFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8806:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:8807:1: ( RULE_DOT )
            {
            // InternalEclParser.g:8807:1: ( RULE_DOT )
            // InternalEclParser.g:8808:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__0"
    // InternalEclParser.g:8818:1: rule__SemanticTagFilter__Group__0 : rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 ;
    public final void rule__SemanticTagFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8822:1: ( rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 )
            // InternalEclParser.g:8823:2: rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__SemanticTagFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0"


    // $ANTLR start "rule__SemanticTagFilter__Group__0__Impl"
    // InternalEclParser.g:8830:1: rule__SemanticTagFilter__Group__0__Impl : ( ( rule__SemanticTagFilter__Group_0__0 )? ) ;
    public final void rule__SemanticTagFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8834:1: ( ( ( rule__SemanticTagFilter__Group_0__0 )? ) )
            // InternalEclParser.g:8835:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            {
            // InternalEclParser.g:8835:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            // InternalEclParser.g:8836:2: ( rule__SemanticTagFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }
            // InternalEclParser.g:8837:2: ( rule__SemanticTagFilter__Group_0__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Description||LA67_0==Concept) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEclParser.g:8837:3: rule__SemanticTagFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SemanticTagFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__1"
    // InternalEclParser.g:8845:1: rule__SemanticTagFilter__Group__1 : rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 ;
    public final void rule__SemanticTagFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8849:1: ( rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 )
            // InternalEclParser.g:8850:2: rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__SemanticTagFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1"


    // $ANTLR start "rule__SemanticTagFilter__Group__1__Impl"
    // InternalEclParser.g:8857:1: rule__SemanticTagFilter__Group__1__Impl : ( ruleSEMANTIC_TAG_KEYWORD ) ;
    public final void rule__SemanticTagFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8861:1: ( ( ruleSEMANTIC_TAG_KEYWORD ) )
            // InternalEclParser.g:8862:1: ( ruleSEMANTIC_TAG_KEYWORD )
            {
            // InternalEclParser.g:8862:1: ( ruleSEMANTIC_TAG_KEYWORD )
            // InternalEclParser.g:8863:2: ruleSEMANTIC_TAG_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSEMANTIC_TAG_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__2"
    // InternalEclParser.g:8872:1: rule__SemanticTagFilter__Group__2 : rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 ;
    public final void rule__SemanticTagFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8876:1: ( rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 )
            // InternalEclParser.g:8877:2: rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__SemanticTagFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2"


    // $ANTLR start "rule__SemanticTagFilter__Group__2__Impl"
    // InternalEclParser.g:8884:1: rule__SemanticTagFilter__Group__2__Impl : ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) ;
    public final void rule__SemanticTagFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8888:1: ( ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) )
            // InternalEclParser.g:8889:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            {
            // InternalEclParser.g:8889:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            // InternalEclParser.g:8890:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }
            // InternalEclParser.g:8891:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            // InternalEclParser.g:8891:3: rule__SemanticTagFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__3"
    // InternalEclParser.g:8899:1: rule__SemanticTagFilter__Group__3 : rule__SemanticTagFilter__Group__3__Impl ;
    public final void rule__SemanticTagFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8903:1: ( rule__SemanticTagFilter__Group__3__Impl )
            // InternalEclParser.g:8904:2: rule__SemanticTagFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3"


    // $ANTLR start "rule__SemanticTagFilter__Group__3__Impl"
    // InternalEclParser.g:8910:1: rule__SemanticTagFilter__Group__3__Impl : ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) ;
    public final void rule__SemanticTagFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8914:1: ( ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) )
            // InternalEclParser.g:8915:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            {
            // InternalEclParser.g:8915:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            // InternalEclParser.g:8916:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }
            // InternalEclParser.g:8917:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            // InternalEclParser.g:8917:3: rule__SemanticTagFilter__SemanticTagAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__SemanticTagAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0"
    // InternalEclParser.g:8926:1: rule__SemanticTagFilter__Group_0__0 : rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 ;
    public final void rule__SemanticTagFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8930:1: ( rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 )
            // InternalEclParser.g:8931:2: rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__SemanticTagFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0__Impl"
    // InternalEclParser.g:8938:1: rule__SemanticTagFilter__Group_0__0__Impl : ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__SemanticTagFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8942:1: ( ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) )
            // InternalEclParser.g:8943:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            {
            // InternalEclParser.g:8943:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            // InternalEclParser.g:8944:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEclParser.g:8945:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            // InternalEclParser.g:8945:3: rule__SemanticTagFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1"
    // InternalEclParser.g:8953:1: rule__SemanticTagFilter__Group_0__1 : rule__SemanticTagFilter__Group_0__1__Impl ;
    public final void rule__SemanticTagFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8957:1: ( rule__SemanticTagFilter__Group_0__1__Impl )
            // InternalEclParser.g:8958:2: rule__SemanticTagFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1__Impl"
    // InternalEclParser.g:8964:1: rule__SemanticTagFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__SemanticTagFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8968:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:8969:1: ( RULE_DOT )
            {
            // InternalEclParser.g:8969:1: ( RULE_DOT )
            // InternalEclParser.g:8970:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0"
    // InternalEclParser.g:8980:1: rule__EffectiveTimeFilter__Group__0 : rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 ;
    public final void rule__EffectiveTimeFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8984:1: ( rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 )
            // InternalEclParser.g:8985:2: rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__EffectiveTimeFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0__Impl"
    // InternalEclParser.g:8992:1: rule__EffectiveTimeFilter__Group__0__Impl : ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) ;
    public final void rule__EffectiveTimeFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8996:1: ( ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) )
            // InternalEclParser.g:8997:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            {
            // InternalEclParser.g:8997:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            // InternalEclParser.g:8998:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }
            // InternalEclParser.g:8999:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==Description||LA68_0==Concept) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalEclParser.g:8999:3: rule__EffectiveTimeFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EffectiveTimeFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1"
    // InternalEclParser.g:9007:1: rule__EffectiveTimeFilter__Group__1 : rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 ;
    public final void rule__EffectiveTimeFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9011:1: ( rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 )
            // InternalEclParser.g:9012:2: rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__EffectiveTimeFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1__Impl"
    // InternalEclParser.g:9019:1: rule__EffectiveTimeFilter__Group__1__Impl : ( ruleEFFECTIVE_TIME_KEYWORD ) ;
    public final void rule__EffectiveTimeFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9023:1: ( ( ruleEFFECTIVE_TIME_KEYWORD ) )
            // InternalEclParser.g:9024:1: ( ruleEFFECTIVE_TIME_KEYWORD )
            {
            // InternalEclParser.g:9024:1: ( ruleEFFECTIVE_TIME_KEYWORD )
            // InternalEclParser.g:9025:2: ruleEFFECTIVE_TIME_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEFFECTIVE_TIME_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2"
    // InternalEclParser.g:9034:1: rule__EffectiveTimeFilter__Group__2 : rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 ;
    public final void rule__EffectiveTimeFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9038:1: ( rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 )
            // InternalEclParser.g:9039:2: rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__EffectiveTimeFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2__Impl"
    // InternalEclParser.g:9046:1: rule__EffectiveTimeFilter__Group__2__Impl : ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9050:1: ( ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) )
            // InternalEclParser.g:9051:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            {
            // InternalEclParser.g:9051:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            // InternalEclParser.g:9052:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }
            // InternalEclParser.g:9053:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            // InternalEclParser.g:9053:3: rule__EffectiveTimeFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3"
    // InternalEclParser.g:9061:1: rule__EffectiveTimeFilter__Group__3 : rule__EffectiveTimeFilter__Group__3__Impl ;
    public final void rule__EffectiveTimeFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9065:1: ( rule__EffectiveTimeFilter__Group__3__Impl )
            // InternalEclParser.g:9066:2: rule__EffectiveTimeFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3__Impl"
    // InternalEclParser.g:9072:1: rule__EffectiveTimeFilter__Group__3__Impl : ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9076:1: ( ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) )
            // InternalEclParser.g:9077:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            {
            // InternalEclParser.g:9077:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            // InternalEclParser.g:9078:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }
            // InternalEclParser.g:9079:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            // InternalEclParser.g:9079:3: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__EffectiveTimeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0"
    // InternalEclParser.g:9088:1: rule__EffectiveTimeFilter__Group_0__0 : rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 ;
    public final void rule__EffectiveTimeFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9092:1: ( rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 )
            // InternalEclParser.g:9093:2: rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__EffectiveTimeFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0__Impl"
    // InternalEclParser.g:9100:1: rule__EffectiveTimeFilter__Group_0__0__Impl : ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__EffectiveTimeFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9104:1: ( ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) )
            // InternalEclParser.g:9105:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            {
            // InternalEclParser.g:9105:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            // InternalEclParser.g:9106:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEclParser.g:9107:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            // InternalEclParser.g:9107:3: rule__EffectiveTimeFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1"
    // InternalEclParser.g:9115:1: rule__EffectiveTimeFilter__Group_0__1 : rule__EffectiveTimeFilter__Group_0__1__Impl ;
    public final void rule__EffectiveTimeFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9119:1: ( rule__EffectiveTimeFilter__Group_0__1__Impl )
            // InternalEclParser.g:9120:2: rule__EffectiveTimeFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1__Impl"
    // InternalEclParser.g:9126:1: rule__EffectiveTimeFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__EffectiveTimeFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9130:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:9131:1: ( RULE_DOT )
            {
            // InternalEclParser.g:9131:1: ( RULE_DOT )
            // InternalEclParser.g:9132:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__0"
    // InternalEclParser.g:9142:1: rule__PreferredInFilter__Group__0 : rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 ;
    public final void rule__PreferredInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9146:1: ( rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 )
            // InternalEclParser.g:9147:2: rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__PreferredInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0"


    // $ANTLR start "rule__PreferredInFilter__Group__0__Impl"
    // InternalEclParser.g:9154:1: rule__PreferredInFilter__Group__0__Impl : ( rulePREFERRED_IN_KEYWORD ) ;
    public final void rule__PreferredInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9158:1: ( ( rulePREFERRED_IN_KEYWORD ) )
            // InternalEclParser.g:9159:1: ( rulePREFERRED_IN_KEYWORD )
            {
            // InternalEclParser.g:9159:1: ( rulePREFERRED_IN_KEYWORD )
            // InternalEclParser.g:9160:2: rulePREFERRED_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePREFERRED_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__1"
    // InternalEclParser.g:9169:1: rule__PreferredInFilter__Group__1 : rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 ;
    public final void rule__PreferredInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9173:1: ( rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 )
            // InternalEclParser.g:9174:2: rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__PreferredInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1"


    // $ANTLR start "rule__PreferredInFilter__Group__1__Impl"
    // InternalEclParser.g:9181:1: rule__PreferredInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__PreferredInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9185:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:9186:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:9186:1: ( RULE_EQUAL )
            // InternalEclParser.g:9187:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__2"
    // InternalEclParser.g:9196:1: rule__PreferredInFilter__Group__2 : rule__PreferredInFilter__Group__2__Impl ;
    public final void rule__PreferredInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9200:1: ( rule__PreferredInFilter__Group__2__Impl )
            // InternalEclParser.g:9201:2: rule__PreferredInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2"


    // $ANTLR start "rule__PreferredInFilter__Group__2__Impl"
    // InternalEclParser.g:9207:1: rule__PreferredInFilter__Group__2__Impl : ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__PreferredInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9211:1: ( ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEclParser.g:9212:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEclParser.g:9212:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEclParser.g:9213:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEclParser.g:9214:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEclParser.g:9214:3: rule__PreferredInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__0"
    // InternalEclParser.g:9223:1: rule__AcceptableInFilter__Group__0 : rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 ;
    public final void rule__AcceptableInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9227:1: ( rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 )
            // InternalEclParser.g:9228:2: rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__AcceptableInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0"


    // $ANTLR start "rule__AcceptableInFilter__Group__0__Impl"
    // InternalEclParser.g:9235:1: rule__AcceptableInFilter__Group__0__Impl : ( ruleACCEPTABLE_IN_KEYWORD ) ;
    public final void rule__AcceptableInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9239:1: ( ( ruleACCEPTABLE_IN_KEYWORD ) )
            // InternalEclParser.g:9240:1: ( ruleACCEPTABLE_IN_KEYWORD )
            {
            // InternalEclParser.g:9240:1: ( ruleACCEPTABLE_IN_KEYWORD )
            // InternalEclParser.g:9241:2: ruleACCEPTABLE_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleACCEPTABLE_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__1"
    // InternalEclParser.g:9250:1: rule__AcceptableInFilter__Group__1 : rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 ;
    public final void rule__AcceptableInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9254:1: ( rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 )
            // InternalEclParser.g:9255:2: rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AcceptableInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1"


    // $ANTLR start "rule__AcceptableInFilter__Group__1__Impl"
    // InternalEclParser.g:9262:1: rule__AcceptableInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__AcceptableInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9266:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:9267:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:9267:1: ( RULE_EQUAL )
            // InternalEclParser.g:9268:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__2"
    // InternalEclParser.g:9277:1: rule__AcceptableInFilter__Group__2 : rule__AcceptableInFilter__Group__2__Impl ;
    public final void rule__AcceptableInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9281:1: ( rule__AcceptableInFilter__Group__2__Impl )
            // InternalEclParser.g:9282:2: rule__AcceptableInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2"


    // $ANTLR start "rule__AcceptableInFilter__Group__2__Impl"
    // InternalEclParser.g:9288:1: rule__AcceptableInFilter__Group__2__Impl : ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__AcceptableInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9292:1: ( ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEclParser.g:9293:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEclParser.g:9293:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEclParser.g:9294:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEclParser.g:9295:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEclParser.g:9295:3: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0"
    // InternalEclParser.g:9304:1: rule__LanguageRefSetFilter__Group__0 : rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 ;
    public final void rule__LanguageRefSetFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9308:1: ( rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 )
            // InternalEclParser.g:9309:2: rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__LanguageRefSetFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0__Impl"
    // InternalEclParser.g:9316:1: rule__LanguageRefSetFilter__Group__0__Impl : ( ruleLANGUAGE_REFSET_ID_KEYWORD ) ;
    public final void rule__LanguageRefSetFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9320:1: ( ( ruleLANGUAGE_REFSET_ID_KEYWORD ) )
            // InternalEclParser.g:9321:1: ( ruleLANGUAGE_REFSET_ID_KEYWORD )
            {
            // InternalEclParser.g:9321:1: ( ruleLANGUAGE_REFSET_ID_KEYWORD )
            // InternalEclParser.g:9322:2: ruleLANGUAGE_REFSET_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLANGUAGE_REFSET_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1"
    // InternalEclParser.g:9331:1: rule__LanguageRefSetFilter__Group__1 : rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 ;
    public final void rule__LanguageRefSetFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9335:1: ( rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 )
            // InternalEclParser.g:9336:2: rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LanguageRefSetFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1__Impl"
    // InternalEclParser.g:9343:1: rule__LanguageRefSetFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__LanguageRefSetFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9347:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:9348:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:9348:1: ( RULE_EQUAL )
            // InternalEclParser.g:9349:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2"
    // InternalEclParser.g:9358:1: rule__LanguageRefSetFilter__Group__2 : rule__LanguageRefSetFilter__Group__2__Impl ;
    public final void rule__LanguageRefSetFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9362:1: ( rule__LanguageRefSetFilter__Group__2__Impl )
            // InternalEclParser.g:9363:2: rule__LanguageRefSetFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2__Impl"
    // InternalEclParser.g:9369:1: rule__LanguageRefSetFilter__Group__2__Impl : ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__LanguageRefSetFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9373:1: ( ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEclParser.g:9374:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEclParser.g:9374:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEclParser.g:9375:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEclParser.g:9376:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            // InternalEclParser.g:9376:3: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0"
    // InternalEclParser.g:9385:1: rule__CaseSignificanceFilter__Group__0 : rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 ;
    public final void rule__CaseSignificanceFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9389:1: ( rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 )
            // InternalEclParser.g:9390:2: rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__CaseSignificanceFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0__Impl"
    // InternalEclParser.g:9397:1: rule__CaseSignificanceFilter__Group__0__Impl : ( ruleCASE_SIGNIFICANCE_ID_KEYWORD ) ;
    public final void rule__CaseSignificanceFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9401:1: ( ( ruleCASE_SIGNIFICANCE_ID_KEYWORD ) )
            // InternalEclParser.g:9402:1: ( ruleCASE_SIGNIFICANCE_ID_KEYWORD )
            {
            // InternalEclParser.g:9402:1: ( ruleCASE_SIGNIFICANCE_ID_KEYWORD )
            // InternalEclParser.g:9403:2: ruleCASE_SIGNIFICANCE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCASE_SIGNIFICANCE_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1"
    // InternalEclParser.g:9412:1: rule__CaseSignificanceFilter__Group__1 : rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 ;
    public final void rule__CaseSignificanceFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9416:1: ( rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 )
            // InternalEclParser.g:9417:2: rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CaseSignificanceFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1__Impl"
    // InternalEclParser.g:9424:1: rule__CaseSignificanceFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__CaseSignificanceFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9428:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:9429:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:9429:1: ( RULE_EQUAL )
            // InternalEclParser.g:9430:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2"
    // InternalEclParser.g:9439:1: rule__CaseSignificanceFilter__Group__2 : rule__CaseSignificanceFilter__Group__2__Impl ;
    public final void rule__CaseSignificanceFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9443:1: ( rule__CaseSignificanceFilter__Group__2__Impl )
            // InternalEclParser.g:9444:2: rule__CaseSignificanceFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2__Impl"
    // InternalEclParser.g:9450:1: rule__CaseSignificanceFilter__Group__2__Impl : ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) ;
    public final void rule__CaseSignificanceFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9454:1: ( ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) )
            // InternalEclParser.g:9455:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            {
            // InternalEclParser.g:9455:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            // InternalEclParser.g:9456:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }
            // InternalEclParser.g:9457:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            // InternalEclParser.g:9457:3: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0"
    // InternalEclParser.g:9466:1: rule__NonNegativeInteger__Group_1__0 : rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 ;
    public final void rule__NonNegativeInteger__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9470:1: ( rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 )
            // InternalEclParser.g:9471:2: rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__NonNegativeInteger__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0__Impl"
    // InternalEclParser.g:9478:1: rule__NonNegativeInteger__Group_1__0__Impl : ( RULE_DIGIT_NONZERO ) ;
    public final void rule__NonNegativeInteger__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9482:1: ( ( RULE_DIGIT_NONZERO ) )
            // InternalEclParser.g:9483:1: ( RULE_DIGIT_NONZERO )
            {
            // InternalEclParser.g:9483:1: ( RULE_DIGIT_NONZERO )
            // InternalEclParser.g:9484:2: RULE_DIGIT_NONZERO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1"
    // InternalEclParser.g:9493:1: rule__NonNegativeInteger__Group_1__1 : rule__NonNegativeInteger__Group_1__1__Impl ;
    public final void rule__NonNegativeInteger__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9497:1: ( rule__NonNegativeInteger__Group_1__1__Impl )
            // InternalEclParser.g:9498:2: rule__NonNegativeInteger__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1__Impl"
    // InternalEclParser.g:9504:1: rule__NonNegativeInteger__Group_1__1__Impl : ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) ;
    public final void rule__NonNegativeInteger__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9508:1: ( ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) )
            // InternalEclParser.g:9509:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            {
            // InternalEclParser.g:9509:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            // InternalEclParser.g:9510:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:9511:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( ((LA69_0>=RULE_ZERO && LA69_0<=RULE_DIGIT_NONZERO)) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalEclParser.g:9511:3: rule__NonNegativeInteger__Alternatives_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeInteger__Alternatives_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEclParser.g:9520:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9524:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEclParser.g:9525:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEclParser.g:9532:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9536:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEclParser.g:9537:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEclParser.g:9537:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEclParser.g:9538:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEclParser.g:9539:2: ( rule__Integer__Alternatives_0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( ((LA70_0>=RULE_PLUS && LA70_0<=RULE_DASH)) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalEclParser.g:9539:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEclParser.g:9547:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9551:1: ( rule__Integer__Group__1__Impl )
            // InternalEclParser.g:9552:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEclParser.g:9558:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9562:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:9563:1: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:9563:1: ( ruleNonNegativeInteger )
            // InternalEclParser.g:9564:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEclParser.g:9574:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9578:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEclParser.g:9579:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEclParser.g:9586:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9590:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEclParser.g:9591:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEclParser.g:9591:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEclParser.g:9592:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEclParser.g:9593:2: ( rule__Decimal__Alternatives_0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=RULE_PLUS && LA71_0<=RULE_DASH)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalEclParser.g:9593:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEclParser.g:9601:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9605:1: ( rule__Decimal__Group__1__Impl )
            // InternalEclParser.g:9606:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEclParser.g:9612:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9616:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEclParser.g:9617:1: ( ruleNonNegativeDecimal )
            {
            // InternalEclParser.g:9617:1: ( ruleNonNegativeDecimal )
            // InternalEclParser.g:9618:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEclParser.g:9628:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9632:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEclParser.g:9633:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEclParser.g:9640:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9644:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:9645:1: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:9645:1: ( ruleNonNegativeInteger )
            // InternalEclParser.g:9646:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEclParser.g:9655:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9659:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEclParser.g:9660:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEclParser.g:9667:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9671:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:9672:1: ( RULE_DOT )
            {
            // InternalEclParser.g:9672:1: ( RULE_DOT )
            // InternalEclParser.g:9673:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEclParser.g:9682:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9686:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEclParser.g:9687:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEclParser.g:9693:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9697:1: ( ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) )
            // InternalEclParser.g:9698:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            {
            // InternalEclParser.g:9698:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            // InternalEclParser.g:9699:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:9700:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=RULE_ZERO && LA72_0<=RULE_DIGIT_NONZERO)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalEclParser.g:9700:3: rule__NonNegativeDecimal__Alternatives_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeDecimal__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasValue__Group__0"
    // InternalEclParser.g:9709:1: rule__DialectAliasValue__Group__0 : rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1 ;
    public final void rule__DialectAliasValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9713:1: ( rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1 )
            // InternalEclParser.g:9714:2: rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__DialectAliasValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__0"


    // $ANTLR start "rule__DialectAliasValue__Group__0__Impl"
    // InternalEclParser.g:9721:1: rule__DialectAliasValue__Group__0__Impl : ( RULE_ALPHA ) ;
    public final void rule__DialectAliasValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9725:1: ( ( RULE_ALPHA ) )
            // InternalEclParser.g:9726:1: ( RULE_ALPHA )
            {
            // InternalEclParser.g:9726:1: ( RULE_ALPHA )
            // InternalEclParser.g:9727:2: RULE_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_0()); 
            }
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasValue__Group__1"
    // InternalEclParser.g:9736:1: rule__DialectAliasValue__Group__1 : rule__DialectAliasValue__Group__1__Impl ;
    public final void rule__DialectAliasValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9740:1: ( rule__DialectAliasValue__Group__1__Impl )
            // InternalEclParser.g:9741:2: rule__DialectAliasValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__1"


    // $ANTLR start "rule__DialectAliasValue__Group__1__Impl"
    // InternalEclParser.g:9747:1: rule__DialectAliasValue__Group__1__Impl : ( ( rule__DialectAliasValue__Alternatives_1 )* ) ;
    public final void rule__DialectAliasValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9751:1: ( ( ( rule__DialectAliasValue__Alternatives_1 )* ) )
            // InternalEclParser.g:9752:1: ( ( rule__DialectAliasValue__Alternatives_1 )* )
            {
            // InternalEclParser.g:9752:1: ( ( rule__DialectAliasValue__Alternatives_1 )* )
            // InternalEclParser.g:9753:2: ( rule__DialectAliasValue__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:9754:2: ( rule__DialectAliasValue__Alternatives_1 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==RULE_ALPHA) ) {
                    int LA73_2 = input.LA(2);

                    if ( (synpred105_InternalEclParser()) ) {
                        alt73=1;
                    }


                }
                else if ( ((LA73_0>=RULE_ZERO && LA73_0<=RULE_DIGIT_NONZERO)||LA73_0==RULE_DASH) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalEclParser.g:9754:3: rule__DialectAliasValue__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    rule__DialectAliasValue__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__1__Impl"


    // $ANTLR start "rule__Script__ConstraintAssignment_1"
    // InternalEclParser.g:9763:1: rule__Script__ConstraintAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__Script__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9767:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:9768:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:9768:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:9769:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__ConstraintAssignment_1"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:9778:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9782:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEclParser.g:9783:2: ( ruleAndExpressionConstraint )
            {
            // InternalEclParser.g:9783:2: ( ruleAndExpressionConstraint )
            // InternalEclParser.g:9784:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:9793:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9797:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEclParser.g:9798:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEclParser.g:9798:2: ( ruleExclusionExpressionConstraint )
            // InternalEclParser.g:9799:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:9808:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9812:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEclParser.g:9813:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEclParser.g:9813:2: ( ruleRefinedExpressionConstraint )
            // InternalEclParser.g:9814:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEclParser.g:9823:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9827:1: ( ( ruleEclRefinement ) )
            // InternalEclParser.g:9828:2: ( ruleEclRefinement )
            {
            // InternalEclParser.g:9828:2: ( ruleEclRefinement )
            // InternalEclParser.g:9829:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEclParser.g:9838:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9842:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:9843:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:9843:2: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:9844:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__FilteredExpressionConstraint__FilterAssignment_1_1"
    // InternalEclParser.g:9853:1: rule__FilteredExpressionConstraint__FilterAssignment_1_1 : ( ruleFilterConstraint ) ;
    public final void rule__FilteredExpressionConstraint__FilterAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9857:1: ( ( ruleFilterConstraint ) )
            // InternalEclParser.g:9858:2: ( ruleFilterConstraint )
            {
            // InternalEclParser.g:9858:2: ( ruleFilterConstraint )
            // InternalEclParser.g:9859:3: ruleFilterConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__FilterAssignment_1_1"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEclParser.g:9868:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9872:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9873:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9873:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9874:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9883:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9887:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9888:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9888:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9889:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEclParser.g:9898:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9902:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9903:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9903:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9904:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9913:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9917:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9918:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9918:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9919:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEclParser.g:9928:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9932:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9933:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9933:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9934:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9943:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9947:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9948:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9948:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9949:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEclParser.g:9958:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9962:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9963:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9963:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9964:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9973:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9977:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9978:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9978:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9979:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_1"
    // InternalEclParser.g:9988:1: rule__MemberOf__ConstraintAssignment_1 : ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9992:1: ( ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) )
            // InternalEclParser.g:9993:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            {
            // InternalEclParser.g:9993:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            // InternalEclParser.g:9994:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }
            // InternalEclParser.g:9995:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            // InternalEclParser.g:9995:4: rule__MemberOf__ConstraintAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_1"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEclParser.g:10003:1: rule__EclConceptReference__IdAssignment_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10007:1: ( ( ruleSnomedIdentifier ) )
            // InternalEclParser.g:10008:2: ( ruleSnomedIdentifier )
            {
            // InternalEclParser.g:10008:2: ( ruleSnomedIdentifier )
            // InternalEclParser.g:10009:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEclParser.g:10018:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_TERM_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10022:1: ( ( RULE_TERM_STRING ) )
            // InternalEclParser.g:10023:2: ( RULE_TERM_STRING )
            {
            // InternalEclParser.g:10023:2: ( RULE_TERM_STRING )
            // InternalEclParser.g:10024:3: RULE_TERM_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TERM_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEclParser.g:10033:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10037:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:10038:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:10038:2: ( ruleEclConceptReference )
            // InternalEclParser.g:10039:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_2"
    // InternalEclParser.g:10048:1: rule__EclConceptReferenceSet__ConceptsAssignment_2 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10052:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:10053:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:10053:2: ( ruleEclConceptReference )
            // InternalEclParser.g:10054:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_2"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEclParser.g:10063:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10067:1: ( ( ruleAndRefinement ) )
            // InternalEclParser.g:10068:2: ( ruleAndRefinement )
            {
            // InternalEclParser.g:10068:2: ( ruleAndRefinement )
            // InternalEclParser.g:10069:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEclParser.g:10078:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10082:1: ( ( ruleSubRefinement ) )
            // InternalEclParser.g:10083:2: ( ruleSubRefinement )
            {
            // InternalEclParser.g:10083:2: ( ruleSubRefinement )
            // InternalEclParser.g:10084:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEclParser.g:10093:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10097:1: ( ( ruleEclRefinement ) )
            // InternalEclParser.g:10098:2: ( ruleEclRefinement )
            {
            // InternalEclParser.g:10098:2: ( ruleEclRefinement )
            // InternalEclParser.g:10099:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEclParser.g:10108:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10112:1: ( ( ruleCardinality ) )
            // InternalEclParser.g:10113:2: ( ruleCardinality )
            {
            // InternalEclParser.g:10113:2: ( ruleCardinality )
            // InternalEclParser.g:10114:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEclParser.g:10123:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10127:1: ( ( ruleEclAttributeSet ) )
            // InternalEclParser.g:10128:2: ( ruleEclAttributeSet )
            {
            // InternalEclParser.g:10128:2: ( ruleEclAttributeSet )
            // InternalEclParser.g:10129:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEclParser.g:10138:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10142:1: ( ( ruleAndAttributeSet ) )
            // InternalEclParser.g:10143:2: ( ruleAndAttributeSet )
            {
            // InternalEclParser.g:10143:2: ( ruleAndAttributeSet )
            // InternalEclParser.g:10144:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEclParser.g:10153:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10157:1: ( ( ruleSubAttributeSet ) )
            // InternalEclParser.g:10158:2: ( ruleSubAttributeSet )
            {
            // InternalEclParser.g:10158:2: ( ruleSubAttributeSet )
            // InternalEclParser.g:10159:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEclParser.g:10168:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10172:1: ( ( ruleEclAttributeSet ) )
            // InternalEclParser.g:10173:2: ( ruleEclAttributeSet )
            {
            // InternalEclParser.g:10173:2: ( ruleEclAttributeSet )
            // InternalEclParser.g:10174:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEclParser.g:10183:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10187:1: ( ( ruleCardinality ) )
            // InternalEclParser.g:10188:2: ( ruleCardinality )
            {
            // InternalEclParser.g:10188:2: ( ruleCardinality )
            // InternalEclParser.g:10189:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEclParser.g:10198:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10202:1: ( ( RULE_REVERSED ) )
            // InternalEclParser.g:10203:2: ( RULE_REVERSED )
            {
            // InternalEclParser.g:10203:2: ( RULE_REVERSED )
            // InternalEclParser.g:10204:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEclParser.g:10213:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10217:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:10218:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:10218:2: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:10219:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEclParser.g:10228:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10232:1: ( ( ruleComparison ) )
            // InternalEclParser.g:10233:2: ( ruleComparison )
            {
            // InternalEclParser.g:10233:2: ( ruleComparison )
            // InternalEclParser.g:10234:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEclParser.g:10243:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10247:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:10248:2: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:10248:2: ( ruleNonNegativeInteger )
            // InternalEclParser.g:10249:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEclParser.g:10258:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10262:1: ( ( ruleMaxValue ) )
            // InternalEclParser.g:10263:2: ( ruleMaxValue )
            {
            // InternalEclParser.g:10263:2: ( ruleMaxValue )
            // InternalEclParser.g:10264:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEclParser.g:10273:1: rule__AttributeComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10277:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10278:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10278:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10279:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEclParser.g:10288:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10292:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:10293:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:10293:2: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:10294:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEclParser.g:10303:1: rule__BooleanValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10307:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10308:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10308:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10309:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEclParser.g:10318:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10322:1: ( ( ruleBoolean ) )
            // InternalEclParser.g:10323:2: ( ruleBoolean )
            {
            // InternalEclParser.g:10323:2: ( ruleBoolean )
            // InternalEclParser.g:10324:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEclParser.g:10333:1: rule__StringValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10337:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10338:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10338:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10339:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEclParser.g:10348:1: rule__StringValueComparison__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10352:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:10353:2: ( RULE_STRING )
            {
            // InternalEclParser.g:10353:2: ( RULE_STRING )
            // InternalEclParser.g:10354:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEclParser.g:10363:1: rule__IntegerValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10367:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEclParser.g:10368:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10368:2: ( ruleNUMERIC_OPERATOR )
            // InternalEclParser.g:10369:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEclParser.g:10378:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10382:1: ( ( ruleInteger ) )
            // InternalEclParser.g:10383:2: ( ruleInteger )
            {
            // InternalEclParser.g:10383:2: ( ruleInteger )
            // InternalEclParser.g:10384:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEclParser.g:10393:1: rule__DecimalValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10397:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEclParser.g:10398:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10398:2: ( ruleNUMERIC_OPERATOR )
            // InternalEclParser.g:10399:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEclParser.g:10408:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10412:1: ( ( ruleDecimal ) )
            // InternalEclParser.g:10413:2: ( ruleDecimal )
            {
            // InternalEclParser.g:10413:2: ( ruleDecimal )
            // InternalEclParser.g:10414:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEclParser.g:10423:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10427:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10428:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10428:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10429:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEclParser.g:10438:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10442:1: ( ( ruleConjunctionFilter ) )
            // InternalEclParser.g:10443:2: ( ruleConjunctionFilter )
            {
            // InternalEclParser.g:10443:2: ( ruleConjunctionFilter )
            // InternalEclParser.g:10444:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEclParser.g:10453:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10457:1: ( ( rulePropertyFilter ) )
            // InternalEclParser.g:10458:2: ( rulePropertyFilter )
            {
            // InternalEclParser.g:10458:2: ( rulePropertyFilter )
            // InternalEclParser.g:10459:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEclParser.g:10468:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10472:1: ( ( ruleFilter ) )
            // InternalEclParser.g:10473:2: ( ruleFilter )
            {
            // InternalEclParser.g:10473:2: ( ruleFilter )
            // InternalEclParser.g:10474:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__TypedTermFilter__OpAssignment_0"
    // InternalEclParser.g:10483:1: rule__TypedTermFilter__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilter__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10487:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10488:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10488:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10489:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"
    // InternalEclParser.g:10498:1: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 : ( ruleLEXICAL_SEARCH_TYPE ) ;
    public final void rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10502:1: ( ( ruleLEXICAL_SEARCH_TYPE ) )
            // InternalEclParser.g:10503:2: ( ruleLEXICAL_SEARCH_TYPE )
            {
            // InternalEclParser.g:10503:2: ( ruleLEXICAL_SEARCH_TYPE )
            // InternalEclParser.g:10504:3: ruleLEXICAL_SEARCH_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"


    // $ANTLR start "rule__TypedTermFilter__TermAssignment_2"
    // InternalEclParser.g:10513:1: rule__TypedTermFilter__TermAssignment_2 : ( RULE_STRING ) ;
    public final void rule__TypedTermFilter__TermAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10517:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:10518:2: ( RULE_STRING )
            {
            // InternalEclParser.g:10518:2: ( RULE_STRING )
            // InternalEclParser.g:10519:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__TermAssignment_2"


    // $ANTLR start "rule__TypedTermFilterSet__OpAssignment_0"
    // InternalEclParser.g:10528:1: rule__TypedTermFilterSet__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilterSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10532:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10533:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10533:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10534:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilterSet__TermsAssignment_2"
    // InternalEclParser.g:10543:1: rule__TypedTermFilterSet__TermsAssignment_2 : ( ruleTypedTermFilter ) ;
    public final void rule__TypedTermFilterSet__TermsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10547:1: ( ( ruleTypedTermFilter ) )
            // InternalEclParser.g:10548:2: ( ruleTypedTermFilter )
            {
            // InternalEclParser.g:10548:2: ( ruleTypedTermFilter )
            // InternalEclParser.g:10549:3: ruleTypedTermFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__TermsAssignment_2"


    // $ANTLR start "rule__TypedTermFilterSet__TermsAssignment_3"
    // InternalEclParser.g:10558:1: rule__TypedTermFilterSet__TermsAssignment_3 : ( ruleTypedTermFilter ) ;
    public final void rule__TypedTermFilterSet__TermsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10562:1: ( ( ruleTypedTermFilter ) )
            // InternalEclParser.g:10563:2: ( ruleTypedTermFilter )
            {
            // InternalEclParser.g:10563:2: ( ruleTypedTermFilter )
            // InternalEclParser.g:10564:3: ruleTypedTermFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__TermsAssignment_3"


    // $ANTLR start "rule__LanguageFilter__OpAssignment_1"
    // InternalEclParser.g:10573:1: rule__LanguageFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__LanguageFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10577:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10578:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10578:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10579:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_0"
    // InternalEclParser.g:10588:1: rule__LanguageFilter__LanguageCodesAssignment_2_0 : ( ruleAlphabetical ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10592:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10593:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10593:2: ( ruleAlphabetical )
            // InternalEclParser.g:10594:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"
    // InternalEclParser.g:10603:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_1 : ( ruleAlphabetical ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10607:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10608:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10608:2: ( ruleAlphabetical )
            // InternalEclParser.g:10609:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_2"
    // InternalEclParser.g:10618:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_2 : ( ruleAlphabetical ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10622:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10623:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10623:2: ( ruleAlphabetical )
            // InternalEclParser.g:10624:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_2"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEclParser.g:10633:1: rule__TypeIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10637:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10638:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10638:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10639:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEclParser.g:10648:1: rule__TypeIdFilter__TypeAssignment_2 : ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10652:1: ( ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) )
            // InternalEclParser.g:10653:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            {
            // InternalEclParser.g:10653:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            // InternalEclParser.g:10654:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }
            // InternalEclParser.g:10655:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            // InternalEclParser.g:10655:4: rule__TypeIdFilter__TypeAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEclParser.g:10663:1: rule__TypeTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10667:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10668:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10668:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10669:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEclParser.g:10678:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10682:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10683:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10683:2: ( ruleAlphabetical )
            // InternalEclParser.g:10684:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEclParser.g:10693:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10697:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10698:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10698:2: ( ruleAlphabetical )
            // InternalEclParser.g:10699:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_2"
    // InternalEclParser.g:10708:1: rule__TypeTokenFilter__TokensAssignment_2_1_2 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10712:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10713:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10713:2: ( ruleAlphabetical )
            // InternalEclParser.g:10714:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_2"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEclParser.g:10723:1: rule__DialectIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10727:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10728:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10728:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10729:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEclParser.g:10738:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10742:1: ( ( ruleDialect ) )
            // InternalEclParser.g:10743:2: ( ruleDialect )
            {
            // InternalEclParser.g:10743:2: ( ruleDialect )
            // InternalEclParser.g:10744:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEclParser.g:10753:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10757:1: ( ( ruleDialect ) )
            // InternalEclParser.g:10758:2: ( ruleDialect )
            {
            // InternalEclParser.g:10758:2: ( ruleDialect )
            // InternalEclParser.g:10759:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_2"
    // InternalEclParser.g:10768:1: rule__DialectIdFilter__DialectsAssignment_2_1_2 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10772:1: ( ( ruleDialect ) )
            // InternalEclParser.g:10773:2: ( ruleDialect )
            {
            // InternalEclParser.g:10773:2: ( ruleDialect )
            // InternalEclParser.g:10774:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_2"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEclParser.g:10783:1: rule__DialectAliasFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10787:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10788:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10788:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10789:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEclParser.g:10798:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10802:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:10803:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:10803:2: ( ruleDialectAlias )
            // InternalEclParser.g:10804:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEclParser.g:10813:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10817:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:10818:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:10818:2: ( ruleDialectAlias )
            // InternalEclParser.g:10819:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_2"
    // InternalEclParser.g:10828:1: rule__DialectAliasFilter__DialectsAssignment_2_1_2 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10832:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:10833:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:10833:2: ( ruleDialectAlias )
            // InternalEclParser.g:10834:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_2"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEclParser.g:10843:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleEclConceptReference ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10847:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:10848:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:10848:2: ( ruleEclConceptReference )
            // InternalEclParser.g:10849:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEclParser.g:10858:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10862:1: ( ( ruleAcceptability ) )
            // InternalEclParser.g:10863:2: ( ruleAcceptability )
            {
            // InternalEclParser.g:10863:2: ( ruleAcceptability )
            // InternalEclParser.g:10864:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEclParser.g:10873:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10877:1: ( ( ruleDialectAliasValue ) )
            // InternalEclParser.g:10878:2: ( ruleDialectAliasValue )
            {
            // InternalEclParser.g:10878:2: ( ruleDialectAliasValue )
            // InternalEclParser.g:10879:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_1"
    // InternalEclParser.g:10888:1: rule__DialectAlias__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10892:1: ( ( ruleAcceptability ) )
            // InternalEclParser.g:10893:2: ( ruleAcceptability )
            {
            // InternalEclParser.g:10893:2: ( ruleAcceptability )
            // InternalEclParser.g:10894:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_1"


    // $ANTLR start "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"
    // InternalEclParser.g:10903:1: rule__AcceptabilityIdSet__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__AcceptabilityIdSet__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10907:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEclParser.g:10908:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEclParser.g:10908:2: ( ruleEclConceptReferenceSet )
            // InternalEclParser.g:10909:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"
    // InternalEclParser.g:10918:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 : ( ruleAlphabetical ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10922:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10923:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10923:2: ( ruleAlphabetical )
            // InternalEclParser.g:10924:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2"
    // InternalEclParser.g:10933:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 : ( ruleAlphabetical ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10937:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10938:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10938:2: ( ruleAlphabetical )
            // InternalEclParser.g:10939:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2"


    // $ANTLR start "rule__ActiveFilter__DomainAssignment_0_0"
    // InternalEclParser.g:10948:1: rule__ActiveFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ActiveFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10952:1: ( ( ruleDOMAIN ) )
            // InternalEclParser.g:10953:2: ( ruleDOMAIN )
            {
            // InternalEclParser.g:10953:2: ( ruleDOMAIN )
            // InternalEclParser.g:10954:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ActiveFilter__ActiveAssignment_3"
    // InternalEclParser.g:10963:1: rule__ActiveFilter__ActiveAssignment_3 : ( ruleBoolean ) ;
    public final void rule__ActiveFilter__ActiveAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10967:1: ( ( ruleBoolean ) )
            // InternalEclParser.g:10968:2: ( ruleBoolean )
            {
            // InternalEclParser.g:10968:2: ( ruleBoolean )
            // InternalEclParser.g:10969:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__ActiveAssignment_3"


    // $ANTLR start "rule__ModuleFilter__DomainAssignment_0_0"
    // InternalEclParser.g:10978:1: rule__ModuleFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ModuleFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10982:1: ( ( ruleDOMAIN ) )
            // InternalEclParser.g:10983:2: ( ruleDOMAIN )
            {
            // InternalEclParser.g:10983:2: ( ruleDOMAIN )
            // InternalEclParser.g:10984:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ModuleFilter__ModuleIdAssignment_3"
    // InternalEclParser.g:10993:1: rule__ModuleFilter__ModuleIdAssignment_3 : ( ruleExpressionConstraint ) ;
    public final void rule__ModuleFilter__ModuleIdAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10997:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10998:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10998:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10999:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__ModuleIdAssignment_3"


    // $ANTLR start "rule__SemanticTagFilter__DomainAssignment_0_0"
    // InternalEclParser.g:11008:1: rule__SemanticTagFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__SemanticTagFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11012:1: ( ( ruleDOMAIN ) )
            // InternalEclParser.g:11013:2: ( ruleDOMAIN )
            {
            // InternalEclParser.g:11013:2: ( ruleDOMAIN )
            // InternalEclParser.g:11014:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__SemanticTagFilter__OpAssignment_2"
    // InternalEclParser.g:11023:1: rule__SemanticTagFilter__OpAssignment_2 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__SemanticTagFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11027:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:11028:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:11028:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:11029:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__OpAssignment_2"


    // $ANTLR start "rule__SemanticTagFilter__SemanticTagAssignment_3"
    // InternalEclParser.g:11038:1: rule__SemanticTagFilter__SemanticTagAssignment_3 : ( RULE_STRING ) ;
    public final void rule__SemanticTagFilter__SemanticTagAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11042:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:11043:2: ( RULE_STRING )
            {
            // InternalEclParser.g:11043:2: ( RULE_STRING )
            // InternalEclParser.g:11044:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__SemanticTagAssignment_3"


    // $ANTLR start "rule__EffectiveTimeFilter__DomainAssignment_0_0"
    // InternalEclParser.g:11053:1: rule__EffectiveTimeFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__EffectiveTimeFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11057:1: ( ( ruleDOMAIN ) )
            // InternalEclParser.g:11058:2: ( ruleDOMAIN )
            {
            // InternalEclParser.g:11058:2: ( ruleDOMAIN )
            // InternalEclParser.g:11059:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__EffectiveTimeFilter__OpAssignment_2"
    // InternalEclParser.g:11068:1: rule__EffectiveTimeFilter__OpAssignment_2 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__EffectiveTimeFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11072:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEclParser.g:11073:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEclParser.g:11073:2: ( ruleNUMERIC_OPERATOR )
            // InternalEclParser.g:11074:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__OpAssignment_2"


    // $ANTLR start "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"
    // InternalEclParser.g:11083:1: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 : ( RULE_STRING ) ;
    public final void rule__EffectiveTimeFilter__EffectiveTimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11087:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:11088:2: ( RULE_STRING )
            {
            // InternalEclParser.g:11088:2: ( RULE_STRING )
            // InternalEclParser.g:11089:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"


    // $ANTLR start "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"
    // InternalEclParser.g:11098:1: rule__PreferredInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__PreferredInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11102:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:11103:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:11103:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:11104:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"
    // InternalEclParser.g:11113:1: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__AcceptableInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11117:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:11118:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:11118:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:11119:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"
    // InternalEclParser.g:11128:1: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11132:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:11133:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:11133:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:11134:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"
    // InternalEclParser.g:11143:1: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:11147:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:11148:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:11148:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:11149:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"

    // $ANTLR start synpred1_InternalEclParser
    public final void synpred1_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:1922:5: ( rule__SnomedIdentifier__Alternatives )
        // InternalEclParser.g:1922:5: rule__SnomedIdentifier__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SnomedIdentifier__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEclParser

    // $ANTLR start synpred2_InternalEclParser
    public final void synpred2_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2193:5: ( RULE_ALPHA )
        // InternalEclParser.g:2193:5: RULE_ALPHA
        {
        match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalEclParser

    // $ANTLR start synpred18_InternalEclParser
    public final void synpred18_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2898:2: ( ( ruleAttributeConstraint ) )
        // InternalEclParser.g:2898:2: ( ruleAttributeConstraint )
        {
        // InternalEclParser.g:2898:2: ( ruleAttributeConstraint )
        // InternalEclParser.g:2899:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalEclParser

    // $ANTLR start synpred19_InternalEclParser
    public final void synpred19_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2904:2: ( ( ruleEclAttributeGroup ) )
        // InternalEclParser.g:2904:2: ( ruleEclAttributeGroup )
        {
        // InternalEclParser.g:2904:2: ( ruleEclAttributeGroup )
        // InternalEclParser.g:2905:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalEclParser

    // $ANTLR start synpred21_InternalEclParser
    public final void synpred21_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2946:2: ( ( ruleAttributeConstraint ) )
        // InternalEclParser.g:2946:2: ( ruleAttributeConstraint )
        {
        // InternalEclParser.g:2946:2: ( ruleAttributeConstraint )
        // InternalEclParser.g:2947:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalEclParser

    // $ANTLR start synpred70_InternalEclParser
    public final void synpred70_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:3733:3: ( rule__OrExpressionConstraint__Group_1__0 )
        // InternalEclParser.g:3733:3: rule__OrExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_InternalEclParser

    // $ANTLR start synpred71_InternalEclParser
    public final void synpred71_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:3868:3: ( rule__AndExpressionConstraint__Group_1__0 )
        // InternalEclParser.g:3868:3: rule__AndExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_InternalEclParser

    // $ANTLR start synpred78_InternalEclParser
    public final void synpred78_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:5218:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEclParser.g:5218:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred78_InternalEclParser

    // $ANTLR start synpred79_InternalEclParser
    public final void synpred79_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:5380:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEclParser.g:5380:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_InternalEclParser

    // $ANTLR start synpred105_InternalEclParser
    public final void synpred105_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:9754:3: ( rule__DialectAliasValue__Alternatives_1 )
        // InternalEclParser.g:9754:3: rule__DialectAliasValue__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_InternalEclParser

    // Delegated rules

    public final boolean synpred21_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA8 dfa8 = new DFA8(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA14 dfa14 = new DFA14(this);
    static final String dfa_1s = "\22\uffff";
    static final String dfa_2s = "\1\36\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_3s = "\1\70\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_4s = "\2\uffff\1\1\15\uffff\1\2\1\3";
    static final String dfa_5s = "\1\uffff\1\0\15\uffff\1\1\2\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\2\uffff\2\2\1\uffff\1\20\1\uffff\1\17\1\uffff\1\1\3\uffff\1\2\1\uffff\1\2\2\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2893:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_1 = input.LA(1);

                         
                        int index8_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEclParser()) ) {s = 2;}

                        else if ( (synpred19_InternalEclParser()) ) {s = 16;}

                         
                        input.seek(index8_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA8_15 = input.LA(1);

                         
                        int index8_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEclParser()) ) {s = 2;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index8_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\21\uffff";
    static final String dfa_8s = "\1\36\16\uffff\1\0\1\uffff";
    static final String dfa_9s = "\1\70\16\uffff\1\0\1\uffff";
    static final String dfa_10s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_11s = "\17\uffff\1\0\1\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\2\uffff\2\1\3\uffff\1\17\1\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2941:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_15 = input.LA(1);

                         
                        int index10_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalEclParser()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index10_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\14\uffff\2\17\2\uffff\2\17";
    static final String dfa_14s = "\1\57\2\24\4\73\1\uffff\1\41\1\uffff\2\41\2\22\2\uffff\2\22";
    static final String dfa_15s = "\1\72\2\102\4\73\1\uffff\1\53\1\uffff\2\42\2\75\2\uffff\2\75";
    static final String dfa_16s = "\7\uffff\1\2\1\uffff\1\1\4\uffff\1\4\1\3\2\uffff";
    static final String dfa_17s = "\22\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\1\2\1\4\1\3\6\uffff\1\5\1\6",
            "\1\11\3\uffff\1\11\42\uffff\1\10\6\uffff\1\7",
            "\1\11\3\uffff\1\11\42\uffff\1\10\6\uffff\1\7",
            "\1\10",
            "\1\10",
            "\1\10",
            "\1\10",
            "",
            "\1\14\1\15\7\uffff\1\12\1\13",
            "",
            "\1\14\1\15",
            "\1\14\1\15",
            "\1\17\10\uffff\2\17\3\uffff\1\17\4\uffff\1\17\1\uffff\1\17\5\uffff\1\16\17\uffff\1\17",
            "\1\17\10\uffff\2\17\3\uffff\1\17\1\21\1\20\2\uffff\1\17\1\uffff\1\17\5\uffff\1\16\17\uffff\1\17",
            "",
            "",
            "\1\17\10\uffff\2\17\3\uffff\1\17\1\21\1\20\2\uffff\1\17\1\uffff\1\17\5\uffff\1\16\17\uffff\1\17",
            "\1\17\10\uffff\2\17\3\uffff\1\17\1\21\1\20\2\uffff\1\17\1\uffff\1\17\5\uffff\1\16\17\uffff\1\17"
    };
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_1;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "2983:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_19s = "\1\4\4\uffff\2\55\11\uffff\1\6";
    static final String dfa_20s = "\1\46\4\uffff\2\55\11\uffff\1\20";
    static final String dfa_21s = "\1\uffff\1\1\1\2\1\3\1\4\2\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff";
    static final String dfa_22s = "\21\uffff}>";
    static final String[] dfa_23s = {
            "\1\16\1\12\1\15\1\11\1\6\1\10\1\14\1\4\1\2\1\13\1\5\1\4\1\7\1\3\5\uffff\1\1\1\uffff\1\3\14\uffff\1\17",
            "",
            "",
            "",
            "",
            "\1\20",
            "\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\15\3\uffff\1\14\2\uffff\1\13\2\uffff\1\7"
    };
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_19;
            this.max = dfa_20;
            this.accept = dfa_21;
            this.special = dfa_22;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "3037:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000600000002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x01FE504600000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000010000002L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000108000000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000108000002L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x01FE515640000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000200000000002L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000600000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000008600000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000011000000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x01FE514640000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0607800000000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000400600000000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000001100000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x00000C0600000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x000000400283FFF0L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0001800000000000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000004680000L,0x0000000000000004L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000004000000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0001808000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001800000000002L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x4000004000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x4000008000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000004600000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000014100L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000800000000000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000006100L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000004500L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000004140L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x4000080600000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x4000080600000002L});
    }


}