package com.b2international.snomed.ecl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.ecl.services.EclGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEclParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_CONJUNCTION_KEYWORD", "RULE_COMMA", "RULE_DIGIT_NONZERO", "RULE_DIGIT_ZERO", "RULE_WILDCARD", "RULE_PLUS", "RULE_DASH", "RULE_TRUE_KEYWORD", "RULE_FALSE_KEYWORD", "RULE_CASE_SIGNIFICANCE_ID_KEYWORD", "RULE_LANGUAGE_REFSET_ID_KEYWORD", "RULE_EFFECTIVE_TIME_KEYWORD", "RULE_ACCEPTABLE_IN_KEYWORD", "RULE_DESCRIPTION_KEYWORD", "RULE_PREFERRED_IN_KEYWORD", "RULE_SEMANTIC_TAG_KEYWORD", "RULE_DIALECTID_KEYWORD", "RULE_LANGUAGE_KEYWORD", "RULE_MODULEID_KEYWORD", "RULE_CONCEPT_KEYWORD", "RULE_DIALECT_KEYWORD", "RULE_ACTIVE_KEYWORD", "RULE_TYPEID_KEYWORD", "RULE_EXCLUSION_KEYWORD", "RULE_EXACT_KEYWORD", "RULE_MATCH_KEYWORD", "RULE_REGEX_KEYWORD", "RULE_TERM_KEYWORD", "RULE_TYPE_KEYWORD", "RULE_WILD_KEYWORD", "RULE_DISJUNCTION_KEYWORD", "RULE_REVERSED", "RULE_KEYWORD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_GT", "RULE_LT", "RULE_GTE", "RULE_LTE", "RULE_COLON", "RULE_DOT", "RULE_LT_EM", "RULE_DBL_LT_EM", "RULE_DBL_LT", "RULE_GT_EM", "RULE_DBL_GT_EM", "RULE_DBL_GT", "RULE_CARET", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_SQUARE_OPEN", "RULE_TO", "RULE_SQUARE_CLOSE", "RULE_HASH", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_WS", "RULE_PIPE_DELIMITED_STRING", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT"
    };
    public static final int RULE_DIALECT_KEYWORD=24;
    public static final int RULE_LANGUAGE_KEYWORD=21;
    public static final int RULE_DIGIT_NONZERO=6;
    public static final int RULE_CURLY_OPEN=54;
    public static final int RULE_DBL_GT=50;
    public static final int RULE_ROUND_CLOSE=53;
    public static final int RULE_TO=57;
    public static final int RULE_GT=39;
    public static final int RULE_ACTIVE_KEYWORD=25;
    public static final int RULE_MODULEID_KEYWORD=22;
    public static final int RULE_GTE=41;
    public static final int RULE_DISJUNCTION_KEYWORD=34;
    public static final int RULE_ROUND_OPEN=52;
    public static final int RULE_DBL_LT=47;
    public static final int RULE_TYPEID_KEYWORD=26;
    public static final int RULE_MATCH_KEYWORD=29;
    public static final int RULE_NOT_EQUAL=38;
    public static final int RULE_SQUARE_CLOSE=58;
    public static final int RULE_SEMANTIC_TAG_KEYWORD=19;
    public static final int RULE_EQUAL=37;
    public static final int RULE_SQUARE_OPEN=56;
    public static final int RULE_COMMA=5;
    public static final int RULE_CASE_SIGNIFICANCE_ID_KEYWORD=13;
    public static final int RULE_EXCLUSION_KEYWORD=27;
    public static final int RULE_LT_EM=45;
    public static final int RULE_CURLY_CLOSE=55;
    public static final int RULE_DBL_GT_EM=49;
    public static final int RULE_COLON=43;
    public static final int RULE_LT=40;
    public static final int RULE_DOUBLE_CURLY_CLOSE=61;
    public static final int RULE_LANGUAGE_REFSET_ID_KEYWORD=14;
    public static final int RULE_DESCRIPTION_KEYWORD=17;
    public static final int RULE_EXACT_KEYWORD=28;
    public static final int RULE_ML_COMMENT=65;
    public static final int RULE_PREFERRED_IN_KEYWORD=18;
    public static final int RULE_PIPE_DELIMITED_STRING=63;
    public static final int RULE_LTE=42;
    public static final int RULE_TYPE_KEYWORD=32;
    public static final int RULE_CONCEPT_KEYWORD=23;
    public static final int RULE_STRING=64;
    public static final int RULE_FALSE_KEYWORD=12;
    public static final int RULE_REVERSED=35;
    public static final int RULE_SL_COMMENT=66;
    public static final int RULE_DIGIT_ZERO=7;
    public static final int RULE_HASH=59;
    public static final int RULE_DASH=10;
    public static final int RULE_PLUS=9;
    public static final int RULE_DOT=44;
    public static final int EOF=-1;
    public static final int RULE_DIALECTID_KEYWORD=20;
    public static final int RULE_KEYWORD=36;
    public static final int RULE_ACCEPTABLE_IN_KEYWORD=16;
    public static final int RULE_TERM_KEYWORD=31;
    public static final int RULE_GT_EM=48;
    public static final int RULE_WS=62;
    public static final int RULE_REGEX_KEYWORD=30;
    public static final int RULE_TRUE_KEYWORD=11;
    public static final int RULE_CARET=51;
    public static final int RULE_DOUBLE_CURLY_OPEN=60;
    public static final int RULE_CONJUNCTION_KEYWORD=4;
    public static final int RULE_WILD_KEYWORD=33;
    public static final int RULE_WILDCARD=8;
    public static final int RULE_EFFECTIVE_TIME_KEYWORD=15;
    public static final int RULE_DBL_LT_EM=46;

    // delegates
    // delegators


        public InternalEclParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEclParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEclParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEcl.g"; }


    	private EclGrammarAccess grammarAccess;

    	public void setGrammarAccess(EclGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleScript"
    // InternalEcl.g:66:1: entryRuleScript : ruleScript EOF ;
    public final void entryRuleScript() throws RecognitionException {
        try {
            // InternalEcl.g:67:1: ( ruleScript EOF )
            // InternalEcl.g:68:1: ruleScript EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleScript();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScript"


    // $ANTLR start "ruleScript"
    // InternalEcl.g:75:1: ruleScript : ( ( rule__Script__Group__0 ) ) ;
    public final void ruleScript() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:79:2: ( ( ( rule__Script__Group__0 ) ) )
            // InternalEcl.g:80:2: ( ( rule__Script__Group__0 ) )
            {
            // InternalEcl.g:80:2: ( ( rule__Script__Group__0 ) )
            // InternalEcl.g:81:3: ( rule__Script__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getGroup()); 
            }
            // InternalEcl.g:82:3: ( rule__Script__Group__0 )
            // InternalEcl.g:82:4: rule__Script__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScript"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEcl.g:91:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:92:1: ( ruleExpressionConstraint EOF )
            // InternalEcl.g:93:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEcl.g:100:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:104:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEcl.g:105:2: ( ruleOrExpressionConstraint )
            {
            // InternalEcl.g:105:2: ( ruleOrExpressionConstraint )
            // InternalEcl.g:106:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEcl.g:116:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:117:1: ( ruleOrExpressionConstraint EOF )
            // InternalEcl.g:118:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEcl.g:125:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:129:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:130:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:130:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEcl.g:131:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:132:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEcl.g:132:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEcl.g:141:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:142:1: ( ruleAndExpressionConstraint EOF )
            // InternalEcl.g:143:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEcl.g:150:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:154:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:155:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:155:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEcl.g:156:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:157:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEcl.g:157:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEcl.g:166:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:167:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEcl.g:168:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEcl.g:175:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:179:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:180:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:180:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEcl.g:181:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:182:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEcl.g:182:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEcl.g:191:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:192:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEcl.g:193:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEcl.g:200:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:204:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:205:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:205:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEcl.g:206:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:207:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEcl.g:207:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEcl.g:216:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:217:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEcl.g:218:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEcl.g:225:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:229:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:230:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:230:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEcl.g:231:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:232:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEcl.g:232:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleFilteredExpressionConstraint"
    // InternalEcl.g:241:1: entryRuleFilteredExpressionConstraint : ruleFilteredExpressionConstraint EOF ;
    public final void entryRuleFilteredExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:242:1: ( ruleFilteredExpressionConstraint EOF )
            // InternalEcl.g:243:1: ruleFilteredExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilteredExpressionConstraint"


    // $ANTLR start "ruleFilteredExpressionConstraint"
    // InternalEcl.g:250:1: ruleFilteredExpressionConstraint : ( ( rule__FilteredExpressionConstraint__Group__0 ) ) ;
    public final void ruleFilteredExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:254:2: ( ( ( rule__FilteredExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:255:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:255:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            // InternalEcl.g:256:3: ( rule__FilteredExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:257:3: ( rule__FilteredExpressionConstraint__Group__0 )
            // InternalEcl.g:257:4: rule__FilteredExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilteredExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEcl.g:266:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:267:1: ( ruleSubExpressionConstraint EOF )
            // InternalEcl.g:268:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEcl.g:275:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:279:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEcl.g:280:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEcl.g:280:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEcl.g:281:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEcl.g:282:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEcl.g:282:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEcl.g:291:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEcl.g:292:1: ( ruleEclFocusConcept EOF )
            // InternalEcl.g:293:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEcl.g:300:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:304:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEcl.g:305:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEcl.g:305:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEcl.g:306:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEcl.g:307:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEcl.g:307:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEcl.g:316:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEcl.g:317:1: ( ruleChildOf EOF )
            // InternalEcl.g:318:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEcl.g:325:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:329:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEcl.g:330:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEcl.g:330:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEcl.g:331:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEcl.g:332:3: ( rule__ChildOf__Group__0 )
            // InternalEcl.g:332:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEcl.g:341:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:342:1: ( ruleChildOrSelfOf EOF )
            // InternalEcl.g:343:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEcl.g:350:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:354:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:355:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:355:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEcl.g:356:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:357:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEcl.g:357:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEcl.g:366:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEcl.g:367:1: ( ruleDescendantOf EOF )
            // InternalEcl.g:368:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEcl.g:375:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:379:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEcl.g:380:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEcl.g:380:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEcl.g:381:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEcl.g:382:3: ( rule__DescendantOf__Group__0 )
            // InternalEcl.g:382:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEcl.g:391:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:392:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEcl.g:393:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEcl.g:400:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:404:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:405:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:405:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEcl.g:406:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:407:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEcl.g:407:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEcl.g:416:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEcl.g:417:1: ( ruleParentOf EOF )
            // InternalEcl.g:418:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEcl.g:425:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:429:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEcl.g:430:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEcl.g:430:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEcl.g:431:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEcl.g:432:3: ( rule__ParentOf__Group__0 )
            // InternalEcl.g:432:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEcl.g:441:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:442:1: ( ruleParentOrSelfOf EOF )
            // InternalEcl.g:443:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEcl.g:450:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:454:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:455:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:455:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEcl.g:456:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:457:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEcl.g:457:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEcl.g:466:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEcl.g:467:1: ( ruleAncestorOf EOF )
            // InternalEcl.g:468:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEcl.g:475:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:479:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEcl.g:480:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEcl.g:480:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEcl.g:481:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEcl.g:482:3: ( rule__AncestorOf__Group__0 )
            // InternalEcl.g:482:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEcl.g:491:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:492:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEcl.g:493:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEcl.g:500:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:504:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:505:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:505:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEcl.g:506:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:507:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEcl.g:507:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEcl.g:516:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEcl.g:517:1: ( ruleMemberOf EOF )
            // InternalEcl.g:518:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEcl.g:525:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:529:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEcl.g:530:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEcl.g:530:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEcl.g:531:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEcl.g:532:3: ( rule__MemberOf__Group__0 )
            // InternalEcl.g:532:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEcl.g:541:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEcl.g:542:1: ( ruleEclConceptReference EOF )
            // InternalEcl.g:543:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEcl.g:550:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:554:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEcl.g:555:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEcl.g:555:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEcl.g:556:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEcl.g:557:3: ( rule__EclConceptReference__Group__0 )
            // InternalEcl.g:557:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEcl.g:566:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEcl.g:567:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEcl.g:568:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEcl.g:575:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:579:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEcl.g:580:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEcl.g:580:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEcl.g:581:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEcl.g:582:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEcl.g:582:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEcl.g:591:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEcl.g:592:1: ( ruleAny EOF )
            // InternalEcl.g:593:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEcl.g:600:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:604:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEcl.g:605:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEcl.g:605:2: ( ( rule__Any__Group__0 ) )
            // InternalEcl.g:606:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEcl.g:607:3: ( rule__Any__Group__0 )
            // InternalEcl.g:607:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEcl.g:616:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:617:1: ( ruleEclRefinement EOF )
            // InternalEcl.g:618:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEcl.g:625:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:629:2: ( ( ruleOrRefinement ) )
            // InternalEcl.g:630:2: ( ruleOrRefinement )
            {
            // InternalEcl.g:630:2: ( ruleOrRefinement )
            // InternalEcl.g:631:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEcl.g:641:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:642:1: ( ruleOrRefinement EOF )
            // InternalEcl.g:643:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEcl.g:650:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:654:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEcl.g:655:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEcl.g:655:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEcl.g:656:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEcl.g:657:3: ( rule__OrRefinement__Group__0 )
            // InternalEcl.g:657:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEcl.g:666:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:667:1: ( ruleAndRefinement EOF )
            // InternalEcl.g:668:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEcl.g:675:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:679:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEcl.g:680:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEcl.g:680:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEcl.g:681:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEcl.g:682:3: ( rule__AndRefinement__Group__0 )
            // InternalEcl.g:682:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEcl.g:691:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:692:1: ( ruleSubRefinement EOF )
            // InternalEcl.g:693:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEcl.g:700:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:704:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEcl.g:705:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEcl.g:705:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEcl.g:706:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEcl.g:707:3: ( rule__SubRefinement__Alternatives )
            // InternalEcl.g:707:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEcl.g:716:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:717:1: ( ruleNestedRefinement EOF )
            // InternalEcl.g:718:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEcl.g:725:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:729:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEcl.g:730:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEcl.g:730:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEcl.g:731:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEcl.g:732:3: ( rule__NestedRefinement__Group__0 )
            // InternalEcl.g:732:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEcl.g:741:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEcl.g:742:1: ( ruleEclAttributeGroup EOF )
            // InternalEcl.g:743:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEcl.g:750:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:754:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEcl.g:755:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEcl.g:755:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEcl.g:756:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEcl.g:757:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEcl.g:757:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEcl.g:766:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:767:1: ( ruleEclAttributeSet EOF )
            // InternalEcl.g:768:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEcl.g:775:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:779:2: ( ( ruleOrAttributeSet ) )
            // InternalEcl.g:780:2: ( ruleOrAttributeSet )
            {
            // InternalEcl.g:780:2: ( ruleOrAttributeSet )
            // InternalEcl.g:781:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEcl.g:791:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:792:1: ( ruleOrAttributeSet EOF )
            // InternalEcl.g:793:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEcl.g:800:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:804:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEcl.g:805:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEcl.g:805:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEcl.g:806:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEcl.g:807:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEcl.g:807:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEcl.g:816:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:817:1: ( ruleAndAttributeSet EOF )
            // InternalEcl.g:818:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEcl.g:825:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:829:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEcl.g:830:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEcl.g:830:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEcl.g:831:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEcl.g:832:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEcl.g:832:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEcl.g:841:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:842:1: ( ruleSubAttributeSet EOF )
            // InternalEcl.g:843:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEcl.g:850:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:854:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEcl.g:855:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEcl.g:855:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEcl.g:856:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEcl.g:857:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEcl.g:857:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEcl.g:866:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:867:1: ( ruleNestedAttributeSet EOF )
            // InternalEcl.g:868:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEcl.g:875:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:879:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEcl.g:880:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEcl.g:880:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEcl.g:881:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEcl.g:882:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEcl.g:882:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEcl.g:891:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:892:1: ( ruleAttributeConstraint EOF )
            // InternalEcl.g:893:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEcl.g:900:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:904:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEcl.g:905:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEcl.g:905:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEcl.g:906:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:907:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEcl.g:907:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEcl.g:916:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEcl.g:917:1: ( ruleCardinality EOF )
            // InternalEcl.g:918:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEcl.g:925:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:929:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEcl.g:930:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEcl.g:930:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEcl.g:931:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEcl.g:932:3: ( rule__Cardinality__Group__0 )
            // InternalEcl.g:932:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEcl.g:941:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEcl.g:942:1: ( ruleComparison EOF )
            // InternalEcl.g:943:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEcl.g:950:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:954:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEcl.g:955:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEcl.g:955:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEcl.g:956:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEcl.g:957:3: ( rule__Comparison__Alternatives )
            // InternalEcl.g:957:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEcl.g:966:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEcl.g:967:1: ( ruleAttributeComparison EOF )
            // InternalEcl.g:968:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEcl.g:975:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:979:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEcl.g:980:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEcl.g:980:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEcl.g:981:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:982:3: ( rule__AttributeComparison__Group__0 )
            // InternalEcl.g:982:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEcl.g:991:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEcl.g:992:1: ( ruleDataTypeComparison EOF )
            // InternalEcl.g:993:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEcl.g:1000:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1004:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEcl.g:1005:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEcl.g:1005:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEcl.g:1006:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEcl.g:1007:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEcl.g:1007:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEcl.g:1016:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1017:1: ( ruleBooleanValueComparison EOF )
            // InternalEcl.g:1018:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEcl.g:1025:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1029:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEcl.g:1030:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1030:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEcl.g:1031:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1032:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEcl.g:1032:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEcl.g:1041:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1042:1: ( ruleStringValueComparison EOF )
            // InternalEcl.g:1043:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEcl.g:1050:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1054:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEcl.g:1055:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1055:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEcl.g:1056:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1057:3: ( rule__StringValueComparison__Group__0 )
            // InternalEcl.g:1057:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEcl.g:1066:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1067:1: ( ruleIntegerValueComparison EOF )
            // InternalEcl.g:1068:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEcl.g:1075:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1079:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEcl.g:1080:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1080:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEcl.g:1081:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1082:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEcl.g:1082:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEcl.g:1091:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1092:1: ( ruleDecimalValueComparison EOF )
            // InternalEcl.g:1093:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEcl.g:1100:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1104:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEcl.g:1105:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1105:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEcl.g:1106:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1107:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEcl.g:1107:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEcl.g:1116:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEcl.g:1117:1: ( ruleNestedExpression EOF )
            // InternalEcl.g:1118:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEcl.g:1125:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1129:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEcl.g:1130:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEcl.g:1130:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEcl.g:1131:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEcl.g:1132:3: ( rule__NestedExpression__Group__0 )
            // InternalEcl.g:1132:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEcl.g:1141:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:1142:1: ( ruleFilterConstraint EOF )
            // InternalEcl.g:1143:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEcl.g:1150:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1154:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEcl.g:1155:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEcl.g:1155:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEcl.g:1156:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:1157:3: ( rule__FilterConstraint__Group__0 )
            // InternalEcl.g:1157:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEcl.g:1166:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1167:1: ( ruleFilter EOF )
            // InternalEcl.g:1168:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEcl.g:1175:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1179:2: ( ( ruleDisjunctionFilter ) )
            // InternalEcl.g:1180:2: ( ruleDisjunctionFilter )
            {
            // InternalEcl.g:1180:2: ( ruleDisjunctionFilter )
            // InternalEcl.g:1181:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEcl.g:1191:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1192:1: ( ruleDisjunctionFilter EOF )
            // InternalEcl.g:1193:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEcl.g:1200:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1204:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEcl.g:1205:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEcl.g:1205:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEcl.g:1206:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1207:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEcl.g:1207:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEcl.g:1216:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1217:1: ( ruleConjunctionFilter EOF )
            // InternalEcl.g:1218:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEcl.g:1225:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1229:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEcl.g:1230:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEcl.g:1230:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEcl.g:1231:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1232:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEcl.g:1232:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEcl.g:1241:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1242:1: ( ruleNestedFilter EOF )
            // InternalEcl.g:1243:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEcl.g:1250:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1254:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEcl.g:1255:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEcl.g:1255:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEcl.g:1256:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1257:3: ( rule__NestedFilter__Group__0 )
            // InternalEcl.g:1257:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEcl.g:1266:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1267:1: ( rulePropertyFilter EOF )
            // InternalEcl.g:1268:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEcl.g:1275:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1279:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEcl.g:1280:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEcl.g:1280:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEcl.g:1281:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEcl.g:1282:3: ( rule__PropertyFilter__Alternatives )
            // InternalEcl.g:1282:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEcl.g:1291:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1292:1: ( ruleTermFilter EOF )
            // InternalEcl.g:1293:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEcl.g:1300:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1304:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEcl.g:1305:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEcl.g:1305:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEcl.g:1306:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1307:3: ( rule__TermFilter__Group__0 )
            // InternalEcl.g:1307:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleTypedTermFilter"
    // InternalEcl.g:1316:1: entryRuleTypedTermFilter : ruleTypedTermFilter EOF ;
    public final void entryRuleTypedTermFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1317:1: ( ruleTypedTermFilter EOF )
            // InternalEcl.g:1318:1: ruleTypedTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilter"


    // $ANTLR start "ruleTypedTermFilter"
    // InternalEcl.g:1325:1: ruleTypedTermFilter : ( ( rule__TypedTermFilter__Group__0 ) ) ;
    public final void ruleTypedTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1329:2: ( ( ( rule__TypedTermFilter__Group__0 ) ) )
            // InternalEcl.g:1330:2: ( ( rule__TypedTermFilter__Group__0 ) )
            {
            // InternalEcl.g:1330:2: ( ( rule__TypedTermFilter__Group__0 ) )
            // InternalEcl.g:1331:3: ( rule__TypedTermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1332:3: ( rule__TypedTermFilter__Group__0 )
            // InternalEcl.g:1332:4: rule__TypedTermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilter"


    // $ANTLR start "entryRuleTypedTermFilterSet"
    // InternalEcl.g:1341:1: entryRuleTypedTermFilterSet : ruleTypedTermFilterSet EOF ;
    public final void entryRuleTypedTermFilterSet() throws RecognitionException {
        try {
            // InternalEcl.g:1342:1: ( ruleTypedTermFilterSet EOF )
            // InternalEcl.g:1343:1: ruleTypedTermFilterSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterSet"


    // $ANTLR start "ruleTypedTermFilterSet"
    // InternalEcl.g:1350:1: ruleTypedTermFilterSet : ( ( rule__TypedTermFilterSet__Group__0 ) ) ;
    public final void ruleTypedTermFilterSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1354:2: ( ( ( rule__TypedTermFilterSet__Group__0 ) ) )
            // InternalEcl.g:1355:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            {
            // InternalEcl.g:1355:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            // InternalEcl.g:1356:3: ( rule__TypedTermFilterSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }
            // InternalEcl.g:1357:3: ( rule__TypedTermFilterSet__Group__0 )
            // InternalEcl.g:1357:4: rule__TypedTermFilterSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterSet"


    // $ANTLR start "entryRuleTypedTermFilterClause"
    // InternalEcl.g:1366:1: entryRuleTypedTermFilterClause : ruleTypedTermFilterClause EOF ;
    public final void entryRuleTypedTermFilterClause() throws RecognitionException {
        try {
            // InternalEcl.g:1367:1: ( ruleTypedTermFilterClause EOF )
            // InternalEcl.g:1368:1: ruleTypedTermFilterClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterClause"


    // $ANTLR start "ruleTypedTermFilterClause"
    // InternalEcl.g:1375:1: ruleTypedTermFilterClause : ( ( rule__TypedTermFilterClause__Group__0 ) ) ;
    public final void ruleTypedTermFilterClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1379:2: ( ( ( rule__TypedTermFilterClause__Group__0 ) ) )
            // InternalEcl.g:1380:2: ( ( rule__TypedTermFilterClause__Group__0 ) )
            {
            // InternalEcl.g:1380:2: ( ( rule__TypedTermFilterClause__Group__0 ) )
            // InternalEcl.g:1381:3: ( rule__TypedTermFilterClause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getGroup()); 
            }
            // InternalEcl.g:1382:3: ( rule__TypedTermFilterClause__Group__0 )
            // InternalEcl.g:1382:4: rule__TypedTermFilterClause__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterClause"


    // $ANTLR start "entryRuleLanguageFilter"
    // InternalEcl.g:1391:1: entryRuleLanguageFilter : ruleLanguageFilter EOF ;
    public final void entryRuleLanguageFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1392:1: ( ruleLanguageFilter EOF )
            // InternalEcl.g:1393:1: ruleLanguageFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageFilter"


    // $ANTLR start "ruleLanguageFilter"
    // InternalEcl.g:1400:1: ruleLanguageFilter : ( ( rule__LanguageFilter__Group__0 ) ) ;
    public final void ruleLanguageFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1404:2: ( ( ( rule__LanguageFilter__Group__0 ) ) )
            // InternalEcl.g:1405:2: ( ( rule__LanguageFilter__Group__0 ) )
            {
            // InternalEcl.g:1405:2: ( ( rule__LanguageFilter__Group__0 ) )
            // InternalEcl.g:1406:3: ( rule__LanguageFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1407:3: ( rule__LanguageFilter__Group__0 )
            // InternalEcl.g:1407:4: rule__LanguageFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEcl.g:1416:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1417:1: ( ruleTypeFilter EOF )
            // InternalEcl.g:1418:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEcl.g:1425:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1429:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEcl.g:1430:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEcl.g:1430:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEcl.g:1431:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEcl.g:1432:3: ( rule__TypeFilter__Alternatives )
            // InternalEcl.g:1432:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEcl.g:1441:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1442:1: ( ruleTypeIdFilter EOF )
            // InternalEcl.g:1443:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEcl.g:1450:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1454:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEcl.g:1455:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEcl.g:1455:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEcl.g:1456:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1457:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEcl.g:1457:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEcl.g:1466:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1467:1: ( ruleTypeTokenFilter EOF )
            // InternalEcl.g:1468:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEcl.g:1475:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1479:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEcl.g:1480:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEcl.g:1480:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEcl.g:1481:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1482:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEcl.g:1482:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEcl.g:1491:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1492:1: ( ruleDialectFilter EOF )
            // InternalEcl.g:1493:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEcl.g:1500:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1504:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEcl.g:1505:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEcl.g:1505:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEcl.g:1506:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEcl.g:1507:3: ( rule__DialectFilter__Alternatives )
            // InternalEcl.g:1507:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEcl.g:1516:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1517:1: ( ruleDialectIdFilter EOF )
            // InternalEcl.g:1518:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEcl.g:1525:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1529:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEcl.g:1530:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEcl.g:1530:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEcl.g:1531:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1532:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEcl.g:1532:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEcl.g:1541:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1542:1: ( ruleDialectAliasFilter EOF )
            // InternalEcl.g:1543:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEcl.g:1550:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1554:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEcl.g:1555:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEcl.g:1555:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEcl.g:1556:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1557:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEcl.g:1557:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEcl.g:1566:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEcl.g:1567:1: ( ruleDialect EOF )
            // InternalEcl.g:1568:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEcl.g:1575:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1579:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEcl.g:1580:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEcl.g:1580:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEcl.g:1581:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEcl.g:1582:3: ( rule__Dialect__Group__0 )
            // InternalEcl.g:1582:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEcl.g:1591:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:1595:1: ( ruleDialectAlias EOF )
            // InternalEcl.g:1596:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEcl.g:1606:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1611:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEcl.g:1612:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEcl.g:1612:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEcl.g:1613:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEcl.g:1614:3: ( rule__DialectAlias__Group__0 )
            // InternalEcl.g:1614:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEcl.g:1624:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEcl.g:1625:1: ( ruleAcceptability EOF )
            // InternalEcl.g:1626:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEcl.g:1633:1: ruleAcceptability : ( ( rule__Acceptability__Alternatives ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1637:2: ( ( ( rule__Acceptability__Alternatives ) ) )
            // InternalEcl.g:1638:2: ( ( rule__Acceptability__Alternatives ) )
            {
            // InternalEcl.g:1638:2: ( ( rule__Acceptability__Alternatives ) )
            // InternalEcl.g:1639:3: ( rule__Acceptability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }
            // InternalEcl.g:1640:3: ( rule__Acceptability__Alternatives )
            // InternalEcl.g:1640:4: rule__Acceptability__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleAcceptabilityIdSet"
    // InternalEcl.g:1649:1: entryRuleAcceptabilityIdSet : ruleAcceptabilityIdSet EOF ;
    public final void entryRuleAcceptabilityIdSet() throws RecognitionException {
        try {
            // InternalEcl.g:1650:1: ( ruleAcceptabilityIdSet EOF )
            // InternalEcl.g:1651:1: ruleAcceptabilityIdSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityIdSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityIdSet"


    // $ANTLR start "ruleAcceptabilityIdSet"
    // InternalEcl.g:1658:1: ruleAcceptabilityIdSet : ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptabilityIdSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1662:2: ( ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) )
            // InternalEcl.g:1663:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            {
            // InternalEcl.g:1663:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            // InternalEcl.g:1664:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEcl.g:1665:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            // InternalEcl.g:1665:4: rule__AcceptabilityIdSet__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityIdSet__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityIdSet"


    // $ANTLR start "entryRuleAcceptabilityTokenSet"
    // InternalEcl.g:1674:1: entryRuleAcceptabilityTokenSet : ruleAcceptabilityTokenSet EOF ;
    public final void entryRuleAcceptabilityTokenSet() throws RecognitionException {
        try {
            // InternalEcl.g:1675:1: ( ruleAcceptabilityTokenSet EOF )
            // InternalEcl.g:1676:1: ruleAcceptabilityTokenSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityTokenSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityTokenSet"


    // $ANTLR start "ruleAcceptabilityTokenSet"
    // InternalEcl.g:1683:1: ruleAcceptabilityTokenSet : ( ( rule__AcceptabilityTokenSet__Group__0 ) ) ;
    public final void ruleAcceptabilityTokenSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1687:2: ( ( ( rule__AcceptabilityTokenSet__Group__0 ) ) )
            // InternalEcl.g:1688:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            {
            // InternalEcl.g:1688:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            // InternalEcl.g:1689:3: ( rule__AcceptabilityTokenSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }
            // InternalEcl.g:1690:3: ( rule__AcceptabilityTokenSet__Group__0 )
            // InternalEcl.g:1690:4: rule__AcceptabilityTokenSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityTokenSet"


    // $ANTLR start "entryRuleActiveFilter"
    // InternalEcl.g:1699:1: entryRuleActiveFilter : ruleActiveFilter EOF ;
    public final void entryRuleActiveFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1700:1: ( ruleActiveFilter EOF )
            // InternalEcl.g:1701:1: ruleActiveFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveFilter"


    // $ANTLR start "ruleActiveFilter"
    // InternalEcl.g:1708:1: ruleActiveFilter : ( ( rule__ActiveFilter__Group__0 ) ) ;
    public final void ruleActiveFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1712:2: ( ( ( rule__ActiveFilter__Group__0 ) ) )
            // InternalEcl.g:1713:2: ( ( rule__ActiveFilter__Group__0 ) )
            {
            // InternalEcl.g:1713:2: ( ( rule__ActiveFilter__Group__0 ) )
            // InternalEcl.g:1714:3: ( rule__ActiveFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1715:3: ( rule__ActiveFilter__Group__0 )
            // InternalEcl.g:1715:4: rule__ActiveFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveFilter"


    // $ANTLR start "entryRuleModuleFilter"
    // InternalEcl.g:1724:1: entryRuleModuleFilter : ruleModuleFilter EOF ;
    public final void entryRuleModuleFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1725:1: ( ruleModuleFilter EOF )
            // InternalEcl.g:1726:1: ruleModuleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModuleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModuleFilter"


    // $ANTLR start "ruleModuleFilter"
    // InternalEcl.g:1733:1: ruleModuleFilter : ( ( rule__ModuleFilter__Group__0 ) ) ;
    public final void ruleModuleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1737:2: ( ( ( rule__ModuleFilter__Group__0 ) ) )
            // InternalEcl.g:1738:2: ( ( rule__ModuleFilter__Group__0 ) )
            {
            // InternalEcl.g:1738:2: ( ( rule__ModuleFilter__Group__0 ) )
            // InternalEcl.g:1739:3: ( rule__ModuleFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1740:3: ( rule__ModuleFilter__Group__0 )
            // InternalEcl.g:1740:4: rule__ModuleFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModuleFilter"


    // $ANTLR start "entryRuleSemanticTagFilter"
    // InternalEcl.g:1749:1: entryRuleSemanticTagFilter : ruleSemanticTagFilter EOF ;
    public final void entryRuleSemanticTagFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1750:1: ( ruleSemanticTagFilter EOF )
            // InternalEcl.g:1751:1: ruleSemanticTagFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSemanticTagFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSemanticTagFilter"


    // $ANTLR start "ruleSemanticTagFilter"
    // InternalEcl.g:1758:1: ruleSemanticTagFilter : ( ( rule__SemanticTagFilter__Group__0 ) ) ;
    public final void ruleSemanticTagFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1762:2: ( ( ( rule__SemanticTagFilter__Group__0 ) ) )
            // InternalEcl.g:1763:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            {
            // InternalEcl.g:1763:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            // InternalEcl.g:1764:3: ( rule__SemanticTagFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1765:3: ( rule__SemanticTagFilter__Group__0 )
            // InternalEcl.g:1765:4: rule__SemanticTagFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSemanticTagFilter"


    // $ANTLR start "entryRuleEffectiveTimeFilter"
    // InternalEcl.g:1774:1: entryRuleEffectiveTimeFilter : ruleEffectiveTimeFilter EOF ;
    public final void entryRuleEffectiveTimeFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1775:1: ( ruleEffectiveTimeFilter EOF )
            // InternalEcl.g:1776:1: ruleEffectiveTimeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEffectiveTimeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEffectiveTimeFilter"


    // $ANTLR start "ruleEffectiveTimeFilter"
    // InternalEcl.g:1783:1: ruleEffectiveTimeFilter : ( ( rule__EffectiveTimeFilter__Group__0 ) ) ;
    public final void ruleEffectiveTimeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1787:2: ( ( ( rule__EffectiveTimeFilter__Group__0 ) ) )
            // InternalEcl.g:1788:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            {
            // InternalEcl.g:1788:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            // InternalEcl.g:1789:3: ( rule__EffectiveTimeFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1790:3: ( rule__EffectiveTimeFilter__Group__0 )
            // InternalEcl.g:1790:4: rule__EffectiveTimeFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEffectiveTimeFilter"


    // $ANTLR start "entryRulePreferredInFilter"
    // InternalEcl.g:1799:1: entryRulePreferredInFilter : rulePreferredInFilter EOF ;
    public final void entryRulePreferredInFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1800:1: ( rulePreferredInFilter EOF )
            // InternalEcl.g:1801:1: rulePreferredInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreferredInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreferredInFilter"


    // $ANTLR start "rulePreferredInFilter"
    // InternalEcl.g:1808:1: rulePreferredInFilter : ( ( rule__PreferredInFilter__Group__0 ) ) ;
    public final void rulePreferredInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1812:2: ( ( ( rule__PreferredInFilter__Group__0 ) ) )
            // InternalEcl.g:1813:2: ( ( rule__PreferredInFilter__Group__0 ) )
            {
            // InternalEcl.g:1813:2: ( ( rule__PreferredInFilter__Group__0 ) )
            // InternalEcl.g:1814:3: ( rule__PreferredInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1815:3: ( rule__PreferredInFilter__Group__0 )
            // InternalEcl.g:1815:4: rule__PreferredInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreferredInFilter"


    // $ANTLR start "entryRuleAcceptableInFilter"
    // InternalEcl.g:1824:1: entryRuleAcceptableInFilter : ruleAcceptableInFilter EOF ;
    public final void entryRuleAcceptableInFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1825:1: ( ruleAcceptableInFilter EOF )
            // InternalEcl.g:1826:1: ruleAcceptableInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptableInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptableInFilter"


    // $ANTLR start "ruleAcceptableInFilter"
    // InternalEcl.g:1833:1: ruleAcceptableInFilter : ( ( rule__AcceptableInFilter__Group__0 ) ) ;
    public final void ruleAcceptableInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1837:2: ( ( ( rule__AcceptableInFilter__Group__0 ) ) )
            // InternalEcl.g:1838:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            {
            // InternalEcl.g:1838:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            // InternalEcl.g:1839:3: ( rule__AcceptableInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1840:3: ( rule__AcceptableInFilter__Group__0 )
            // InternalEcl.g:1840:4: rule__AcceptableInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptableInFilter"


    // $ANTLR start "entryRuleLanguageRefSetFilter"
    // InternalEcl.g:1849:1: entryRuleLanguageRefSetFilter : ruleLanguageRefSetFilter EOF ;
    public final void entryRuleLanguageRefSetFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1850:1: ( ruleLanguageRefSetFilter EOF )
            // InternalEcl.g:1851:1: ruleLanguageRefSetFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageRefSetFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageRefSetFilter"


    // $ANTLR start "ruleLanguageRefSetFilter"
    // InternalEcl.g:1858:1: ruleLanguageRefSetFilter : ( ( rule__LanguageRefSetFilter__Group__0 ) ) ;
    public final void ruleLanguageRefSetFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1862:2: ( ( ( rule__LanguageRefSetFilter__Group__0 ) ) )
            // InternalEcl.g:1863:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            {
            // InternalEcl.g:1863:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            // InternalEcl.g:1864:3: ( rule__LanguageRefSetFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1865:3: ( rule__LanguageRefSetFilter__Group__0 )
            // InternalEcl.g:1865:4: rule__LanguageRefSetFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageRefSetFilter"


    // $ANTLR start "entryRuleCaseSignificanceFilter"
    // InternalEcl.g:1874:1: entryRuleCaseSignificanceFilter : ruleCaseSignificanceFilter EOF ;
    public final void entryRuleCaseSignificanceFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1875:1: ( ruleCaseSignificanceFilter EOF )
            // InternalEcl.g:1876:1: ruleCaseSignificanceFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCaseSignificanceFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseSignificanceFilter"


    // $ANTLR start "ruleCaseSignificanceFilter"
    // InternalEcl.g:1883:1: ruleCaseSignificanceFilter : ( ( rule__CaseSignificanceFilter__Group__0 ) ) ;
    public final void ruleCaseSignificanceFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1887:2: ( ( ( rule__CaseSignificanceFilter__Group__0 ) ) )
            // InternalEcl.g:1888:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            {
            // InternalEcl.g:1888:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            // InternalEcl.g:1889:3: ( rule__CaseSignificanceFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1890:3: ( rule__CaseSignificanceFilter__Group__0 )
            // InternalEcl.g:1890:4: rule__CaseSignificanceFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseSignificanceFilter"


    // $ANTLR start "entryRuleSnomedIdentifier"
    // InternalEcl.g:1899:1: entryRuleSnomedIdentifier : ruleSnomedIdentifier EOF ;
    public final void entryRuleSnomedIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:1903:1: ( ruleSnomedIdentifier EOF )
            // InternalEcl.g:1904:1: ruleSnomedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSnomedIdentifier"


    // $ANTLR start "ruleSnomedIdentifier"
    // InternalEcl.g:1914:1: ruleSnomedIdentifier : ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) ;
    public final void ruleSnomedIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1919:2: ( ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) ) )
            // InternalEcl.g:1920:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            {
            // InternalEcl.g:1920:2: ( ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* ) )
            // InternalEcl.g:1921:3: ( ( rule__SnomedIdentifier__Alternatives ) ) ( ( rule__SnomedIdentifier__Alternatives )* )
            {
            // InternalEcl.g:1921:3: ( ( rule__SnomedIdentifier__Alternatives ) )
            // InternalEcl.g:1922:4: ( rule__SnomedIdentifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEcl.g:1923:4: ( rule__SnomedIdentifier__Alternatives )
            // InternalEcl.g:1923:5: rule__SnomedIdentifier__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__SnomedIdentifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }

            // InternalEcl.g:1926:3: ( ( rule__SnomedIdentifier__Alternatives )* )
            // InternalEcl.g:1927:4: ( rule__SnomedIdentifier__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }
            // InternalEcl.g:1928:4: ( rule__SnomedIdentifier__Alternatives )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_DIGIT_NONZERO) ) {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalEcl()) ) {
                        alt1=1;
                    }


                }
                else if ( (LA1_0==RULE_DIGIT_ZERO) ) {
                    int LA1_3 = input.LA(2);

                    if ( (synpred1_InternalEcl()) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // InternalEcl.g:1928:5: rule__SnomedIdentifier__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__SnomedIdentifier__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSnomedIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEcl.g:1939:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:1943:1: ( ruleNonNegativeInteger EOF )
            // InternalEcl.g:1944:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEcl.g:1954:1: ruleNonNegativeInteger : ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1959:2: ( ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) ) )
            // InternalEcl.g:1960:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) )
            {
            // InternalEcl.g:1960:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* ) )
            // InternalEcl.g:1961:3: ( ( rule__NonNegativeInteger__Alternatives ) ) ( ( rule__NonNegativeInteger__Alternatives )* )
            {
            // InternalEcl.g:1961:3: ( ( rule__NonNegativeInteger__Alternatives ) )
            // InternalEcl.g:1962:4: ( rule__NonNegativeInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEcl.g:1963:4: ( rule__NonNegativeInteger__Alternatives )
            // InternalEcl.g:1963:5: rule__NonNegativeInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__NonNegativeInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }

            // InternalEcl.g:1966:3: ( ( rule__NonNegativeInteger__Alternatives )* )
            // InternalEcl.g:1967:4: ( rule__NonNegativeInteger__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEcl.g:1968:4: ( rule__NonNegativeInteger__Alternatives )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( ((LA2_0>=RULE_DIGIT_NONZERO && LA2_0<=RULE_DIGIT_ZERO)) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalEcl.g:1968:5: rule__NonNegativeInteger__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeInteger__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEcl.g:1979:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:1983:1: ( ruleNonNegativeDecimal EOF )
            // InternalEcl.g:1984:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEcl.g:1994:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1999:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEcl.g:2000:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEcl.g:2000:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEcl.g:2001:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEcl.g:2002:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEcl.g:2002:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEcl.g:2012:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2016:1: ( ruleMaxValue EOF )
            // InternalEcl.g:2017:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEcl.g:2027:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2032:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEcl.g:2033:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEcl.g:2033:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEcl.g:2034:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEcl.g:2035:3: ( rule__MaxValue__Alternatives )
            // InternalEcl.g:2035:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEcl.g:2045:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2049:1: ( ruleInteger EOF )
            // InternalEcl.g:2050:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEcl.g:2060:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2065:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEcl.g:2066:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEcl.g:2066:2: ( ( rule__Integer__Group__0 ) )
            // InternalEcl.g:2067:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEcl.g:2068:3: ( rule__Integer__Group__0 )
            // InternalEcl.g:2068:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEcl.g:2078:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2082:1: ( ruleDecimal EOF )
            // InternalEcl.g:2083:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEcl.g:2093:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2098:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEcl.g:2099:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEcl.g:2099:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEcl.g:2100:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEcl.g:2101:3: ( rule__Decimal__Group__0 )
            // InternalEcl.g:2101:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEcl.g:2111:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2115:1: ( ruleBoolean EOF )
            // InternalEcl.g:2116:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEcl.g:2126:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2131:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEcl.g:2132:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEcl.g:2132:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEcl.g:2133:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEcl.g:2134:3: ( rule__Boolean__Alternatives )
            // InternalEcl.g:2134:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleUnquotedString"
    // InternalEcl.g:2144:1: entryRuleUnquotedString : ruleUnquotedString EOF ;
    public final void entryRuleUnquotedString() throws RecognitionException {
        try {
            // InternalEcl.g:2145:1: ( ruleUnquotedString EOF )
            // InternalEcl.g:2146:1: ruleUnquotedString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnquotedString"


    // $ANTLR start "ruleUnquotedString"
    // InternalEcl.g:2153:1: ruleUnquotedString : ( ( rule__UnquotedString__Alternatives ) ) ;
    public final void ruleUnquotedString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2157:2: ( ( ( rule__UnquotedString__Alternatives ) ) )
            // InternalEcl.g:2158:2: ( ( rule__UnquotedString__Alternatives ) )
            {
            // InternalEcl.g:2158:2: ( ( rule__UnquotedString__Alternatives ) )
            // InternalEcl.g:2159:3: ( rule__UnquotedString__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }
            // InternalEcl.g:2160:3: ( rule__UnquotedString__Alternatives )
            // InternalEcl.g:2160:4: rule__UnquotedString__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnquotedString__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnquotedString"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEcl.g:2169:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2173:1: ( ruleDialectAliasValue EOF )
            // InternalEcl.g:2174:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEcl.g:2184:1: ruleDialectAliasValue : ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2189:2: ( ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) )
            // InternalEcl.g:2190:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            {
            // InternalEcl.g:2190:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            // InternalEcl.g:2191:3: ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* )
            {
            // InternalEcl.g:2191:3: ( ( rule__DialectAliasValue__Alternatives ) )
            // InternalEcl.g:2192:4: ( rule__DialectAliasValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEcl.g:2193:4: ( rule__DialectAliasValue__Alternatives )
            // InternalEcl.g:2193:5: rule__DialectAliasValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }

            // InternalEcl.g:2196:3: ( ( rule__DialectAliasValue__Alternatives )* )
            // InternalEcl.g:2197:4: ( rule__DialectAliasValue__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEcl.g:2198:4: ( rule__DialectAliasValue__Alternatives )*
            loop3:
            do {
                int alt3=2;
                alt3 = dfa3.predict(input);
                switch (alt3) {
            	case 1 :
            	    // InternalEcl.g:2198:5: rule__DialectAliasValue__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasValue__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleLEXICAL_SEARCH_TYPE"
    // InternalEcl.g:2209:1: entryRuleLEXICAL_SEARCH_TYPE : ruleLEXICAL_SEARCH_TYPE EOF ;
    public final void entryRuleLEXICAL_SEARCH_TYPE() throws RecognitionException {
        try {
            // InternalEcl.g:2210:1: ( ruleLEXICAL_SEARCH_TYPE EOF )
            // InternalEcl.g:2211:1: ruleLEXICAL_SEARCH_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "ruleLEXICAL_SEARCH_TYPE"
    // InternalEcl.g:2218:1: ruleLEXICAL_SEARCH_TYPE : ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) ;
    public final void ruleLEXICAL_SEARCH_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2222:2: ( ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) )
            // InternalEcl.g:2223:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            {
            // InternalEcl.g:2223:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            // InternalEcl.g:2224:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }
            // InternalEcl.g:2225:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            // InternalEcl.g:2225:4: rule__LEXICAL_SEARCH_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LEXICAL_SEARCH_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "entryRuleDOMAIN"
    // InternalEcl.g:2234:1: entryRuleDOMAIN : ruleDOMAIN EOF ;
    public final void entryRuleDOMAIN() throws RecognitionException {
        try {
            // InternalEcl.g:2235:1: ( ruleDOMAIN EOF )
            // InternalEcl.g:2236:1: ruleDOMAIN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDOMAIN"


    // $ANTLR start "ruleDOMAIN"
    // InternalEcl.g:2243:1: ruleDOMAIN : ( ( rule__DOMAIN__Alternatives ) ) ;
    public final void ruleDOMAIN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2247:2: ( ( ( rule__DOMAIN__Alternatives ) ) )
            // InternalEcl.g:2248:2: ( ( rule__DOMAIN__Alternatives ) )
            {
            // InternalEcl.g:2248:2: ( ( rule__DOMAIN__Alternatives ) )
            // InternalEcl.g:2249:3: ( rule__DOMAIN__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }
            // InternalEcl.g:2250:3: ( rule__DOMAIN__Alternatives )
            // InternalEcl.g:2250:4: rule__DOMAIN__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DOMAIN__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDOMAIN"


    // $ANTLR start "entryRuleNON_NUMERIC_OPERATOR"
    // InternalEcl.g:2259:1: entryRuleNON_NUMERIC_OPERATOR : ruleNON_NUMERIC_OPERATOR EOF ;
    public final void entryRuleNON_NUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEcl.g:2260:1: ( ruleNON_NUMERIC_OPERATOR EOF )
            // InternalEcl.g:2261:1: ruleNON_NUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNON_NUMERIC_OPERATOR"


    // $ANTLR start "ruleNON_NUMERIC_OPERATOR"
    // InternalEcl.g:2268:1: ruleNON_NUMERIC_OPERATOR : ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNON_NUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2272:2: ( ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEcl.g:2273:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEcl.g:2273:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            // InternalEcl.g:2274:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEcl.g:2275:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            // InternalEcl.g:2275:4: rule__NON_NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NON_NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNON_NUMERIC_OPERATOR"


    // $ANTLR start "entryRuleNUMERIC_OPERATOR"
    // InternalEcl.g:2284:1: entryRuleNUMERIC_OPERATOR : ruleNUMERIC_OPERATOR EOF ;
    public final void entryRuleNUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEcl.g:2285:1: ( ruleNUMERIC_OPERATOR EOF )
            // InternalEcl.g:2286:1: ruleNUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_OPERATOR"


    // $ANTLR start "ruleNUMERIC_OPERATOR"
    // InternalEcl.g:2293:1: ruleNUMERIC_OPERATOR : ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2297:2: ( ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEcl.g:2298:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEcl.g:2298:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            // InternalEcl.g:2299:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEcl.g:2300:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            // InternalEcl.g:2300:4: rule__NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_OPERATOR"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEcl.g:2308:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2312:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt4=1;
            }
            else if ( (LA4_0==RULE_COMMA) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalEcl.g:2313:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2313:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2314:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2319:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2319:2: ( RULE_COMMA )
                    // InternalEcl.g:2320:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEcl.g:2329:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2333:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt5=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt5=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt5=2;
                }
                break;
            case RULE_LT:
                {
                alt5=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt5=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt5=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt5=6;
                }
                break;
            case RULE_GT:
                {
                alt5=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt5=8;
                }
                break;
            case RULE_DIGIT_NONZERO:
            case RULE_DIGIT_ZERO:
            case RULE_WILDCARD:
            case RULE_CARET:
            case RULE_ROUND_OPEN:
                {
                alt5=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalEcl.g:2334:2: ( ruleChildOf )
                    {
                    // InternalEcl.g:2334:2: ( ruleChildOf )
                    // InternalEcl.g:2335:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2340:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEcl.g:2340:2: ( ruleChildOrSelfOf )
                    // InternalEcl.g:2341:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2346:2: ( ruleDescendantOf )
                    {
                    // InternalEcl.g:2346:2: ( ruleDescendantOf )
                    // InternalEcl.g:2347:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2352:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEcl.g:2352:2: ( ruleDescendantOrSelfOf )
                    // InternalEcl.g:2353:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:2358:2: ( ruleParentOf )
                    {
                    // InternalEcl.g:2358:2: ( ruleParentOf )
                    // InternalEcl.g:2359:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:2364:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEcl.g:2364:2: ( ruleParentOrSelfOf )
                    // InternalEcl.g:2365:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEcl.g:2370:2: ( ruleAncestorOf )
                    {
                    // InternalEcl.g:2370:2: ( ruleAncestorOf )
                    // InternalEcl.g:2371:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEcl.g:2376:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEcl.g:2376:2: ( ruleAncestorOrSelfOf )
                    // InternalEcl.g:2377:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEcl.g:2382:2: ( ruleEclFocusConcept )
                    {
                    // InternalEcl.g:2382:2: ( ruleEclFocusConcept )
                    // InternalEcl.g:2383:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEcl.g:2392:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2396:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt6=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt6=1;
                }
                break;
            case RULE_DIGIT_NONZERO:
            case RULE_DIGIT_ZERO:
                {
                alt6=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt6=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt6=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalEcl.g:2397:2: ( ruleMemberOf )
                    {
                    // InternalEcl.g:2397:2: ( ruleMemberOf )
                    // InternalEcl.g:2398:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2403:2: ( ruleEclConceptReference )
                    {
                    // InternalEcl.g:2403:2: ( ruleEclConceptReference )
                    // InternalEcl.g:2404:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2409:2: ( ruleAny )
                    {
                    // InternalEcl.g:2409:2: ( ruleAny )
                    // InternalEcl.g:2410:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2415:2: ( ruleNestedExpression )
                    {
                    // InternalEcl.g:2415:2: ( ruleNestedExpression )
                    // InternalEcl.g:2416:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_1_0"
    // InternalEcl.g:2425:1: rule__MemberOf__ConstraintAlternatives_1_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2429:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt7=3;
            switch ( input.LA(1) ) {
            case RULE_DIGIT_NONZERO:
            case RULE_DIGIT_ZERO:
                {
                alt7=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt7=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalEcl.g:2430:2: ( ruleEclConceptReference )
                    {
                    // InternalEcl.g:2430:2: ( ruleEclConceptReference )
                    // InternalEcl.g:2431:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2436:2: ( ruleAny )
                    {
                    // InternalEcl.g:2436:2: ( ruleAny )
                    // InternalEcl.g:2437:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2442:2: ( ruleNestedExpression )
                    {
                    // InternalEcl.g:2442:2: ( ruleNestedExpression )
                    // InternalEcl.g:2443:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_1_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEcl.g:2452:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2456:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_COMMA) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalEcl.g:2457:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2457:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2458:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2463:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2463:2: ( RULE_COMMA )
                    // InternalEcl.g:2464:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEcl.g:2473:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2477:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt9=3;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalEcl.g:2478:2: ( ruleAttributeConstraint )
                    {
                    // InternalEcl.g:2478:2: ( ruleAttributeConstraint )
                    // InternalEcl.g:2479:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2484:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEcl.g:2484:2: ( ruleEclAttributeGroup )
                    // InternalEcl.g:2485:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2490:2: ( ruleNestedRefinement )
                    {
                    // InternalEcl.g:2490:2: ( ruleNestedRefinement )
                    // InternalEcl.g:2491:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEcl.g:2500:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2504:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt10=1;
            }
            else if ( (LA10_0==RULE_COMMA) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalEcl.g:2505:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2505:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2506:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2511:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2511:2: ( RULE_COMMA )
                    // InternalEcl.g:2512:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEcl.g:2521:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2525:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt11=2;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalEcl.g:2526:2: ( ruleAttributeConstraint )
                    {
                    // InternalEcl.g:2526:2: ( ruleAttributeConstraint )
                    // InternalEcl.g:2527:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2532:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEcl.g:2532:2: ( ruleNestedAttributeSet )
                    // InternalEcl.g:2533:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEcl.g:2542:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2546:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt12=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                int LA12_1 = input.LA(2);

                if ( ((LA12_1>=RULE_TRUE_KEYWORD && LA12_1<=RULE_FALSE_KEYWORD)||LA12_1==RULE_HASH||LA12_1==RULE_STRING) ) {
                    alt12=2;
                }
                else if ( ((LA12_1>=RULE_DIGIT_NONZERO && LA12_1<=RULE_WILDCARD)||(LA12_1>=RULE_GT && LA12_1<=RULE_LT)||(LA12_1>=RULE_LT_EM && LA12_1<=RULE_ROUND_OPEN)) ) {
                    alt12=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NOT_EQUAL:
                {
                int LA12_2 = input.LA(2);

                if ( ((LA12_2>=RULE_TRUE_KEYWORD && LA12_2<=RULE_FALSE_KEYWORD)||LA12_2==RULE_HASH||LA12_2==RULE_STRING) ) {
                    alt12=2;
                }
                else if ( ((LA12_2>=RULE_DIGIT_NONZERO && LA12_2<=RULE_WILDCARD)||(LA12_2>=RULE_GT && LA12_2<=RULE_LT)||(LA12_2>=RULE_LT_EM && LA12_2<=RULE_ROUND_OPEN)) ) {
                    alt12=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_GT:
            case RULE_LT:
            case RULE_GTE:
            case RULE_LTE:
                {
                alt12=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalEcl.g:2547:2: ( ruleAttributeComparison )
                    {
                    // InternalEcl.g:2547:2: ( ruleAttributeComparison )
                    // InternalEcl.g:2548:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2553:2: ( ruleDataTypeComparison )
                    {
                    // InternalEcl.g:2553:2: ( ruleDataTypeComparison )
                    // InternalEcl.g:2554:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEcl.g:2563:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2567:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt13=4;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalEcl.g:2568:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEcl.g:2568:2: ( ruleBooleanValueComparison )
                    // InternalEcl.g:2569:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2574:2: ( ruleStringValueComparison )
                    {
                    // InternalEcl.g:2574:2: ( ruleStringValueComparison )
                    // InternalEcl.g:2575:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2580:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEcl.g:2580:2: ( ruleIntegerValueComparison )
                    // InternalEcl.g:2581:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2586:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEcl.g:2586:2: ( ruleDecimalValueComparison )
                    // InternalEcl.g:2587:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEcl.g:2596:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2600:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_COMMA) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalEcl.g:2601:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2601:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2602:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2607:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2607:2: ( RULE_COMMA )
                    // InternalEcl.g:2608:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEcl.g:2617:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2621:1: ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) )
            int alt15=13;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // InternalEcl.g:2622:2: ( ruleTermFilter )
                    {
                    // InternalEcl.g:2622:2: ( ruleTermFilter )
                    // InternalEcl.g:2623:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2628:2: ( ruleLanguageFilter )
                    {
                    // InternalEcl.g:2628:2: ( ruleLanguageFilter )
                    // InternalEcl.g:2629:3: ruleLanguageFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2634:2: ( ruleTypeFilter )
                    {
                    // InternalEcl.g:2634:2: ( ruleTypeFilter )
                    // InternalEcl.g:2635:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2640:2: ( ruleDialectFilter )
                    {
                    // InternalEcl.g:2640:2: ( ruleDialectFilter )
                    // InternalEcl.g:2641:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:2646:2: ( ruleActiveFilter )
                    {
                    // InternalEcl.g:2646:2: ( ruleActiveFilter )
                    // InternalEcl.g:2647:3: ruleActiveFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleActiveFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:2652:2: ( rulePreferredInFilter )
                    {
                    // InternalEcl.g:2652:2: ( rulePreferredInFilter )
                    // InternalEcl.g:2653:3: rulePreferredInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreferredInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEcl.g:2658:2: ( ruleAcceptableInFilter )
                    {
                    // InternalEcl.g:2658:2: ( ruleAcceptableInFilter )
                    // InternalEcl.g:2659:3: ruleAcceptableInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptableInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEcl.g:2664:2: ( ruleLanguageRefSetFilter )
                    {
                    // InternalEcl.g:2664:2: ( ruleLanguageRefSetFilter )
                    // InternalEcl.g:2665:3: ruleLanguageRefSetFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageRefSetFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEcl.g:2670:2: ( ruleModuleFilter )
                    {
                    // InternalEcl.g:2670:2: ( ruleModuleFilter )
                    // InternalEcl.g:2671:3: ruleModuleFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleModuleFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEcl.g:2676:2: ( ruleSemanticTagFilter )
                    {
                    // InternalEcl.g:2676:2: ( ruleSemanticTagFilter )
                    // InternalEcl.g:2677:3: ruleSemanticTagFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSemanticTagFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEcl.g:2682:2: ( ruleEffectiveTimeFilter )
                    {
                    // InternalEcl.g:2682:2: ( ruleEffectiveTimeFilter )
                    // InternalEcl.g:2683:3: ruleEffectiveTimeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEffectiveTimeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEcl.g:2688:2: ( ruleCaseSignificanceFilter )
                    {
                    // InternalEcl.g:2688:2: ( ruleCaseSignificanceFilter )
                    // InternalEcl.g:2689:3: ruleCaseSignificanceFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCaseSignificanceFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEcl.g:2694:2: ( ruleNestedFilter )
                    {
                    // InternalEcl.g:2694:2: ( ruleNestedFilter )
                    // InternalEcl.g:2695:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_12()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__TermFilter__Alternatives_1"
    // InternalEcl.g:2704:1: rule__TermFilter__Alternatives_1 : ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) );
    public final void rule__TermFilter__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2708:1: ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_EQUAL) ) {
                int LA16_1 = input.LA(2);

                if ( ((LA16_1>=RULE_EXACT_KEYWORD && LA16_1<=RULE_REGEX_KEYWORD)||LA16_1==RULE_WILD_KEYWORD||LA16_1==RULE_STRING) ) {
                    alt16=1;
                }
                else if ( (LA16_1==RULE_ROUND_OPEN) ) {
                    alt16=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA16_0==RULE_NOT_EQUAL) ) {
                int LA16_2 = input.LA(2);

                if ( ((LA16_2>=RULE_EXACT_KEYWORD && LA16_2<=RULE_REGEX_KEYWORD)||LA16_2==RULE_WILD_KEYWORD||LA16_2==RULE_STRING) ) {
                    alt16=1;
                }
                else if ( (LA16_2==RULE_ROUND_OPEN) ) {
                    alt16=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEcl.g:2709:2: ( ruleTypedTermFilter )
                    {
                    // InternalEcl.g:2709:2: ( ruleTypedTermFilter )
                    // InternalEcl.g:2710:3: ruleTypedTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2715:2: ( ruleTypedTermFilterSet )
                    {
                    // InternalEcl.g:2715:2: ( ruleTypedTermFilterSet )
                    // InternalEcl.g:2716:3: ruleTypedTermFilterSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilterSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Alternatives_1"


    // $ANTLR start "rule__LanguageFilter__Alternatives_2"
    // InternalEcl.g:2725:1: rule__LanguageFilter__Alternatives_2 : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2729:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_CONJUNCTION_KEYWORD||(LA17_0>=RULE_TRUE_KEYWORD && LA17_0<=RULE_KEYWORD)) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_ROUND_OPEN) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEcl.g:2730:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEcl.g:2730:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEcl.g:2731:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEcl.g:2732:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    // InternalEcl.g:2732:4: rule__LanguageFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2736:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:2736:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    // InternalEcl.g:2737:3: ( rule__LanguageFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:2738:3: ( rule__LanguageFilter__Group_2_1__0 )
                    // InternalEcl.g:2738:4: rule__LanguageFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEcl.g:2746:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2750:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_TYPEID_KEYWORD) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_TYPE_KEYWORD) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalEcl.g:2751:2: ( ruleTypeIdFilter )
                    {
                    // InternalEcl.g:2751:2: ( ruleTypeIdFilter )
                    // InternalEcl.g:2752:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2757:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEcl.g:2757:2: ( ruleTypeTokenFilter )
                    // InternalEcl.g:2758:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeIdFilter__TypeAlternatives_2_0"
    // InternalEcl.g:2767:1: rule__TypeIdFilter__TypeAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__TypeIdFilter__TypeAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2771:1: ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( ((LA19_0>=RULE_DIGIT_NONZERO && LA19_0<=RULE_DIGIT_ZERO)) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_ROUND_OPEN) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEcl.g:2772:2: ( ruleEclConceptReference )
                    {
                    // InternalEcl.g:2772:2: ( ruleEclConceptReference )
                    // InternalEcl.g:2773:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2778:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEcl.g:2778:2: ( ruleEclConceptReferenceSet )
                    // InternalEcl.g:2779:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAlternatives_2_0"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEcl.g:2788:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2792:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_CONJUNCTION_KEYWORD||(LA20_0>=RULE_TRUE_KEYWORD && LA20_0<=RULE_KEYWORD)) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_ROUND_OPEN) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalEcl.g:2793:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEcl.g:2793:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEcl.g:2794:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEcl.g:2795:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEcl.g:2795:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2799:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:2799:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEcl.g:2800:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:2801:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEcl.g:2801:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEcl.g:2809:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2813:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_DIALECTID_KEYWORD) ) {
                alt21=1;
            }
            else if ( (LA21_0==RULE_DIALECT_KEYWORD) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalEcl.g:2814:2: ( ruleDialectIdFilter )
                    {
                    // InternalEcl.g:2814:2: ( ruleDialectIdFilter )
                    // InternalEcl.g:2815:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2820:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEcl.g:2820:2: ( ruleDialectAliasFilter )
                    // InternalEcl.g:2821:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEcl.g:2830:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2834:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( ((LA22_0>=RULE_DIGIT_NONZERO && LA22_0<=RULE_DIGIT_ZERO)) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_ROUND_OPEN) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEcl.g:2835:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEcl.g:2835:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEcl.g:2836:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEcl.g:2837:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEcl.g:2837:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2841:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:2841:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEcl.g:2842:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:2843:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEcl.g:2843:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEcl.g:2851:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2855:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_CONJUNCTION_KEYWORD||(LA23_0>=RULE_DIGIT_NONZERO && LA23_0<=RULE_DIGIT_ZERO)||(LA23_0>=RULE_DASH && LA23_0<=RULE_KEYWORD)) ) {
                alt23=1;
            }
            else if ( (LA23_0==RULE_ROUND_OPEN) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalEcl.g:2856:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEcl.g:2856:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEcl.g:2857:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEcl.g:2858:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEcl.g:2858:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2862:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:2862:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEcl.g:2863:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:2864:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEcl.g:2864:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__Acceptability__Alternatives"
    // InternalEcl.g:2872:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );
    public final void rule__Acceptability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2876:1: ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_ROUND_OPEN) ) {
                int LA24_1 = input.LA(2);

                if ( ((LA24_1>=RULE_DIGIT_NONZERO && LA24_1<=RULE_DIGIT_ZERO)) ) {
                    alt24=1;
                }
                else if ( (LA24_1==RULE_CONJUNCTION_KEYWORD||(LA24_1>=RULE_TRUE_KEYWORD && LA24_1<=RULE_KEYWORD)) ) {
                    alt24=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 24, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEcl.g:2877:2: ( ruleAcceptabilityIdSet )
                    {
                    // InternalEcl.g:2877:2: ( ruleAcceptabilityIdSet )
                    // InternalEcl.g:2878:3: ruleAcceptabilityIdSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityIdSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2883:2: ( ruleAcceptabilityTokenSet )
                    {
                    // InternalEcl.g:2883:2: ( ruleAcceptabilityTokenSet )
                    // InternalEcl.g:2884:3: ruleAcceptabilityTokenSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityTokenSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__Alternatives"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives"
    // InternalEcl.g:2893:1: rule__SnomedIdentifier__Alternatives : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2897:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_DIGIT_NONZERO) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_DIGIT_ZERO) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalEcl.g:2898:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEcl.g:2898:2: ( RULE_DIGIT_NONZERO )
                    // InternalEcl.g:2899:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2904:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEcl.g:2904:2: ( RULE_DIGIT_ZERO )
                    // InternalEcl.g:2905:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives"
    // InternalEcl.g:2914:1: rule__NonNegativeInteger__Alternatives : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__NonNegativeInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2918:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_DIGIT_NONZERO) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_DIGIT_ZERO) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEcl.g:2919:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEcl.g:2919:2: ( RULE_DIGIT_NONZERO )
                    // InternalEcl.g:2920:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2925:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEcl.g:2925:2: ( RULE_DIGIT_ZERO )
                    // InternalEcl.g:2926:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_ZEROTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives"


    // $ANTLR start "rule__NonNegativeDecimal__Alternatives_2"
    // InternalEcl.g:2935:1: rule__NonNegativeDecimal__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) );
    public final void rule__NonNegativeDecimal__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2939:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_DIGIT_ZERO ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_DIGIT_NONZERO) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_DIGIT_ZERO) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalEcl.g:2940:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEcl.g:2940:2: ( RULE_DIGIT_NONZERO )
                    // InternalEcl.g:2941:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2946:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEcl.g:2946:2: ( RULE_DIGIT_ZERO )
                    // InternalEcl.g:2947:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_ZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_ZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Alternatives_2"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEcl.g:2956:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2960:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=RULE_DIGIT_NONZERO && LA28_0<=RULE_DIGIT_ZERO)) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_WILDCARD) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEcl.g:2961:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEcl.g:2961:2: ( ruleNonNegativeInteger )
                    // InternalEcl.g:2962:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2967:2: ( RULE_WILDCARD )
                    {
                    // InternalEcl.g:2967:2: ( RULE_WILDCARD )
                    // InternalEcl.g:2968:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEcl.g:2977:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2981:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_PLUS) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_DASH) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEcl.g:2982:2: ( RULE_PLUS )
                    {
                    // InternalEcl.g:2982:2: ( RULE_PLUS )
                    // InternalEcl.g:2983:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2988:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:2988:2: ( RULE_DASH )
                    // InternalEcl.g:2989:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEcl.g:2998:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3002:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_PLUS) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_DASH) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEcl.g:3003:2: ( RULE_PLUS )
                    {
                    // InternalEcl.g:3003:2: ( RULE_PLUS )
                    // InternalEcl.g:3004:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3009:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:3009:2: ( RULE_DASH )
                    // InternalEcl.g:3010:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEcl.g:3019:1: rule__Boolean__Alternatives : ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3023:1: ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_TRUE_KEYWORD) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_FALSE_KEYWORD) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEcl.g:3024:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEcl.g:3024:2: ( RULE_TRUE_KEYWORD )
                    // InternalEcl.g:3025:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3030:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEcl.g:3030:2: ( RULE_FALSE_KEYWORD )
                    // InternalEcl.g:3031:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__UnquotedString__Alternatives"
    // InternalEcl.g:3040:1: rule__UnquotedString__Alternatives : ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_CONCEPT_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) );
    public final void rule__UnquotedString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3044:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_CONCEPT_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) )
            int alt32=27;
            switch ( input.LA(1) ) {
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
                {
                alt32=1;
                }
                break;
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
                {
                alt32=2;
                }
                break;
            case RULE_EFFECTIVE_TIME_KEYWORD:
                {
                alt32=3;
                }
                break;
            case RULE_ACCEPTABLE_IN_KEYWORD:
                {
                alt32=4;
                }
                break;
            case RULE_DESCRIPTION_KEYWORD:
                {
                alt32=5;
                }
                break;
            case RULE_PREFERRED_IN_KEYWORD:
                {
                alt32=6;
                }
                break;
            case RULE_SEMANTIC_TAG_KEYWORD:
                {
                alt32=7;
                }
                break;
            case RULE_DIALECTID_KEYWORD:
                {
                alt32=8;
                }
                break;
            case RULE_LANGUAGE_KEYWORD:
                {
                alt32=9;
                }
                break;
            case RULE_MODULEID_KEYWORD:
                {
                alt32=10;
                }
                break;
            case RULE_CONCEPT_KEYWORD:
                {
                alt32=11;
                }
                break;
            case RULE_DIALECT_KEYWORD:
                {
                alt32=12;
                }
                break;
            case RULE_ACTIVE_KEYWORD:
                {
                alt32=13;
                }
                break;
            case RULE_TYPEID_KEYWORD:
                {
                alt32=14;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt32=15;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt32=16;
                }
                break;
            case RULE_FALSE_KEYWORD:
                {
                alt32=17;
                }
                break;
            case RULE_MATCH_KEYWORD:
                {
                alt32=18;
                }
                break;
            case RULE_REGEX_KEYWORD:
                {
                alt32=19;
                }
                break;
            case RULE_TERM_KEYWORD:
                {
                alt32=20;
                }
                break;
            case RULE_TRUE_KEYWORD:
                {
                alt32=21;
                }
                break;
            case RULE_TYPE_KEYWORD:
                {
                alt32=22;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt32=23;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt32=24;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt32=25;
                }
                break;
            case RULE_REVERSED:
                {
                alt32=26;
                }
                break;
            case RULE_KEYWORD:
                {
                alt32=27;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalEcl.g:3045:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    {
                    // InternalEcl.g:3045:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    // InternalEcl.g:3046:3: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3051:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    {
                    // InternalEcl.g:3051:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    // InternalEcl.g:3052:3: RULE_LANGUAGE_REFSET_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3057:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    {
                    // InternalEcl.g:3057:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    // InternalEcl.g:3058:3: RULE_EFFECTIVE_TIME_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3063:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    {
                    // InternalEcl.g:3063:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    // InternalEcl.g:3064:3: RULE_ACCEPTABLE_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:3069:2: ( RULE_DESCRIPTION_KEYWORD )
                    {
                    // InternalEcl.g:3069:2: ( RULE_DESCRIPTION_KEYWORD )
                    // InternalEcl.g:3070:3: RULE_DESCRIPTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_DESCRIPTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:3075:2: ( RULE_PREFERRED_IN_KEYWORD )
                    {
                    // InternalEcl.g:3075:2: ( RULE_PREFERRED_IN_KEYWORD )
                    // InternalEcl.g:3076:3: RULE_PREFERRED_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEcl.g:3081:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    {
                    // InternalEcl.g:3081:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    // InternalEcl.g:3082:3: RULE_SEMANTIC_TAG_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEcl.g:3087:2: ( RULE_DIALECTID_KEYWORD )
                    {
                    // InternalEcl.g:3087:2: ( RULE_DIALECTID_KEYWORD )
                    // InternalEcl.g:3088:3: RULE_DIALECTID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_7()); 
                    }
                    match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEcl.g:3093:2: ( RULE_LANGUAGE_KEYWORD )
                    {
                    // InternalEcl.g:3093:2: ( RULE_LANGUAGE_KEYWORD )
                    // InternalEcl.g:3094:3: RULE_LANGUAGE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_8()); 
                    }
                    match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEcl.g:3099:2: ( RULE_MODULEID_KEYWORD )
                    {
                    // InternalEcl.g:3099:2: ( RULE_MODULEID_KEYWORD )
                    // InternalEcl.g:3100:3: RULE_MODULEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_9()); 
                    }
                    match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEcl.g:3105:2: ( RULE_CONCEPT_KEYWORD )
                    {
                    // InternalEcl.g:3105:2: ( RULE_CONCEPT_KEYWORD )
                    // InternalEcl.g:3106:3: RULE_CONCEPT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONCEPT_KEYWORDTerminalRuleCall_10()); 
                    }
                    match(input,RULE_CONCEPT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONCEPT_KEYWORDTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEcl.g:3111:2: ( RULE_DIALECT_KEYWORD )
                    {
                    // InternalEcl.g:3111:2: ( RULE_DIALECT_KEYWORD )
                    // InternalEcl.g:3112:3: RULE_DIALECT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_11()); 
                    }
                    match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEcl.g:3117:2: ( RULE_ACTIVE_KEYWORD )
                    {
                    // InternalEcl.g:3117:2: ( RULE_ACTIVE_KEYWORD )
                    // InternalEcl.g:3118:3: RULE_ACTIVE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_12()); 
                    }
                    match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEcl.g:3123:2: ( RULE_TYPEID_KEYWORD )
                    {
                    // InternalEcl.g:3123:2: ( RULE_TYPEID_KEYWORD )
                    // InternalEcl.g:3124:3: RULE_TYPEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_13()); 
                    }
                    match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEcl.g:3129:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEcl.g:3129:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEcl.g:3130:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_14()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEcl.g:3135:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEcl.g:3135:2: ( RULE_EXACT_KEYWORD )
                    // InternalEcl.g:3136:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_15()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEcl.g:3141:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEcl.g:3141:2: ( RULE_FALSE_KEYWORD )
                    // InternalEcl.g:3142:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_16()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEcl.g:3147:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEcl.g:3147:2: ( RULE_MATCH_KEYWORD )
                    // InternalEcl.g:3148:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_17()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalEcl.g:3153:2: ( RULE_REGEX_KEYWORD )
                    {
                    // InternalEcl.g:3153:2: ( RULE_REGEX_KEYWORD )
                    // InternalEcl.g:3154:3: RULE_REGEX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_18()); 
                    }
                    match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalEcl.g:3159:2: ( RULE_TERM_KEYWORD )
                    {
                    // InternalEcl.g:3159:2: ( RULE_TERM_KEYWORD )
                    // InternalEcl.g:3160:3: RULE_TERM_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_19()); 
                    }
                    match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_19()); 
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalEcl.g:3165:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEcl.g:3165:2: ( RULE_TRUE_KEYWORD )
                    // InternalEcl.g:3166:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_20()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_20()); 
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalEcl.g:3171:2: ( RULE_TYPE_KEYWORD )
                    {
                    // InternalEcl.g:3171:2: ( RULE_TYPE_KEYWORD )
                    // InternalEcl.g:3172:3: RULE_TYPE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_21()); 
                    }
                    match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_21()); 
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalEcl.g:3177:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEcl.g:3177:2: ( RULE_WILD_KEYWORD )
                    // InternalEcl.g:3178:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_22()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_22()); 
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalEcl.g:3183:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:3183:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:3184:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_23()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_23()); 
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalEcl.g:3189:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:3189:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEcl.g:3190:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_24()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_24()); 
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalEcl.g:3195:2: ( RULE_REVERSED )
                    {
                    // InternalEcl.g:3195:2: ( RULE_REVERSED )
                    // InternalEcl.g:3196:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_25()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_25()); 
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalEcl.g:3201:2: ( RULE_KEYWORD )
                    {
                    // InternalEcl.g:3201:2: ( RULE_KEYWORD )
                    // InternalEcl.g:3202:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_26()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_26()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnquotedString__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives"
    // InternalEcl.g:3211:1: rule__DialectAliasValue__Alternatives : ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT_ZERO ) | ( RULE_DIGIT_NONZERO ) );
    public final void rule__DialectAliasValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3215:1: ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT_ZERO ) | ( RULE_DIGIT_NONZERO ) )
            int alt33=4;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt33=1;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
            case RULE_TRUE_KEYWORD:
            case RULE_FALSE_KEYWORD:
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
            case RULE_EFFECTIVE_TIME_KEYWORD:
            case RULE_ACCEPTABLE_IN_KEYWORD:
            case RULE_DESCRIPTION_KEYWORD:
            case RULE_PREFERRED_IN_KEYWORD:
            case RULE_SEMANTIC_TAG_KEYWORD:
            case RULE_DIALECTID_KEYWORD:
            case RULE_LANGUAGE_KEYWORD:
            case RULE_MODULEID_KEYWORD:
            case RULE_CONCEPT_KEYWORD:
            case RULE_DIALECT_KEYWORD:
            case RULE_ACTIVE_KEYWORD:
            case RULE_TYPEID_KEYWORD:
            case RULE_EXCLUSION_KEYWORD:
            case RULE_EXACT_KEYWORD:
            case RULE_MATCH_KEYWORD:
            case RULE_REGEX_KEYWORD:
            case RULE_TERM_KEYWORD:
            case RULE_TYPE_KEYWORD:
            case RULE_WILD_KEYWORD:
            case RULE_DISJUNCTION_KEYWORD:
            case RULE_REVERSED:
            case RULE_KEYWORD:
                {
                alt33=2;
                }
                break;
            case RULE_DIGIT_ZERO:
                {
                alt33=3;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt33=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalEcl.g:3216:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:3216:2: ( RULE_DASH )
                    // InternalEcl.g:3217:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3222:2: ( ruleUnquotedString )
                    {
                    // InternalEcl.g:3222:2: ( ruleUnquotedString )
                    // InternalEcl.g:3223:3: ruleUnquotedString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnquotedString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3228:2: ( RULE_DIGIT_ZERO )
                    {
                    // InternalEcl.g:3228:2: ( RULE_DIGIT_ZERO )
                    // InternalEcl.g:3229:3: RULE_DIGIT_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_ZEROTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DIGIT_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_ZEROTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3234:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEcl.g:3234:2: ( RULE_DIGIT_NONZERO )
                    // InternalEcl.g:3235:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_3()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives"


    // $ANTLR start "rule__LEXICAL_SEARCH_TYPE__Alternatives"
    // InternalEcl.g:3244:1: rule__LEXICAL_SEARCH_TYPE__Alternatives : ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_EXACT_KEYWORD ) );
    public final void rule__LEXICAL_SEARCH_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3248:1: ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_EXACT_KEYWORD ) )
            int alt34=4;
            switch ( input.LA(1) ) {
            case RULE_MATCH_KEYWORD:
                {
                alt34=1;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt34=2;
                }
                break;
            case RULE_REGEX_KEYWORD:
                {
                alt34=3;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt34=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalEcl.g:3249:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEcl.g:3249:2: ( RULE_MATCH_KEYWORD )
                    // InternalEcl.g:3250:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3255:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEcl.g:3255:2: ( RULE_WILD_KEYWORD )
                    // InternalEcl.g:3256:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3261:2: ( RULE_REGEX_KEYWORD )
                    {
                    // InternalEcl.g:3261:2: ( RULE_REGEX_KEYWORD )
                    // InternalEcl.g:3262:3: RULE_REGEX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getREGEX_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getREGEX_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3267:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEcl.g:3267:2: ( RULE_EXACT_KEYWORD )
                    // InternalEcl.g:3268:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LEXICAL_SEARCH_TYPE__Alternatives"


    // $ANTLR start "rule__DOMAIN__Alternatives"
    // InternalEcl.g:3277:1: rule__DOMAIN__Alternatives : ( ( RULE_CONCEPT_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) );
    public final void rule__DOMAIN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3281:1: ( ( RULE_CONCEPT_KEYWORD ) | ( RULE_DESCRIPTION_KEYWORD ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_CONCEPT_KEYWORD) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_DESCRIPTION_KEYWORD) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEcl.g:3282:2: ( RULE_CONCEPT_KEYWORD )
                    {
                    // InternalEcl.g:3282:2: ( RULE_CONCEPT_KEYWORD )
                    // InternalEcl.g:3283:3: RULE_CONCEPT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getCONCEPT_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CONCEPT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getCONCEPT_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3288:2: ( RULE_DESCRIPTION_KEYWORD )
                    {
                    // InternalEcl.g:3288:2: ( RULE_DESCRIPTION_KEYWORD )
                    // InternalEcl.g:3289:3: RULE_DESCRIPTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DESCRIPTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getDESCRIPTION_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DOMAIN__Alternatives"


    // $ANTLR start "rule__NON_NUMERIC_OPERATOR__Alternatives"
    // InternalEcl.g:3298:1: rule__NON_NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__NON_NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3302:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_EQUAL) ) {
                alt36=1;
            }
            else if ( (LA36_0==RULE_NOT_EQUAL) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalEcl.g:3303:2: ( RULE_EQUAL )
                    {
                    // InternalEcl.g:3303:2: ( RULE_EQUAL )
                    // InternalEcl.g:3304:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3309:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEcl.g:3309:2: ( RULE_NOT_EQUAL )
                    // InternalEcl.g:3310:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NON_NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__NUMERIC_OPERATOR__Alternatives"
    // InternalEcl.g:3319:1: rule__NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3323:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt37=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt37=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt37=2;
                }
                break;
            case RULE_GT:
                {
                alt37=3;
                }
                break;
            case RULE_LT:
                {
                alt37=4;
                }
                break;
            case RULE_GTE:
                {
                alt37=5;
                }
                break;
            case RULE_LTE:
                {
                alt37=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalEcl.g:3324:2: ( RULE_EQUAL )
                    {
                    // InternalEcl.g:3324:2: ( RULE_EQUAL )
                    // InternalEcl.g:3325:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3330:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEcl.g:3330:2: ( RULE_NOT_EQUAL )
                    // InternalEcl.g:3331:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3336:2: ( RULE_GT )
                    {
                    // InternalEcl.g:3336:2: ( RULE_GT )
                    // InternalEcl.g:3337:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3342:2: ( RULE_LT )
                    {
                    // InternalEcl.g:3342:2: ( RULE_LT )
                    // InternalEcl.g:3343:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:3348:2: ( RULE_GTE )
                    {
                    // InternalEcl.g:3348:2: ( RULE_GTE )
                    // InternalEcl.g:3349:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:3354:2: ( RULE_LTE )
                    {
                    // InternalEcl.g:3354:2: ( RULE_LTE )
                    // InternalEcl.g:3355:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__Script__Group__0"
    // InternalEcl.g:3364:1: rule__Script__Group__0 : rule__Script__Group__0__Impl rule__Script__Group__1 ;
    public final void rule__Script__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3368:1: ( rule__Script__Group__0__Impl rule__Script__Group__1 )
            // InternalEcl.g:3369:2: rule__Script__Group__0__Impl rule__Script__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Script__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0"


    // $ANTLR start "rule__Script__Group__0__Impl"
    // InternalEcl.g:3376:1: rule__Script__Group__0__Impl : ( () ) ;
    public final void rule__Script__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3380:1: ( ( () ) )
            // InternalEcl.g:3381:1: ( () )
            {
            // InternalEcl.g:3381:1: ( () )
            // InternalEcl.g:3382:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }
            // InternalEcl.g:3383:2: ()
            // InternalEcl.g:3383:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0__Impl"


    // $ANTLR start "rule__Script__Group__1"
    // InternalEcl.g:3391:1: rule__Script__Group__1 : rule__Script__Group__1__Impl ;
    public final void rule__Script__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3395:1: ( rule__Script__Group__1__Impl )
            // InternalEcl.g:3396:2: rule__Script__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1"


    // $ANTLR start "rule__Script__Group__1__Impl"
    // InternalEcl.g:3402:1: rule__Script__Group__1__Impl : ( ( rule__Script__ConstraintAssignment_1 )? ) ;
    public final void rule__Script__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3406:1: ( ( ( rule__Script__ConstraintAssignment_1 )? ) )
            // InternalEcl.g:3407:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            {
            // InternalEcl.g:3407:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            // InternalEcl.g:3408:2: ( rule__Script__ConstraintAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:3409:2: ( rule__Script__ConstraintAssignment_1 )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=RULE_DIGIT_NONZERO && LA38_0<=RULE_WILDCARD)||(LA38_0>=RULE_GT && LA38_0<=RULE_LT)||(LA38_0>=RULE_LT_EM && LA38_0<=RULE_ROUND_OPEN)) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalEcl.g:3409:3: rule__Script__ConstraintAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Script__ConstraintAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEcl.g:3418:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3422:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEcl.g:3423:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:3430:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3434:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEcl.g:3435:1: ( ruleAndExpressionConstraint )
            {
            // InternalEcl.g:3435:1: ( ruleAndExpressionConstraint )
            // InternalEcl.g:3436:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEcl.g:3445:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3449:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:3450:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:3456:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3460:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:3461:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:3461:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:3462:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:3463:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA39_5 = input.LA(2);

                    if ( (synpred96_InternalEcl()) ) {
                        alt39=1;
                    }


                }


                switch (alt39) {
            	case 1 :
            	    // InternalEcl.g:3463:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEcl.g:3472:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3476:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEcl.g:3477:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:3484:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3488:1: ( ( () ) )
            // InternalEcl.g:3489:1: ( () )
            {
            // InternalEcl.g:3489:1: ( () )
            // InternalEcl.g:3490:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEcl.g:3491:2: ()
            // InternalEcl.g:3491:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEcl.g:3499:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3503:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEcl.g:3504:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:3511:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3515:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:3516:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:3516:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:3517:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEcl.g:3526:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3530:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:3531:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:3537:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3541:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEcl.g:3542:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:3542:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEcl.g:3543:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:3544:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEcl.g:3544:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEcl.g:3553:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3557:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEcl.g:3558:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:3565:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3569:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEcl.g:3570:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEcl.g:3570:1: ( ruleExclusionExpressionConstraint )
            // InternalEcl.g:3571:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEcl.g:3580:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3584:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:3585:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:3591:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3595:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:3596:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:3596:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:3597:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:3598:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA40_4 = input.LA(2);

                    if ( (synpred97_InternalEcl()) ) {
                        alt40=1;
                    }


                }
                else if ( (LA40_0==RULE_COMMA) ) {
                    int LA40_5 = input.LA(2);

                    if ( (synpred97_InternalEcl()) ) {
                        alt40=1;
                    }


                }


                switch (alt40) {
            	case 1 :
            	    // InternalEcl.g:3598:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEcl.g:3607:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3611:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEcl.g:3612:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:3619:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3623:1: ( ( () ) )
            // InternalEcl.g:3624:1: ( () )
            {
            // InternalEcl.g:3624:1: ( () )
            // InternalEcl.g:3625:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEcl.g:3626:2: ()
            // InternalEcl.g:3626:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEcl.g:3634:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3638:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEcl.g:3639:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:3646:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3650:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEcl.g:3651:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEcl.g:3651:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEcl.g:3652:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:3653:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEcl.g:3653:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEcl.g:3661:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3665:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:3666:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:3672:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3676:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEcl.g:3677:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:3677:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEcl.g:3678:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:3679:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEcl.g:3679:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEcl.g:3688:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3692:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEcl.g:3693:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:3700:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3704:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEcl.g:3705:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEcl.g:3705:1: ( ruleRefinedExpressionConstraint )
            // InternalEcl.g:3706:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEcl.g:3715:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3719:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:3720:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:3726:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3730:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEcl.g:3731:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEcl.g:3731:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEcl.g:3732:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:3733:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_EXCLUSION_KEYWORD) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalEcl.g:3733:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEcl.g:3742:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3746:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEcl.g:3747:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:3754:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3758:1: ( ( () ) )
            // InternalEcl.g:3759:1: ( () )
            {
            // InternalEcl.g:3759:1: ( () )
            // InternalEcl.g:3760:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEcl.g:3761:2: ()
            // InternalEcl.g:3761:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEcl.g:3769:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3773:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEcl.g:3774:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:3781:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( RULE_EXCLUSION_KEYWORD ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3785:1: ( ( RULE_EXCLUSION_KEYWORD ) )
            // InternalEcl.g:3786:1: ( RULE_EXCLUSION_KEYWORD )
            {
            // InternalEcl.g:3786:1: ( RULE_EXCLUSION_KEYWORD )
            // InternalEcl.g:3787:2: RULE_EXCLUSION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEcl.g:3796:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3800:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:3801:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:3807:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3811:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEcl.g:3812:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:3812:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEcl.g:3813:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:3814:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEcl.g:3814:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEcl.g:3823:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3827:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEcl.g:3828:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:3835:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3839:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEcl.g:3840:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEcl.g:3840:1: ( ruleDottedExpressionConstraint )
            // InternalEcl.g:3841:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEcl.g:3850:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3854:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:3855:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:3861:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3865:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEcl.g:3866:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEcl.g:3866:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEcl.g:3867:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:3868:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_COLON) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalEcl.g:3868:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEcl.g:3877:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3881:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEcl.g:3882:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:3889:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3893:1: ( ( () ) )
            // InternalEcl.g:3894:1: ( () )
            {
            // InternalEcl.g:3894:1: ( () )
            // InternalEcl.g:3895:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEcl.g:3896:2: ()
            // InternalEcl.g:3896:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEcl.g:3904:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3908:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEcl.g:3909:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:3916:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3920:1: ( ( RULE_COLON ) )
            // InternalEcl.g:3921:1: ( RULE_COLON )
            {
            // InternalEcl.g:3921:1: ( RULE_COLON )
            // InternalEcl.g:3922:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEcl.g:3931:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3935:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:3936:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:3942:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3946:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEcl.g:3947:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEcl.g:3947:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEcl.g:3948:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEcl.g:3949:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEcl.g:3949:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEcl.g:3958:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3962:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEcl.g:3963:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:3970:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3974:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:3975:1: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:3975:1: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:3976:2: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEcl.g:3985:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3989:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:3990:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:3996:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4000:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:4001:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:4001:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:4002:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4003:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==RULE_DOT) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalEcl.g:4003:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEcl.g:4012:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4016:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4017:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4024:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4028:1: ( ( () ) )
            // InternalEcl.g:4029:1: ( () )
            {
            // InternalEcl.g:4029:1: ( () )
            // InternalEcl.g:4030:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEcl.g:4031:2: ()
            // InternalEcl.g:4031:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEcl.g:4039:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4043:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEcl.g:4044:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4051:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4055:1: ( ( RULE_DOT ) )
            // InternalEcl.g:4056:1: ( RULE_DOT )
            {
            // InternalEcl.g:4056:1: ( RULE_DOT )
            // InternalEcl.g:4057:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEcl.g:4066:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4070:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:4071:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:4077:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4081:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEcl.g:4082:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEcl.g:4082:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEcl.g:4083:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEcl.g:4084:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEcl.g:4084:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0"
    // InternalEcl.g:4093:1: rule__FilteredExpressionConstraint__Group__0 : rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 ;
    public final void rule__FilteredExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4097:1: ( rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 )
            // InternalEcl.g:4098:2: rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__FilteredExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4105:1: rule__FilteredExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__FilteredExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4109:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEcl.g:4110:1: ( ruleSubExpressionConstraint )
            {
            // InternalEcl.g:4110:1: ( ruleSubExpressionConstraint )
            // InternalEcl.g:4111:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1"
    // InternalEcl.g:4120:1: rule__FilteredExpressionConstraint__Group__1 : rule__FilteredExpressionConstraint__Group__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4124:1: ( rule__FilteredExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4125:2: rule__FilteredExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4131:1: rule__FilteredExpressionConstraint__Group__1__Impl : ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__FilteredExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4135:1: ( ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:4136:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:4136:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:4137:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4138:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==RULE_DOUBLE_CURLY_OPEN) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalEcl.g:4138:3: rule__FilteredExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_16);
            	    rule__FilteredExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0"
    // InternalEcl.g:4147:1: rule__FilteredExpressionConstraint__Group_1__0 : rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 ;
    public final void rule__FilteredExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4151:1: ( rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4152:2: rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__FilteredExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4159:1: rule__FilteredExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4163:1: ( ( () ) )
            // InternalEcl.g:4164:1: ( () )
            {
            // InternalEcl.g:4164:1: ( () )
            // InternalEcl.g:4165:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEcl.g:4166:2: ()
            // InternalEcl.g:4166:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1"
    // InternalEcl.g:4174:1: rule__FilteredExpressionConstraint__Group_1__1 : rule__FilteredExpressionConstraint__Group_1__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4178:1: ( rule__FilteredExpressionConstraint__Group_1__1__Impl )
            // InternalEcl.g:4179:2: rule__FilteredExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4185:1: rule__FilteredExpressionConstraint__Group_1__1__Impl : ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4189:1: ( ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) )
            // InternalEcl.g:4190:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            {
            // InternalEcl.g:4190:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            // InternalEcl.g:4191:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }
            // InternalEcl.g:4192:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            // InternalEcl.g:4192:3: rule__FilteredExpressionConstraint__FilterAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__FilterAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEcl.g:4201:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4205:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEcl.g:4206:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEcl.g:4213:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4217:1: ( ( RULE_LT_EM ) )
            // InternalEcl.g:4218:1: ( RULE_LT_EM )
            {
            // InternalEcl.g:4218:1: ( RULE_LT_EM )
            // InternalEcl.g:4219:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEcl.g:4228:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4232:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEcl.g:4233:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEcl.g:4239:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4243:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4244:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4244:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4245:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4246:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEcl.g:4246:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEcl.g:4255:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4259:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEcl.g:4260:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEcl.g:4267:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4271:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEcl.g:4272:1: ( RULE_DBL_LT_EM )
            {
            // InternalEcl.g:4272:1: ( RULE_DBL_LT_EM )
            // InternalEcl.g:4273:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEcl.g:4282:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4286:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEcl.g:4287:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEcl.g:4293:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4297:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4298:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4298:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4299:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4300:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:4300:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEcl.g:4309:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4313:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEcl.g:4314:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEcl.g:4321:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4325:1: ( ( RULE_LT ) )
            // InternalEcl.g:4326:1: ( RULE_LT )
            {
            // InternalEcl.g:4326:1: ( RULE_LT )
            // InternalEcl.g:4327:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEcl.g:4336:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4340:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEcl.g:4341:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEcl.g:4347:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4351:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4352:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4352:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4353:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4354:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEcl.g:4354:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEcl.g:4363:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4367:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEcl.g:4368:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEcl.g:4375:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4379:1: ( ( RULE_DBL_LT ) )
            // InternalEcl.g:4380:1: ( RULE_DBL_LT )
            {
            // InternalEcl.g:4380:1: ( RULE_DBL_LT )
            // InternalEcl.g:4381:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEcl.g:4390:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4394:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEcl.g:4395:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEcl.g:4401:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4405:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4406:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4406:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4407:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4408:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:4408:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEcl.g:4417:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4421:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEcl.g:4422:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEcl.g:4429:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4433:1: ( ( RULE_GT_EM ) )
            // InternalEcl.g:4434:1: ( RULE_GT_EM )
            {
            // InternalEcl.g:4434:1: ( RULE_GT_EM )
            // InternalEcl.g:4435:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEcl.g:4444:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4448:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEcl.g:4449:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEcl.g:4455:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4459:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4460:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4460:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4461:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4462:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEcl.g:4462:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEcl.g:4471:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4475:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEcl.g:4476:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEcl.g:4483:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4487:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEcl.g:4488:1: ( RULE_DBL_GT_EM )
            {
            // InternalEcl.g:4488:1: ( RULE_DBL_GT_EM )
            // InternalEcl.g:4489:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEcl.g:4498:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4502:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEcl.g:4503:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEcl.g:4509:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4513:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4514:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4514:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4515:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4516:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:4516:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEcl.g:4525:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4529:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEcl.g:4530:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEcl.g:4537:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4541:1: ( ( RULE_GT ) )
            // InternalEcl.g:4542:1: ( RULE_GT )
            {
            // InternalEcl.g:4542:1: ( RULE_GT )
            // InternalEcl.g:4543:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEcl.g:4552:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4556:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEcl.g:4557:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEcl.g:4563:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4567:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4568:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4568:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4569:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4570:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEcl.g:4570:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEcl.g:4579:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4583:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEcl.g:4584:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEcl.g:4591:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4595:1: ( ( RULE_DBL_GT ) )
            // InternalEcl.g:4596:1: ( RULE_DBL_GT )
            {
            // InternalEcl.g:4596:1: ( RULE_DBL_GT )
            // InternalEcl.g:4597:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEcl.g:4606:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4610:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEcl.g:4611:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEcl.g:4617:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4621:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4622:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4622:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4623:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4624:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:4624:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEcl.g:4633:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4637:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEcl.g:4638:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEcl.g:4645:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4649:1: ( ( RULE_CARET ) )
            // InternalEcl.g:4650:1: ( RULE_CARET )
            {
            // InternalEcl.g:4650:1: ( RULE_CARET )
            // InternalEcl.g:4651:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEcl.g:4660:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4664:1: ( rule__MemberOf__Group__1__Impl )
            // InternalEcl.g:4665:2: rule__MemberOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEcl.g:4671:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__ConstraintAssignment_1 ) ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4675:1: ( ( ( rule__MemberOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4676:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4676:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4677:2: ( rule__MemberOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4678:2: ( rule__MemberOf__ConstraintAssignment_1 )
            // InternalEcl.g:4678:3: rule__MemberOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEcl.g:4687:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4691:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEcl.g:4692:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEcl.g:4699:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4703:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEcl.g:4704:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEcl.g:4704:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEcl.g:4705:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEcl.g:4706:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEcl.g:4706:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEcl.g:4714:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4718:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEcl.g:4719:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEcl.g:4725:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4729:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEcl.g:4730:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEcl.g:4730:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEcl.g:4731:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEcl.g:4732:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalEcl.g:4732:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEcl.g:4741:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4745:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEcl.g:4746:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEcl.g:4753:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4757:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:4758:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:4758:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:4759:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEcl.g:4768:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4772:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEcl.g:4773:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEcl.g:4780:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4784:1: ( ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) )
            // InternalEcl.g:4785:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            {
            // InternalEcl.g:4785:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            // InternalEcl.g:4786:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            {
            // InternalEcl.g:4786:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEcl.g:4787:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEcl.g:4788:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEcl.g:4788:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }

            // InternalEcl.g:4791:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            // InternalEcl.g:4792:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEcl.g:4793:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( ((LA46_0>=RULE_DIGIT_NONZERO && LA46_0<=RULE_DIGIT_ZERO)) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalEcl.g:4793:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEcl.g:4802:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4806:1: ( rule__EclConceptReferenceSet__Group__2__Impl )
            // InternalEcl.g:4807:2: rule__EclConceptReferenceSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEcl.g:4813:1: rule__EclConceptReferenceSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4817:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:4818:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:4818:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:4819:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEcl.g:4829:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4833:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEcl.g:4834:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEcl.g:4841:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4845:1: ( ( RULE_WILDCARD ) )
            // InternalEcl.g:4846:1: ( RULE_WILDCARD )
            {
            // InternalEcl.g:4846:1: ( RULE_WILDCARD )
            // InternalEcl.g:4847:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEcl.g:4856:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4860:1: ( rule__Any__Group__1__Impl )
            // InternalEcl.g:4861:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEcl.g:4867:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4871:1: ( ( () ) )
            // InternalEcl.g:4872:1: ( () )
            {
            // InternalEcl.g:4872:1: ( () )
            // InternalEcl.g:4873:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEcl.g:4874:2: ()
            // InternalEcl.g:4874:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEcl.g:4883:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4887:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEcl.g:4888:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEcl.g:4895:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4899:1: ( ( ruleAndRefinement ) )
            // InternalEcl.g:4900:1: ( ruleAndRefinement )
            {
            // InternalEcl.g:4900:1: ( ruleAndRefinement )
            // InternalEcl.g:4901:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEcl.g:4910:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4914:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEcl.g:4915:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEcl.g:4921:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4925:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEcl.g:4926:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEcl.g:4926:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEcl.g:4927:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEcl.g:4928:2: ( rule__OrRefinement__Group_1__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA47_5 = input.LA(2);

                    if ( (synpred104_InternalEcl()) ) {
                        alt47=1;
                    }


                }


                switch (alt47) {
            	case 1 :
            	    // InternalEcl.g:4928:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEcl.g:4937:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4941:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEcl.g:4942:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEcl.g:4948:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4952:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEcl.g:4953:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEcl.g:4953:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEcl.g:4954:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEcl.g:4955:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEcl.g:4955:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEcl.g:4964:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4968:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEcl.g:4969:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEcl.g:4976:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4980:1: ( ( () ) )
            // InternalEcl.g:4981:1: ( () )
            {
            // InternalEcl.g:4981:1: ( () )
            // InternalEcl.g:4982:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEcl.g:4983:2: ()
            // InternalEcl.g:4983:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEcl.g:4991:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4995:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEcl.g:4996:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEcl.g:5003:1: rule__OrRefinement__Group_1_0__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5007:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:5008:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:5008:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:5009:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEcl.g:5018:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5022:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEcl.g:5023:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEcl.g:5029:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5033:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEcl.g:5034:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEcl.g:5034:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEcl.g:5035:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEcl.g:5036:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEcl.g:5036:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEcl.g:5045:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5049:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEcl.g:5050:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEcl.g:5057:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5061:1: ( ( ruleSubRefinement ) )
            // InternalEcl.g:5062:1: ( ruleSubRefinement )
            {
            // InternalEcl.g:5062:1: ( ruleSubRefinement )
            // InternalEcl.g:5063:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEcl.g:5072:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5076:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEcl.g:5077:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEcl.g:5083:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5087:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEcl.g:5088:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEcl.g:5088:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEcl.g:5089:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEcl.g:5090:2: ( rule__AndRefinement__Group_1__0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA48_4 = input.LA(2);

                    if ( (synpred105_InternalEcl()) ) {
                        alt48=1;
                    }


                }
                else if ( (LA48_0==RULE_COMMA) ) {
                    int LA48_5 = input.LA(2);

                    if ( (synpred105_InternalEcl()) ) {
                        alt48=1;
                    }


                }


                switch (alt48) {
            	case 1 :
            	    // InternalEcl.g:5090:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEcl.g:5099:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5103:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEcl.g:5104:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEcl.g:5110:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5114:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEcl.g:5115:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEcl.g:5115:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEcl.g:5116:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEcl.g:5117:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEcl.g:5117:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEcl.g:5126:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5130:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEcl.g:5131:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEcl.g:5138:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5142:1: ( ( () ) )
            // InternalEcl.g:5143:1: ( () )
            {
            // InternalEcl.g:5143:1: ( () )
            // InternalEcl.g:5144:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEcl.g:5145:2: ()
            // InternalEcl.g:5145:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEcl.g:5153:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5157:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEcl.g:5158:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEcl.g:5165:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5169:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEcl.g:5170:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEcl.g:5170:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEcl.g:5171:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEcl.g:5172:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEcl.g:5172:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEcl.g:5180:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5184:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEcl.g:5185:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEcl.g:5191:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5195:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEcl.g:5196:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEcl.g:5196:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEcl.g:5197:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEcl.g:5198:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEcl.g:5198:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEcl.g:5207:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5211:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEcl.g:5212:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEcl.g:5219:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5223:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:5224:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:5224:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:5225:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEcl.g:5234:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5238:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEcl.g:5239:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEcl.g:5246:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5250:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEcl.g:5251:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEcl.g:5251:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEcl.g:5252:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:5253:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEcl.g:5253:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEcl.g:5261:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5265:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEcl.g:5266:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEcl.g:5272:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5276:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:5277:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:5277:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:5278:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEcl.g:5288:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5292:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEcl.g:5293:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEcl.g:5300:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5304:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEcl.g:5305:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEcl.g:5305:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEcl.g:5306:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEcl.g:5307:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_SQUARE_OPEN) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalEcl.g:5307:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEcl.g:5315:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5319:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEcl.g:5320:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEcl.g:5327:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5331:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEcl.g:5332:1: ( RULE_CURLY_OPEN )
            {
            // InternalEcl.g:5332:1: ( RULE_CURLY_OPEN )
            // InternalEcl.g:5333:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEcl.g:5342:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5346:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEcl.g:5347:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEcl.g:5354:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5358:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEcl.g:5359:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEcl.g:5359:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEcl.g:5360:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEcl.g:5361:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEcl.g:5361:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEcl.g:5369:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5373:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEcl.g:5374:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEcl.g:5380:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5384:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEcl.g:5385:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEcl.g:5385:1: ( RULE_CURLY_CLOSE )
            // InternalEcl.g:5386:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEcl.g:5396:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5400:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEcl.g:5401:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEcl.g:5408:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5412:1: ( ( ruleAndAttributeSet ) )
            // InternalEcl.g:5413:1: ( ruleAndAttributeSet )
            {
            // InternalEcl.g:5413:1: ( ruleAndAttributeSet )
            // InternalEcl.g:5414:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEcl.g:5423:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5427:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEcl.g:5428:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEcl.g:5434:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5438:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEcl.g:5439:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEcl.g:5439:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEcl.g:5440:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEcl.g:5441:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalEcl.g:5441:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEcl.g:5450:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5454:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEcl.g:5455:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEcl.g:5462:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5466:1: ( ( () ) )
            // InternalEcl.g:5467:1: ( () )
            {
            // InternalEcl.g:5467:1: ( () )
            // InternalEcl.g:5468:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEcl.g:5469:2: ()
            // InternalEcl.g:5469:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEcl.g:5477:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5481:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEcl.g:5482:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEcl.g:5489:1: rule__OrAttributeSet__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5493:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:5494:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:5494:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:5495:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEcl.g:5504:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5508:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEcl.g:5509:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEcl.g:5515:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5519:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEcl.g:5520:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:5520:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEcl.g:5521:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:5522:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEcl.g:5522:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEcl.g:5531:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5535:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEcl.g:5536:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEcl.g:5543:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5547:1: ( ( ruleSubAttributeSet ) )
            // InternalEcl.g:5548:1: ( ruleSubAttributeSet )
            {
            // InternalEcl.g:5548:1: ( ruleSubAttributeSet )
            // InternalEcl.g:5549:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEcl.g:5558:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5562:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEcl.g:5563:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEcl.g:5569:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5573:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEcl.g:5574:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEcl.g:5574:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEcl.g:5575:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEcl.g:5576:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( ((LA51_0>=RULE_CONJUNCTION_KEYWORD && LA51_0<=RULE_COMMA)) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalEcl.g:5576:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEcl.g:5585:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5589:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEcl.g:5590:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEcl.g:5597:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5601:1: ( ( () ) )
            // InternalEcl.g:5602:1: ( () )
            {
            // InternalEcl.g:5602:1: ( () )
            // InternalEcl.g:5603:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEcl.g:5604:2: ()
            // InternalEcl.g:5604:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEcl.g:5612:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5616:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEcl.g:5617:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEcl.g:5624:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5628:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEcl.g:5629:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEcl.g:5629:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEcl.g:5630:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:5631:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEcl.g:5631:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEcl.g:5639:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5643:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEcl.g:5644:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEcl.g:5650:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5654:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEcl.g:5655:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:5655:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEcl.g:5656:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:5657:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEcl.g:5657:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEcl.g:5666:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5670:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEcl.g:5671:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEcl.g:5678:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5682:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:5683:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:5683:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:5684:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEcl.g:5693:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5697:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEcl.g:5698:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEcl.g:5705:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5709:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEcl.g:5710:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEcl.g:5710:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEcl.g:5711:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:5712:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEcl.g:5712:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEcl.g:5720:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5724:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEcl.g:5725:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEcl.g:5731:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5735:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:5736:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:5736:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:5737:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEcl.g:5747:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5751:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEcl.g:5752:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEcl.g:5759:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5763:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEcl.g:5764:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEcl.g:5764:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEcl.g:5765:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEcl.g:5766:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_SQUARE_OPEN) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalEcl.g:5766:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEcl.g:5774:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5778:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEcl.g:5779:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEcl.g:5786:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5790:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEcl.g:5791:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEcl.g:5791:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEcl.g:5792:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEcl.g:5793:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_REVERSED) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalEcl.g:5793:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEcl.g:5801:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5805:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEcl.g:5806:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEcl.g:5813:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5817:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEcl.g:5818:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEcl.g:5818:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEcl.g:5819:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEcl.g:5820:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEcl.g:5820:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEcl.g:5828:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5832:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEcl.g:5833:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEcl.g:5839:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5843:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) )
            // InternalEcl.g:5844:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            {
            // InternalEcl.g:5844:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            // InternalEcl.g:5845:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEcl.g:5846:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( ((LA54_0>=RULE_EQUAL && LA54_0<=RULE_LTE)) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalEcl.g:5846:3: rule__AttributeConstraint__ComparisonAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ComparisonAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEcl.g:5855:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5859:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEcl.g:5860:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEcl.g:5867:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5871:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEcl.g:5872:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEcl.g:5872:1: ( RULE_SQUARE_OPEN )
            // InternalEcl.g:5873:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEcl.g:5882:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5886:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEcl.g:5887:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEcl.g:5894:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5898:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEcl.g:5899:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEcl.g:5899:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEcl.g:5900:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEcl.g:5901:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEcl.g:5901:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEcl.g:5909:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5913:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEcl.g:5914:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEcl.g:5921:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5925:1: ( ( RULE_TO ) )
            // InternalEcl.g:5926:1: ( RULE_TO )
            {
            // InternalEcl.g:5926:1: ( RULE_TO )
            // InternalEcl.g:5927:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEcl.g:5936:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5940:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEcl.g:5941:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEcl.g:5948:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5952:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEcl.g:5953:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEcl.g:5953:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEcl.g:5954:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEcl.g:5955:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEcl.g:5955:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEcl.g:5963:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5967:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEcl.g:5968:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEcl.g:5974:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5978:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEcl.g:5979:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEcl.g:5979:1: ( RULE_SQUARE_CLOSE )
            // InternalEcl.g:5980:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEcl.g:5990:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5994:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEcl.g:5995:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEcl.g:6002:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6006:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:6007:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:6007:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEcl.g:6008:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6009:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEcl.g:6009:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEcl.g:6017:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6021:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEcl.g:6022:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEcl.g:6028:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6032:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEcl.g:6033:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEcl.g:6033:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEcl.g:6034:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEcl.g:6035:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEcl.g:6035:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEcl.g:6044:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6048:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEcl.g:6049:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEcl.g:6056:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6060:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:6061:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:6061:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:6062:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6063:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEcl.g:6063:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEcl.g:6071:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6075:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEcl.g:6076:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEcl.g:6082:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6086:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEcl.g:6087:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEcl.g:6087:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEcl.g:6088:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEcl.g:6089:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEcl.g:6089:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEcl.g:6098:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6102:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEcl.g:6103:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEcl.g:6110:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6114:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:6115:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:6115:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:6116:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6117:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEcl.g:6117:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEcl.g:6125:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6129:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEcl.g:6130:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEcl.g:6136:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6140:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEcl.g:6141:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEcl.g:6141:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEcl.g:6142:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEcl.g:6143:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEcl.g:6143:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEcl.g:6152:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6156:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEcl.g:6157:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEcl.g:6164:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6168:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:6169:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:6169:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:6170:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6171:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEcl.g:6171:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEcl.g:6179:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6183:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEcl.g:6184:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEcl.g:6191:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6195:1: ( ( RULE_HASH ) )
            // InternalEcl.g:6196:1: ( RULE_HASH )
            {
            // InternalEcl.g:6196:1: ( RULE_HASH )
            // InternalEcl.g:6197:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEcl.g:6206:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6210:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEcl.g:6211:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEcl.g:6217:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6221:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEcl.g:6222:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEcl.g:6222:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEcl.g:6223:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEcl.g:6224:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEcl.g:6224:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEcl.g:6233:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6237:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEcl.g:6238:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEcl.g:6245:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6249:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:6250:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:6250:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:6251:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6252:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEcl.g:6252:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEcl.g:6260:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6264:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEcl.g:6265:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEcl.g:6272:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6276:1: ( ( RULE_HASH ) )
            // InternalEcl.g:6277:1: ( RULE_HASH )
            {
            // InternalEcl.g:6277:1: ( RULE_HASH )
            // InternalEcl.g:6278:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEcl.g:6287:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6291:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEcl.g:6292:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEcl.g:6298:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6302:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEcl.g:6303:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEcl.g:6303:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEcl.g:6304:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEcl.g:6305:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEcl.g:6305:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEcl.g:6314:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6318:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEcl.g:6319:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEcl.g:6326:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6330:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:6331:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:6331:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:6332:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEcl.g:6341:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6345:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEcl.g:6346:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEcl.g:6353:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6357:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEcl.g:6358:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEcl.g:6358:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEcl.g:6359:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:6360:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEcl.g:6360:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEcl.g:6368:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6372:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEcl.g:6373:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEcl.g:6379:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6383:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:6384:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:6384:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:6385:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEcl.g:6395:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6399:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEcl.g:6400:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEcl.g:6407:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6411:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEcl.g:6412:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEcl.g:6412:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEcl.g:6413:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEcl.g:6422:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6426:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEcl.g:6427:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEcl.g:6434:1: rule__FilterConstraint__Group__1__Impl : ( ruleFilter ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6438:1: ( ( ruleFilter ) )
            // InternalEcl.g:6439:1: ( ruleFilter )
            {
            // InternalEcl.g:6439:1: ( ruleFilter )
            // InternalEcl.g:6440:2: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEcl.g:6449:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6453:1: ( rule__FilterConstraint__Group__2__Impl )
            // InternalEcl.g:6454:2: rule__FilterConstraint__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEcl.g:6460:1: rule__FilterConstraint__Group__2__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6464:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEcl.g:6465:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEcl.g:6465:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEcl.g:6466:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEcl.g:6476:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6480:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEcl.g:6481:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEcl.g:6488:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6492:1: ( ( ruleConjunctionFilter ) )
            // InternalEcl.g:6493:1: ( ruleConjunctionFilter )
            {
            // InternalEcl.g:6493:1: ( ruleConjunctionFilter )
            // InternalEcl.g:6494:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEcl.g:6503:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6507:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEcl.g:6508:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEcl.g:6514:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6518:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEcl.g:6519:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEcl.g:6519:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEcl.g:6520:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEcl.g:6521:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalEcl.g:6521:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEcl.g:6530:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6534:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEcl.g:6535:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEcl.g:6542:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6546:1: ( ( () ) )
            // InternalEcl.g:6547:1: ( () )
            {
            // InternalEcl.g:6547:1: ( () )
            // InternalEcl.g:6548:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEcl.g:6549:2: ()
            // InternalEcl.g:6549:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEcl.g:6557:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6561:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEcl.g:6562:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEcl.g:6569:1: rule__DisjunctionFilter__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6573:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:6574:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:6574:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:6575:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEcl.g:6584:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6588:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEcl.g:6589:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEcl.g:6595:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6599:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEcl.g:6600:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:6600:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEcl.g:6601:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:6602:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEcl.g:6602:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEcl.g:6611:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6615:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEcl.g:6616:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEcl.g:6623:1: rule__ConjunctionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6627:1: ( ( rulePropertyFilter ) )
            // InternalEcl.g:6628:1: ( rulePropertyFilter )
            {
            // InternalEcl.g:6628:1: ( rulePropertyFilter )
            // InternalEcl.g:6629:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEcl.g:6638:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6642:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEcl.g:6643:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEcl.g:6649:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6653:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEcl.g:6654:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEcl.g:6654:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEcl.g:6655:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEcl.g:6656:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( ((LA56_0>=RULE_CONJUNCTION_KEYWORD && LA56_0<=RULE_COMMA)) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalEcl.g:6656:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEcl.g:6665:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6669:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEcl.g:6670:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEcl.g:6677:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6681:1: ( ( () ) )
            // InternalEcl.g:6682:1: ( () )
            {
            // InternalEcl.g:6682:1: ( () )
            // InternalEcl.g:6683:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEcl.g:6684:2: ()
            // InternalEcl.g:6684:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEcl.g:6692:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6696:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEcl.g:6697:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEcl.g:6704:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6708:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEcl.g:6709:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEcl.g:6709:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEcl.g:6710:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:6711:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEcl.g:6711:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEcl.g:6719:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6723:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEcl.g:6724:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEcl.g:6730:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6734:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEcl.g:6735:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:6735:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEcl.g:6736:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:6737:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEcl.g:6737:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEcl.g:6746:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6750:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEcl.g:6751:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEcl.g:6758:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6762:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:6763:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:6763:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:6764:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEcl.g:6773:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6777:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEcl.g:6778:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEcl.g:6785:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6789:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEcl.g:6790:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEcl.g:6790:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEcl.g:6791:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:6792:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEcl.g:6792:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEcl.g:6800:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6804:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEcl.g:6805:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEcl.g:6811:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6815:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:6816:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:6816:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:6817:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEcl.g:6827:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6831:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEcl.g:6832:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEcl.g:6839:1: rule__TermFilter__Group__0__Impl : ( RULE_TERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6843:1: ( ( RULE_TERM_KEYWORD ) )
            // InternalEcl.g:6844:1: ( RULE_TERM_KEYWORD )
            {
            // InternalEcl.g:6844:1: ( RULE_TERM_KEYWORD )
            // InternalEcl.g:6845:2: RULE_TERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEcl.g:6854:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6858:1: ( rule__TermFilter__Group__1__Impl )
            // InternalEcl.g:6859:2: rule__TermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEcl.g:6865:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__Alternatives_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6869:1: ( ( ( rule__TermFilter__Alternatives_1 ) ) )
            // InternalEcl.g:6870:1: ( ( rule__TermFilter__Alternatives_1 ) )
            {
            // InternalEcl.g:6870:1: ( ( rule__TermFilter__Alternatives_1 ) )
            // InternalEcl.g:6871:2: ( rule__TermFilter__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }
            // InternalEcl.g:6872:2: ( rule__TermFilter__Alternatives_1 )
            // InternalEcl.g:6872:3: rule__TermFilter__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__0"
    // InternalEcl.g:6881:1: rule__TypedTermFilter__Group__0 : rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 ;
    public final void rule__TypedTermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6885:1: ( rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 )
            // InternalEcl.g:6886:2: rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypedTermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0"


    // $ANTLR start "rule__TypedTermFilter__Group__0__Impl"
    // InternalEcl.g:6893:1: rule__TypedTermFilter__Group__0__Impl : ( ( rule__TypedTermFilter__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6897:1: ( ( ( rule__TypedTermFilter__OpAssignment_0 ) ) )
            // InternalEcl.g:6898:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            {
            // InternalEcl.g:6898:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            // InternalEcl.g:6899:2: ( rule__TypedTermFilter__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6900:2: ( rule__TypedTermFilter__OpAssignment_0 )
            // InternalEcl.g:6900:3: rule__TypedTermFilter__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__1"
    // InternalEcl.g:6908:1: rule__TypedTermFilter__Group__1 : rule__TypedTermFilter__Group__1__Impl ;
    public final void rule__TypedTermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6912:1: ( rule__TypedTermFilter__Group__1__Impl )
            // InternalEcl.g:6913:2: rule__TypedTermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1"


    // $ANTLR start "rule__TypedTermFilter__Group__1__Impl"
    // InternalEcl.g:6919:1: rule__TypedTermFilter__Group__1__Impl : ( ( rule__TypedTermFilter__ClauseAssignment_1 ) ) ;
    public final void rule__TypedTermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6923:1: ( ( ( rule__TypedTermFilter__ClauseAssignment_1 ) ) )
            // InternalEcl.g:6924:1: ( ( rule__TypedTermFilter__ClauseAssignment_1 ) )
            {
            // InternalEcl.g:6924:1: ( ( rule__TypedTermFilter__ClauseAssignment_1 ) )
            // InternalEcl.g:6925:2: ( rule__TypedTermFilter__ClauseAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getClauseAssignment_1()); 
            }
            // InternalEcl.g:6926:2: ( rule__TypedTermFilter__ClauseAssignment_1 )
            // InternalEcl.g:6926:3: rule__TypedTermFilter__ClauseAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__ClauseAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getClauseAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0"
    // InternalEcl.g:6935:1: rule__TypedTermFilterSet__Group__0 : rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 ;
    public final void rule__TypedTermFilterSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6939:1: ( rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 )
            // InternalEcl.g:6940:2: rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypedTermFilterSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0__Impl"
    // InternalEcl.g:6947:1: rule__TypedTermFilterSet__Group__0__Impl : ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilterSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6951:1: ( ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) )
            // InternalEcl.g:6952:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            {
            // InternalEcl.g:6952:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            // InternalEcl.g:6953:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6954:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            // InternalEcl.g:6954:3: rule__TypedTermFilterSet__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1"
    // InternalEcl.g:6962:1: rule__TypedTermFilterSet__Group__1 : rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 ;
    public final void rule__TypedTermFilterSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6966:1: ( rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 )
            // InternalEcl.g:6967:2: rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypedTermFilterSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1__Impl"
    // InternalEcl.g:6974:1: rule__TypedTermFilterSet__Group__1__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedTermFilterSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6978:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:6979:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:6979:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:6980:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2"
    // InternalEcl.g:6989:1: rule__TypedTermFilterSet__Group__2 : rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 ;
    public final void rule__TypedTermFilterSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6993:1: ( rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 )
            // InternalEcl.g:6994:2: rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__TypedTermFilterSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2__Impl"
    // InternalEcl.g:7001:1: rule__TypedTermFilterSet__Group__2__Impl : ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) ) ;
    public final void rule__TypedTermFilterSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7005:1: ( ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) ) )
            // InternalEcl.g:7006:1: ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) )
            {
            // InternalEcl.g:7006:1: ( ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* ) )
            // InternalEcl.g:7007:2: ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) ) ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* )
            {
            // InternalEcl.g:7007:2: ( ( rule__TypedTermFilterSet__ClausesAssignment_2 ) )
            // InternalEcl.g:7008:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }
            // InternalEcl.g:7009:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )
            // InternalEcl.g:7009:4: rule__TypedTermFilterSet__ClausesAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__TypedTermFilterSet__ClausesAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }

            }

            // InternalEcl.g:7012:2: ( ( rule__TypedTermFilterSet__ClausesAssignment_2 )* )
            // InternalEcl.g:7013:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }
            // InternalEcl.g:7014:3: ( rule__TypedTermFilterSet__ClausesAssignment_2 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( ((LA57_0>=RULE_EXACT_KEYWORD && LA57_0<=RULE_REGEX_KEYWORD)||LA57_0==RULE_WILD_KEYWORD||LA57_0==RULE_STRING) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalEcl.g:7014:4: rule__TypedTermFilterSet__ClausesAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    rule__TypedTermFilterSet__ClausesAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getClausesAssignment_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3"
    // InternalEcl.g:7023:1: rule__TypedTermFilterSet__Group__3 : rule__TypedTermFilterSet__Group__3__Impl ;
    public final void rule__TypedTermFilterSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7027:1: ( rule__TypedTermFilterSet__Group__3__Impl )
            // InternalEcl.g:7028:2: rule__TypedTermFilterSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3__Impl"
    // InternalEcl.g:7034:1: rule__TypedTermFilterSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedTermFilterSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7038:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7039:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7039:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7040:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group__0"
    // InternalEcl.g:7050:1: rule__TypedTermFilterClause__Group__0 : rule__TypedTermFilterClause__Group__0__Impl rule__TypedTermFilterClause__Group__1 ;
    public final void rule__TypedTermFilterClause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7054:1: ( rule__TypedTermFilterClause__Group__0__Impl rule__TypedTermFilterClause__Group__1 )
            // InternalEcl.g:7055:2: rule__TypedTermFilterClause__Group__0__Impl rule__TypedTermFilterClause__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypedTermFilterClause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group__0"


    // $ANTLR start "rule__TypedTermFilterClause__Group__0__Impl"
    // InternalEcl.g:7062:1: rule__TypedTermFilterClause__Group__0__Impl : ( ( rule__TypedTermFilterClause__Group_0__0 )? ) ;
    public final void rule__TypedTermFilterClause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7066:1: ( ( ( rule__TypedTermFilterClause__Group_0__0 )? ) )
            // InternalEcl.g:7067:1: ( ( rule__TypedTermFilterClause__Group_0__0 )? )
            {
            // InternalEcl.g:7067:1: ( ( rule__TypedTermFilterClause__Group_0__0 )? )
            // InternalEcl.g:7068:2: ( rule__TypedTermFilterClause__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getGroup_0()); 
            }
            // InternalEcl.g:7069:2: ( rule__TypedTermFilterClause__Group_0__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( ((LA58_0>=RULE_EXACT_KEYWORD && LA58_0<=RULE_REGEX_KEYWORD)||LA58_0==RULE_WILD_KEYWORD) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEcl.g:7069:3: rule__TypedTermFilterClause__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilterClause__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group__1"
    // InternalEcl.g:7077:1: rule__TypedTermFilterClause__Group__1 : rule__TypedTermFilterClause__Group__1__Impl ;
    public final void rule__TypedTermFilterClause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7081:1: ( rule__TypedTermFilterClause__Group__1__Impl )
            // InternalEcl.g:7082:2: rule__TypedTermFilterClause__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group__1"


    // $ANTLR start "rule__TypedTermFilterClause__Group__1__Impl"
    // InternalEcl.g:7088:1: rule__TypedTermFilterClause__Group__1__Impl : ( ( rule__TypedTermFilterClause__TermAssignment_1 ) ) ;
    public final void rule__TypedTermFilterClause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7092:1: ( ( ( rule__TypedTermFilterClause__TermAssignment_1 ) ) )
            // InternalEcl.g:7093:1: ( ( rule__TypedTermFilterClause__TermAssignment_1 ) )
            {
            // InternalEcl.g:7093:1: ( ( rule__TypedTermFilterClause__TermAssignment_1 ) )
            // InternalEcl.g:7094:2: ( rule__TypedTermFilterClause__TermAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getTermAssignment_1()); 
            }
            // InternalEcl.g:7095:2: ( rule__TypedTermFilterClause__TermAssignment_1 )
            // InternalEcl.g:7095:3: rule__TypedTermFilterClause__TermAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__TermAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__0"
    // InternalEcl.g:7104:1: rule__TypedTermFilterClause__Group_0__0 : rule__TypedTermFilterClause__Group_0__0__Impl rule__TypedTermFilterClause__Group_0__1 ;
    public final void rule__TypedTermFilterClause__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7108:1: ( rule__TypedTermFilterClause__Group_0__0__Impl rule__TypedTermFilterClause__Group_0__1 )
            // InternalEcl.g:7109:2: rule__TypedTermFilterClause__Group_0__0__Impl rule__TypedTermFilterClause__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__TypedTermFilterClause__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__0"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__0__Impl"
    // InternalEcl.g:7116:1: rule__TypedTermFilterClause__Group_0__0__Impl : ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0 ) ) ;
    public final void rule__TypedTermFilterClause__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7120:1: ( ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0 ) ) )
            // InternalEcl.g:7121:1: ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0 ) )
            {
            // InternalEcl.g:7121:1: ( ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0 ) )
            // InternalEcl.g:7122:2: ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeAssignment_0_0()); 
            }
            // InternalEcl.g:7123:2: ( rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0 )
            // InternalEcl.g:7123:3: rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__0__Impl"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__1"
    // InternalEcl.g:7131:1: rule__TypedTermFilterClause__Group_0__1 : rule__TypedTermFilterClause__Group_0__1__Impl ;
    public final void rule__TypedTermFilterClause__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7135:1: ( rule__TypedTermFilterClause__Group_0__1__Impl )
            // InternalEcl.g:7136:2: rule__TypedTermFilterClause__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterClause__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__1"


    // $ANTLR start "rule__TypedTermFilterClause__Group_0__1__Impl"
    // InternalEcl.g:7142:1: rule__TypedTermFilterClause__Group_0__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedTermFilterClause__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7146:1: ( ( RULE_COLON ) )
            // InternalEcl.g:7147:1: ( RULE_COLON )
            {
            // InternalEcl.g:7147:1: ( RULE_COLON )
            // InternalEcl.g:7148:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getCOLONTerminalRuleCall_0_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getCOLONTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__Group_0__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__0"
    // InternalEcl.g:7158:1: rule__LanguageFilter__Group__0 : rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 ;
    public final void rule__LanguageFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7162:1: ( rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 )
            // InternalEcl.g:7163:2: rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__LanguageFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0"


    // $ANTLR start "rule__LanguageFilter__Group__0__Impl"
    // InternalEcl.g:7170:1: rule__LanguageFilter__Group__0__Impl : ( RULE_LANGUAGE_KEYWORD ) ;
    public final void rule__LanguageFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7174:1: ( ( RULE_LANGUAGE_KEYWORD ) )
            // InternalEcl.g:7175:1: ( RULE_LANGUAGE_KEYWORD )
            {
            // InternalEcl.g:7175:1: ( RULE_LANGUAGE_KEYWORD )
            // InternalEcl.g:7176:2: RULE_LANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__1"
    // InternalEcl.g:7185:1: rule__LanguageFilter__Group__1 : rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 ;
    public final void rule__LanguageFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7189:1: ( rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 )
            // InternalEcl.g:7190:2: rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__LanguageFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1"


    // $ANTLR start "rule__LanguageFilter__Group__1__Impl"
    // InternalEcl.g:7197:1: rule__LanguageFilter__Group__1__Impl : ( ( rule__LanguageFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7201:1: ( ( ( rule__LanguageFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:7202:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:7202:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            // InternalEcl.g:7203:2: ( rule__LanguageFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:7204:2: ( rule__LanguageFilter__OpAssignment_1 )
            // InternalEcl.g:7204:3: rule__LanguageFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__2"
    // InternalEcl.g:7212:1: rule__LanguageFilter__Group__2 : rule__LanguageFilter__Group__2__Impl ;
    public final void rule__LanguageFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7216:1: ( rule__LanguageFilter__Group__2__Impl )
            // InternalEcl.g:7217:2: rule__LanguageFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2"


    // $ANTLR start "rule__LanguageFilter__Group__2__Impl"
    // InternalEcl.g:7223:1: rule__LanguageFilter__Group__2__Impl : ( ( rule__LanguageFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7227:1: ( ( ( rule__LanguageFilter__Alternatives_2 ) ) )
            // InternalEcl.g:7228:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:7228:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            // InternalEcl.g:7229:2: ( rule__LanguageFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:7230:2: ( rule__LanguageFilter__Alternatives_2 )
            // InternalEcl.g:7230:3: rule__LanguageFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0"
    // InternalEcl.g:7239:1: rule__LanguageFilter__Group_2_1__0 : rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 ;
    public final void rule__LanguageFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7243:1: ( rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 )
            // InternalEcl.g:7244:2: rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__LanguageFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0__Impl"
    // InternalEcl.g:7251:1: rule__LanguageFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7255:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:7256:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:7256:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:7257:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1"
    // InternalEcl.g:7266:1: rule__LanguageFilter__Group_2_1__1 : rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 ;
    public final void rule__LanguageFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7270:1: ( rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 )
            // InternalEcl.g:7271:2: rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__LanguageFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1__Impl"
    // InternalEcl.g:7278:1: rule__LanguageFilter__Group_2_1__1__Impl : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) ;
    public final void rule__LanguageFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7282:1: ( ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:7283:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:7283:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            // InternalEcl.g:7284:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            {
            // InternalEcl.g:7284:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEcl.g:7285:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEcl.g:7286:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEcl.g:7286:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:7289:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            // InternalEcl.g:7290:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEcl.g:7291:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_CONJUNCTION_KEYWORD||(LA59_0>=RULE_TRUE_KEYWORD && LA59_0<=RULE_KEYWORD)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalEcl.g:7291:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_39);
            	    rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2"
    // InternalEcl.g:7300:1: rule__LanguageFilter__Group_2_1__2 : rule__LanguageFilter__Group_2_1__2__Impl ;
    public final void rule__LanguageFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7304:1: ( rule__LanguageFilter__Group_2_1__2__Impl )
            // InternalEcl.g:7305:2: rule__LanguageFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2__Impl"
    // InternalEcl.g:7311:1: rule__LanguageFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7315:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7316:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7316:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7317:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEcl.g:7327:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7331:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEcl.g:7332:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEcl.g:7339:1: rule__TypeIdFilter__Group__0__Impl : ( RULE_TYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7343:1: ( ( RULE_TYPEID_KEYWORD ) )
            // InternalEcl.g:7344:1: ( RULE_TYPEID_KEYWORD )
            {
            // InternalEcl.g:7344:1: ( RULE_TYPEID_KEYWORD )
            // InternalEcl.g:7345:2: RULE_TYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEcl.g:7354:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7358:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEcl.g:7359:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEcl.g:7366:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7370:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:7371:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:7371:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEcl.g:7372:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:7373:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEcl.g:7373:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEcl.g:7381:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7385:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEcl.g:7386:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEcl.g:7392:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7396:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEcl.g:7397:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEcl.g:7397:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEcl.g:7398:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEcl.g:7399:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEcl.g:7399:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEcl.g:7408:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7412:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEcl.g:7413:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEcl.g:7420:1: rule__TypeTokenFilter__Group__0__Impl : ( RULE_TYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7424:1: ( ( RULE_TYPE_KEYWORD ) )
            // InternalEcl.g:7425:1: ( RULE_TYPE_KEYWORD )
            {
            // InternalEcl.g:7425:1: ( RULE_TYPE_KEYWORD )
            // InternalEcl.g:7426:2: RULE_TYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEcl.g:7435:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7439:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEcl.g:7440:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEcl.g:7447:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7451:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:7452:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:7452:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEcl.g:7453:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:7454:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEcl.g:7454:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEcl.g:7462:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7466:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEcl.g:7467:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEcl.g:7473:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7477:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEcl.g:7478:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:7478:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEcl.g:7479:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:7480:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEcl.g:7480:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEcl.g:7489:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7493:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEcl.g:7494:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEcl.g:7501:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7505:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:7506:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:7506:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:7507:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEcl.g:7516:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7520:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEcl.g:7521:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEcl.g:7528:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7532:1: ( ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:7533:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:7533:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            // InternalEcl.g:7534:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            {
            // InternalEcl.g:7534:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEcl.g:7535:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEcl.g:7536:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEcl.g:7536:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:7539:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            // InternalEcl.g:7540:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEcl.g:7541:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_CONJUNCTION_KEYWORD||(LA60_0>=RULE_TRUE_KEYWORD && LA60_0<=RULE_KEYWORD)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalEcl.g:7541:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_39);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEcl.g:7550:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7554:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl )
            // InternalEcl.g:7555:2: rule__TypeTokenFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEcl.g:7561:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7565:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7566:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7566:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7567:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEcl.g:7577:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7581:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEcl.g:7582:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEcl.g:7589:1: rule__DialectIdFilter__Group__0__Impl : ( RULE_DIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7593:1: ( ( RULE_DIALECTID_KEYWORD ) )
            // InternalEcl.g:7594:1: ( RULE_DIALECTID_KEYWORD )
            {
            // InternalEcl.g:7594:1: ( RULE_DIALECTID_KEYWORD )
            // InternalEcl.g:7595:2: RULE_DIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEcl.g:7604:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7608:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEcl.g:7609:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEcl.g:7616:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7620:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:7621:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:7621:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEcl.g:7622:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:7623:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEcl.g:7623:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEcl.g:7631:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7635:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEcl.g:7636:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEcl.g:7642:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7646:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEcl.g:7647:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:7647:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEcl.g:7648:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:7649:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEcl.g:7649:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEcl.g:7658:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7662:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEcl.g:7663:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEcl.g:7670:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7674:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:7675:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:7675:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:7676:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEcl.g:7685:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7689:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEcl.g:7690:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEcl.g:7697:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7701:1: ( ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:7702:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:7702:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEcl.g:7703:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEcl.g:7703:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEcl.g:7704:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:7705:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEcl.g:7705:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_3);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:7708:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            // InternalEcl.g:7709:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:7710:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=RULE_DIGIT_NONZERO && LA61_0<=RULE_DIGIT_ZERO)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalEcl.g:7710:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEcl.g:7719:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7723:1: ( rule__DialectIdFilter__Group_2_1__2__Impl )
            // InternalEcl.g:7724:2: rule__DialectIdFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEcl.g:7730:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7734:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7735:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7735:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7736:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEcl.g:7746:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7750:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEcl.g:7751:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEcl.g:7758:1: rule__DialectAliasFilter__Group__0__Impl : ( RULE_DIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7762:1: ( ( RULE_DIALECT_KEYWORD ) )
            // InternalEcl.g:7763:1: ( RULE_DIALECT_KEYWORD )
            {
            // InternalEcl.g:7763:1: ( RULE_DIALECT_KEYWORD )
            // InternalEcl.g:7764:2: RULE_DIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEcl.g:7773:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7777:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEcl.g:7778:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEcl.g:7785:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7789:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:7790:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:7790:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEcl.g:7791:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:7792:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEcl.g:7792:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEcl.g:7800:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7804:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEcl.g:7805:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEcl.g:7811:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7815:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEcl.g:7816:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:7816:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEcl.g:7817:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:7818:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEcl.g:7818:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEcl.g:7827:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7831:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEcl.g:7832:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEcl.g:7839:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7843:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:7844:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:7844:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:7845:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEcl.g:7854:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7858:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEcl.g:7859:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEcl.g:7866:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7870:1: ( ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:7871:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:7871:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEcl.g:7872:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEcl.g:7872:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEcl.g:7873:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:7874:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEcl.g:7874:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:7877:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            // InternalEcl.g:7878:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:7879:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==RULE_CONJUNCTION_KEYWORD||(LA62_0>=RULE_DIGIT_NONZERO && LA62_0<=RULE_DIGIT_ZERO)||(LA62_0>=RULE_DASH && LA62_0<=RULE_KEYWORD)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalEcl.g:7879:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEcl.g:7888:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7892:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl )
            // InternalEcl.g:7893:2: rule__DialectAliasFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEcl.g:7899:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7903:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7904:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7904:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7905:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEcl.g:7915:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7919:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEcl.g:7920:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEcl.g:7927:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7931:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEcl.g:7932:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEcl.g:7932:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEcl.g:7933:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEcl.g:7934:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEcl.g:7934:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEcl.g:7942:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7946:1: ( rule__Dialect__Group__1__Impl )
            // InternalEcl.g:7947:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEcl.g:7953:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7957:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEcl.g:7958:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEcl.g:7958:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEcl.g:7959:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEcl.g:7960:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_ROUND_OPEN) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEcl.g:7960:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEcl.g:7969:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7973:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEcl.g:7974:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEcl.g:7981:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7985:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEcl.g:7986:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEcl.g:7986:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEcl.g:7987:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEcl.g:7988:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEcl.g:7988:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEcl.g:7996:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8000:1: ( rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 )
            // InternalEcl.g:8001:2: rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEcl.g:8008:1: rule__DialectAlias__Group__1__Impl : ( ( RULE_WS )* ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8012:1: ( ( ( RULE_WS )* ) )
            // InternalEcl.g:8013:1: ( ( RULE_WS )* )
            {
            // InternalEcl.g:8013:1: ( ( RULE_WS )* )
            // InternalEcl.g:8014:2: ( RULE_WS )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }
            // InternalEcl.g:8015:2: ( RULE_WS )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==RULE_WS) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalEcl.g:8015:3: RULE_WS
            	    {
            	    match(input,RULE_WS,FollowSets000.FOLLOW_44); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__2"
    // InternalEcl.g:8023:1: rule__DialectAlias__Group__2 : rule__DialectAlias__Group__2__Impl ;
    public final void rule__DialectAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8027:1: ( rule__DialectAlias__Group__2__Impl )
            // InternalEcl.g:8028:2: rule__DialectAlias__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2"


    // $ANTLR start "rule__DialectAlias__Group__2__Impl"
    // InternalEcl.g:8034:1: rule__DialectAlias__Group__2__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) ;
    public final void rule__DialectAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8038:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) )
            // InternalEcl.g:8039:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            {
            // InternalEcl.g:8039:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            // InternalEcl.g:8040:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }
            // InternalEcl.g:8041:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_ROUND_OPEN) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalEcl.g:8041:3: rule__DialectAlias__AcceptabilityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0"
    // InternalEcl.g:8050:1: rule__AcceptabilityTokenSet__Group__0 : rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 ;
    public final void rule__AcceptabilityTokenSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8054:1: ( rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 )
            // InternalEcl.g:8055:2: rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__AcceptabilityTokenSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0__Impl"
    // InternalEcl.g:8062:1: rule__AcceptabilityTokenSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AcceptabilityTokenSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8066:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:8067:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:8067:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:8068:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1"
    // InternalEcl.g:8077:1: rule__AcceptabilityTokenSet__Group__1 : rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 ;
    public final void rule__AcceptabilityTokenSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8081:1: ( rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 )
            // InternalEcl.g:8082:2: rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__AcceptabilityTokenSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1__Impl"
    // InternalEcl.g:8089:1: rule__AcceptabilityTokenSet__Group__1__Impl : ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) ;
    public final void rule__AcceptabilityTokenSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8093:1: ( ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) )
            // InternalEcl.g:8094:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            {
            // InternalEcl.g:8094:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            // InternalEcl.g:8095:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            {
            // InternalEcl.g:8095:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            // InternalEcl.g:8096:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEcl.g:8097:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            // InternalEcl.g:8097:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }

            // InternalEcl.g:8100:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            // InternalEcl.g:8101:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEcl.g:8102:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==RULE_CONJUNCTION_KEYWORD||(LA66_0>=RULE_TRUE_KEYWORD && LA66_0<=RULE_KEYWORD)) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalEcl.g:8102:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_39);
            	    rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2"
    // InternalEcl.g:8111:1: rule__AcceptabilityTokenSet__Group__2 : rule__AcceptabilityTokenSet__Group__2__Impl ;
    public final void rule__AcceptabilityTokenSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8115:1: ( rule__AcceptabilityTokenSet__Group__2__Impl )
            // InternalEcl.g:8116:2: rule__AcceptabilityTokenSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2__Impl"
    // InternalEcl.g:8122:1: rule__AcceptabilityTokenSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AcceptabilityTokenSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8126:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:8127:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:8127:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:8128:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__0"
    // InternalEcl.g:8138:1: rule__ActiveFilter__Group__0 : rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 ;
    public final void rule__ActiveFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8142:1: ( rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 )
            // InternalEcl.g:8143:2: rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ActiveFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0"


    // $ANTLR start "rule__ActiveFilter__Group__0__Impl"
    // InternalEcl.g:8150:1: rule__ActiveFilter__Group__0__Impl : ( ( rule__ActiveFilter__Group_0__0 )? ) ;
    public final void rule__ActiveFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8154:1: ( ( ( rule__ActiveFilter__Group_0__0 )? ) )
            // InternalEcl.g:8155:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            {
            // InternalEcl.g:8155:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            // InternalEcl.g:8156:2: ( rule__ActiveFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }
            // InternalEcl.g:8157:2: ( rule__ActiveFilter__Group_0__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==RULE_DESCRIPTION_KEYWORD||LA67_0==RULE_CONCEPT_KEYWORD) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEcl.g:8157:3: rule__ActiveFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ActiveFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__1"
    // InternalEcl.g:8165:1: rule__ActiveFilter__Group__1 : rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 ;
    public final void rule__ActiveFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8169:1: ( rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 )
            // InternalEcl.g:8170:2: rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__ActiveFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1"


    // $ANTLR start "rule__ActiveFilter__Group__1__Impl"
    // InternalEcl.g:8177:1: rule__ActiveFilter__Group__1__Impl : ( RULE_ACTIVE_KEYWORD ) ;
    public final void rule__ActiveFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8181:1: ( ( RULE_ACTIVE_KEYWORD ) )
            // InternalEcl.g:8182:1: ( RULE_ACTIVE_KEYWORD )
            {
            // InternalEcl.g:8182:1: ( RULE_ACTIVE_KEYWORD )
            // InternalEcl.g:8183:2: RULE_ACTIVE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__2"
    // InternalEcl.g:8192:1: rule__ActiveFilter__Group__2 : rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 ;
    public final void rule__ActiveFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8196:1: ( rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 )
            // InternalEcl.g:8197:2: rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__ActiveFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2"


    // $ANTLR start "rule__ActiveFilter__Group__2__Impl"
    // InternalEcl.g:8204:1: rule__ActiveFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ActiveFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8208:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:8209:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:8209:1: ( RULE_EQUAL )
            // InternalEcl.g:8210:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__3"
    // InternalEcl.g:8219:1: rule__ActiveFilter__Group__3 : rule__ActiveFilter__Group__3__Impl ;
    public final void rule__ActiveFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8223:1: ( rule__ActiveFilter__Group__3__Impl )
            // InternalEcl.g:8224:2: rule__ActiveFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3"


    // $ANTLR start "rule__ActiveFilter__Group__3__Impl"
    // InternalEcl.g:8230:1: rule__ActiveFilter__Group__3__Impl : ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) ;
    public final void rule__ActiveFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8234:1: ( ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) )
            // InternalEcl.g:8235:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            {
            // InternalEcl.g:8235:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            // InternalEcl.g:8236:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }
            // InternalEcl.g:8237:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            // InternalEcl.g:8237:3: rule__ActiveFilter__ActiveAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__ActiveAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__0"
    // InternalEcl.g:8246:1: rule__ActiveFilter__Group_0__0 : rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 ;
    public final void rule__ActiveFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8250:1: ( rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 )
            // InternalEcl.g:8251:2: rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__ActiveFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0"


    // $ANTLR start "rule__ActiveFilter__Group_0__0__Impl"
    // InternalEcl.g:8258:1: rule__ActiveFilter__Group_0__0__Impl : ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ActiveFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8262:1: ( ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) )
            // InternalEcl.g:8263:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            {
            // InternalEcl.g:8263:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            // InternalEcl.g:8264:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEcl.g:8265:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            // InternalEcl.g:8265:3: rule__ActiveFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__1"
    // InternalEcl.g:8273:1: rule__ActiveFilter__Group_0__1 : rule__ActiveFilter__Group_0__1__Impl ;
    public final void rule__ActiveFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8277:1: ( rule__ActiveFilter__Group_0__1__Impl )
            // InternalEcl.g:8278:2: rule__ActiveFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1"


    // $ANTLR start "rule__ActiveFilter__Group_0__1__Impl"
    // InternalEcl.g:8284:1: rule__ActiveFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ActiveFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8288:1: ( ( RULE_DOT ) )
            // InternalEcl.g:8289:1: ( RULE_DOT )
            {
            // InternalEcl.g:8289:1: ( RULE_DOT )
            // InternalEcl.g:8290:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__0"
    // InternalEcl.g:8300:1: rule__ModuleFilter__Group__0 : rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 ;
    public final void rule__ModuleFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8304:1: ( rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 )
            // InternalEcl.g:8305:2: rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__ModuleFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0"


    // $ANTLR start "rule__ModuleFilter__Group__0__Impl"
    // InternalEcl.g:8312:1: rule__ModuleFilter__Group__0__Impl : ( ( rule__ModuleFilter__Group_0__0 )? ) ;
    public final void rule__ModuleFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8316:1: ( ( ( rule__ModuleFilter__Group_0__0 )? ) )
            // InternalEcl.g:8317:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            {
            // InternalEcl.g:8317:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            // InternalEcl.g:8318:2: ( rule__ModuleFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }
            // InternalEcl.g:8319:2: ( rule__ModuleFilter__Group_0__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_DESCRIPTION_KEYWORD||LA68_0==RULE_CONCEPT_KEYWORD) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalEcl.g:8319:3: rule__ModuleFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ModuleFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__1"
    // InternalEcl.g:8327:1: rule__ModuleFilter__Group__1 : rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 ;
    public final void rule__ModuleFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8331:1: ( rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 )
            // InternalEcl.g:8332:2: rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__ModuleFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1"


    // $ANTLR start "rule__ModuleFilter__Group__1__Impl"
    // InternalEcl.g:8339:1: rule__ModuleFilter__Group__1__Impl : ( RULE_MODULEID_KEYWORD ) ;
    public final void rule__ModuleFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8343:1: ( ( RULE_MODULEID_KEYWORD ) )
            // InternalEcl.g:8344:1: ( RULE_MODULEID_KEYWORD )
            {
            // InternalEcl.g:8344:1: ( RULE_MODULEID_KEYWORD )
            // InternalEcl.g:8345:2: RULE_MODULEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__2"
    // InternalEcl.g:8354:1: rule__ModuleFilter__Group__2 : rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 ;
    public final void rule__ModuleFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8358:1: ( rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 )
            // InternalEcl.g:8359:2: rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ModuleFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2"


    // $ANTLR start "rule__ModuleFilter__Group__2__Impl"
    // InternalEcl.g:8366:1: rule__ModuleFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ModuleFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8370:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:8371:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:8371:1: ( RULE_EQUAL )
            // InternalEcl.g:8372:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__3"
    // InternalEcl.g:8381:1: rule__ModuleFilter__Group__3 : rule__ModuleFilter__Group__3__Impl ;
    public final void rule__ModuleFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8385:1: ( rule__ModuleFilter__Group__3__Impl )
            // InternalEcl.g:8386:2: rule__ModuleFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3"


    // $ANTLR start "rule__ModuleFilter__Group__3__Impl"
    // InternalEcl.g:8392:1: rule__ModuleFilter__Group__3__Impl : ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) ;
    public final void rule__ModuleFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8396:1: ( ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) )
            // InternalEcl.g:8397:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            {
            // InternalEcl.g:8397:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            // InternalEcl.g:8398:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }
            // InternalEcl.g:8399:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            // InternalEcl.g:8399:3: rule__ModuleFilter__ModuleIdAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__ModuleIdAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__0"
    // InternalEcl.g:8408:1: rule__ModuleFilter__Group_0__0 : rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 ;
    public final void rule__ModuleFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8412:1: ( rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 )
            // InternalEcl.g:8413:2: rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__ModuleFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0"


    // $ANTLR start "rule__ModuleFilter__Group_0__0__Impl"
    // InternalEcl.g:8420:1: rule__ModuleFilter__Group_0__0__Impl : ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ModuleFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8424:1: ( ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) )
            // InternalEcl.g:8425:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            {
            // InternalEcl.g:8425:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            // InternalEcl.g:8426:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEcl.g:8427:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            // InternalEcl.g:8427:3: rule__ModuleFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__1"
    // InternalEcl.g:8435:1: rule__ModuleFilter__Group_0__1 : rule__ModuleFilter__Group_0__1__Impl ;
    public final void rule__ModuleFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8439:1: ( rule__ModuleFilter__Group_0__1__Impl )
            // InternalEcl.g:8440:2: rule__ModuleFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1"


    // $ANTLR start "rule__ModuleFilter__Group_0__1__Impl"
    // InternalEcl.g:8446:1: rule__ModuleFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ModuleFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8450:1: ( ( RULE_DOT ) )
            // InternalEcl.g:8451:1: ( RULE_DOT )
            {
            // InternalEcl.g:8451:1: ( RULE_DOT )
            // InternalEcl.g:8452:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__0"
    // InternalEcl.g:8462:1: rule__SemanticTagFilter__Group__0 : rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 ;
    public final void rule__SemanticTagFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8466:1: ( rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 )
            // InternalEcl.g:8467:2: rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__SemanticTagFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0"


    // $ANTLR start "rule__SemanticTagFilter__Group__0__Impl"
    // InternalEcl.g:8474:1: rule__SemanticTagFilter__Group__0__Impl : ( ( rule__SemanticTagFilter__Group_0__0 )? ) ;
    public final void rule__SemanticTagFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8478:1: ( ( ( rule__SemanticTagFilter__Group_0__0 )? ) )
            // InternalEcl.g:8479:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            {
            // InternalEcl.g:8479:1: ( ( rule__SemanticTagFilter__Group_0__0 )? )
            // InternalEcl.g:8480:2: ( rule__SemanticTagFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }
            // InternalEcl.g:8481:2: ( rule__SemanticTagFilter__Group_0__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_DESCRIPTION_KEYWORD||LA69_0==RULE_CONCEPT_KEYWORD) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalEcl.g:8481:3: rule__SemanticTagFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SemanticTagFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__1"
    // InternalEcl.g:8489:1: rule__SemanticTagFilter__Group__1 : rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 ;
    public final void rule__SemanticTagFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8493:1: ( rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 )
            // InternalEcl.g:8494:2: rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__SemanticTagFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1"


    // $ANTLR start "rule__SemanticTagFilter__Group__1__Impl"
    // InternalEcl.g:8501:1: rule__SemanticTagFilter__Group__1__Impl : ( RULE_SEMANTIC_TAG_KEYWORD ) ;
    public final void rule__SemanticTagFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8505:1: ( ( RULE_SEMANTIC_TAG_KEYWORD ) )
            // InternalEcl.g:8506:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            {
            // InternalEcl.g:8506:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            // InternalEcl.g:8507:2: RULE_SEMANTIC_TAG_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__2"
    // InternalEcl.g:8516:1: rule__SemanticTagFilter__Group__2 : rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 ;
    public final void rule__SemanticTagFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8520:1: ( rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3 )
            // InternalEcl.g:8521:2: rule__SemanticTagFilter__Group__2__Impl rule__SemanticTagFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__SemanticTagFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2"


    // $ANTLR start "rule__SemanticTagFilter__Group__2__Impl"
    // InternalEcl.g:8528:1: rule__SemanticTagFilter__Group__2__Impl : ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) ;
    public final void rule__SemanticTagFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8532:1: ( ( ( rule__SemanticTagFilter__OpAssignment_2 ) ) )
            // InternalEcl.g:8533:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            {
            // InternalEcl.g:8533:1: ( ( rule__SemanticTagFilter__OpAssignment_2 ) )
            // InternalEcl.g:8534:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }
            // InternalEcl.g:8535:2: ( rule__SemanticTagFilter__OpAssignment_2 )
            // InternalEcl.g:8535:3: rule__SemanticTagFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__3"
    // InternalEcl.g:8543:1: rule__SemanticTagFilter__Group__3 : rule__SemanticTagFilter__Group__3__Impl ;
    public final void rule__SemanticTagFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8547:1: ( rule__SemanticTagFilter__Group__3__Impl )
            // InternalEcl.g:8548:2: rule__SemanticTagFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3"


    // $ANTLR start "rule__SemanticTagFilter__Group__3__Impl"
    // InternalEcl.g:8554:1: rule__SemanticTagFilter__Group__3__Impl : ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) ;
    public final void rule__SemanticTagFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8558:1: ( ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) ) )
            // InternalEcl.g:8559:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            {
            // InternalEcl.g:8559:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_3 ) )
            // InternalEcl.g:8560:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }
            // InternalEcl.g:8561:2: ( rule__SemanticTagFilter__SemanticTagAssignment_3 )
            // InternalEcl.g:8561:3: rule__SemanticTagFilter__SemanticTagAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__SemanticTagAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__3__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0"
    // InternalEcl.g:8570:1: rule__SemanticTagFilter__Group_0__0 : rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 ;
    public final void rule__SemanticTagFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8574:1: ( rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1 )
            // InternalEcl.g:8575:2: rule__SemanticTagFilter__Group_0__0__Impl rule__SemanticTagFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__SemanticTagFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__0__Impl"
    // InternalEcl.g:8582:1: rule__SemanticTagFilter__Group_0__0__Impl : ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__SemanticTagFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8586:1: ( ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) ) )
            // InternalEcl.g:8587:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            {
            // InternalEcl.g:8587:1: ( ( rule__SemanticTagFilter__DomainAssignment_0_0 ) )
            // InternalEcl.g:8588:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEcl.g:8589:2: ( rule__SemanticTagFilter__DomainAssignment_0_0 )
            // InternalEcl.g:8589:3: rule__SemanticTagFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1"
    // InternalEcl.g:8597:1: rule__SemanticTagFilter__Group_0__1 : rule__SemanticTagFilter__Group_0__1__Impl ;
    public final void rule__SemanticTagFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8601:1: ( rule__SemanticTagFilter__Group_0__1__Impl )
            // InternalEcl.g:8602:2: rule__SemanticTagFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1"


    // $ANTLR start "rule__SemanticTagFilter__Group_0__1__Impl"
    // InternalEcl.g:8608:1: rule__SemanticTagFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__SemanticTagFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8612:1: ( ( RULE_DOT ) )
            // InternalEcl.g:8613:1: ( RULE_DOT )
            {
            // InternalEcl.g:8613:1: ( RULE_DOT )
            // InternalEcl.g:8614:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group_0__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0"
    // InternalEcl.g:8624:1: rule__EffectiveTimeFilter__Group__0 : rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 ;
    public final void rule__EffectiveTimeFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8628:1: ( rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 )
            // InternalEcl.g:8629:2: rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__EffectiveTimeFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0__Impl"
    // InternalEcl.g:8636:1: rule__EffectiveTimeFilter__Group__0__Impl : ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) ;
    public final void rule__EffectiveTimeFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8640:1: ( ( ( rule__EffectiveTimeFilter__Group_0__0 )? ) )
            // InternalEcl.g:8641:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            {
            // InternalEcl.g:8641:1: ( ( rule__EffectiveTimeFilter__Group_0__0 )? )
            // InternalEcl.g:8642:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }
            // InternalEcl.g:8643:2: ( rule__EffectiveTimeFilter__Group_0__0 )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_DESCRIPTION_KEYWORD||LA70_0==RULE_CONCEPT_KEYWORD) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalEcl.g:8643:3: rule__EffectiveTimeFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EffectiveTimeFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1"
    // InternalEcl.g:8651:1: rule__EffectiveTimeFilter__Group__1 : rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 ;
    public final void rule__EffectiveTimeFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8655:1: ( rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 )
            // InternalEcl.g:8656:2: rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__EffectiveTimeFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1__Impl"
    // InternalEcl.g:8663:1: rule__EffectiveTimeFilter__Group__1__Impl : ( RULE_EFFECTIVE_TIME_KEYWORD ) ;
    public final void rule__EffectiveTimeFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8667:1: ( ( RULE_EFFECTIVE_TIME_KEYWORD ) )
            // InternalEcl.g:8668:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            {
            // InternalEcl.g:8668:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            // InternalEcl.g:8669:2: RULE_EFFECTIVE_TIME_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_1()); 
            }
            match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2"
    // InternalEcl.g:8678:1: rule__EffectiveTimeFilter__Group__2 : rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 ;
    public final void rule__EffectiveTimeFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8682:1: ( rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3 )
            // InternalEcl.g:8683:2: rule__EffectiveTimeFilter__Group__2__Impl rule__EffectiveTimeFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__EffectiveTimeFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2__Impl"
    // InternalEcl.g:8690:1: rule__EffectiveTimeFilter__Group__2__Impl : ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8694:1: ( ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) ) )
            // InternalEcl.g:8695:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            {
            // InternalEcl.g:8695:1: ( ( rule__EffectiveTimeFilter__OpAssignment_2 ) )
            // InternalEcl.g:8696:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }
            // InternalEcl.g:8697:2: ( rule__EffectiveTimeFilter__OpAssignment_2 )
            // InternalEcl.g:8697:3: rule__EffectiveTimeFilter__OpAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__OpAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3"
    // InternalEcl.g:8705:1: rule__EffectiveTimeFilter__Group__3 : rule__EffectiveTimeFilter__Group__3__Impl ;
    public final void rule__EffectiveTimeFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8709:1: ( rule__EffectiveTimeFilter__Group__3__Impl )
            // InternalEcl.g:8710:2: rule__EffectiveTimeFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__3__Impl"
    // InternalEcl.g:8716:1: rule__EffectiveTimeFilter__Group__3__Impl : ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8720:1: ( ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) ) )
            // InternalEcl.g:8721:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            {
            // InternalEcl.g:8721:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 ) )
            // InternalEcl.g:8722:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }
            // InternalEcl.g:8723:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 )
            // InternalEcl.g:8723:3: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__EffectiveTimeAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__3__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0"
    // InternalEcl.g:8732:1: rule__EffectiveTimeFilter__Group_0__0 : rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 ;
    public final void rule__EffectiveTimeFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8736:1: ( rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1 )
            // InternalEcl.g:8737:2: rule__EffectiveTimeFilter__Group_0__0__Impl rule__EffectiveTimeFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__EffectiveTimeFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__0__Impl"
    // InternalEcl.g:8744:1: rule__EffectiveTimeFilter__Group_0__0__Impl : ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__EffectiveTimeFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8748:1: ( ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) ) )
            // InternalEcl.g:8749:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            {
            // InternalEcl.g:8749:1: ( ( rule__EffectiveTimeFilter__DomainAssignment_0_0 ) )
            // InternalEcl.g:8750:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEcl.g:8751:2: ( rule__EffectiveTimeFilter__DomainAssignment_0_0 )
            // InternalEcl.g:8751:3: rule__EffectiveTimeFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1"
    // InternalEcl.g:8759:1: rule__EffectiveTimeFilter__Group_0__1 : rule__EffectiveTimeFilter__Group_0__1__Impl ;
    public final void rule__EffectiveTimeFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8763:1: ( rule__EffectiveTimeFilter__Group_0__1__Impl )
            // InternalEcl.g:8764:2: rule__EffectiveTimeFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group_0__1__Impl"
    // InternalEcl.g:8770:1: rule__EffectiveTimeFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__EffectiveTimeFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8774:1: ( ( RULE_DOT ) )
            // InternalEcl.g:8775:1: ( RULE_DOT )
            {
            // InternalEcl.g:8775:1: ( RULE_DOT )
            // InternalEcl.g:8776:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group_0__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__0"
    // InternalEcl.g:8786:1: rule__PreferredInFilter__Group__0 : rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 ;
    public final void rule__PreferredInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8790:1: ( rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 )
            // InternalEcl.g:8791:2: rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__PreferredInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0"


    // $ANTLR start "rule__PreferredInFilter__Group__0__Impl"
    // InternalEcl.g:8798:1: rule__PreferredInFilter__Group__0__Impl : ( RULE_PREFERRED_IN_KEYWORD ) ;
    public final void rule__PreferredInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8802:1: ( ( RULE_PREFERRED_IN_KEYWORD ) )
            // InternalEcl.g:8803:1: ( RULE_PREFERRED_IN_KEYWORD )
            {
            // InternalEcl.g:8803:1: ( RULE_PREFERRED_IN_KEYWORD )
            // InternalEcl.g:8804:2: RULE_PREFERRED_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__1"
    // InternalEcl.g:8813:1: rule__PreferredInFilter__Group__1 : rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 ;
    public final void rule__PreferredInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8817:1: ( rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 )
            // InternalEcl.g:8818:2: rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__PreferredInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1"


    // $ANTLR start "rule__PreferredInFilter__Group__1__Impl"
    // InternalEcl.g:8825:1: rule__PreferredInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__PreferredInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8829:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:8830:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:8830:1: ( RULE_EQUAL )
            // InternalEcl.g:8831:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__2"
    // InternalEcl.g:8840:1: rule__PreferredInFilter__Group__2 : rule__PreferredInFilter__Group__2__Impl ;
    public final void rule__PreferredInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8844:1: ( rule__PreferredInFilter__Group__2__Impl )
            // InternalEcl.g:8845:2: rule__PreferredInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2"


    // $ANTLR start "rule__PreferredInFilter__Group__2__Impl"
    // InternalEcl.g:8851:1: rule__PreferredInFilter__Group__2__Impl : ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__PreferredInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8855:1: ( ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEcl.g:8856:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEcl.g:8856:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEcl.g:8857:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEcl.g:8858:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEcl.g:8858:3: rule__PreferredInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__0"
    // InternalEcl.g:8867:1: rule__AcceptableInFilter__Group__0 : rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 ;
    public final void rule__AcceptableInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8871:1: ( rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 )
            // InternalEcl.g:8872:2: rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__AcceptableInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0"


    // $ANTLR start "rule__AcceptableInFilter__Group__0__Impl"
    // InternalEcl.g:8879:1: rule__AcceptableInFilter__Group__0__Impl : ( RULE_ACCEPTABLE_IN_KEYWORD ) ;
    public final void rule__AcceptableInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8883:1: ( ( RULE_ACCEPTABLE_IN_KEYWORD ) )
            // InternalEcl.g:8884:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            {
            // InternalEcl.g:8884:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            // InternalEcl.g:8885:2: RULE_ACCEPTABLE_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__1"
    // InternalEcl.g:8894:1: rule__AcceptableInFilter__Group__1 : rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 ;
    public final void rule__AcceptableInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8898:1: ( rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 )
            // InternalEcl.g:8899:2: rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AcceptableInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1"


    // $ANTLR start "rule__AcceptableInFilter__Group__1__Impl"
    // InternalEcl.g:8906:1: rule__AcceptableInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__AcceptableInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8910:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:8911:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:8911:1: ( RULE_EQUAL )
            // InternalEcl.g:8912:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__2"
    // InternalEcl.g:8921:1: rule__AcceptableInFilter__Group__2 : rule__AcceptableInFilter__Group__2__Impl ;
    public final void rule__AcceptableInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8925:1: ( rule__AcceptableInFilter__Group__2__Impl )
            // InternalEcl.g:8926:2: rule__AcceptableInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2"


    // $ANTLR start "rule__AcceptableInFilter__Group__2__Impl"
    // InternalEcl.g:8932:1: rule__AcceptableInFilter__Group__2__Impl : ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__AcceptableInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8936:1: ( ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEcl.g:8937:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEcl.g:8937:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEcl.g:8938:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEcl.g:8939:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEcl.g:8939:3: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0"
    // InternalEcl.g:8948:1: rule__LanguageRefSetFilter__Group__0 : rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 ;
    public final void rule__LanguageRefSetFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8952:1: ( rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 )
            // InternalEcl.g:8953:2: rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__LanguageRefSetFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0__Impl"
    // InternalEcl.g:8960:1: rule__LanguageRefSetFilter__Group__0__Impl : ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) ;
    public final void rule__LanguageRefSetFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8964:1: ( ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) )
            // InternalEcl.g:8965:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            {
            // InternalEcl.g:8965:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            // InternalEcl.g:8966:2: RULE_LANGUAGE_REFSET_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1"
    // InternalEcl.g:8975:1: rule__LanguageRefSetFilter__Group__1 : rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 ;
    public final void rule__LanguageRefSetFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8979:1: ( rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 )
            // InternalEcl.g:8980:2: rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LanguageRefSetFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1__Impl"
    // InternalEcl.g:8987:1: rule__LanguageRefSetFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__LanguageRefSetFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8991:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:8992:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:8992:1: ( RULE_EQUAL )
            // InternalEcl.g:8993:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2"
    // InternalEcl.g:9002:1: rule__LanguageRefSetFilter__Group__2 : rule__LanguageRefSetFilter__Group__2__Impl ;
    public final void rule__LanguageRefSetFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9006:1: ( rule__LanguageRefSetFilter__Group__2__Impl )
            // InternalEcl.g:9007:2: rule__LanguageRefSetFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2__Impl"
    // InternalEcl.g:9013:1: rule__LanguageRefSetFilter__Group__2__Impl : ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__LanguageRefSetFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9017:1: ( ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEcl.g:9018:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEcl.g:9018:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEcl.g:9019:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEcl.g:9020:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            // InternalEcl.g:9020:3: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0"
    // InternalEcl.g:9029:1: rule__CaseSignificanceFilter__Group__0 : rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 ;
    public final void rule__CaseSignificanceFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9033:1: ( rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 )
            // InternalEcl.g:9034:2: rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__CaseSignificanceFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0__Impl"
    // InternalEcl.g:9041:1: rule__CaseSignificanceFilter__Group__0__Impl : ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) ;
    public final void rule__CaseSignificanceFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9045:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) )
            // InternalEcl.g:9046:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            {
            // InternalEcl.g:9046:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            // InternalEcl.g:9047:2: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1"
    // InternalEcl.g:9056:1: rule__CaseSignificanceFilter__Group__1 : rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 ;
    public final void rule__CaseSignificanceFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9060:1: ( rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 )
            // InternalEcl.g:9061:2: rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CaseSignificanceFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1__Impl"
    // InternalEcl.g:9068:1: rule__CaseSignificanceFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__CaseSignificanceFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9072:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:9073:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:9073:1: ( RULE_EQUAL )
            // InternalEcl.g:9074:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2"
    // InternalEcl.g:9083:1: rule__CaseSignificanceFilter__Group__2 : rule__CaseSignificanceFilter__Group__2__Impl ;
    public final void rule__CaseSignificanceFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9087:1: ( rule__CaseSignificanceFilter__Group__2__Impl )
            // InternalEcl.g:9088:2: rule__CaseSignificanceFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2__Impl"
    // InternalEcl.g:9094:1: rule__CaseSignificanceFilter__Group__2__Impl : ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) ;
    public final void rule__CaseSignificanceFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9098:1: ( ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) )
            // InternalEcl.g:9099:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            {
            // InternalEcl.g:9099:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            // InternalEcl.g:9100:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }
            // InternalEcl.g:9101:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            // InternalEcl.g:9101:3: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEcl.g:9110:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9114:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEcl.g:9115:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEcl.g:9122:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9126:1: ( ( ruleNonNegativeInteger ) )
            // InternalEcl.g:9127:1: ( ruleNonNegativeInteger )
            {
            // InternalEcl.g:9127:1: ( ruleNonNegativeInteger )
            // InternalEcl.g:9128:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEcl.g:9137:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9141:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEcl.g:9142:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEcl.g:9149:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9153:1: ( ( RULE_DOT ) )
            // InternalEcl.g:9154:1: ( RULE_DOT )
            {
            // InternalEcl.g:9154:1: ( RULE_DOT )
            // InternalEcl.g:9155:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEcl.g:9164:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9168:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEcl.g:9169:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEcl.g:9175:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9179:1: ( ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) )
            // InternalEcl.g:9180:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            {
            // InternalEcl.g:9180:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            // InternalEcl.g:9181:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:9182:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( ((LA71_0>=RULE_DIGIT_NONZERO && LA71_0<=RULE_DIGIT_ZERO)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalEcl.g:9182:3: rule__NonNegativeDecimal__Alternatives_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__NonNegativeDecimal__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEcl.g:9191:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9195:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEcl.g:9196:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEcl.g:9203:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9207:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEcl.g:9208:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEcl.g:9208:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEcl.g:9209:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEcl.g:9210:2: ( rule__Integer__Alternatives_0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=RULE_PLUS && LA72_0<=RULE_DASH)) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalEcl.g:9210:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEcl.g:9218:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9222:1: ( rule__Integer__Group__1__Impl )
            // InternalEcl.g:9223:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEcl.g:9229:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9233:1: ( ( ruleNonNegativeInteger ) )
            // InternalEcl.g:9234:1: ( ruleNonNegativeInteger )
            {
            // InternalEcl.g:9234:1: ( ruleNonNegativeInteger )
            // InternalEcl.g:9235:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEcl.g:9245:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9249:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEcl.g:9250:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEcl.g:9257:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9261:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEcl.g:9262:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEcl.g:9262:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEcl.g:9263:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEcl.g:9264:2: ( rule__Decimal__Alternatives_0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( ((LA73_0>=RULE_PLUS && LA73_0<=RULE_DASH)) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalEcl.g:9264:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEcl.g:9272:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9276:1: ( rule__Decimal__Group__1__Impl )
            // InternalEcl.g:9277:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEcl.g:9283:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9287:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEcl.g:9288:1: ( ruleNonNegativeDecimal )
            {
            // InternalEcl.g:9288:1: ( ruleNonNegativeDecimal )
            // InternalEcl.g:9289:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__Script__ConstraintAssignment_1"
    // InternalEcl.g:9299:1: rule__Script__ConstraintAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__Script__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9303:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:9304:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:9304:2: ( ruleExpressionConstraint )
            // InternalEcl.g:9305:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__ConstraintAssignment_1"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEcl.g:9314:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9318:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEcl.g:9319:2: ( ruleAndExpressionConstraint )
            {
            // InternalEcl.g:9319:2: ( ruleAndExpressionConstraint )
            // InternalEcl.g:9320:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEcl.g:9329:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9333:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEcl.g:9334:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEcl.g:9334:2: ( ruleExclusionExpressionConstraint )
            // InternalEcl.g:9335:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEcl.g:9344:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9348:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEcl.g:9349:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEcl.g:9349:2: ( ruleRefinedExpressionConstraint )
            // InternalEcl.g:9350:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEcl.g:9359:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9363:1: ( ( ruleEclRefinement ) )
            // InternalEcl.g:9364:2: ( ruleEclRefinement )
            {
            // InternalEcl.g:9364:2: ( ruleEclRefinement )
            // InternalEcl.g:9365:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEcl.g:9374:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9378:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:9379:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:9379:2: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:9380:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__FilteredExpressionConstraint__FilterAssignment_1_1"
    // InternalEcl.g:9389:1: rule__FilteredExpressionConstraint__FilterAssignment_1_1 : ( ruleFilterConstraint ) ;
    public final void rule__FilteredExpressionConstraint__FilterAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9393:1: ( ( ruleFilterConstraint ) )
            // InternalEcl.g:9394:2: ( ruleFilterConstraint )
            {
            // InternalEcl.g:9394:2: ( ruleFilterConstraint )
            // InternalEcl.g:9395:3: ruleFilterConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__FilterAssignment_1_1"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEcl.g:9404:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9408:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9409:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9409:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9410:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:9419:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9423:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9424:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9424:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9425:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEcl.g:9434:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9438:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9439:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9439:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9440:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:9449:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9453:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9454:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9454:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9455:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEcl.g:9464:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9468:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9469:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9469:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9470:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:9479:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9483:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9484:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9484:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9485:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEcl.g:9494:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9498:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9499:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9499:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9500:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:9509:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9513:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:9514:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:9514:2: ( ruleEclFocusConcept )
            // InternalEcl.g:9515:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_1"
    // InternalEcl.g:9524:1: rule__MemberOf__ConstraintAssignment_1 : ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9528:1: ( ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) )
            // InternalEcl.g:9529:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            {
            // InternalEcl.g:9529:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            // InternalEcl.g:9530:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }
            // InternalEcl.g:9531:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            // InternalEcl.g:9531:4: rule__MemberOf__ConstraintAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_1"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEcl.g:9539:1: rule__EclConceptReference__IdAssignment_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9543:1: ( ( ruleSnomedIdentifier ) )
            // InternalEcl.g:9544:2: ( ruleSnomedIdentifier )
            {
            // InternalEcl.g:9544:2: ( ruleSnomedIdentifier )
            // InternalEcl.g:9545:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEcl.g:9554:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9558:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEcl.g:9559:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEcl.g:9559:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEcl.g:9560:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEcl.g:9569:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9573:1: ( ( ruleEclConceptReference ) )
            // InternalEcl.g:9574:2: ( ruleEclConceptReference )
            {
            // InternalEcl.g:9574:2: ( ruleEclConceptReference )
            // InternalEcl.g:9575:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEcl.g:9584:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9588:1: ( ( ruleAndRefinement ) )
            // InternalEcl.g:9589:2: ( ruleAndRefinement )
            {
            // InternalEcl.g:9589:2: ( ruleAndRefinement )
            // InternalEcl.g:9590:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEcl.g:9599:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9603:1: ( ( ruleSubRefinement ) )
            // InternalEcl.g:9604:2: ( ruleSubRefinement )
            {
            // InternalEcl.g:9604:2: ( ruleSubRefinement )
            // InternalEcl.g:9605:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEcl.g:9614:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9618:1: ( ( ruleEclRefinement ) )
            // InternalEcl.g:9619:2: ( ruleEclRefinement )
            {
            // InternalEcl.g:9619:2: ( ruleEclRefinement )
            // InternalEcl.g:9620:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEcl.g:9629:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9633:1: ( ( ruleCardinality ) )
            // InternalEcl.g:9634:2: ( ruleCardinality )
            {
            // InternalEcl.g:9634:2: ( ruleCardinality )
            // InternalEcl.g:9635:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEcl.g:9644:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9648:1: ( ( ruleEclAttributeSet ) )
            // InternalEcl.g:9649:2: ( ruleEclAttributeSet )
            {
            // InternalEcl.g:9649:2: ( ruleEclAttributeSet )
            // InternalEcl.g:9650:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEcl.g:9659:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9663:1: ( ( ruleAndAttributeSet ) )
            // InternalEcl.g:9664:2: ( ruleAndAttributeSet )
            {
            // InternalEcl.g:9664:2: ( ruleAndAttributeSet )
            // InternalEcl.g:9665:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEcl.g:9674:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9678:1: ( ( ruleSubAttributeSet ) )
            // InternalEcl.g:9679:2: ( ruleSubAttributeSet )
            {
            // InternalEcl.g:9679:2: ( ruleSubAttributeSet )
            // InternalEcl.g:9680:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEcl.g:9689:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9693:1: ( ( ruleEclAttributeSet ) )
            // InternalEcl.g:9694:2: ( ruleEclAttributeSet )
            {
            // InternalEcl.g:9694:2: ( ruleEclAttributeSet )
            // InternalEcl.g:9695:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEcl.g:9704:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9708:1: ( ( ruleCardinality ) )
            // InternalEcl.g:9709:2: ( ruleCardinality )
            {
            // InternalEcl.g:9709:2: ( ruleCardinality )
            // InternalEcl.g:9710:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEcl.g:9719:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9723:1: ( ( RULE_REVERSED ) )
            // InternalEcl.g:9724:2: ( RULE_REVERSED )
            {
            // InternalEcl.g:9724:2: ( RULE_REVERSED )
            // InternalEcl.g:9725:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEcl.g:9734:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9738:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:9739:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:9739:2: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:9740:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEcl.g:9749:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9753:1: ( ( ruleComparison ) )
            // InternalEcl.g:9754:2: ( ruleComparison )
            {
            // InternalEcl.g:9754:2: ( ruleComparison )
            // InternalEcl.g:9755:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEcl.g:9764:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9768:1: ( ( ruleNonNegativeInteger ) )
            // InternalEcl.g:9769:2: ( ruleNonNegativeInteger )
            {
            // InternalEcl.g:9769:2: ( ruleNonNegativeInteger )
            // InternalEcl.g:9770:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEcl.g:9779:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9783:1: ( ( ruleMaxValue ) )
            // InternalEcl.g:9784:2: ( ruleMaxValue )
            {
            // InternalEcl.g:9784:2: ( ruleMaxValue )
            // InternalEcl.g:9785:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEcl.g:9794:1: rule__AttributeComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9798:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:9799:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:9799:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:9800:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEcl.g:9809:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9813:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:9814:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:9814:2: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:9815:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEcl.g:9824:1: rule__BooleanValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9828:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:9829:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:9829:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:9830:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEcl.g:9839:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9843:1: ( ( ruleBoolean ) )
            // InternalEcl.g:9844:2: ( ruleBoolean )
            {
            // InternalEcl.g:9844:2: ( ruleBoolean )
            // InternalEcl.g:9845:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEcl.g:9854:1: rule__StringValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9858:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:9859:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:9859:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:9860:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEcl.g:9869:1: rule__StringValueComparison__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9873:1: ( ( RULE_STRING ) )
            // InternalEcl.g:9874:2: ( RULE_STRING )
            {
            // InternalEcl.g:9874:2: ( RULE_STRING )
            // InternalEcl.g:9875:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEcl.g:9884:1: rule__IntegerValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9888:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEcl.g:9889:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEcl.g:9889:2: ( ruleNUMERIC_OPERATOR )
            // InternalEcl.g:9890:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEcl.g:9899:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9903:1: ( ( ruleInteger ) )
            // InternalEcl.g:9904:2: ( ruleInteger )
            {
            // InternalEcl.g:9904:2: ( ruleInteger )
            // InternalEcl.g:9905:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEcl.g:9914:1: rule__DecimalValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9918:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEcl.g:9919:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEcl.g:9919:2: ( ruleNUMERIC_OPERATOR )
            // InternalEcl.g:9920:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEcl.g:9929:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9933:1: ( ( ruleDecimal ) )
            // InternalEcl.g:9934:2: ( ruleDecimal )
            {
            // InternalEcl.g:9934:2: ( ruleDecimal )
            // InternalEcl.g:9935:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEcl.g:9944:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9948:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:9949:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:9949:2: ( ruleExpressionConstraint )
            // InternalEcl.g:9950:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEcl.g:9959:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9963:1: ( ( ruleConjunctionFilter ) )
            // InternalEcl.g:9964:2: ( ruleConjunctionFilter )
            {
            // InternalEcl.g:9964:2: ( ruleConjunctionFilter )
            // InternalEcl.g:9965:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEcl.g:9974:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9978:1: ( ( rulePropertyFilter ) )
            // InternalEcl.g:9979:2: ( rulePropertyFilter )
            {
            // InternalEcl.g:9979:2: ( rulePropertyFilter )
            // InternalEcl.g:9980:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEcl.g:9989:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9993:1: ( ( ruleFilter ) )
            // InternalEcl.g:9994:2: ( ruleFilter )
            {
            // InternalEcl.g:9994:2: ( ruleFilter )
            // InternalEcl.g:9995:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__TypedTermFilter__OpAssignment_0"
    // InternalEcl.g:10004:1: rule__TypedTermFilter__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilter__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10008:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10009:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10009:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10010:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilter__ClauseAssignment_1"
    // InternalEcl.g:10019:1: rule__TypedTermFilter__ClauseAssignment_1 : ( ruleTypedTermFilterClause ) ;
    public final void rule__TypedTermFilter__ClauseAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10023:1: ( ( ruleTypedTermFilterClause ) )
            // InternalEcl.g:10024:2: ( ruleTypedTermFilterClause )
            {
            // InternalEcl.g:10024:2: ( ruleTypedTermFilterClause )
            // InternalEcl.g:10025:3: ruleTypedTermFilterClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getClauseTypedTermFilterClauseParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilterClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getClauseTypedTermFilterClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__ClauseAssignment_1"


    // $ANTLR start "rule__TypedTermFilterSet__OpAssignment_0"
    // InternalEcl.g:10034:1: rule__TypedTermFilterSet__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilterSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10038:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10039:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10039:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10040:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilterSet__ClausesAssignment_2"
    // InternalEcl.g:10049:1: rule__TypedTermFilterSet__ClausesAssignment_2 : ( ruleTypedTermFilterClause ) ;
    public final void rule__TypedTermFilterSet__ClausesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10053:1: ( ( ruleTypedTermFilterClause ) )
            // InternalEcl.g:10054:2: ( ruleTypedTermFilterClause )
            {
            // InternalEcl.g:10054:2: ( ruleTypedTermFilterClause )
            // InternalEcl.g:10055:3: ruleTypedTermFilterClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getClausesTypedTermFilterClauseParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilterClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getClausesTypedTermFilterClauseParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__ClausesAssignment_2"


    // $ANTLR start "rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0"
    // InternalEcl.g:10064:1: rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0 : ( ruleLEXICAL_SEARCH_TYPE ) ;
    public final void rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10068:1: ( ( ruleLEXICAL_SEARCH_TYPE ) )
            // InternalEcl.g:10069:2: ( ruleLEXICAL_SEARCH_TYPE )
            {
            // InternalEcl.g:10069:2: ( ruleLEXICAL_SEARCH_TYPE )
            // InternalEcl.g:10070:3: ruleLEXICAL_SEARCH_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__LexicalSearchTypeAssignment_0_0"


    // $ANTLR start "rule__TypedTermFilterClause__TermAssignment_1"
    // InternalEcl.g:10079:1: rule__TypedTermFilterClause__TermAssignment_1 : ( RULE_STRING ) ;
    public final void rule__TypedTermFilterClause__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10083:1: ( ( RULE_STRING ) )
            // InternalEcl.g:10084:2: ( RULE_STRING )
            {
            // InternalEcl.g:10084:2: ( RULE_STRING )
            // InternalEcl.g:10085:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterClauseAccess().getTermSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterClauseAccess().getTermSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterClause__TermAssignment_1"


    // $ANTLR start "rule__LanguageFilter__OpAssignment_1"
    // InternalEcl.g:10094:1: rule__LanguageFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__LanguageFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10098:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10099:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10099:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10100:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_0"
    // InternalEcl.g:10109:1: rule__LanguageFilter__LanguageCodesAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10113:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:10114:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:10114:2: ( ruleUnquotedString )
            // InternalEcl.g:10115:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"
    // InternalEcl.g:10124:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10128:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:10129:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:10129:2: ( ruleUnquotedString )
            // InternalEcl.g:10130:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEcl.g:10139:1: rule__TypeIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10143:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10144:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10144:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10145:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEcl.g:10154:1: rule__TypeIdFilter__TypeAssignment_2 : ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10158:1: ( ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) )
            // InternalEcl.g:10159:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            {
            // InternalEcl.g:10159:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            // InternalEcl.g:10160:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }
            // InternalEcl.g:10161:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            // InternalEcl.g:10161:4: rule__TypeIdFilter__TypeAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEcl.g:10169:1: rule__TypeTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10173:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10174:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10174:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10175:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEcl.g:10184:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10188:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:10189:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:10189:2: ( ruleUnquotedString )
            // InternalEcl.g:10190:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEcl.g:10199:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10203:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:10204:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:10204:2: ( ruleUnquotedString )
            // InternalEcl.g:10205:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEcl.g:10214:1: rule__DialectIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10218:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10219:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10219:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10220:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEcl.g:10229:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10233:1: ( ( ruleDialect ) )
            // InternalEcl.g:10234:2: ( ruleDialect )
            {
            // InternalEcl.g:10234:2: ( ruleDialect )
            // InternalEcl.g:10235:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEcl.g:10244:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10248:1: ( ( ruleDialect ) )
            // InternalEcl.g:10249:2: ( ruleDialect )
            {
            // InternalEcl.g:10249:2: ( ruleDialect )
            // InternalEcl.g:10250:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEcl.g:10259:1: rule__DialectAliasFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10263:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10264:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10264:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10265:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEcl.g:10274:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10278:1: ( ( ruleDialectAlias ) )
            // InternalEcl.g:10279:2: ( ruleDialectAlias )
            {
            // InternalEcl.g:10279:2: ( ruleDialectAlias )
            // InternalEcl.g:10280:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEcl.g:10289:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10293:1: ( ( ruleDialectAlias ) )
            // InternalEcl.g:10294:2: ( ruleDialectAlias )
            {
            // InternalEcl.g:10294:2: ( ruleDialectAlias )
            // InternalEcl.g:10295:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEcl.g:10304:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleEclConceptReference ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10308:1: ( ( ruleEclConceptReference ) )
            // InternalEcl.g:10309:2: ( ruleEclConceptReference )
            {
            // InternalEcl.g:10309:2: ( ruleEclConceptReference )
            // InternalEcl.g:10310:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEcl.g:10319:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10323:1: ( ( ruleAcceptability ) )
            // InternalEcl.g:10324:2: ( ruleAcceptability )
            {
            // InternalEcl.g:10324:2: ( ruleAcceptability )
            // InternalEcl.g:10325:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEcl.g:10334:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10338:1: ( ( ruleDialectAliasValue ) )
            // InternalEcl.g:10339:2: ( ruleDialectAliasValue )
            {
            // InternalEcl.g:10339:2: ( ruleDialectAliasValue )
            // InternalEcl.g:10340:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_2"
    // InternalEcl.g:10349:1: rule__DialectAlias__AcceptabilityAssignment_2 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10353:1: ( ( ruleAcceptability ) )
            // InternalEcl.g:10354:2: ( ruleAcceptability )
            {
            // InternalEcl.g:10354:2: ( ruleAcceptability )
            // InternalEcl.g:10355:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_2"


    // $ANTLR start "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"
    // InternalEcl.g:10364:1: rule__AcceptabilityIdSet__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__AcceptabilityIdSet__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10368:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEcl.g:10369:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEcl.g:10369:2: ( ruleEclConceptReferenceSet )
            // InternalEcl.g:10370:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"
    // InternalEcl.g:10379:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 : ( ruleUnquotedString ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10383:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:10384:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:10384:2: ( ruleUnquotedString )
            // InternalEcl.g:10385:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"


    // $ANTLR start "rule__ActiveFilter__DomainAssignment_0_0"
    // InternalEcl.g:10394:1: rule__ActiveFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ActiveFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10398:1: ( ( ruleDOMAIN ) )
            // InternalEcl.g:10399:2: ( ruleDOMAIN )
            {
            // InternalEcl.g:10399:2: ( ruleDOMAIN )
            // InternalEcl.g:10400:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ActiveFilter__ActiveAssignment_3"
    // InternalEcl.g:10409:1: rule__ActiveFilter__ActiveAssignment_3 : ( ruleBoolean ) ;
    public final void rule__ActiveFilter__ActiveAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10413:1: ( ( ruleBoolean ) )
            // InternalEcl.g:10414:2: ( ruleBoolean )
            {
            // InternalEcl.g:10414:2: ( ruleBoolean )
            // InternalEcl.g:10415:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__ActiveAssignment_3"


    // $ANTLR start "rule__ModuleFilter__DomainAssignment_0_0"
    // InternalEcl.g:10424:1: rule__ModuleFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ModuleFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10428:1: ( ( ruleDOMAIN ) )
            // InternalEcl.g:10429:2: ( ruleDOMAIN )
            {
            // InternalEcl.g:10429:2: ( ruleDOMAIN )
            // InternalEcl.g:10430:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ModuleFilter__ModuleIdAssignment_3"
    // InternalEcl.g:10439:1: rule__ModuleFilter__ModuleIdAssignment_3 : ( ruleExpressionConstraint ) ;
    public final void rule__ModuleFilter__ModuleIdAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10443:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:10444:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:10444:2: ( ruleExpressionConstraint )
            // InternalEcl.g:10445:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__ModuleIdAssignment_3"


    // $ANTLR start "rule__SemanticTagFilter__DomainAssignment_0_0"
    // InternalEcl.g:10454:1: rule__SemanticTagFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__SemanticTagFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10458:1: ( ( ruleDOMAIN ) )
            // InternalEcl.g:10459:2: ( ruleDOMAIN )
            {
            // InternalEcl.g:10459:2: ( ruleDOMAIN )
            // InternalEcl.g:10460:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__SemanticTagFilter__OpAssignment_2"
    // InternalEcl.g:10469:1: rule__SemanticTagFilter__OpAssignment_2 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__SemanticTagFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10473:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:10474:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:10474:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:10475:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__OpAssignment_2"


    // $ANTLR start "rule__SemanticTagFilter__SemanticTagAssignment_3"
    // InternalEcl.g:10484:1: rule__SemanticTagFilter__SemanticTagAssignment_3 : ( RULE_STRING ) ;
    public final void rule__SemanticTagFilter__SemanticTagAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10488:1: ( ( RULE_STRING ) )
            // InternalEcl.g:10489:2: ( RULE_STRING )
            {
            // InternalEcl.g:10489:2: ( RULE_STRING )
            // InternalEcl.g:10490:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__SemanticTagAssignment_3"


    // $ANTLR start "rule__EffectiveTimeFilter__DomainAssignment_0_0"
    // InternalEcl.g:10499:1: rule__EffectiveTimeFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__EffectiveTimeFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10503:1: ( ( ruleDOMAIN ) )
            // InternalEcl.g:10504:2: ( ruleDOMAIN )
            {
            // InternalEcl.g:10504:2: ( ruleDOMAIN )
            // InternalEcl.g:10505:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__EffectiveTimeFilter__OpAssignment_2"
    // InternalEcl.g:10514:1: rule__EffectiveTimeFilter__OpAssignment_2 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__EffectiveTimeFilter__OpAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10518:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEcl.g:10519:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEcl.g:10519:2: ( ruleNUMERIC_OPERATOR )
            // InternalEcl.g:10520:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__OpAssignment_2"


    // $ANTLR start "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"
    // InternalEcl.g:10529:1: rule__EffectiveTimeFilter__EffectiveTimeAssignment_3 : ( RULE_STRING ) ;
    public final void rule__EffectiveTimeFilter__EffectiveTimeAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10533:1: ( ( RULE_STRING ) )
            // InternalEcl.g:10534:2: ( RULE_STRING )
            {
            // InternalEcl.g:10534:2: ( RULE_STRING )
            // InternalEcl.g:10535:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__EffectiveTimeAssignment_3"


    // $ANTLR start "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"
    // InternalEcl.g:10544:1: rule__PreferredInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__PreferredInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10548:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:10549:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:10549:2: ( ruleExpressionConstraint )
            // InternalEcl.g:10550:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"
    // InternalEcl.g:10559:1: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__AcceptableInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10563:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:10564:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:10564:2: ( ruleExpressionConstraint )
            // InternalEcl.g:10565:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"
    // InternalEcl.g:10574:1: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10578:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:10579:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:10579:2: ( ruleExpressionConstraint )
            // InternalEcl.g:10580:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"
    // InternalEcl.g:10589:1: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10593:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:10594:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:10594:2: ( ruleExpressionConstraint )
            // InternalEcl.g:10595:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"

    // $ANTLR start synpred1_InternalEcl
    public final void synpred1_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:1928:5: ( rule__SnomedIdentifier__Alternatives )
        // InternalEcl.g:1928:5: rule__SnomedIdentifier__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SnomedIdentifier__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEcl

    // $ANTLR start synpred3_InternalEcl
    public final void synpred3_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2198:5: ( rule__DialectAliasValue__Alternatives )
        // InternalEcl.g:2198:5: rule__DialectAliasValue__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalEcl

    // $ANTLR start synpred19_InternalEcl
    public final void synpred19_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2478:2: ( ( ruleAttributeConstraint ) )
        // InternalEcl.g:2478:2: ( ruleAttributeConstraint )
        {
        // InternalEcl.g:2478:2: ( ruleAttributeConstraint )
        // InternalEcl.g:2479:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalEcl

    // $ANTLR start synpred20_InternalEcl
    public final void synpred20_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2484:2: ( ( ruleEclAttributeGroup ) )
        // InternalEcl.g:2484:2: ( ruleEclAttributeGroup )
        {
        // InternalEcl.g:2484:2: ( ruleEclAttributeGroup )
        // InternalEcl.g:2485:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalEcl

    // $ANTLR start synpred22_InternalEcl
    public final void synpred22_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2526:2: ( ( ruleAttributeConstraint ) )
        // InternalEcl.g:2526:2: ( ruleAttributeConstraint )
        {
        // InternalEcl.g:2526:2: ( ruleAttributeConstraint )
        // InternalEcl.g:2527:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred22_InternalEcl

    // $ANTLR start synpred96_InternalEcl
    public final void synpred96_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3463:3: ( rule__OrExpressionConstraint__Group_1__0 )
        // InternalEcl.g:3463:3: rule__OrExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalEcl

    // $ANTLR start synpred97_InternalEcl
    public final void synpred97_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3598:3: ( rule__AndExpressionConstraint__Group_1__0 )
        // InternalEcl.g:3598:3: rule__AndExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalEcl

    // $ANTLR start synpred104_InternalEcl
    public final void synpred104_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:4928:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEcl.g:4928:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred104_InternalEcl

    // $ANTLR start synpred105_InternalEcl
    public final void synpred105_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:5090:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEcl.g:5090:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_InternalEcl

    // Delegated rules

    public final boolean synpred19_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA3 dfa3 = new DFA3(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA15 dfa15 = new DFA15(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\1\1\40\uffff";
    static final String dfa_3s = "\1\4\1\uffff\36\0\1\uffff";
    static final String dfa_4s = "\1\76\1\uffff\36\0\1\uffff";
    static final String dfa_5s = "\1\uffff\1\2\36\uffff\1\1";
    static final String dfa_6s = "\2\uffff\1\16\1\21\1\4\1\0\1\22\1\5\1\25\1\27\1\12\1\33\1\15\1\17\1\2\1\24\1\7\1\11\1\32\1\14\1\35\1\1\1\23\1\6\1\26\1\30\1\13\1\34\1\3\1\20\1\31\1\10\1\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\1\1\1\37\1\36\2\uffff\1\4\1\31\1\25\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\26\1\27\1\30\1\32\1\33\1\3\1\34\1\35\17\uffff\2\1\7\uffff\2\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 2198:4: ( rule__DialectAliasValue__Alternatives )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_5 = input.LA(1);

                         
                        int index3_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA3_21 = input.LA(1);

                         
                        int index3_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_21);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA3_14 = input.LA(1);

                         
                        int index3_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA3_28 = input.LA(1);

                         
                        int index3_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_28);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA3_4 = input.LA(1);

                         
                        int index3_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA3_7 = input.LA(1);

                         
                        int index3_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA3_23 = input.LA(1);

                         
                        int index3_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_23);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA3_16 = input.LA(1);

                         
                        int index3_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_16);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA3_31 = input.LA(1);

                         
                        int index3_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_31);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA3_17 = input.LA(1);

                         
                        int index3_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_17);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA3_10 = input.LA(1);

                         
                        int index3_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA3_26 = input.LA(1);

                         
                        int index3_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_26);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA3_19 = input.LA(1);

                         
                        int index3_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA3_12 = input.LA(1);

                         
                        int index3_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_12);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA3_2 = input.LA(1);

                         
                        int index3_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_2);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA3_13 = input.LA(1);

                         
                        int index3_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_13);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA3_29 = input.LA(1);

                         
                        int index3_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_29);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA3_3 = input.LA(1);

                         
                        int index3_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_3);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA3_6 = input.LA(1);

                         
                        int index3_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_6);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA3_22 = input.LA(1);

                         
                        int index3_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_22);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA3_15 = input.LA(1);

                         
                        int index3_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_15);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA3_8 = input.LA(1);

                         
                        int index3_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_8);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA3_24 = input.LA(1);

                         
                        int index3_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA3_9 = input.LA(1);

                         
                        int index3_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_9);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA3_25 = input.LA(1);

                         
                        int index3_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA3_30 = input.LA(1);

                         
                        int index3_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_30);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA3_18 = input.LA(1);

                         
                        int index3_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_18);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA3_11 = input.LA(1);

                         
                        int index3_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_11);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA3_27 = input.LA(1);

                         
                        int index3_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_27);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA3_20 = input.LA(1);

                         
                        int index3_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalEcl()) ) {s = 32;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index3_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\22\uffff";
    static final String dfa_9s = "\1\6\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_10s = "\1\70\1\0\15\uffff\1\0\2\uffff";
    static final String dfa_11s = "\2\uffff\1\1\15\uffff\1\2\1\3";
    static final String dfa_12s = "\1\uffff\1\0\15\uffff\1\1\2\uffff}>";
    static final String[] dfa_13s = {
            "\3\2\32\uffff\1\2\3\uffff\2\2\4\uffff\7\2\1\17\1\uffff\1\20\1\uffff\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "2473:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_1 = input.LA(1);

                         
                        int index9_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalEcl()) ) {s = 2;}

                        else if ( (synpred20_InternalEcl()) ) {s = 16;}

                         
                        input.seek(index9_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA9_15 = input.LA(1);

                         
                        int index9_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalEcl()) ) {s = 2;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index9_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\21\uffff";
    static final String dfa_15s = "\1\6\16\uffff\1\0\1\uffff";
    static final String dfa_16s = "\1\70\16\uffff\1\0\1\uffff";
    static final String dfa_17s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_18s = "\17\uffff\1\0\1\uffff}>";
    static final String[] dfa_19s = {
            "\3\1\32\uffff\1\1\3\uffff\2\1\4\uffff\7\1\1\17\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2521:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_15 = input.LA(1);

                         
                        int index11_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_InternalEcl()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index11_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\14\uffff\4\21\2\uffff";
    static final String dfa_21s = "\1\45\2\13\4\73\2\uffff\3\6\4\4\2\uffff";
    static final String dfa_22s = "\1\52\2\100\4\73\2\uffff\1\12\2\7\4\75\2\uffff";
    static final String dfa_23s = "\7\uffff\1\1\1\2\7\uffff\1\4\1\3";
    static final String dfa_24s = "\22\uffff}>";
    static final String[] dfa_25s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6",
            "\2\7\56\uffff\1\11\4\uffff\1\10",
            "\2\7\56\uffff\1\11\4\uffff\1\10",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "",
            "",
            "\1\14\1\15\1\uffff\1\12\1\13",
            "\1\14\1\15",
            "\1\14\1\15",
            "\2\21\1\16\1\17\23\uffff\1\21\6\uffff\1\21\11\uffff\1\20\10\uffff\1\21\1\uffff\1\21\5\uffff\1\21",
            "\2\21\1\16\1\17\23\uffff\1\21\6\uffff\1\21\11\uffff\1\20\10\uffff\1\21\1\uffff\1\21\5\uffff\1\21",
            "\2\21\1\16\1\17\23\uffff\1\21\6\uffff\1\21\11\uffff\1\20\10\uffff\1\21\1\uffff\1\21\5\uffff\1\21",
            "\2\21\1\16\1\17\23\uffff\1\21\6\uffff\1\21\11\uffff\1\20\10\uffff\1\21\1\uffff\1\21\5\uffff\1\21",
            "",
            ""
    };
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_8;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "2563:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_26s = "\1\15\4\uffff\2\54\11\uffff\1\17";
    static final String dfa_27s = "\1\64\4\uffff\2\54\11\uffff\1\31";
    static final String dfa_28s = "\1\uffff\1\1\1\2\1\3\1\4\2\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\uffff";
    static final String dfa_29s = "\21\uffff}>";
    static final String[] dfa_30s = {
            "\1\16\1\12\1\15\1\11\1\6\1\10\1\14\1\4\1\2\1\13\1\5\1\4\1\7\1\3\4\uffff\1\1\1\3\23\uffff\1\17",
            "",
            "",
            "",
            "",
            "\1\20",
            "\1\20",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\15\3\uffff\1\14\2\uffff\1\13\2\uffff\1\7"
    };
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "2617:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleSemanticTagFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x00000000000000C2L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000001FFFFFFCD2L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x001FE180000001C0L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000400000002L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000032L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x015FE188000001C0L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000100000000002L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00000000000000C0L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0140000000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x011FE188000001C0L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0080000000000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x000007E000000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x00000000000001C0L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000001800L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x00000000000006C0L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0010000187FFE000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x2000000000000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000006000000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000270000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000270000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0010001FFFFFF810L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000001FFFFFF810L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000001FFFFFF812L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x00100000000000C0L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0010001FFFFFFCD0L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000001FFFFFFCD0L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x40100000000000C0L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000002820000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000C20000L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x00000000008A0000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000828000L});
    }


}