package com.b2international.snomed.ecl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.ecl.services.EclGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEclParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_DIGIT", "RULE_CONJUNCTION_KEYWORD", "RULE_COMMA", "RULE_DASH", "RULE_UNDERSCORE", "RULE_ALPHA", "RULE_CONCEPT_SHORT_KEYWORD", "RULE_DESCRIPTION_SHORT_KEYWORD", "RULE_REVERSED", "RULE_KEYWORD", "RULE_DOT", "RULE_WILDCARD", "RULE_PLUS", "RULE_TRUE_KEYWORD", "RULE_FALSE_KEYWORD", "RULE_HISTORY_KEYWORD", "RULE_CASE_SIGNIFICANCE_ID_KEYWORD", "RULE_DEFINITION_STATUS_ID_KEYWORD", "RULE_DEFINITION_STATUS_TOKEN_KEYWORD", "RULE_LANGUAGE_REFSET_ID_KEYWORD", "RULE_EFFECTIVE_TIME_KEYWORD", "RULE_ACCEPTABLE_IN_KEYWORD", "RULE_PREFERRED_IN_KEYWORD", "RULE_SEMANTIC_TAG_KEYWORD", "RULE_DIALECTID_KEYWORD", "RULE_LANGUAGE_KEYWORD", "RULE_MODULEID_KEYWORD", "RULE_DIALECT_KEYWORD", "RULE_ACTIVE_KEYWORD", "RULE_TYPEID_KEYWORD", "RULE_EXCLUSION_KEYWORD", "RULE_EXACT_KEYWORD", "RULE_MATCH_KEYWORD", "RULE_REGEX_KEYWORD", "RULE_TERM_KEYWORD", "RULE_TYPE_KEYWORD", "RULE_WILD_KEYWORD", "RULE_MIN_KEYWORD", "RULE_MOD_KEYWORD", "RULE_MAX_KEYWORD", "RULE_DISJUNCTION_KEYWORD", "RULE_MEMBER_SHORT_KEYWORD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_GT", "RULE_LT", "RULE_GTE", "RULE_LTE", "RULE_COLON", "RULE_LT_EM", "RULE_DBL_LT_EM", "RULE_DBL_LT", "RULE_GT_EM", "RULE_DBL_GT_EM", "RULE_DBL_GT", "RULE_CARET", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_TO", "RULE_HASH", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_WS", "RULE_PIPE_DELIMITED_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT"
    };
    public static final int RULE_DIALECT_KEYWORD=32;
    public static final int RULE_LANGUAGE_KEYWORD=30;
    public static final int RULE_CURLY_OPEN=65;
    public static final int RULE_DBL_GT=59;
    public static final int RULE_ROUND_CLOSE=64;
    public static final int RULE_TO=67;
    public static final int RULE_GT=49;
    public static final int RULE_CONCEPT_SHORT_KEYWORD=11;
    public static final int RULE_ACTIVE_KEYWORD=33;
    public static final int RULE_MODULEID_KEYWORD=31;
    public static final int RULE_GTE=51;
    public static final int RULE_DISJUNCTION_KEYWORD=45;
    public static final int RULE_UNDERSCORE=9;
    public static final int RULE_ROUND_OPEN=63;
    public static final int RULE_DBL_LT=56;
    public static final int RULE_TYPEID_KEYWORD=34;
    public static final int RULE_MATCH_KEYWORD=37;
    public static final int RULE_NOT_EQUAL=48;
    public static final int RULE_SQUARE_CLOSE=62;
    public static final int RULE_SEMANTIC_TAG_KEYWORD=28;
    public static final int RULE_EQUAL=47;
    public static final int RULE_SQUARE_OPEN=61;
    public static final int RULE_COMMA=7;
    public static final int RULE_DESCRIPTION_SHORT_KEYWORD=12;
    public static final int RULE_CASE_SIGNIFICANCE_ID_KEYWORD=21;
    public static final int RULE_EXCLUSION_KEYWORD=35;
    public static final int RULE_LT_EM=54;
    public static final int RULE_CURLY_CLOSE=66;
    public static final int RULE_DIGIT=5;
    public static final int RULE_DBL_GT_EM=58;
    public static final int RULE_HISTORY_KEYWORD=20;
    public static final int RULE_COLON=53;
    public static final int RULE_MOD_KEYWORD=43;
    public static final int RULE_LT=50;
    public static final int RULE_DOUBLE_CURLY_CLOSE=70;
    public static final int RULE_LANGUAGE_REFSET_ID_KEYWORD=24;
    public static final int RULE_EXACT_KEYWORD=36;
    public static final int RULE_ML_COMMENT=73;
    public static final int RULE_PREFERRED_IN_KEYWORD=27;
    public static final int RULE_PIPE_DELIMITED_STRING=72;
    public static final int RULE_ALPHA=10;
    public static final int RULE_LTE=52;
    public static final int RULE_TYPE_KEYWORD=40;
    public static final int RULE_STRING=4;
    public static final int RULE_FALSE_KEYWORD=19;
    public static final int RULE_REVERSED=13;
    public static final int RULE_SL_COMMENT=74;
    public static final int RULE_HASH=68;
    public static final int RULE_DASH=8;
    public static final int RULE_PLUS=17;
    public static final int RULE_DOT=15;
    public static final int EOF=-1;
    public static final int RULE_KEYWORD=14;
    public static final int RULE_DIALECTID_KEYWORD=29;
    public static final int RULE_DEFINITION_STATUS_ID_KEYWORD=22;
    public static final int RULE_DEFINITION_STATUS_TOKEN_KEYWORD=23;
    public static final int RULE_ACCEPTABLE_IN_KEYWORD=26;
    public static final int RULE_TERM_KEYWORD=39;
    public static final int RULE_MAX_KEYWORD=44;
    public static final int RULE_MEMBER_SHORT_KEYWORD=46;
    public static final int RULE_GT_EM=57;
    public static final int RULE_WS=71;
    public static final int RULE_REGEX_KEYWORD=38;
    public static final int RULE_TRUE_KEYWORD=18;
    public static final int RULE_CARET=60;
    public static final int RULE_DOUBLE_CURLY_OPEN=69;
    public static final int RULE_CONJUNCTION_KEYWORD=6;
    public static final int RULE_WILD_KEYWORD=41;
    public static final int RULE_MIN_KEYWORD=42;
    public static final int RULE_WILDCARD=16;
    public static final int RULE_EFFECTIVE_TIME_KEYWORD=25;
    public static final int RULE_DBL_LT_EM=55;

    // delegates
    // delegators


        public InternalEclParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEclParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEclParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEcl.g"; }


    	private EclGrammarAccess grammarAccess;

    	public void setGrammarAccess(EclGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleScript"
    // InternalEcl.g:66:1: entryRuleScript : ruleScript EOF ;
    public final void entryRuleScript() throws RecognitionException {
        try {
            // InternalEcl.g:67:1: ( ruleScript EOF )
            // InternalEcl.g:68:1: ruleScript EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleScript();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScript"


    // $ANTLR start "ruleScript"
    // InternalEcl.g:75:1: ruleScript : ( ( rule__Script__Group__0 ) ) ;
    public final void ruleScript() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:79:2: ( ( ( rule__Script__Group__0 ) ) )
            // InternalEcl.g:80:2: ( ( rule__Script__Group__0 ) )
            {
            // InternalEcl.g:80:2: ( ( rule__Script__Group__0 ) )
            // InternalEcl.g:81:3: ( rule__Script__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getGroup()); 
            }
            // InternalEcl.g:82:3: ( rule__Script__Group__0 )
            // InternalEcl.g:82:4: rule__Script__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScript"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEcl.g:91:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:92:1: ( ruleExpressionConstraint EOF )
            // InternalEcl.g:93:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEcl.g:100:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:104:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEcl.g:105:2: ( ruleOrExpressionConstraint )
            {
            // InternalEcl.g:105:2: ( ruleOrExpressionConstraint )
            // InternalEcl.g:106:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEcl.g:116:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:117:1: ( ruleOrExpressionConstraint EOF )
            // InternalEcl.g:118:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEcl.g:125:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:129:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:130:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:130:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEcl.g:131:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:132:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEcl.g:132:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEcl.g:141:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:142:1: ( ruleAndExpressionConstraint EOF )
            // InternalEcl.g:143:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEcl.g:150:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:154:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:155:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:155:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEcl.g:156:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:157:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEcl.g:157:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEcl.g:166:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:167:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEcl.g:168:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEcl.g:175:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:179:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:180:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:180:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEcl.g:181:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:182:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEcl.g:182:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEcl.g:191:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:192:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEcl.g:193:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEcl.g:200:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:204:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:205:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:205:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEcl.g:206:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:207:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEcl.g:207:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEcl.g:216:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:217:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEcl.g:218:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEcl.g:225:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:229:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:230:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:230:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEcl.g:231:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:232:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEcl.g:232:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleSupplementExpressionConstraint"
    // InternalEcl.g:241:1: entryRuleSupplementExpressionConstraint : ruleSupplementExpressionConstraint EOF ;
    public final void entryRuleSupplementExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:242:1: ( ruleSupplementExpressionConstraint EOF )
            // InternalEcl.g:243:1: ruleSupplementExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSupplementExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSupplementExpressionConstraint"


    // $ANTLR start "ruleSupplementExpressionConstraint"
    // InternalEcl.g:250:1: ruleSupplementExpressionConstraint : ( ( rule__SupplementExpressionConstraint__Group__0 ) ) ;
    public final void ruleSupplementExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:254:2: ( ( ( rule__SupplementExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:255:2: ( ( rule__SupplementExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:255:2: ( ( rule__SupplementExpressionConstraint__Group__0 ) )
            // InternalEcl.g:256:3: ( rule__SupplementExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:257:3: ( rule__SupplementExpressionConstraint__Group__0 )
            // InternalEcl.g:257:4: rule__SupplementExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSupplementExpressionConstraint"


    // $ANTLR start "entryRuleFilteredExpressionConstraint"
    // InternalEcl.g:266:1: entryRuleFilteredExpressionConstraint : ruleFilteredExpressionConstraint EOF ;
    public final void entryRuleFilteredExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:267:1: ( ruleFilteredExpressionConstraint EOF )
            // InternalEcl.g:268:1: ruleFilteredExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilteredExpressionConstraint"


    // $ANTLR start "ruleFilteredExpressionConstraint"
    // InternalEcl.g:275:1: ruleFilteredExpressionConstraint : ( ( rule__FilteredExpressionConstraint__Group__0 ) ) ;
    public final void ruleFilteredExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:279:2: ( ( ( rule__FilteredExpressionConstraint__Group__0 ) ) )
            // InternalEcl.g:280:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            {
            // InternalEcl.g:280:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            // InternalEcl.g:281:3: ( rule__FilteredExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:282:3: ( rule__FilteredExpressionConstraint__Group__0 )
            // InternalEcl.g:282:4: rule__FilteredExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilteredExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEcl.g:291:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:292:1: ( ruleSubExpressionConstraint EOF )
            // InternalEcl.g:293:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEcl.g:300:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:304:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEcl.g:305:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEcl.g:305:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEcl.g:306:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEcl.g:307:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEcl.g:307:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEcl.g:316:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEcl.g:317:1: ( ruleEclFocusConcept EOF )
            // InternalEcl.g:318:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEcl.g:325:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:329:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEcl.g:330:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEcl.g:330:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEcl.g:331:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEcl.g:332:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEcl.g:332:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEcl.g:341:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEcl.g:342:1: ( ruleChildOf EOF )
            // InternalEcl.g:343:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEcl.g:350:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:354:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEcl.g:355:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEcl.g:355:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEcl.g:356:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEcl.g:357:3: ( rule__ChildOf__Group__0 )
            // InternalEcl.g:357:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEcl.g:366:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:367:1: ( ruleChildOrSelfOf EOF )
            // InternalEcl.g:368:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEcl.g:375:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:379:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:380:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:380:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEcl.g:381:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:382:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEcl.g:382:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEcl.g:391:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEcl.g:392:1: ( ruleDescendantOf EOF )
            // InternalEcl.g:393:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEcl.g:400:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:404:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEcl.g:405:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEcl.g:405:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEcl.g:406:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEcl.g:407:3: ( rule__DescendantOf__Group__0 )
            // InternalEcl.g:407:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEcl.g:416:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:417:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEcl.g:418:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEcl.g:425:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:429:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:430:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:430:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEcl.g:431:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:432:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEcl.g:432:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEcl.g:441:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEcl.g:442:1: ( ruleParentOf EOF )
            // InternalEcl.g:443:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEcl.g:450:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:454:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEcl.g:455:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEcl.g:455:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEcl.g:456:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEcl.g:457:3: ( rule__ParentOf__Group__0 )
            // InternalEcl.g:457:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEcl.g:466:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:467:1: ( ruleParentOrSelfOf EOF )
            // InternalEcl.g:468:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEcl.g:475:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:479:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:480:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:480:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEcl.g:481:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:482:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEcl.g:482:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEcl.g:491:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEcl.g:492:1: ( ruleAncestorOf EOF )
            // InternalEcl.g:493:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEcl.g:500:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:504:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEcl.g:505:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEcl.g:505:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEcl.g:506:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEcl.g:507:3: ( rule__AncestorOf__Group__0 )
            // InternalEcl.g:507:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEcl.g:516:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEcl.g:517:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEcl.g:518:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEcl.g:525:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:529:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEcl.g:530:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEcl.g:530:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEcl.g:531:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEcl.g:532:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEcl.g:532:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEcl.g:541:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEcl.g:542:1: ( ruleMemberOf EOF )
            // InternalEcl.g:543:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEcl.g:550:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:554:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEcl.g:555:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEcl.g:555:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEcl.g:556:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEcl.g:557:3: ( rule__MemberOf__Group__0 )
            // InternalEcl.g:557:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEcl.g:566:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEcl.g:567:1: ( ruleEclConceptReference EOF )
            // InternalEcl.g:568:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEcl.g:575:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:579:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEcl.g:580:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEcl.g:580:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEcl.g:581:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEcl.g:582:3: ( rule__EclConceptReference__Group__0 )
            // InternalEcl.g:582:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEcl.g:591:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEcl.g:592:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEcl.g:593:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEcl.g:600:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:604:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEcl.g:605:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEcl.g:605:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEcl.g:606:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEcl.g:607:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEcl.g:607:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEcl.g:616:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEcl.g:617:1: ( ruleAny EOF )
            // InternalEcl.g:618:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEcl.g:625:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:629:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEcl.g:630:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEcl.g:630:2: ( ( rule__Any__Group__0 ) )
            // InternalEcl.g:631:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEcl.g:632:3: ( rule__Any__Group__0 )
            // InternalEcl.g:632:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEcl.g:641:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:642:1: ( ruleEclRefinement EOF )
            // InternalEcl.g:643:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEcl.g:650:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:654:2: ( ( ruleOrRefinement ) )
            // InternalEcl.g:655:2: ( ruleOrRefinement )
            {
            // InternalEcl.g:655:2: ( ruleOrRefinement )
            // InternalEcl.g:656:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEcl.g:666:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:667:1: ( ruleOrRefinement EOF )
            // InternalEcl.g:668:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEcl.g:675:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:679:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEcl.g:680:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEcl.g:680:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEcl.g:681:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEcl.g:682:3: ( rule__OrRefinement__Group__0 )
            // InternalEcl.g:682:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEcl.g:691:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:692:1: ( ruleAndRefinement EOF )
            // InternalEcl.g:693:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEcl.g:700:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:704:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEcl.g:705:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEcl.g:705:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEcl.g:706:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEcl.g:707:3: ( rule__AndRefinement__Group__0 )
            // InternalEcl.g:707:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEcl.g:716:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:717:1: ( ruleSubRefinement EOF )
            // InternalEcl.g:718:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEcl.g:725:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:729:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEcl.g:730:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEcl.g:730:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEcl.g:731:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEcl.g:732:3: ( rule__SubRefinement__Alternatives )
            // InternalEcl.g:732:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEcl.g:741:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEcl.g:742:1: ( ruleNestedRefinement EOF )
            // InternalEcl.g:743:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEcl.g:750:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:754:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEcl.g:755:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEcl.g:755:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEcl.g:756:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEcl.g:757:3: ( rule__NestedRefinement__Group__0 )
            // InternalEcl.g:757:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEcl.g:766:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEcl.g:767:1: ( ruleEclAttributeGroup EOF )
            // InternalEcl.g:768:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEcl.g:775:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:779:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEcl.g:780:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEcl.g:780:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEcl.g:781:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEcl.g:782:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEcl.g:782:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEcl.g:791:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:792:1: ( ruleEclAttributeSet EOF )
            // InternalEcl.g:793:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEcl.g:800:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:804:2: ( ( ruleOrAttributeSet ) )
            // InternalEcl.g:805:2: ( ruleOrAttributeSet )
            {
            // InternalEcl.g:805:2: ( ruleOrAttributeSet )
            // InternalEcl.g:806:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEcl.g:816:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:817:1: ( ruleOrAttributeSet EOF )
            // InternalEcl.g:818:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEcl.g:825:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:829:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEcl.g:830:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEcl.g:830:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEcl.g:831:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEcl.g:832:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEcl.g:832:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEcl.g:841:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:842:1: ( ruleAndAttributeSet EOF )
            // InternalEcl.g:843:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEcl.g:850:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:854:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEcl.g:855:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEcl.g:855:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEcl.g:856:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEcl.g:857:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEcl.g:857:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEcl.g:866:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:867:1: ( ruleSubAttributeSet EOF )
            // InternalEcl.g:868:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEcl.g:875:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:879:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEcl.g:880:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEcl.g:880:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEcl.g:881:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEcl.g:882:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEcl.g:882:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEcl.g:891:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEcl.g:892:1: ( ruleNestedAttributeSet EOF )
            // InternalEcl.g:893:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEcl.g:900:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:904:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEcl.g:905:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEcl.g:905:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEcl.g:906:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEcl.g:907:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEcl.g:907:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEcl.g:916:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:917:1: ( ruleAttributeConstraint EOF )
            // InternalEcl.g:918:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEcl.g:925:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:929:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEcl.g:930:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEcl.g:930:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEcl.g:931:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:932:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEcl.g:932:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEcl.g:941:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEcl.g:942:1: ( ruleCardinality EOF )
            // InternalEcl.g:943:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEcl.g:950:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:954:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEcl.g:955:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEcl.g:955:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEcl.g:956:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEcl.g:957:3: ( rule__Cardinality__Group__0 )
            // InternalEcl.g:957:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEcl.g:966:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEcl.g:967:1: ( ruleComparison EOF )
            // InternalEcl.g:968:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEcl.g:975:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:979:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEcl.g:980:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEcl.g:980:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEcl.g:981:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEcl.g:982:3: ( rule__Comparison__Alternatives )
            // InternalEcl.g:982:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEcl.g:991:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEcl.g:992:1: ( ruleAttributeComparison EOF )
            // InternalEcl.g:993:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEcl.g:1000:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1004:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEcl.g:1005:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEcl.g:1005:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEcl.g:1006:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1007:3: ( rule__AttributeComparison__Group__0 )
            // InternalEcl.g:1007:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEcl.g:1016:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1017:1: ( ruleDataTypeComparison EOF )
            // InternalEcl.g:1018:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEcl.g:1025:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1029:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEcl.g:1030:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEcl.g:1030:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEcl.g:1031:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEcl.g:1032:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEcl.g:1032:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEcl.g:1041:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1042:1: ( ruleBooleanValueComparison EOF )
            // InternalEcl.g:1043:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEcl.g:1050:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1054:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEcl.g:1055:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1055:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEcl.g:1056:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1057:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEcl.g:1057:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEcl.g:1066:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1067:1: ( ruleStringValueComparison EOF )
            // InternalEcl.g:1068:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEcl.g:1075:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1079:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEcl.g:1080:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1080:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEcl.g:1081:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1082:3: ( rule__StringValueComparison__Group__0 )
            // InternalEcl.g:1082:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEcl.g:1091:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1092:1: ( ruleIntegerValueComparison EOF )
            // InternalEcl.g:1093:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEcl.g:1100:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1104:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEcl.g:1105:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1105:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEcl.g:1106:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1107:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEcl.g:1107:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEcl.g:1116:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEcl.g:1117:1: ( ruleDecimalValueComparison EOF )
            // InternalEcl.g:1118:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEcl.g:1125:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1129:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEcl.g:1130:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEcl.g:1130:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEcl.g:1131:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEcl.g:1132:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEcl.g:1132:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEcl.g:1141:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEcl.g:1142:1: ( ruleNestedExpression EOF )
            // InternalEcl.g:1143:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEcl.g:1150:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1154:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEcl.g:1155:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEcl.g:1155:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEcl.g:1156:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEcl.g:1157:3: ( rule__NestedExpression__Group__0 )
            // InternalEcl.g:1157:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEcl.g:1166:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEcl.g:1167:1: ( ruleFilterConstraint EOF )
            // InternalEcl.g:1168:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEcl.g:1175:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1179:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEcl.g:1180:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEcl.g:1180:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEcl.g:1181:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEcl.g:1182:3: ( rule__FilterConstraint__Group__0 )
            // InternalEcl.g:1182:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEcl.g:1191:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1192:1: ( ruleFilter EOF )
            // InternalEcl.g:1193:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEcl.g:1200:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1204:2: ( ( ruleDisjunctionFilter ) )
            // InternalEcl.g:1205:2: ( ruleDisjunctionFilter )
            {
            // InternalEcl.g:1205:2: ( ruleDisjunctionFilter )
            // InternalEcl.g:1206:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEcl.g:1216:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1217:1: ( ruleDisjunctionFilter EOF )
            // InternalEcl.g:1218:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEcl.g:1225:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1229:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEcl.g:1230:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEcl.g:1230:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEcl.g:1231:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1232:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEcl.g:1232:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEcl.g:1241:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1242:1: ( ruleConjunctionFilter EOF )
            // InternalEcl.g:1243:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEcl.g:1250:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1254:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEcl.g:1255:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEcl.g:1255:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEcl.g:1256:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1257:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEcl.g:1257:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEcl.g:1266:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1267:1: ( ruleNestedFilter EOF )
            // InternalEcl.g:1268:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEcl.g:1275:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1279:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEcl.g:1280:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEcl.g:1280:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEcl.g:1281:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1282:3: ( rule__NestedFilter__Group__0 )
            // InternalEcl.g:1282:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEcl.g:1291:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1292:1: ( rulePropertyFilter EOF )
            // InternalEcl.g:1293:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEcl.g:1300:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1304:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEcl.g:1305:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEcl.g:1305:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEcl.g:1306:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEcl.g:1307:3: ( rule__PropertyFilter__Alternatives )
            // InternalEcl.g:1307:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleMemberFieldFilter"
    // InternalEcl.g:1316:1: entryRuleMemberFieldFilter : ruleMemberFieldFilter EOF ;
    public final void entryRuleMemberFieldFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1317:1: ( ruleMemberFieldFilter EOF )
            // InternalEcl.g:1318:1: ruleMemberFieldFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberFieldFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberFieldFilter"


    // $ANTLR start "ruleMemberFieldFilter"
    // InternalEcl.g:1325:1: ruleMemberFieldFilter : ( ( rule__MemberFieldFilter__Group__0 ) ) ;
    public final void ruleMemberFieldFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1329:2: ( ( ( rule__MemberFieldFilter__Group__0 ) ) )
            // InternalEcl.g:1330:2: ( ( rule__MemberFieldFilter__Group__0 ) )
            {
            // InternalEcl.g:1330:2: ( ( rule__MemberFieldFilter__Group__0 ) )
            // InternalEcl.g:1331:3: ( rule__MemberFieldFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1332:3: ( rule__MemberFieldFilter__Group__0 )
            // InternalEcl.g:1332:4: rule__MemberFieldFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberFieldFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEcl.g:1341:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1342:1: ( ruleTermFilter EOF )
            // InternalEcl.g:1343:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEcl.g:1350:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1354:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEcl.g:1355:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEcl.g:1355:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEcl.g:1356:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1357:3: ( rule__TermFilter__Group__0 )
            // InternalEcl.g:1357:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleSearchTerm"
    // InternalEcl.g:1366:1: entryRuleSearchTerm : ruleSearchTerm EOF ;
    public final void entryRuleSearchTerm() throws RecognitionException {
        try {
            // InternalEcl.g:1367:1: ( ruleSearchTerm EOF )
            // InternalEcl.g:1368:1: ruleSearchTerm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSearchTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSearchTermRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSearchTerm"


    // $ANTLR start "ruleSearchTerm"
    // InternalEcl.g:1375:1: ruleSearchTerm : ( ( rule__SearchTerm__Alternatives ) ) ;
    public final void ruleSearchTerm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1379:2: ( ( ( rule__SearchTerm__Alternatives ) ) )
            // InternalEcl.g:1380:2: ( ( rule__SearchTerm__Alternatives ) )
            {
            // InternalEcl.g:1380:2: ( ( rule__SearchTerm__Alternatives ) )
            // InternalEcl.g:1381:3: ( rule__SearchTerm__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSearchTermAccess().getAlternatives()); 
            }
            // InternalEcl.g:1382:3: ( rule__SearchTerm__Alternatives )
            // InternalEcl.g:1382:4: rule__SearchTerm__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SearchTerm__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSearchTermAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSearchTerm"


    // $ANTLR start "entryRuleTypedSearchTerm"
    // InternalEcl.g:1391:1: entryRuleTypedSearchTerm : ruleTypedSearchTerm EOF ;
    public final void entryRuleTypedSearchTerm() throws RecognitionException {
        try {
            // InternalEcl.g:1392:1: ( ruleTypedSearchTerm EOF )
            // InternalEcl.g:1393:1: ruleTypedSearchTerm EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedSearchTerm"


    // $ANTLR start "ruleTypedSearchTerm"
    // InternalEcl.g:1400:1: ruleTypedSearchTerm : ( ( rule__TypedSearchTerm__ClauseAssignment ) ) ;
    public final void ruleTypedSearchTerm() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1404:2: ( ( ( rule__TypedSearchTerm__ClauseAssignment ) ) )
            // InternalEcl.g:1405:2: ( ( rule__TypedSearchTerm__ClauseAssignment ) )
            {
            // InternalEcl.g:1405:2: ( ( rule__TypedSearchTerm__ClauseAssignment ) )
            // InternalEcl.g:1406:3: ( rule__TypedSearchTerm__ClauseAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermAccess().getClauseAssignment()); 
            }
            // InternalEcl.g:1407:3: ( rule__TypedSearchTerm__ClauseAssignment )
            // InternalEcl.g:1407:4: rule__TypedSearchTerm__ClauseAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTerm__ClauseAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermAccess().getClauseAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedSearchTerm"


    // $ANTLR start "entryRuleTypedSearchTermSet"
    // InternalEcl.g:1416:1: entryRuleTypedSearchTermSet : ruleTypedSearchTermSet EOF ;
    public final void entryRuleTypedSearchTermSet() throws RecognitionException {
        try {
            // InternalEcl.g:1417:1: ( ruleTypedSearchTermSet EOF )
            // InternalEcl.g:1418:1: ruleTypedSearchTermSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedSearchTermSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedSearchTermSet"


    // $ANTLR start "ruleTypedSearchTermSet"
    // InternalEcl.g:1425:1: ruleTypedSearchTermSet : ( ( rule__TypedSearchTermSet__Group__0 ) ) ;
    public final void ruleTypedSearchTermSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1429:2: ( ( ( rule__TypedSearchTermSet__Group__0 ) ) )
            // InternalEcl.g:1430:2: ( ( rule__TypedSearchTermSet__Group__0 ) )
            {
            // InternalEcl.g:1430:2: ( ( rule__TypedSearchTermSet__Group__0 ) )
            // InternalEcl.g:1431:3: ( rule__TypedSearchTermSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getGroup()); 
            }
            // InternalEcl.g:1432:3: ( rule__TypedSearchTermSet__Group__0 )
            // InternalEcl.g:1432:4: rule__TypedSearchTermSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedSearchTermSet"


    // $ANTLR start "entryRuleTypedSearchTermClause"
    // InternalEcl.g:1441:1: entryRuleTypedSearchTermClause : ruleTypedSearchTermClause EOF ;
    public final void entryRuleTypedSearchTermClause() throws RecognitionException {
        try {
            // InternalEcl.g:1442:1: ( ruleTypedSearchTermClause EOF )
            // InternalEcl.g:1443:1: ruleTypedSearchTermClause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedSearchTermClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedSearchTermClause"


    // $ANTLR start "ruleTypedSearchTermClause"
    // InternalEcl.g:1450:1: ruleTypedSearchTermClause : ( ( rule__TypedSearchTermClause__Alternatives ) ) ;
    public final void ruleTypedSearchTermClause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1454:2: ( ( ( rule__TypedSearchTermClause__Alternatives ) ) )
            // InternalEcl.g:1455:2: ( ( rule__TypedSearchTermClause__Alternatives ) )
            {
            // InternalEcl.g:1455:2: ( ( rule__TypedSearchTermClause__Alternatives ) )
            // InternalEcl.g:1456:3: ( rule__TypedSearchTermClause__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getAlternatives()); 
            }
            // InternalEcl.g:1457:3: ( rule__TypedSearchTermClause__Alternatives )
            // InternalEcl.g:1457:4: rule__TypedSearchTermClause__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedSearchTermClause"


    // $ANTLR start "entryRuleRegularExpression"
    // InternalEcl.g:1466:1: entryRuleRegularExpression : ruleRegularExpression EOF ;
    public final void entryRuleRegularExpression() throws RecognitionException {
        try {
            // InternalEcl.g:1467:1: ( ruleRegularExpression EOF )
            // InternalEcl.g:1468:1: ruleRegularExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRegularExpression"


    // $ANTLR start "ruleRegularExpression"
    // InternalEcl.g:1475:1: ruleRegularExpression : ( RULE_STRING ) ;
    public final void ruleRegularExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1479:2: ( ( RULE_STRING ) )
            // InternalEcl.g:1480:2: ( RULE_STRING )
            {
            // InternalEcl.g:1480:2: ( RULE_STRING )
            // InternalEcl.g:1481:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRegularExpressionAccess().getSTRINGTerminalRuleCall()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRegularExpressionAccess().getSTRINGTerminalRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRegularExpression"


    // $ANTLR start "entryRuleLanguageFilter"
    // InternalEcl.g:1491:1: entryRuleLanguageFilter : ruleLanguageFilter EOF ;
    public final void entryRuleLanguageFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1492:1: ( ruleLanguageFilter EOF )
            // InternalEcl.g:1493:1: ruleLanguageFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageFilter"


    // $ANTLR start "ruleLanguageFilter"
    // InternalEcl.g:1500:1: ruleLanguageFilter : ( ( rule__LanguageFilter__Group__0 ) ) ;
    public final void ruleLanguageFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1504:2: ( ( ( rule__LanguageFilter__Group__0 ) ) )
            // InternalEcl.g:1505:2: ( ( rule__LanguageFilter__Group__0 ) )
            {
            // InternalEcl.g:1505:2: ( ( rule__LanguageFilter__Group__0 ) )
            // InternalEcl.g:1506:3: ( rule__LanguageFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1507:3: ( rule__LanguageFilter__Group__0 )
            // InternalEcl.g:1507:4: rule__LanguageFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEcl.g:1516:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1517:1: ( ruleTypeFilter EOF )
            // InternalEcl.g:1518:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEcl.g:1525:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1529:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEcl.g:1530:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEcl.g:1530:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEcl.g:1531:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEcl.g:1532:3: ( rule__TypeFilter__Alternatives )
            // InternalEcl.g:1532:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEcl.g:1541:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1542:1: ( ruleTypeIdFilter EOF )
            // InternalEcl.g:1543:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEcl.g:1550:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1554:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEcl.g:1555:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEcl.g:1555:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEcl.g:1556:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1557:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEcl.g:1557:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEcl.g:1566:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1567:1: ( ruleTypeTokenFilter EOF )
            // InternalEcl.g:1568:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEcl.g:1575:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1579:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEcl.g:1580:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEcl.g:1580:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEcl.g:1581:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1582:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEcl.g:1582:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEcl.g:1591:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1592:1: ( ruleDialectFilter EOF )
            // InternalEcl.g:1593:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEcl.g:1600:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1604:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEcl.g:1605:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEcl.g:1605:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEcl.g:1606:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEcl.g:1607:3: ( rule__DialectFilter__Alternatives )
            // InternalEcl.g:1607:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEcl.g:1616:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1617:1: ( ruleDialectIdFilter EOF )
            // InternalEcl.g:1618:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEcl.g:1625:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1629:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEcl.g:1630:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEcl.g:1630:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEcl.g:1631:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1632:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEcl.g:1632:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEcl.g:1641:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1642:1: ( ruleDialectAliasFilter EOF )
            // InternalEcl.g:1643:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEcl.g:1650:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1654:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEcl.g:1655:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEcl.g:1655:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEcl.g:1656:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1657:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEcl.g:1657:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEcl.g:1666:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEcl.g:1667:1: ( ruleDialect EOF )
            // InternalEcl.g:1668:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEcl.g:1675:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1679:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEcl.g:1680:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEcl.g:1680:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEcl.g:1681:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEcl.g:1682:3: ( rule__Dialect__Group__0 )
            // InternalEcl.g:1682:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEcl.g:1691:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:1695:1: ( ruleDialectAlias EOF )
            // InternalEcl.g:1696:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEcl.g:1706:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1711:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEcl.g:1712:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEcl.g:1712:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEcl.g:1713:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEcl.g:1714:3: ( rule__DialectAlias__Group__0 )
            // InternalEcl.g:1714:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEcl.g:1724:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEcl.g:1725:1: ( ruleAcceptability EOF )
            // InternalEcl.g:1726:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEcl.g:1733:1: ruleAcceptability : ( ( rule__Acceptability__Alternatives ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1737:2: ( ( ( rule__Acceptability__Alternatives ) ) )
            // InternalEcl.g:1738:2: ( ( rule__Acceptability__Alternatives ) )
            {
            // InternalEcl.g:1738:2: ( ( rule__Acceptability__Alternatives ) )
            // InternalEcl.g:1739:3: ( rule__Acceptability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }
            // InternalEcl.g:1740:3: ( rule__Acceptability__Alternatives )
            // InternalEcl.g:1740:4: rule__Acceptability__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleAcceptabilityIdSet"
    // InternalEcl.g:1749:1: entryRuleAcceptabilityIdSet : ruleAcceptabilityIdSet EOF ;
    public final void entryRuleAcceptabilityIdSet() throws RecognitionException {
        try {
            // InternalEcl.g:1750:1: ( ruleAcceptabilityIdSet EOF )
            // InternalEcl.g:1751:1: ruleAcceptabilityIdSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityIdSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityIdSet"


    // $ANTLR start "ruleAcceptabilityIdSet"
    // InternalEcl.g:1758:1: ruleAcceptabilityIdSet : ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptabilityIdSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1762:2: ( ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) )
            // InternalEcl.g:1763:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            {
            // InternalEcl.g:1763:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            // InternalEcl.g:1764:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEcl.g:1765:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            // InternalEcl.g:1765:4: rule__AcceptabilityIdSet__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityIdSet__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityIdSet"


    // $ANTLR start "entryRuleAcceptabilityTokenSet"
    // InternalEcl.g:1774:1: entryRuleAcceptabilityTokenSet : ruleAcceptabilityTokenSet EOF ;
    public final void entryRuleAcceptabilityTokenSet() throws RecognitionException {
        try {
            // InternalEcl.g:1775:1: ( ruleAcceptabilityTokenSet EOF )
            // InternalEcl.g:1776:1: ruleAcceptabilityTokenSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityTokenSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityTokenSet"


    // $ANTLR start "ruleAcceptabilityTokenSet"
    // InternalEcl.g:1783:1: ruleAcceptabilityTokenSet : ( ( rule__AcceptabilityTokenSet__Group__0 ) ) ;
    public final void ruleAcceptabilityTokenSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1787:2: ( ( ( rule__AcceptabilityTokenSet__Group__0 ) ) )
            // InternalEcl.g:1788:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            {
            // InternalEcl.g:1788:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            // InternalEcl.g:1789:3: ( rule__AcceptabilityTokenSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }
            // InternalEcl.g:1790:3: ( rule__AcceptabilityTokenSet__Group__0 )
            // InternalEcl.g:1790:4: rule__AcceptabilityTokenSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityTokenSet"


    // $ANTLR start "entryRuleDefinitionStatusFilter"
    // InternalEcl.g:1799:1: entryRuleDefinitionStatusFilter : ruleDefinitionStatusFilter EOF ;
    public final void entryRuleDefinitionStatusFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1800:1: ( ruleDefinitionStatusFilter EOF )
            // InternalEcl.g:1801:1: ruleDefinitionStatusFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDefinitionStatusFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefinitionStatusFilter"


    // $ANTLR start "ruleDefinitionStatusFilter"
    // InternalEcl.g:1808:1: ruleDefinitionStatusFilter : ( ( rule__DefinitionStatusFilter__Alternatives ) ) ;
    public final void ruleDefinitionStatusFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1812:2: ( ( ( rule__DefinitionStatusFilter__Alternatives ) ) )
            // InternalEcl.g:1813:2: ( ( rule__DefinitionStatusFilter__Alternatives ) )
            {
            // InternalEcl.g:1813:2: ( ( rule__DefinitionStatusFilter__Alternatives ) )
            // InternalEcl.g:1814:3: ( rule__DefinitionStatusFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusFilterAccess().getAlternatives()); 
            }
            // InternalEcl.g:1815:3: ( rule__DefinitionStatusFilter__Alternatives )
            // InternalEcl.g:1815:4: rule__DefinitionStatusFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefinitionStatusFilter"


    // $ANTLR start "entryRuleDefinitionStatusIdFilter"
    // InternalEcl.g:1824:1: entryRuleDefinitionStatusIdFilter : ruleDefinitionStatusIdFilter EOF ;
    public final void entryRuleDefinitionStatusIdFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1825:1: ( ruleDefinitionStatusIdFilter EOF )
            // InternalEcl.g:1826:1: ruleDefinitionStatusIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDefinitionStatusIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefinitionStatusIdFilter"


    // $ANTLR start "ruleDefinitionStatusIdFilter"
    // InternalEcl.g:1833:1: ruleDefinitionStatusIdFilter : ( ( rule__DefinitionStatusIdFilter__Group__0 ) ) ;
    public final void ruleDefinitionStatusIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1837:2: ( ( ( rule__DefinitionStatusIdFilter__Group__0 ) ) )
            // InternalEcl.g:1838:2: ( ( rule__DefinitionStatusIdFilter__Group__0 ) )
            {
            // InternalEcl.g:1838:2: ( ( rule__DefinitionStatusIdFilter__Group__0 ) )
            // InternalEcl.g:1839:3: ( rule__DefinitionStatusIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1840:3: ( rule__DefinitionStatusIdFilter__Group__0 )
            // InternalEcl.g:1840:4: rule__DefinitionStatusIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefinitionStatusIdFilter"


    // $ANTLR start "entryRuleDefinitionStatusTokenFilter"
    // InternalEcl.g:1849:1: entryRuleDefinitionStatusTokenFilter : ruleDefinitionStatusTokenFilter EOF ;
    public final void entryRuleDefinitionStatusTokenFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1850:1: ( ruleDefinitionStatusTokenFilter EOF )
            // InternalEcl.g:1851:1: ruleDefinitionStatusTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDefinitionStatusTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDefinitionStatusTokenFilter"


    // $ANTLR start "ruleDefinitionStatusTokenFilter"
    // InternalEcl.g:1858:1: ruleDefinitionStatusTokenFilter : ( ( rule__DefinitionStatusTokenFilter__Group__0 ) ) ;
    public final void ruleDefinitionStatusTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1862:2: ( ( ( rule__DefinitionStatusTokenFilter__Group__0 ) ) )
            // InternalEcl.g:1863:2: ( ( rule__DefinitionStatusTokenFilter__Group__0 ) )
            {
            // InternalEcl.g:1863:2: ( ( rule__DefinitionStatusTokenFilter__Group__0 ) )
            // InternalEcl.g:1864:3: ( rule__DefinitionStatusTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1865:3: ( rule__DefinitionStatusTokenFilter__Group__0 )
            // InternalEcl.g:1865:4: rule__DefinitionStatusTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDefinitionStatusTokenFilter"


    // $ANTLR start "entryRuleModuleFilter"
    // InternalEcl.g:1874:1: entryRuleModuleFilter : ruleModuleFilter EOF ;
    public final void entryRuleModuleFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1875:1: ( ruleModuleFilter EOF )
            // InternalEcl.g:1876:1: ruleModuleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModuleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModuleFilter"


    // $ANTLR start "ruleModuleFilter"
    // InternalEcl.g:1883:1: ruleModuleFilter : ( ( rule__ModuleFilter__Group__0 ) ) ;
    public final void ruleModuleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1887:2: ( ( ( rule__ModuleFilter__Group__0 ) ) )
            // InternalEcl.g:1888:2: ( ( rule__ModuleFilter__Group__0 ) )
            {
            // InternalEcl.g:1888:2: ( ( rule__ModuleFilter__Group__0 ) )
            // InternalEcl.g:1889:3: ( rule__ModuleFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1890:3: ( rule__ModuleFilter__Group__0 )
            // InternalEcl.g:1890:4: rule__ModuleFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModuleFilter"


    // $ANTLR start "entryRuleEffectiveTimeFilter"
    // InternalEcl.g:1899:1: entryRuleEffectiveTimeFilter : ruleEffectiveTimeFilter EOF ;
    public final void entryRuleEffectiveTimeFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1900:1: ( ruleEffectiveTimeFilter EOF )
            // InternalEcl.g:1901:1: ruleEffectiveTimeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEffectiveTimeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEffectiveTimeFilter"


    // $ANTLR start "ruleEffectiveTimeFilter"
    // InternalEcl.g:1908:1: ruleEffectiveTimeFilter : ( ( rule__EffectiveTimeFilter__Group__0 ) ) ;
    public final void ruleEffectiveTimeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1912:2: ( ( ( rule__EffectiveTimeFilter__Group__0 ) ) )
            // InternalEcl.g:1913:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            {
            // InternalEcl.g:1913:2: ( ( rule__EffectiveTimeFilter__Group__0 ) )
            // InternalEcl.g:1914:3: ( rule__EffectiveTimeFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1915:3: ( rule__EffectiveTimeFilter__Group__0 )
            // InternalEcl.g:1915:4: rule__EffectiveTimeFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEffectiveTimeFilter"


    // $ANTLR start "entryRuleActiveFilter"
    // InternalEcl.g:1924:1: entryRuleActiveFilter : ruleActiveFilter EOF ;
    public final void entryRuleActiveFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1925:1: ( ruleActiveFilter EOF )
            // InternalEcl.g:1926:1: ruleActiveFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveFilter"


    // $ANTLR start "ruleActiveFilter"
    // InternalEcl.g:1933:1: ruleActiveFilter : ( ( rule__ActiveFilter__Group__0 ) ) ;
    public final void ruleActiveFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1937:2: ( ( ( rule__ActiveFilter__Group__0 ) ) )
            // InternalEcl.g:1938:2: ( ( rule__ActiveFilter__Group__0 ) )
            {
            // InternalEcl.g:1938:2: ( ( rule__ActiveFilter__Group__0 ) )
            // InternalEcl.g:1939:3: ( rule__ActiveFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1940:3: ( rule__ActiveFilter__Group__0 )
            // InternalEcl.g:1940:4: rule__ActiveFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveFilter"


    // $ANTLR start "entryRuleSemanticTagFilter"
    // InternalEcl.g:1949:1: entryRuleSemanticTagFilter : ruleSemanticTagFilter EOF ;
    public final void entryRuleSemanticTagFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1950:1: ( ruleSemanticTagFilter EOF )
            // InternalEcl.g:1951:1: ruleSemanticTagFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSemanticTagFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSemanticTagFilter"


    // $ANTLR start "ruleSemanticTagFilter"
    // InternalEcl.g:1958:1: ruleSemanticTagFilter : ( ( rule__SemanticTagFilter__Group__0 ) ) ;
    public final void ruleSemanticTagFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1962:2: ( ( ( rule__SemanticTagFilter__Group__0 ) ) )
            // InternalEcl.g:1963:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            {
            // InternalEcl.g:1963:2: ( ( rule__SemanticTagFilter__Group__0 ) )
            // InternalEcl.g:1964:3: ( rule__SemanticTagFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1965:3: ( rule__SemanticTagFilter__Group__0 )
            // InternalEcl.g:1965:4: rule__SemanticTagFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSemanticTagFilter"


    // $ANTLR start "entryRulePreferredInFilter"
    // InternalEcl.g:1974:1: entryRulePreferredInFilter : rulePreferredInFilter EOF ;
    public final void entryRulePreferredInFilter() throws RecognitionException {
        try {
            // InternalEcl.g:1975:1: ( rulePreferredInFilter EOF )
            // InternalEcl.g:1976:1: rulePreferredInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreferredInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreferredInFilter"


    // $ANTLR start "rulePreferredInFilter"
    // InternalEcl.g:1983:1: rulePreferredInFilter : ( ( rule__PreferredInFilter__Group__0 ) ) ;
    public final void rulePreferredInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:1987:2: ( ( ( rule__PreferredInFilter__Group__0 ) ) )
            // InternalEcl.g:1988:2: ( ( rule__PreferredInFilter__Group__0 ) )
            {
            // InternalEcl.g:1988:2: ( ( rule__PreferredInFilter__Group__0 ) )
            // InternalEcl.g:1989:3: ( rule__PreferredInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }
            // InternalEcl.g:1990:3: ( rule__PreferredInFilter__Group__0 )
            // InternalEcl.g:1990:4: rule__PreferredInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreferredInFilter"


    // $ANTLR start "entryRuleAcceptableInFilter"
    // InternalEcl.g:1999:1: entryRuleAcceptableInFilter : ruleAcceptableInFilter EOF ;
    public final void entryRuleAcceptableInFilter() throws RecognitionException {
        try {
            // InternalEcl.g:2000:1: ( ruleAcceptableInFilter EOF )
            // InternalEcl.g:2001:1: ruleAcceptableInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptableInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptableInFilter"


    // $ANTLR start "ruleAcceptableInFilter"
    // InternalEcl.g:2008:1: ruleAcceptableInFilter : ( ( rule__AcceptableInFilter__Group__0 ) ) ;
    public final void ruleAcceptableInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2012:2: ( ( ( rule__AcceptableInFilter__Group__0 ) ) )
            // InternalEcl.g:2013:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            {
            // InternalEcl.g:2013:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            // InternalEcl.g:2014:3: ( rule__AcceptableInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }
            // InternalEcl.g:2015:3: ( rule__AcceptableInFilter__Group__0 )
            // InternalEcl.g:2015:4: rule__AcceptableInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptableInFilter"


    // $ANTLR start "entryRuleLanguageRefSetFilter"
    // InternalEcl.g:2024:1: entryRuleLanguageRefSetFilter : ruleLanguageRefSetFilter EOF ;
    public final void entryRuleLanguageRefSetFilter() throws RecognitionException {
        try {
            // InternalEcl.g:2025:1: ( ruleLanguageRefSetFilter EOF )
            // InternalEcl.g:2026:1: ruleLanguageRefSetFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageRefSetFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageRefSetFilter"


    // $ANTLR start "ruleLanguageRefSetFilter"
    // InternalEcl.g:2033:1: ruleLanguageRefSetFilter : ( ( rule__LanguageRefSetFilter__Group__0 ) ) ;
    public final void ruleLanguageRefSetFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2037:2: ( ( ( rule__LanguageRefSetFilter__Group__0 ) ) )
            // InternalEcl.g:2038:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            {
            // InternalEcl.g:2038:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            // InternalEcl.g:2039:3: ( rule__LanguageRefSetFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }
            // InternalEcl.g:2040:3: ( rule__LanguageRefSetFilter__Group__0 )
            // InternalEcl.g:2040:4: rule__LanguageRefSetFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageRefSetFilter"


    // $ANTLR start "entryRuleCaseSignificanceFilter"
    // InternalEcl.g:2049:1: entryRuleCaseSignificanceFilter : ruleCaseSignificanceFilter EOF ;
    public final void entryRuleCaseSignificanceFilter() throws RecognitionException {
        try {
            // InternalEcl.g:2050:1: ( ruleCaseSignificanceFilter EOF )
            // InternalEcl.g:2051:1: ruleCaseSignificanceFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCaseSignificanceFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseSignificanceFilter"


    // $ANTLR start "ruleCaseSignificanceFilter"
    // InternalEcl.g:2058:1: ruleCaseSignificanceFilter : ( ( rule__CaseSignificanceFilter__Group__0 ) ) ;
    public final void ruleCaseSignificanceFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2062:2: ( ( ( rule__CaseSignificanceFilter__Group__0 ) ) )
            // InternalEcl.g:2063:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            {
            // InternalEcl.g:2063:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            // InternalEcl.g:2064:3: ( rule__CaseSignificanceFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }
            // InternalEcl.g:2065:3: ( rule__CaseSignificanceFilter__Group__0 )
            // InternalEcl.g:2065:4: rule__CaseSignificanceFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseSignificanceFilter"


    // $ANTLR start "entryRuleFilterValue"
    // InternalEcl.g:2074:1: entryRuleFilterValue : ruleFilterValue EOF ;
    public final void entryRuleFilterValue() throws RecognitionException {
        try {
            // InternalEcl.g:2075:1: ( ruleFilterValue EOF )
            // InternalEcl.g:2076:1: ruleFilterValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterValue"


    // $ANTLR start "ruleFilterValue"
    // InternalEcl.g:2083:1: ruleFilterValue : ( ( rule__FilterValue__Alternatives ) ) ;
    public final void ruleFilterValue() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2087:2: ( ( ( rule__FilterValue__Alternatives ) ) )
            // InternalEcl.g:2088:2: ( ( rule__FilterValue__Alternatives ) )
            {
            // InternalEcl.g:2088:2: ( ( rule__FilterValue__Alternatives ) )
            // InternalEcl.g:2089:3: ( rule__FilterValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterValueAccess().getAlternatives()); 
            }
            // InternalEcl.g:2090:3: ( rule__FilterValue__Alternatives )
            // InternalEcl.g:2090:4: rule__FilterValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterValue"


    // $ANTLR start "entryRuleSupplement"
    // InternalEcl.g:2099:1: entryRuleSupplement : ruleSupplement EOF ;
    public final void entryRuleSupplement() throws RecognitionException {
        try {
            // InternalEcl.g:2100:1: ( ruleSupplement EOF )
            // InternalEcl.g:2101:1: ruleSupplement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSupplement"


    // $ANTLR start "ruleSupplement"
    // InternalEcl.g:2108:1: ruleSupplement : ( ruleHistorySupplement ) ;
    public final void ruleSupplement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2112:2: ( ( ruleHistorySupplement ) )
            // InternalEcl.g:2113:2: ( ruleHistorySupplement )
            {
            // InternalEcl.g:2113:2: ( ruleHistorySupplement )
            // InternalEcl.g:2114:3: ruleHistorySupplement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementAccess().getHistorySupplementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleHistorySupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementAccess().getHistorySupplementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSupplement"


    // $ANTLR start "entryRuleHistorySupplement"
    // InternalEcl.g:2124:1: entryRuleHistorySupplement : ruleHistorySupplement EOF ;
    public final void entryRuleHistorySupplement() throws RecognitionException {
        try {
            // InternalEcl.g:2125:1: ( ruleHistorySupplement EOF )
            // InternalEcl.g:2126:1: ruleHistorySupplement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHistorySupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHistorySupplement"


    // $ANTLR start "ruleHistorySupplement"
    // InternalEcl.g:2133:1: ruleHistorySupplement : ( ( rule__HistorySupplement__Group__0 ) ) ;
    public final void ruleHistorySupplement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2137:2: ( ( ( rule__HistorySupplement__Group__0 ) ) )
            // InternalEcl.g:2138:2: ( ( rule__HistorySupplement__Group__0 ) )
            {
            // InternalEcl.g:2138:2: ( ( rule__HistorySupplement__Group__0 ) )
            // InternalEcl.g:2139:3: ( rule__HistorySupplement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getGroup()); 
            }
            // InternalEcl.g:2140:3: ( rule__HistorySupplement__Group__0 )
            // InternalEcl.g:2140:4: rule__HistorySupplement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHistorySupplement"


    // $ANTLR start "entryRuleHistoryProfile"
    // InternalEcl.g:2149:1: entryRuleHistoryProfile : ruleHistoryProfile EOF ;
    public final void entryRuleHistoryProfile() throws RecognitionException {
        try {
            // InternalEcl.g:2150:1: ( ruleHistoryProfile EOF )
            // InternalEcl.g:2151:1: ruleHistoryProfile EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHistoryProfile();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHistoryProfile"


    // $ANTLR start "ruleHistoryProfile"
    // InternalEcl.g:2158:1: ruleHistoryProfile : ( ( rule__HistoryProfile__Group__0 ) ) ;
    public final void ruleHistoryProfile() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2162:2: ( ( ( rule__HistoryProfile__Group__0 ) ) )
            // InternalEcl.g:2163:2: ( ( rule__HistoryProfile__Group__0 ) )
            {
            // InternalEcl.g:2163:2: ( ( rule__HistoryProfile__Group__0 ) )
            // InternalEcl.g:2164:3: ( rule__HistoryProfile__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getGroup()); 
            }
            // InternalEcl.g:2165:3: ( rule__HistoryProfile__Group__0 )
            // InternalEcl.g:2165:4: rule__HistoryProfile__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHistoryProfile"


    // $ANTLR start "entryRuleIdentifier"
    // InternalEcl.g:2174:1: entryRuleIdentifier : ruleIdentifier EOF ;
    public final void entryRuleIdentifier() throws RecognitionException {
        try {
            // InternalEcl.g:2175:1: ( ruleIdentifier EOF )
            // InternalEcl.g:2176:1: ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalEcl.g:2183:1: ruleIdentifier : ( ( rule__Identifier__Group__0 ) ) ;
    public final void ruleIdentifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2187:2: ( ( ( rule__Identifier__Group__0 ) ) )
            // InternalEcl.g:2188:2: ( ( rule__Identifier__Group__0 ) )
            {
            // InternalEcl.g:2188:2: ( ( rule__Identifier__Group__0 ) )
            // InternalEcl.g:2189:3: ( rule__Identifier__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getGroup()); 
            }
            // InternalEcl.g:2190:3: ( rule__Identifier__Group__0 )
            // InternalEcl.g:2190:4: rule__Identifier__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEcl.g:2199:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2203:1: ( ruleNonNegativeInteger EOF )
            // InternalEcl.g:2204:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEcl.g:2214:1: ruleNonNegativeInteger : ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2219:2: ( ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) ) )
            // InternalEcl.g:2220:2: ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) )
            {
            // InternalEcl.g:2220:2: ( ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* ) )
            // InternalEcl.g:2221:3: ( ( RULE_DIGIT ) ) ( ( RULE_DIGIT )* )
            {
            // InternalEcl.g:2221:3: ( ( RULE_DIGIT ) )
            // InternalEcl.g:2222:4: ( RULE_DIGIT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }
            // InternalEcl.g:2223:4: ( RULE_DIGIT )
            // InternalEcl.g:2223:5: RULE_DIGIT
            {
            match(input,RULE_DIGIT,FollowSets000.FOLLOW_3); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }

            }

            // InternalEcl.g:2226:3: ( ( RULE_DIGIT )* )
            // InternalEcl.g:2227:4: ( RULE_DIGIT )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }
            // InternalEcl.g:2228:4: ( RULE_DIGIT )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_DIGIT) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalEcl.g:2228:5: RULE_DIGIT
            	    {
            	    match(input,RULE_DIGIT,FollowSets000.FOLLOW_3); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGITTerminalRuleCall()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEcl.g:2239:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2243:1: ( ruleNonNegativeDecimal EOF )
            // InternalEcl.g:2244:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEcl.g:2254:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2259:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEcl.g:2260:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEcl.g:2260:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEcl.g:2261:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEcl.g:2262:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEcl.g:2262:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEcl.g:2272:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2276:1: ( ruleMaxValue EOF )
            // InternalEcl.g:2277:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEcl.g:2287:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2292:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEcl.g:2293:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEcl.g:2293:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEcl.g:2294:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEcl.g:2295:3: ( rule__MaxValue__Alternatives )
            // InternalEcl.g:2295:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEcl.g:2305:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2309:1: ( ruleInteger EOF )
            // InternalEcl.g:2310:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEcl.g:2320:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2325:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEcl.g:2326:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEcl.g:2326:2: ( ( rule__Integer__Group__0 ) )
            // InternalEcl.g:2327:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEcl.g:2328:3: ( rule__Integer__Group__0 )
            // InternalEcl.g:2328:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEcl.g:2338:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2342:1: ( ruleDecimal EOF )
            // InternalEcl.g:2343:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEcl.g:2353:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2358:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEcl.g:2359:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEcl.g:2359:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEcl.g:2360:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEcl.g:2361:3: ( rule__Decimal__Group__0 )
            // InternalEcl.g:2361:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEcl.g:2371:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2375:1: ( ruleBoolean EOF )
            // InternalEcl.g:2376:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEcl.g:2386:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2391:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEcl.g:2392:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEcl.g:2392:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEcl.g:2393:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEcl.g:2394:3: ( rule__Boolean__Alternatives )
            // InternalEcl.g:2394:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleActiveBoolean"
    // InternalEcl.g:2404:1: entryRuleActiveBoolean : ruleActiveBoolean EOF ;
    public final void entryRuleActiveBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2408:1: ( ruleActiveBoolean EOF )
            // InternalEcl.g:2409:1: ruleActiveBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleActiveBoolean"


    // $ANTLR start "ruleActiveBoolean"
    // InternalEcl.g:2419:1: ruleActiveBoolean : ( ( rule__ActiveBoolean__Alternatives ) ) ;
    public final void ruleActiveBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2424:2: ( ( ( rule__ActiveBoolean__Alternatives ) ) )
            // InternalEcl.g:2425:2: ( ( rule__ActiveBoolean__Alternatives ) )
            {
            // InternalEcl.g:2425:2: ( ( rule__ActiveBoolean__Alternatives ) )
            // InternalEcl.g:2426:3: ( rule__ActiveBoolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveBooleanAccess().getAlternatives()); 
            }
            // InternalEcl.g:2427:3: ( rule__ActiveBoolean__Alternatives )
            // InternalEcl.g:2427:4: rule__ActiveBoolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveBoolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleActiveBoolean"


    // $ANTLR start "entryRuleUnquotedString"
    // InternalEcl.g:2437:1: entryRuleUnquotedString : ruleUnquotedString EOF ;
    public final void entryRuleUnquotedString() throws RecognitionException {
        try {
            // InternalEcl.g:2438:1: ( ruleUnquotedString EOF )
            // InternalEcl.g:2439:1: ruleUnquotedString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnquotedString"


    // $ANTLR start "ruleUnquotedString"
    // InternalEcl.g:2446:1: ruleUnquotedString : ( ( rule__UnquotedString__Alternatives ) ) ;
    public final void ruleUnquotedString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2450:2: ( ( ( rule__UnquotedString__Alternatives ) ) )
            // InternalEcl.g:2451:2: ( ( rule__UnquotedString__Alternatives ) )
            {
            // InternalEcl.g:2451:2: ( ( rule__UnquotedString__Alternatives ) )
            // InternalEcl.g:2452:3: ( rule__UnquotedString__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }
            // InternalEcl.g:2453:3: ( rule__UnquotedString__Alternatives )
            // InternalEcl.g:2453:4: rule__UnquotedString__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__UnquotedString__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnquotedStringAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnquotedString"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEcl.g:2462:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEcl.g:2466:1: ( ruleDialectAliasValue EOF )
            // InternalEcl.g:2467:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEcl.g:2477:1: ruleDialectAliasValue : ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2482:2: ( ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) ) )
            // InternalEcl.g:2483:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            {
            // InternalEcl.g:2483:2: ( ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* ) )
            // InternalEcl.g:2484:3: ( ( rule__DialectAliasValue__Alternatives ) ) ( ( rule__DialectAliasValue__Alternatives )* )
            {
            // InternalEcl.g:2484:3: ( ( rule__DialectAliasValue__Alternatives ) )
            // InternalEcl.g:2485:4: ( rule__DialectAliasValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEcl.g:2486:4: ( rule__DialectAliasValue__Alternatives )
            // InternalEcl.g:2486:5: rule__DialectAliasValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }

            // InternalEcl.g:2489:3: ( ( rule__DialectAliasValue__Alternatives )* )
            // InternalEcl.g:2490:4: ( rule__DialectAliasValue__Alternatives )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }
            // InternalEcl.g:2491:4: ( rule__DialectAliasValue__Alternatives )*
            loop2:
            do {
                int alt2=2;
                alt2 = dfa2.predict(input);
                switch (alt2) {
            	case 1 :
            	    // InternalEcl.g:2491:5: rule__DialectAliasValue__Alternatives
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasValue__Alternatives();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleLEXICAL_SEARCH_TYPE"
    // InternalEcl.g:2502:1: entryRuleLEXICAL_SEARCH_TYPE : ruleLEXICAL_SEARCH_TYPE EOF ;
    public final void entryRuleLEXICAL_SEARCH_TYPE() throws RecognitionException {
        try {
            // InternalEcl.g:2503:1: ( ruleLEXICAL_SEARCH_TYPE EOF )
            // InternalEcl.g:2504:1: ruleLEXICAL_SEARCH_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "ruleLEXICAL_SEARCH_TYPE"
    // InternalEcl.g:2511:1: ruleLEXICAL_SEARCH_TYPE : ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) ;
    public final void ruleLEXICAL_SEARCH_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2515:2: ( ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) )
            // InternalEcl.g:2516:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            {
            // InternalEcl.g:2516:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            // InternalEcl.g:2517:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }
            // InternalEcl.g:2518:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            // InternalEcl.g:2518:4: rule__LEXICAL_SEARCH_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LEXICAL_SEARCH_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "entryRuleHISTORY_PROFILE_TYPE"
    // InternalEcl.g:2527:1: entryRuleHISTORY_PROFILE_TYPE : ruleHISTORY_PROFILE_TYPE EOF ;
    public final void entryRuleHISTORY_PROFILE_TYPE() throws RecognitionException {
        try {
            // InternalEcl.g:2528:1: ( ruleHISTORY_PROFILE_TYPE EOF )
            // InternalEcl.g:2529:1: ruleHISTORY_PROFILE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHISTORY_PROFILE_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleHISTORY_PROFILE_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHISTORY_PROFILE_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleHISTORY_PROFILE_TYPE"


    // $ANTLR start "ruleHISTORY_PROFILE_TYPE"
    // InternalEcl.g:2536:1: ruleHISTORY_PROFILE_TYPE : ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) ) ;
    public final void ruleHISTORY_PROFILE_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2540:2: ( ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) ) )
            // InternalEcl.g:2541:2: ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) )
            {
            // InternalEcl.g:2541:2: ( ( rule__HISTORY_PROFILE_TYPE__Alternatives ) )
            // InternalEcl.g:2542:3: ( rule__HISTORY_PROFILE_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getAlternatives()); 
            }
            // InternalEcl.g:2543:3: ( rule__HISTORY_PROFILE_TYPE__Alternatives )
            // InternalEcl.g:2543:4: rule__HISTORY_PROFILE_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HISTORY_PROFILE_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleHISTORY_PROFILE_TYPE"


    // $ANTLR start "entryRuleSHORT_DOMAIN"
    // InternalEcl.g:2552:1: entryRuleSHORT_DOMAIN : ruleSHORT_DOMAIN EOF ;
    public final void entryRuleSHORT_DOMAIN() throws RecognitionException {
        try {
            // InternalEcl.g:2553:1: ( ruleSHORT_DOMAIN EOF )
            // InternalEcl.g:2554:1: ruleSHORT_DOMAIN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSHORT_DOMAINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSHORT_DOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSHORT_DOMAINRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSHORT_DOMAIN"


    // $ANTLR start "ruleSHORT_DOMAIN"
    // InternalEcl.g:2561:1: ruleSHORT_DOMAIN : ( ( rule__SHORT_DOMAIN__Alternatives ) ) ;
    public final void ruleSHORT_DOMAIN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2565:2: ( ( ( rule__SHORT_DOMAIN__Alternatives ) ) )
            // InternalEcl.g:2566:2: ( ( rule__SHORT_DOMAIN__Alternatives ) )
            {
            // InternalEcl.g:2566:2: ( ( rule__SHORT_DOMAIN__Alternatives ) )
            // InternalEcl.g:2567:3: ( rule__SHORT_DOMAIN__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSHORT_DOMAINAccess().getAlternatives()); 
            }
            // InternalEcl.g:2568:3: ( rule__SHORT_DOMAIN__Alternatives )
            // InternalEcl.g:2568:4: rule__SHORT_DOMAIN__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SHORT_DOMAIN__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSHORT_DOMAINAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSHORT_DOMAIN"


    // $ANTLR start "entryRuleNON_NUMERIC_OPERATOR"
    // InternalEcl.g:2577:1: entryRuleNON_NUMERIC_OPERATOR : ruleNON_NUMERIC_OPERATOR EOF ;
    public final void entryRuleNON_NUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEcl.g:2578:1: ( ruleNON_NUMERIC_OPERATOR EOF )
            // InternalEcl.g:2579:1: ruleNON_NUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNON_NUMERIC_OPERATOR"


    // $ANTLR start "ruleNON_NUMERIC_OPERATOR"
    // InternalEcl.g:2586:1: ruleNON_NUMERIC_OPERATOR : ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNON_NUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2590:2: ( ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEcl.g:2591:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEcl.g:2591:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            // InternalEcl.g:2592:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEcl.g:2593:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            // InternalEcl.g:2593:4: rule__NON_NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NON_NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNON_NUMERIC_OPERATOR"


    // $ANTLR start "entryRuleNUMERIC_OPERATOR"
    // InternalEcl.g:2602:1: entryRuleNUMERIC_OPERATOR : ruleNUMERIC_OPERATOR EOF ;
    public final void entryRuleNUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEcl.g:2603:1: ( ruleNUMERIC_OPERATOR EOF )
            // InternalEcl.g:2604:1: ruleNUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_OPERATOR"


    // $ANTLR start "ruleNUMERIC_OPERATOR"
    // InternalEcl.g:2611:1: ruleNUMERIC_OPERATOR : ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2615:2: ( ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEcl.g:2616:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEcl.g:2616:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            // InternalEcl.g:2617:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEcl.g:2618:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            // InternalEcl.g:2618:4: rule__NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_OPERATOR"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEcl.g:2626:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2630:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_COMMA) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalEcl.g:2631:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2631:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2632:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2637:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2637:2: ( RULE_COMMA )
                    // InternalEcl.g:2638:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEcl.g:2647:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2651:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt4=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt4=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt4=2;
                }
                break;
            case RULE_LT:
                {
                alt4=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt4=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt4=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt4=6;
                }
                break;
            case RULE_GT:
                {
                alt4=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt4=8;
                }
                break;
            case RULE_DIGIT:
            case RULE_ALPHA:
            case RULE_CONCEPT_SHORT_KEYWORD:
            case RULE_DESCRIPTION_SHORT_KEYWORD:
            case RULE_REVERSED:
            case RULE_KEYWORD:
            case RULE_WILDCARD:
            case RULE_CARET:
            case RULE_ROUND_OPEN:
                {
                alt4=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalEcl.g:2652:2: ( ruleChildOf )
                    {
                    // InternalEcl.g:2652:2: ( ruleChildOf )
                    // InternalEcl.g:2653:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2658:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEcl.g:2658:2: ( ruleChildOrSelfOf )
                    // InternalEcl.g:2659:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2664:2: ( ruleDescendantOf )
                    {
                    // InternalEcl.g:2664:2: ( ruleDescendantOf )
                    // InternalEcl.g:2665:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2670:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEcl.g:2670:2: ( ruleDescendantOrSelfOf )
                    // InternalEcl.g:2671:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:2676:2: ( ruleParentOf )
                    {
                    // InternalEcl.g:2676:2: ( ruleParentOf )
                    // InternalEcl.g:2677:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:2682:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEcl.g:2682:2: ( ruleParentOrSelfOf )
                    // InternalEcl.g:2683:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEcl.g:2688:2: ( ruleAncestorOf )
                    {
                    // InternalEcl.g:2688:2: ( ruleAncestorOf )
                    // InternalEcl.g:2689:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEcl.g:2694:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEcl.g:2694:2: ( ruleAncestorOrSelfOf )
                    // InternalEcl.g:2695:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEcl.g:2700:2: ( ruleEclFocusConcept )
                    {
                    // InternalEcl.g:2700:2: ( ruleEclFocusConcept )
                    // InternalEcl.g:2701:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEcl.g:2710:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2714:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt5=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt5=1;
                }
                break;
            case RULE_DIGIT:
            case RULE_ALPHA:
            case RULE_CONCEPT_SHORT_KEYWORD:
            case RULE_DESCRIPTION_SHORT_KEYWORD:
            case RULE_REVERSED:
            case RULE_KEYWORD:
                {
                alt5=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt5=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt5=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalEcl.g:2715:2: ( ruleMemberOf )
                    {
                    // InternalEcl.g:2715:2: ( ruleMemberOf )
                    // InternalEcl.g:2716:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2721:2: ( ruleEclConceptReference )
                    {
                    // InternalEcl.g:2721:2: ( ruleEclConceptReference )
                    // InternalEcl.g:2722:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2727:2: ( ruleAny )
                    {
                    // InternalEcl.g:2727:2: ( ruleAny )
                    // InternalEcl.g:2728:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2733:2: ( ruleNestedExpression )
                    {
                    // InternalEcl.g:2733:2: ( ruleNestedExpression )
                    // InternalEcl.g:2734:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_2_0"
    // InternalEcl.g:2743:1: rule__MemberOf__ConstraintAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2747:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case RULE_DIGIT:
            case RULE_ALPHA:
            case RULE_CONCEPT_SHORT_KEYWORD:
            case RULE_DESCRIPTION_SHORT_KEYWORD:
            case RULE_REVERSED:
            case RULE_KEYWORD:
                {
                alt6=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt6=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalEcl.g:2748:2: ( ruleEclConceptReference )
                    {
                    // InternalEcl.g:2748:2: ( ruleEclConceptReference )
                    // InternalEcl.g:2749:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2754:2: ( ruleAny )
                    {
                    // InternalEcl.g:2754:2: ( ruleAny )
                    // InternalEcl.g:2755:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2760:2: ( ruleNestedExpression )
                    {
                    // InternalEcl.g:2760:2: ( ruleNestedExpression )
                    // InternalEcl.g:2761:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_2_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_2_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_2_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEcl.g:2770:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2774:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_COMMA) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalEcl.g:2775:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2775:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2776:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2781:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2781:2: ( RULE_COMMA )
                    // InternalEcl.g:2782:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEcl.g:2791:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2795:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt8=3;
            alt8 = dfa8.predict(input);
            switch (alt8) {
                case 1 :
                    // InternalEcl.g:2796:2: ( ruleAttributeConstraint )
                    {
                    // InternalEcl.g:2796:2: ( ruleAttributeConstraint )
                    // InternalEcl.g:2797:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2802:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEcl.g:2802:2: ( ruleEclAttributeGroup )
                    // InternalEcl.g:2803:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2808:2: ( ruleNestedRefinement )
                    {
                    // InternalEcl.g:2808:2: ( ruleNestedRefinement )
                    // InternalEcl.g:2809:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEcl.g:2818:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2822:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt9=1;
            }
            else if ( (LA9_0==RULE_COMMA) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalEcl.g:2823:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2823:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2824:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2829:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2829:2: ( RULE_COMMA )
                    // InternalEcl.g:2830:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEcl.g:2839:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2843:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalEcl.g:2844:2: ( ruleAttributeConstraint )
                    {
                    // InternalEcl.g:2844:2: ( ruleAttributeConstraint )
                    // InternalEcl.g:2845:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2850:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEcl.g:2850:2: ( ruleNestedAttributeSet )
                    // InternalEcl.g:2851:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEcl.g:2860:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2864:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt11=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                switch ( input.LA(2) ) {
                case RULE_STRING:
                case RULE_TRUE_KEYWORD:
                case RULE_FALSE_KEYWORD:
                case RULE_EXACT_KEYWORD:
                case RULE_MATCH_KEYWORD:
                case RULE_REGEX_KEYWORD:
                case RULE_WILD_KEYWORD:
                case RULE_HASH:
                    {
                    alt11=2;
                    }
                    break;
                case RULE_DIGIT:
                case RULE_ALPHA:
                case RULE_CONCEPT_SHORT_KEYWORD:
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                case RULE_REVERSED:
                case RULE_KEYWORD:
                case RULE_WILDCARD:
                case RULE_GT:
                case RULE_LT:
                case RULE_LT_EM:
                case RULE_DBL_LT_EM:
                case RULE_DBL_LT:
                case RULE_GT_EM:
                case RULE_DBL_GT_EM:
                case RULE_DBL_GT:
                case RULE_CARET:
                    {
                    alt11=1;
                    }
                    break;
                case RULE_ROUND_OPEN:
                    {
                    int LA11_5 = input.LA(3);

                    if ( (LA11_5==RULE_DIGIT||(LA11_5>=RULE_ALPHA && LA11_5<=RULE_KEYWORD)||LA11_5==RULE_WILDCARD||(LA11_5>=RULE_GT && LA11_5<=RULE_LT)||(LA11_5>=RULE_LT_EM && LA11_5<=RULE_CARET)||LA11_5==RULE_ROUND_OPEN) ) {
                        alt11=1;
                    }
                    else if ( (LA11_5==RULE_STRING||(LA11_5>=RULE_EXACT_KEYWORD && LA11_5<=RULE_REGEX_KEYWORD)||LA11_5==RULE_WILD_KEYWORD) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }

                }
                break;
            case RULE_NOT_EQUAL:
                {
                switch ( input.LA(2) ) {
                case RULE_STRING:
                case RULE_TRUE_KEYWORD:
                case RULE_FALSE_KEYWORD:
                case RULE_EXACT_KEYWORD:
                case RULE_MATCH_KEYWORD:
                case RULE_REGEX_KEYWORD:
                case RULE_WILD_KEYWORD:
                case RULE_HASH:
                    {
                    alt11=2;
                    }
                    break;
                case RULE_ROUND_OPEN:
                    {
                    int LA11_5 = input.LA(3);

                    if ( (LA11_5==RULE_DIGIT||(LA11_5>=RULE_ALPHA && LA11_5<=RULE_KEYWORD)||LA11_5==RULE_WILDCARD||(LA11_5>=RULE_GT && LA11_5<=RULE_LT)||(LA11_5>=RULE_LT_EM && LA11_5<=RULE_CARET)||LA11_5==RULE_ROUND_OPEN) ) {
                        alt11=1;
                    }
                    else if ( (LA11_5==RULE_STRING||(LA11_5>=RULE_EXACT_KEYWORD && LA11_5<=RULE_REGEX_KEYWORD)||LA11_5==RULE_WILD_KEYWORD) ) {
                        alt11=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 11, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_DIGIT:
                case RULE_ALPHA:
                case RULE_CONCEPT_SHORT_KEYWORD:
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                case RULE_REVERSED:
                case RULE_KEYWORD:
                case RULE_WILDCARD:
                case RULE_GT:
                case RULE_LT:
                case RULE_LT_EM:
                case RULE_DBL_LT_EM:
                case RULE_DBL_LT:
                case RULE_GT_EM:
                case RULE_DBL_GT_EM:
                case RULE_DBL_GT:
                case RULE_CARET:
                    {
                    alt11=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 2, input);

                    throw nvae;
                }

                }
                break;
            case RULE_GT:
            case RULE_LT:
            case RULE_GTE:
            case RULE_LTE:
                {
                alt11=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalEcl.g:2865:2: ( ruleAttributeComparison )
                    {
                    // InternalEcl.g:2865:2: ( ruleAttributeComparison )
                    // InternalEcl.g:2866:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2871:2: ( ruleDataTypeComparison )
                    {
                    // InternalEcl.g:2871:2: ( ruleDataTypeComparison )
                    // InternalEcl.g:2872:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEcl.g:2881:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2885:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt12=4;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalEcl.g:2886:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEcl.g:2886:2: ( ruleBooleanValueComparison )
                    // InternalEcl.g:2887:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2892:2: ( ruleStringValueComparison )
                    {
                    // InternalEcl.g:2892:2: ( ruleStringValueComparison )
                    // InternalEcl.g:2893:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2898:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEcl.g:2898:2: ( ruleIntegerValueComparison )
                    // InternalEcl.g:2899:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2904:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEcl.g:2904:2: ( ruleDecimalValueComparison )
                    // InternalEcl.g:2905:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEcl.g:2914:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2918:1: ( ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_COMMA ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_CONJUNCTION_KEYWORD) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_COMMA) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalEcl.g:2919:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:2919:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:2920:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2925:2: ( RULE_COMMA )
                    {
                    // InternalEcl.g:2925:2: ( RULE_COMMA )
                    // InternalEcl.g:2926:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEcl.g:2935:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleDefinitionStatusFilter ) | ( ruleModuleFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleActiveFilter ) | ( ruleSemanticTagFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleMemberFieldFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:2939:1: ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleDefinitionStatusFilter ) | ( ruleModuleFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleActiveFilter ) | ( ruleSemanticTagFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleMemberFieldFilter ) | ( ruleNestedFilter ) )
            int alt14=15;
            alt14 = dfa14.predict(input);
            switch (alt14) {
                case 1 :
                    // InternalEcl.g:2940:2: ( ruleTermFilter )
                    {
                    // InternalEcl.g:2940:2: ( ruleTermFilter )
                    // InternalEcl.g:2941:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:2946:2: ( ruleLanguageFilter )
                    {
                    // InternalEcl.g:2946:2: ( ruleLanguageFilter )
                    // InternalEcl.g:2947:3: ruleLanguageFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:2952:2: ( ruleTypeFilter )
                    {
                    // InternalEcl.g:2952:2: ( ruleTypeFilter )
                    // InternalEcl.g:2953:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:2958:2: ( ruleDialectFilter )
                    {
                    // InternalEcl.g:2958:2: ( ruleDialectFilter )
                    // InternalEcl.g:2959:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:2964:2: ( ruleDefinitionStatusFilter )
                    {
                    // InternalEcl.g:2964:2: ( ruleDefinitionStatusFilter )
                    // InternalEcl.g:2965:3: ruleDefinitionStatusFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDefinitionStatusFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDefinitionStatusFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDefinitionStatusFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:2970:2: ( ruleModuleFilter )
                    {
                    // InternalEcl.g:2970:2: ( ruleModuleFilter )
                    // InternalEcl.g:2971:3: ruleModuleFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleModuleFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEcl.g:2976:2: ( ruleEffectiveTimeFilter )
                    {
                    // InternalEcl.g:2976:2: ( ruleEffectiveTimeFilter )
                    // InternalEcl.g:2977:3: ruleEffectiveTimeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEffectiveTimeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEcl.g:2982:2: ( ruleActiveFilter )
                    {
                    // InternalEcl.g:2982:2: ( ruleActiveFilter )
                    // InternalEcl.g:2983:3: ruleActiveFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleActiveFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEcl.g:2988:2: ( ruleSemanticTagFilter )
                    {
                    // InternalEcl.g:2988:2: ( ruleSemanticTagFilter )
                    // InternalEcl.g:2989:3: ruleSemanticTagFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleSemanticTagFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEcl.g:2994:2: ( rulePreferredInFilter )
                    {
                    // InternalEcl.g:2994:2: ( rulePreferredInFilter )
                    // InternalEcl.g:2995:3: rulePreferredInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreferredInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEcl.g:3000:2: ( ruleAcceptableInFilter )
                    {
                    // InternalEcl.g:3000:2: ( ruleAcceptableInFilter )
                    // InternalEcl.g:3001:3: ruleAcceptableInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptableInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEcl.g:3006:2: ( ruleLanguageRefSetFilter )
                    {
                    // InternalEcl.g:3006:2: ( ruleLanguageRefSetFilter )
                    // InternalEcl.g:3007:3: ruleLanguageRefSetFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_11()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageRefSetFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEcl.g:3012:2: ( ruleCaseSignificanceFilter )
                    {
                    // InternalEcl.g:3012:2: ( ruleCaseSignificanceFilter )
                    // InternalEcl.g:3013:3: ruleCaseSignificanceFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_12()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCaseSignificanceFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEcl.g:3018:2: ( ruleMemberFieldFilter )
                    {
                    // InternalEcl.g:3018:2: ( ruleMemberFieldFilter )
                    // InternalEcl.g:3019:3: ruleMemberFieldFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getMemberFieldFilterParserRuleCall_13()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberFieldFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getMemberFieldFilterParserRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEcl.g:3024:2: ( ruleNestedFilter )
                    {
                    // InternalEcl.g:3024:2: ( ruleNestedFilter )
                    // InternalEcl.g:3025:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_14()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_14()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__SearchTerm__Alternatives"
    // InternalEcl.g:3034:1: rule__SearchTerm__Alternatives : ( ( ruleTypedSearchTerm ) | ( ruleTypedSearchTermSet ) );
    public final void rule__SearchTerm__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3038:1: ( ( ruleTypedSearchTerm ) | ( ruleTypedSearchTermSet ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_STRING||(LA15_0>=RULE_EXACT_KEYWORD && LA15_0<=RULE_REGEX_KEYWORD)||LA15_0==RULE_WILD_KEYWORD) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_ROUND_OPEN) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEcl.g:3039:2: ( ruleTypedSearchTerm )
                    {
                    // InternalEcl.g:3039:2: ( ruleTypedSearchTerm )
                    // InternalEcl.g:3040:3: ruleTypedSearchTerm
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSearchTermAccess().getTypedSearchTermParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedSearchTerm();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSearchTermAccess().getTypedSearchTermParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3045:2: ( ruleTypedSearchTermSet )
                    {
                    // InternalEcl.g:3045:2: ( ruleTypedSearchTermSet )
                    // InternalEcl.g:3046:3: ruleTypedSearchTermSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSearchTermAccess().getTypedSearchTermSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedSearchTermSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSearchTermAccess().getTypedSearchTermSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SearchTerm__Alternatives"


    // $ANTLR start "rule__TypedSearchTermClause__Alternatives"
    // InternalEcl.g:3055:1: rule__TypedSearchTermClause__Alternatives : ( ( ( rule__TypedSearchTermClause__Group_0__0 ) ) | ( ( rule__TypedSearchTermClause__Group_1__0 ) ) );
    public final void rule__TypedSearchTermClause__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3059:1: ( ( ( rule__TypedSearchTermClause__Group_0__0 ) ) | ( ( rule__TypedSearchTermClause__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_STRING||(LA16_0>=RULE_EXACT_KEYWORD && LA16_0<=RULE_MATCH_KEYWORD)||LA16_0==RULE_WILD_KEYWORD) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_REGEX_KEYWORD) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEcl.g:3060:2: ( ( rule__TypedSearchTermClause__Group_0__0 ) )
                    {
                    // InternalEcl.g:3060:2: ( ( rule__TypedSearchTermClause__Group_0__0 ) )
                    // InternalEcl.g:3061:3: ( rule__TypedSearchTermClause__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0()); 
                    }
                    // InternalEcl.g:3062:3: ( rule__TypedSearchTermClause__Group_0__0 )
                    // InternalEcl.g:3062:4: rule__TypedSearchTermClause__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedSearchTermClause__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3066:2: ( ( rule__TypedSearchTermClause__Group_1__0 ) )
                    {
                    // InternalEcl.g:3066:2: ( ( rule__TypedSearchTermClause__Group_1__0 ) )
                    // InternalEcl.g:3067:3: ( rule__TypedSearchTermClause__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedSearchTermClauseAccess().getGroup_1()); 
                    }
                    // InternalEcl.g:3068:3: ( rule__TypedSearchTermClause__Group_1__0 )
                    // InternalEcl.g:3068:4: rule__TypedSearchTermClause__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedSearchTermClause__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedSearchTermClauseAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Alternatives"


    // $ANTLR start "rule__LanguageFilter__Alternatives_2"
    // InternalEcl.g:3076:1: rule__LanguageFilter__Alternatives_2 : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3080:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_CONJUNCTION_KEYWORD||(LA17_0>=RULE_CONCEPT_SHORT_KEYWORD && LA17_0<=RULE_KEYWORD)||LA17_0==RULE_WILDCARD||(LA17_0>=RULE_TRUE_KEYWORD && LA17_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_ROUND_OPEN) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEcl.g:3081:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEcl.g:3081:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEcl.g:3082:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEcl.g:3083:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    // InternalEcl.g:3083:4: rule__LanguageFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3087:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:3087:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    // InternalEcl.g:3088:3: ( rule__LanguageFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:3089:3: ( rule__LanguageFilter__Group_2_1__0 )
                    // InternalEcl.g:3089:4: rule__LanguageFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEcl.g:3097:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3101:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_TYPEID_KEYWORD) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_TYPE_KEYWORD) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalEcl.g:3102:2: ( ruleTypeIdFilter )
                    {
                    // InternalEcl.g:3102:2: ( ruleTypeIdFilter )
                    // InternalEcl.g:3103:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3108:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEcl.g:3108:2: ( ruleTypeTokenFilter )
                    // InternalEcl.g:3109:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEcl.g:3118:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3122:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_CONJUNCTION_KEYWORD||(LA19_0>=RULE_CONCEPT_SHORT_KEYWORD && LA19_0<=RULE_KEYWORD)||LA19_0==RULE_WILDCARD||(LA19_0>=RULE_TRUE_KEYWORD && LA19_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_ROUND_OPEN) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEcl.g:3123:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEcl.g:3123:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEcl.g:3124:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEcl.g:3125:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEcl.g:3125:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3129:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:3129:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEcl.g:3130:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:3131:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEcl.g:3131:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEcl.g:3139:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3143:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_DIALECTID_KEYWORD) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_DIALECT_KEYWORD) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalEcl.g:3144:2: ( ruleDialectIdFilter )
                    {
                    // InternalEcl.g:3144:2: ( ruleDialectIdFilter )
                    // InternalEcl.g:3145:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3150:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEcl.g:3150:2: ( ruleDialectAliasFilter )
                    // InternalEcl.g:3151:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEcl.g:3160:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3164:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt21=2;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalEcl.g:3165:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEcl.g:3165:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEcl.g:3166:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEcl.g:3167:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEcl.g:3167:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3171:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:3171:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEcl.g:3172:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:3173:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEcl.g:3173:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEcl.g:3181:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3185:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( ((LA22_0>=RULE_DIGIT && LA22_0<=RULE_CONJUNCTION_KEYWORD)||LA22_0==RULE_DASH||(LA22_0>=RULE_CONCEPT_SHORT_KEYWORD && LA22_0<=RULE_KEYWORD)||LA22_0==RULE_WILDCARD||(LA22_0>=RULE_TRUE_KEYWORD && LA22_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_ROUND_OPEN) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEcl.g:3186:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEcl.g:3186:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEcl.g:3187:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEcl.g:3188:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEcl.g:3188:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3192:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:3192:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEcl.g:3193:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:3194:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEcl.g:3194:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__Acceptability__Alternatives"
    // InternalEcl.g:3202:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );
    public final void rule__Acceptability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3206:1: ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) )
            int alt23=2;
            alt23 = dfa23.predict(input);
            switch (alt23) {
                case 1 :
                    // InternalEcl.g:3207:2: ( ruleAcceptabilityIdSet )
                    {
                    // InternalEcl.g:3207:2: ( ruleAcceptabilityIdSet )
                    // InternalEcl.g:3208:3: ruleAcceptabilityIdSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityIdSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3213:2: ( ruleAcceptabilityTokenSet )
                    {
                    // InternalEcl.g:3213:2: ( ruleAcceptabilityTokenSet )
                    // InternalEcl.g:3214:3: ruleAcceptabilityTokenSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityTokenSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__Alternatives"


    // $ANTLR start "rule__DefinitionStatusFilter__Alternatives"
    // InternalEcl.g:3223:1: rule__DefinitionStatusFilter__Alternatives : ( ( ruleDefinitionStatusIdFilter ) | ( ruleDefinitionStatusTokenFilter ) );
    public final void rule__DefinitionStatusFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3227:1: ( ( ruleDefinitionStatusIdFilter ) | ( ruleDefinitionStatusTokenFilter ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_DEFINITION_STATUS_ID_KEYWORD) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_DEFINITION_STATUS_TOKEN_KEYWORD) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEcl.g:3228:2: ( ruleDefinitionStatusIdFilter )
                    {
                    // InternalEcl.g:3228:2: ( ruleDefinitionStatusIdFilter )
                    // InternalEcl.g:3229:3: ruleDefinitionStatusIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDefinitionStatusIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3234:2: ( ruleDefinitionStatusTokenFilter )
                    {
                    // InternalEcl.g:3234:2: ( ruleDefinitionStatusTokenFilter )
                    // InternalEcl.g:3235:3: ruleDefinitionStatusTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDefinitionStatusTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusFilterAccess().getDefinitionStatusTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusFilter__Alternatives"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Alternatives_2"
    // InternalEcl.g:3244:1: rule__DefinitionStatusTokenFilter__Alternatives_2 : ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) ) | ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) ) );
    public final void rule__DefinitionStatusTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3248:1: ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) ) | ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_CONJUNCTION_KEYWORD||(LA25_0>=RULE_CONCEPT_SHORT_KEYWORD && LA25_0<=RULE_KEYWORD)||LA25_0==RULE_WILDCARD||(LA25_0>=RULE_TRUE_KEYWORD && LA25_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_ROUND_OPEN) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalEcl.g:3249:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) )
                    {
                    // InternalEcl.g:3249:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 ) )
                    // InternalEcl.g:3250:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_0()); 
                    }
                    // InternalEcl.g:3251:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 )
                    // InternalEcl.g:3251:4: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3255:2: ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEcl.g:3255:2: ( ( rule__DefinitionStatusTokenFilter__Group_2_1__0 ) )
                    // InternalEcl.g:3256:3: ( rule__DefinitionStatusTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEcl.g:3257:3: ( rule__DefinitionStatusTokenFilter__Group_2_1__0 )
                    // InternalEcl.g:3257:4: rule__DefinitionStatusTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DefinitionStatusTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDefinitionStatusTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Alternatives_2"


    // $ANTLR start "rule__FilterValue__Alternatives"
    // InternalEcl.g:3265:1: rule__FilterValue__Alternatives : ( ( ruleFilteredExpressionConstraint ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__FilterValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3269:1: ( ( ruleFilteredExpressionConstraint ) | ( ruleEclConceptReferenceSet ) )
            int alt26=2;
            alt26 = dfa26.predict(input);
            switch (alt26) {
                case 1 :
                    // InternalEcl.g:3270:2: ( ruleFilteredExpressionConstraint )
                    {
                    // InternalEcl.g:3270:2: ( ruleFilteredExpressionConstraint )
                    // InternalEcl.g:3271:3: ruleFilteredExpressionConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilterValueAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFilteredExpressionConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilterValueAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3276:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEcl.g:3276:2: ( ruleEclConceptReferenceSet )
                    // InternalEcl.g:3277:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFilterValueAccess().getEclConceptReferenceSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFilterValueAccess().getEclConceptReferenceSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterValue__Alternatives"


    // $ANTLR start "rule__HistorySupplement__HistoryAlternatives_4_0"
    // InternalEcl.g:3286:1: rule__HistorySupplement__HistoryAlternatives_4_0 : ( ( ruleHistoryProfile ) | ( ruleNestedExpression ) );
    public final void rule__HistorySupplement__HistoryAlternatives_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3290:1: ( ( ruleHistoryProfile ) | ( ruleNestedExpression ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_DASH && LA27_0<=RULE_UNDERSCORE)) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_ROUND_OPEN) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalEcl.g:3291:2: ( ruleHistoryProfile )
                    {
                    // InternalEcl.g:3291:2: ( ruleHistoryProfile )
                    // InternalEcl.g:3292:3: ruleHistoryProfile
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistorySupplementAccess().getHistoryHistoryProfileParserRuleCall_4_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleHistoryProfile();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistorySupplementAccess().getHistoryHistoryProfileParserRuleCall_4_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3297:2: ( ruleNestedExpression )
                    {
                    // InternalEcl.g:3297:2: ( ruleNestedExpression )
                    // InternalEcl.g:3298:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistorySupplementAccess().getHistoryNestedExpressionParserRuleCall_4_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistorySupplementAccess().getHistoryNestedExpressionParserRuleCall_4_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__HistoryAlternatives_4_0"


    // $ANTLR start "rule__HistoryProfile__Alternatives_0"
    // InternalEcl.g:3307:1: rule__HistoryProfile__Alternatives_0 : ( ( RULE_DASH ) | ( RULE_UNDERSCORE ) );
    public final void rule__HistoryProfile__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3311:1: ( ( RULE_DASH ) | ( RULE_UNDERSCORE ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_DASH) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_UNDERSCORE) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEcl.g:3312:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:3312:2: ( RULE_DASH )
                    // InternalEcl.g:3313:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistoryProfileAccess().getDASHTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistoryProfileAccess().getDASHTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3318:2: ( RULE_UNDERSCORE )
                    {
                    // InternalEcl.g:3318:2: ( RULE_UNDERSCORE )
                    // InternalEcl.g:3319:3: RULE_UNDERSCORE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHistoryProfileAccess().getUNDERSCORETerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_UNDERSCORE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHistoryProfileAccess().getUNDERSCORETerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Alternatives_0"


    // $ANTLR start "rule__Identifier__Alternatives_0"
    // InternalEcl.g:3328:1: rule__Identifier__Alternatives_0 : ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) );
    public final void rule__Identifier__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3332:1: ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) )
            int alt29=6;
            switch ( input.LA(1) ) {
            case RULE_DIGIT:
                {
                alt29=1;
                }
                break;
            case RULE_ALPHA:
                {
                alt29=2;
                }
                break;
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt29=3;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt29=4;
                }
                break;
            case RULE_REVERSED:
                {
                alt29=5;
                }
                break;
            case RULE_KEYWORD:
                {
                alt29=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalEcl.g:3333:2: ( RULE_DIGIT )
                    {
                    // InternalEcl.g:3333:2: ( RULE_DIGIT )
                    // InternalEcl.g:3334:3: RULE_DIGIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_DIGIT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3339:2: ( RULE_ALPHA )
                    {
                    // InternalEcl.g:3339:2: ( RULE_ALPHA )
                    // InternalEcl.g:3340:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3345:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3345:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEcl.g:3346:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0_2()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3351:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3351:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEcl.g:3352:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_0_3()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:3357:2: ( RULE_REVERSED )
                    {
                    // InternalEcl.g:3357:2: ( RULE_REVERSED )
                    // InternalEcl.g:3358:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_0_4()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:3363:2: ( RULE_KEYWORD )
                    {
                    // InternalEcl.g:3363:2: ( RULE_KEYWORD )
                    // InternalEcl.g:3364:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_0_5()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_0_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Alternatives_0"


    // $ANTLR start "rule__Identifier__Alternatives_1_0"
    // InternalEcl.g:3373:1: rule__Identifier__Alternatives_1_0 : ( ( RULE_DOT ) | ( RULE_DASH ) | ( RULE_UNDERSCORE ) );
    public final void rule__Identifier__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3377:1: ( ( RULE_DOT ) | ( RULE_DASH ) | ( RULE_UNDERSCORE ) )
            int alt30=3;
            switch ( input.LA(1) ) {
            case RULE_DOT:
                {
                alt30=1;
                }
                break;
            case RULE_DASH:
                {
                alt30=2;
                }
                break;
            case RULE_UNDERSCORE:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalEcl.g:3378:2: ( RULE_DOT )
                    {
                    // InternalEcl.g:3378:2: ( RULE_DOT )
                    // InternalEcl.g:3379:3: RULE_DOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDOTTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDOTTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3384:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:3384:2: ( RULE_DASH )
                    // InternalEcl.g:3385:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3390:2: ( RULE_UNDERSCORE )
                    {
                    // InternalEcl.g:3390:2: ( RULE_UNDERSCORE )
                    // InternalEcl.g:3391:3: RULE_UNDERSCORE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_0_2()); 
                    }
                    match(input,RULE_UNDERSCORE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Alternatives_1_0"


    // $ANTLR start "rule__Identifier__Alternatives_1_1"
    // InternalEcl.g:3400:1: rule__Identifier__Alternatives_1_1 : ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) );
    public final void rule__Identifier__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3404:1: ( ( RULE_DIGIT ) | ( RULE_ALPHA ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_KEYWORD ) )
            int alt31=6;
            switch ( input.LA(1) ) {
            case RULE_DIGIT:
                {
                alt31=1;
                }
                break;
            case RULE_ALPHA:
                {
                alt31=2;
                }
                break;
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt31=3;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt31=4;
                }
                break;
            case RULE_REVERSED:
                {
                alt31=5;
                }
                break;
            case RULE_KEYWORD:
                {
                alt31=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalEcl.g:3405:2: ( RULE_DIGIT )
                    {
                    // InternalEcl.g:3405:2: ( RULE_DIGIT )
                    // InternalEcl.g:3406:3: RULE_DIGIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_DIGIT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDIGITTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3411:2: ( RULE_ALPHA )
                    {
                    // InternalEcl.g:3411:2: ( RULE_ALPHA )
                    // InternalEcl.g:3412:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getALPHATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3417:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3417:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEcl.g:3418:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_1_1_2()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_1_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3423:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3423:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEcl.g:3424:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1_1_3()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:3429:2: ( RULE_REVERSED )
                    {
                    // InternalEcl.g:3429:2: ( RULE_REVERSED )
                    // InternalEcl.g:3430:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_1_1_4()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getREVERSEDTerminalRuleCall_1_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:3435:2: ( RULE_KEYWORD )
                    {
                    // InternalEcl.g:3435:2: ( RULE_KEYWORD )
                    // InternalEcl.g:3436:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_1_1_5()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIdentifierAccess().getKEYWORDTerminalRuleCall_1_1_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Alternatives_1_1"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEcl.g:3445:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3449:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_DIGIT) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_WILDCARD) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalEcl.g:3450:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEcl.g:3450:2: ( ruleNonNegativeInteger )
                    // InternalEcl.g:3451:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3456:2: ( RULE_WILDCARD )
                    {
                    // InternalEcl.g:3456:2: ( RULE_WILDCARD )
                    // InternalEcl.g:3457:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEcl.g:3466:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3470:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_PLUS) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_DASH) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalEcl.g:3471:2: ( RULE_PLUS )
                    {
                    // InternalEcl.g:3471:2: ( RULE_PLUS )
                    // InternalEcl.g:3472:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3477:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:3477:2: ( RULE_DASH )
                    // InternalEcl.g:3478:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEcl.g:3487:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3491:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_PLUS) ) {
                alt34=1;
            }
            else if ( (LA34_0==RULE_DASH) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalEcl.g:3492:2: ( RULE_PLUS )
                    {
                    // InternalEcl.g:3492:2: ( RULE_PLUS )
                    // InternalEcl.g:3493:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3498:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:3498:2: ( RULE_DASH )
                    // InternalEcl.g:3499:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEcl.g:3508:1: rule__Boolean__Alternatives : ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3512:1: ( ( RULE_TRUE_KEYWORD ) | ( RULE_FALSE_KEYWORD ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_TRUE_KEYWORD) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_FALSE_KEYWORD) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEcl.g:3513:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEcl.g:3513:2: ( RULE_TRUE_KEYWORD )
                    // InternalEcl.g:3514:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTRUE_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3519:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEcl.g:3519:2: ( RULE_FALSE_KEYWORD )
                    // InternalEcl.g:3520:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFALSE_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__ActiveBoolean__Alternatives"
    // InternalEcl.g:3529:1: rule__ActiveBoolean__Alternatives : ( ( ruleNonNegativeInteger ) | ( ruleBoolean ) );
    public final void rule__ActiveBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3533:1: ( ( ruleNonNegativeInteger ) | ( ruleBoolean ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_DIGIT) ) {
                alt36=1;
            }
            else if ( ((LA36_0>=RULE_TRUE_KEYWORD && LA36_0<=RULE_FALSE_KEYWORD)) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalEcl.g:3534:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEcl.g:3534:2: ( ruleNonNegativeInteger )
                    // InternalEcl.g:3535:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActiveBooleanAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActiveBooleanAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3540:2: ( ruleBoolean )
                    {
                    // InternalEcl.g:3540:2: ( ruleBoolean )
                    // InternalEcl.g:3541:3: ruleBoolean
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getActiveBooleanAccess().getBooleanParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBoolean();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getActiveBooleanAccess().getBooleanParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveBoolean__Alternatives"


    // $ANTLR start "rule__UnquotedString__Alternatives"
    // InternalEcl.g:3550:1: rule__UnquotedString__Alternatives : ( ( RULE_HISTORY_KEYWORD ) | ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_WILDCARD ) | ( RULE_KEYWORD ) );
    public final void rule__UnquotedString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3554:1: ( ( RULE_HISTORY_KEYWORD ) | ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_ID_KEYWORD ) | ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) | ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) | ( RULE_EFFECTIVE_TIME_KEYWORD ) | ( RULE_ACCEPTABLE_IN_KEYWORD ) | ( RULE_PREFERRED_IN_KEYWORD ) | ( RULE_SEMANTIC_TAG_KEYWORD ) | ( RULE_DIALECTID_KEYWORD ) | ( RULE_LANGUAGE_KEYWORD ) | ( RULE_MODULEID_KEYWORD ) | ( RULE_DIALECT_KEYWORD ) | ( RULE_ACTIVE_KEYWORD ) | ( RULE_TYPEID_KEYWORD ) | ( RULE_EXCLUSION_KEYWORD ) | ( RULE_EXACT_KEYWORD ) | ( RULE_FALSE_KEYWORD ) | ( RULE_MATCH_KEYWORD ) | ( RULE_REGEX_KEYWORD ) | ( RULE_TERM_KEYWORD ) | ( RULE_TRUE_KEYWORD ) | ( RULE_TYPE_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) | ( RULE_CONJUNCTION_KEYWORD ) | ( RULE_DISJUNCTION_KEYWORD ) | ( RULE_REVERSED ) | ( RULE_MEMBER_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_WILDCARD ) | ( RULE_KEYWORD ) )
            int alt37=35;
            switch ( input.LA(1) ) {
            case RULE_HISTORY_KEYWORD:
                {
                alt37=1;
                }
                break;
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
                {
                alt37=2;
                }
                break;
            case RULE_DEFINITION_STATUS_ID_KEYWORD:
                {
                alt37=3;
                }
                break;
            case RULE_DEFINITION_STATUS_TOKEN_KEYWORD:
                {
                alt37=4;
                }
                break;
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
                {
                alt37=5;
                }
                break;
            case RULE_EFFECTIVE_TIME_KEYWORD:
                {
                alt37=6;
                }
                break;
            case RULE_ACCEPTABLE_IN_KEYWORD:
                {
                alt37=7;
                }
                break;
            case RULE_PREFERRED_IN_KEYWORD:
                {
                alt37=8;
                }
                break;
            case RULE_SEMANTIC_TAG_KEYWORD:
                {
                alt37=9;
                }
                break;
            case RULE_DIALECTID_KEYWORD:
                {
                alt37=10;
                }
                break;
            case RULE_LANGUAGE_KEYWORD:
                {
                alt37=11;
                }
                break;
            case RULE_MODULEID_KEYWORD:
                {
                alt37=12;
                }
                break;
            case RULE_DIALECT_KEYWORD:
                {
                alt37=13;
                }
                break;
            case RULE_ACTIVE_KEYWORD:
                {
                alt37=14;
                }
                break;
            case RULE_TYPEID_KEYWORD:
                {
                alt37=15;
                }
                break;
            case RULE_EXCLUSION_KEYWORD:
                {
                alt37=16;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt37=17;
                }
                break;
            case RULE_FALSE_KEYWORD:
                {
                alt37=18;
                }
                break;
            case RULE_MATCH_KEYWORD:
                {
                alt37=19;
                }
                break;
            case RULE_REGEX_KEYWORD:
                {
                alt37=20;
                }
                break;
            case RULE_TERM_KEYWORD:
                {
                alt37=21;
                }
                break;
            case RULE_TRUE_KEYWORD:
                {
                alt37=22;
                }
                break;
            case RULE_TYPE_KEYWORD:
                {
                alt37=23;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt37=24;
                }
                break;
            case RULE_MIN_KEYWORD:
                {
                alt37=25;
                }
                break;
            case RULE_MOD_KEYWORD:
                {
                alt37=26;
                }
                break;
            case RULE_MAX_KEYWORD:
                {
                alt37=27;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
                {
                alt37=28;
                }
                break;
            case RULE_DISJUNCTION_KEYWORD:
                {
                alt37=29;
                }
                break;
            case RULE_REVERSED:
                {
                alt37=30;
                }
                break;
            case RULE_MEMBER_SHORT_KEYWORD:
                {
                alt37=31;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt37=32;
                }
                break;
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt37=33;
                }
                break;
            case RULE_WILDCARD:
                {
                alt37=34;
                }
                break;
            case RULE_KEYWORD:
                {
                alt37=35;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalEcl.g:3555:2: ( RULE_HISTORY_KEYWORD )
                    {
                    // InternalEcl.g:3555:2: ( RULE_HISTORY_KEYWORD )
                    // InternalEcl.g:3556:3: RULE_HISTORY_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getHISTORY_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_HISTORY_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getHISTORY_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3561:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    {
                    // InternalEcl.g:3561:2: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
                    // InternalEcl.g:3562:3: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3567:2: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
                    {
                    // InternalEcl.g:3567:2: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
                    // InternalEcl.g:3568:3: RULE_DEFINITION_STATUS_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DEFINITION_STATUS_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3573:2: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
                    {
                    // InternalEcl.g:3573:2: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
                    // InternalEcl.g:3574:3: RULE_DEFINITION_STATUS_TOKEN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_3()); 
                    }
                    match(input,RULE_DEFINITION_STATUS_TOKEN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:3579:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    {
                    // InternalEcl.g:3579:2: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
                    // InternalEcl.g:3580:3: RULE_LANGUAGE_REFSET_ID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_4()); 
                    }
                    match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:3585:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    {
                    // InternalEcl.g:3585:2: ( RULE_EFFECTIVE_TIME_KEYWORD )
                    // InternalEcl.g:3586:3: RULE_EFFECTIVE_TIME_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_5()); 
                    }
                    match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEcl.g:3591:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    {
                    // InternalEcl.g:3591:2: ( RULE_ACCEPTABLE_IN_KEYWORD )
                    // InternalEcl.g:3592:3: RULE_ACCEPTABLE_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_6()); 
                    }
                    match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEcl.g:3597:2: ( RULE_PREFERRED_IN_KEYWORD )
                    {
                    // InternalEcl.g:3597:2: ( RULE_PREFERRED_IN_KEYWORD )
                    // InternalEcl.g:3598:3: RULE_PREFERRED_IN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_7()); 
                    }
                    match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEcl.g:3603:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    {
                    // InternalEcl.g:3603:2: ( RULE_SEMANTIC_TAG_KEYWORD )
                    // InternalEcl.g:3604:3: RULE_SEMANTIC_TAG_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_8()); 
                    }
                    match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEcl.g:3609:2: ( RULE_DIALECTID_KEYWORD )
                    {
                    // InternalEcl.g:3609:2: ( RULE_DIALECTID_KEYWORD )
                    // InternalEcl.g:3610:3: RULE_DIALECTID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_9()); 
                    }
                    match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECTID_KEYWORDTerminalRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEcl.g:3615:2: ( RULE_LANGUAGE_KEYWORD )
                    {
                    // InternalEcl.g:3615:2: ( RULE_LANGUAGE_KEYWORD )
                    // InternalEcl.g:3616:3: RULE_LANGUAGE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_10()); 
                    }
                    match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getLANGUAGE_KEYWORDTerminalRuleCall_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalEcl.g:3621:2: ( RULE_MODULEID_KEYWORD )
                    {
                    // InternalEcl.g:3621:2: ( RULE_MODULEID_KEYWORD )
                    // InternalEcl.g:3622:3: RULE_MODULEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_11()); 
                    }
                    match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMODULEID_KEYWORDTerminalRuleCall_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalEcl.g:3627:2: ( RULE_DIALECT_KEYWORD )
                    {
                    // InternalEcl.g:3627:2: ( RULE_DIALECT_KEYWORD )
                    // InternalEcl.g:3628:3: RULE_DIALECT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_12()); 
                    }
                    match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDIALECT_KEYWORDTerminalRuleCall_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalEcl.g:3633:2: ( RULE_ACTIVE_KEYWORD )
                    {
                    // InternalEcl.g:3633:2: ( RULE_ACTIVE_KEYWORD )
                    // InternalEcl.g:3634:3: RULE_ACTIVE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_13()); 
                    }
                    match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getACTIVE_KEYWORDTerminalRuleCall_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalEcl.g:3639:2: ( RULE_TYPEID_KEYWORD )
                    {
                    // InternalEcl.g:3639:2: ( RULE_TYPEID_KEYWORD )
                    // InternalEcl.g:3640:3: RULE_TYPEID_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_14()); 
                    }
                    match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPEID_KEYWORDTerminalRuleCall_14()); 
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalEcl.g:3645:2: ( RULE_EXCLUSION_KEYWORD )
                    {
                    // InternalEcl.g:3645:2: ( RULE_EXCLUSION_KEYWORD )
                    // InternalEcl.g:3646:3: RULE_EXCLUSION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_15()); 
                    }
                    match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXCLUSION_KEYWORDTerminalRuleCall_15()); 
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalEcl.g:3651:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEcl.g:3651:2: ( RULE_EXACT_KEYWORD )
                    // InternalEcl.g:3652:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_16()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getEXACT_KEYWORDTerminalRuleCall_16()); 
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalEcl.g:3657:2: ( RULE_FALSE_KEYWORD )
                    {
                    // InternalEcl.g:3657:2: ( RULE_FALSE_KEYWORD )
                    // InternalEcl.g:3658:3: RULE_FALSE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_17()); 
                    }
                    match(input,RULE_FALSE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getFALSE_KEYWORDTerminalRuleCall_17()); 
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalEcl.g:3663:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEcl.g:3663:2: ( RULE_MATCH_KEYWORD )
                    // InternalEcl.g:3664:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_18()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMATCH_KEYWORDTerminalRuleCall_18()); 
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalEcl.g:3669:2: ( RULE_REGEX_KEYWORD )
                    {
                    // InternalEcl.g:3669:2: ( RULE_REGEX_KEYWORD )
                    // InternalEcl.g:3670:3: RULE_REGEX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_19()); 
                    }
                    match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREGEX_KEYWORDTerminalRuleCall_19()); 
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalEcl.g:3675:2: ( RULE_TERM_KEYWORD )
                    {
                    // InternalEcl.g:3675:2: ( RULE_TERM_KEYWORD )
                    // InternalEcl.g:3676:3: RULE_TERM_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_20()); 
                    }
                    match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTERM_KEYWORDTerminalRuleCall_20()); 
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalEcl.g:3681:2: ( RULE_TRUE_KEYWORD )
                    {
                    // InternalEcl.g:3681:2: ( RULE_TRUE_KEYWORD )
                    // InternalEcl.g:3682:3: RULE_TRUE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_21()); 
                    }
                    match(input,RULE_TRUE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTRUE_KEYWORDTerminalRuleCall_21()); 
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalEcl.g:3687:2: ( RULE_TYPE_KEYWORD )
                    {
                    // InternalEcl.g:3687:2: ( RULE_TYPE_KEYWORD )
                    // InternalEcl.g:3688:3: RULE_TYPE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_22()); 
                    }
                    match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getTYPE_KEYWORDTerminalRuleCall_22()); 
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalEcl.g:3693:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEcl.g:3693:2: ( RULE_WILD_KEYWORD )
                    // InternalEcl.g:3694:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_23()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getWILD_KEYWORDTerminalRuleCall_23()); 
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalEcl.g:3699:2: ( RULE_MIN_KEYWORD )
                    {
                    // InternalEcl.g:3699:2: ( RULE_MIN_KEYWORD )
                    // InternalEcl.g:3700:3: RULE_MIN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMIN_KEYWORDTerminalRuleCall_24()); 
                    }
                    match(input,RULE_MIN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMIN_KEYWORDTerminalRuleCall_24()); 
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalEcl.g:3705:2: ( RULE_MOD_KEYWORD )
                    {
                    // InternalEcl.g:3705:2: ( RULE_MOD_KEYWORD )
                    // InternalEcl.g:3706:3: RULE_MOD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMOD_KEYWORDTerminalRuleCall_25()); 
                    }
                    match(input,RULE_MOD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMOD_KEYWORDTerminalRuleCall_25()); 
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalEcl.g:3711:2: ( RULE_MAX_KEYWORD )
                    {
                    // InternalEcl.g:3711:2: ( RULE_MAX_KEYWORD )
                    // InternalEcl.g:3712:3: RULE_MAX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMAX_KEYWORDTerminalRuleCall_26()); 
                    }
                    match(input,RULE_MAX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMAX_KEYWORDTerminalRuleCall_26()); 
                    }

                    }


                    }
                    break;
                case 28 :
                    // InternalEcl.g:3717:2: ( RULE_CONJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:3717:2: ( RULE_CONJUNCTION_KEYWORD )
                    // InternalEcl.g:3718:3: RULE_CONJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_27()); 
                    }
                    match(input,RULE_CONJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONJUNCTION_KEYWORDTerminalRuleCall_27()); 
                    }

                    }


                    }
                    break;
                case 29 :
                    // InternalEcl.g:3723:2: ( RULE_DISJUNCTION_KEYWORD )
                    {
                    // InternalEcl.g:3723:2: ( RULE_DISJUNCTION_KEYWORD )
                    // InternalEcl.g:3724:3: RULE_DISJUNCTION_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_28()); 
                    }
                    match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_28()); 
                    }

                    }


                    }
                    break;
                case 30 :
                    // InternalEcl.g:3729:2: ( RULE_REVERSED )
                    {
                    // InternalEcl.g:3729:2: ( RULE_REVERSED )
                    // InternalEcl.g:3730:3: RULE_REVERSED
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_29()); 
                    }
                    match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getREVERSEDTerminalRuleCall_29()); 
                    }

                    }


                    }
                    break;
                case 31 :
                    // InternalEcl.g:3735:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3735:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    // InternalEcl.g:3736:3: RULE_MEMBER_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_30()); 
                    }
                    match(input,RULE_MEMBER_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_30()); 
                    }

                    }


                    }
                    break;
                case 32 :
                    // InternalEcl.g:3741:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3741:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEcl.g:3742:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_31()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_31()); 
                    }

                    }


                    }
                    break;
                case 33 :
                    // InternalEcl.g:3747:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3747:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEcl.g:3748:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_32()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_32()); 
                    }

                    }


                    }
                    break;
                case 34 :
                    // InternalEcl.g:3753:2: ( RULE_WILDCARD )
                    {
                    // InternalEcl.g:3753:2: ( RULE_WILDCARD )
                    // InternalEcl.g:3754:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getWILDCARDTerminalRuleCall_33()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getWILDCARDTerminalRuleCall_33()); 
                    }

                    }


                    }
                    break;
                case 35 :
                    // InternalEcl.g:3759:2: ( RULE_KEYWORD )
                    {
                    // InternalEcl.g:3759:2: ( RULE_KEYWORD )
                    // InternalEcl.g:3760:3: RULE_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_34()); 
                    }
                    match(input,RULE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnquotedStringAccess().getKEYWORDTerminalRuleCall_34()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnquotedString__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives"
    // InternalEcl.g:3769:1: rule__DialectAliasValue__Alternatives : ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT ) );
    public final void rule__DialectAliasValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3773:1: ( ( RULE_DASH ) | ( ruleUnquotedString ) | ( RULE_DIGIT ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt38=1;
                }
                break;
            case RULE_CONJUNCTION_KEYWORD:
            case RULE_CONCEPT_SHORT_KEYWORD:
            case RULE_DESCRIPTION_SHORT_KEYWORD:
            case RULE_REVERSED:
            case RULE_KEYWORD:
            case RULE_WILDCARD:
            case RULE_TRUE_KEYWORD:
            case RULE_FALSE_KEYWORD:
            case RULE_HISTORY_KEYWORD:
            case RULE_CASE_SIGNIFICANCE_ID_KEYWORD:
            case RULE_DEFINITION_STATUS_ID_KEYWORD:
            case RULE_DEFINITION_STATUS_TOKEN_KEYWORD:
            case RULE_LANGUAGE_REFSET_ID_KEYWORD:
            case RULE_EFFECTIVE_TIME_KEYWORD:
            case RULE_ACCEPTABLE_IN_KEYWORD:
            case RULE_PREFERRED_IN_KEYWORD:
            case RULE_SEMANTIC_TAG_KEYWORD:
            case RULE_DIALECTID_KEYWORD:
            case RULE_LANGUAGE_KEYWORD:
            case RULE_MODULEID_KEYWORD:
            case RULE_DIALECT_KEYWORD:
            case RULE_ACTIVE_KEYWORD:
            case RULE_TYPEID_KEYWORD:
            case RULE_EXCLUSION_KEYWORD:
            case RULE_EXACT_KEYWORD:
            case RULE_MATCH_KEYWORD:
            case RULE_REGEX_KEYWORD:
            case RULE_TERM_KEYWORD:
            case RULE_TYPE_KEYWORD:
            case RULE_WILD_KEYWORD:
            case RULE_MIN_KEYWORD:
            case RULE_MOD_KEYWORD:
            case RULE_MAX_KEYWORD:
            case RULE_DISJUNCTION_KEYWORD:
            case RULE_MEMBER_SHORT_KEYWORD:
                {
                alt38=2;
                }
                break;
            case RULE_DIGIT:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalEcl.g:3774:2: ( RULE_DASH )
                    {
                    // InternalEcl.g:3774:2: ( RULE_DASH )
                    // InternalEcl.g:3775:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3780:2: ( ruleUnquotedString )
                    {
                    // InternalEcl.g:3780:2: ( ruleUnquotedString )
                    // InternalEcl.g:3781:3: ruleUnquotedString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleUnquotedString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getUnquotedStringParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3786:2: ( RULE_DIGIT )
                    {
                    // InternalEcl.g:3786:2: ( RULE_DIGIT )
                    // InternalEcl.g:3787:3: RULE_DIGIT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGITTerminalRuleCall_2()); 
                    }
                    match(input,RULE_DIGIT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGITTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives"


    // $ANTLR start "rule__LEXICAL_SEARCH_TYPE__Alternatives"
    // InternalEcl.g:3796:1: rule__LEXICAL_SEARCH_TYPE__Alternatives : ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_EXACT_KEYWORD ) );
    public final void rule__LEXICAL_SEARCH_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3800:1: ( ( RULE_MATCH_KEYWORD ) | ( RULE_WILD_KEYWORD ) | ( RULE_EXACT_KEYWORD ) )
            int alt39=3;
            switch ( input.LA(1) ) {
            case RULE_MATCH_KEYWORD:
                {
                alt39=1;
                }
                break;
            case RULE_WILD_KEYWORD:
                {
                alt39=2;
                }
                break;
            case RULE_EXACT_KEYWORD:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalEcl.g:3801:2: ( RULE_MATCH_KEYWORD )
                    {
                    // InternalEcl.g:3801:2: ( RULE_MATCH_KEYWORD )
                    // InternalEcl.g:3802:3: RULE_MATCH_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_MATCH_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMATCH_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3807:2: ( RULE_WILD_KEYWORD )
                    {
                    // InternalEcl.g:3807:2: ( RULE_WILD_KEYWORD )
                    // InternalEcl.g:3808:3: RULE_WILD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWILD_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3813:2: ( RULE_EXACT_KEYWORD )
                    {
                    // InternalEcl.g:3813:2: ( RULE_EXACT_KEYWORD )
                    // InternalEcl.g:3814:3: RULE_EXACT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_EXACT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getEXACT_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LEXICAL_SEARCH_TYPE__Alternatives"


    // $ANTLR start "rule__HISTORY_PROFILE_TYPE__Alternatives"
    // InternalEcl.g:3823:1: rule__HISTORY_PROFILE_TYPE__Alternatives : ( ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) );
    public final void rule__HISTORY_PROFILE_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3827:1: ( ( RULE_MIN_KEYWORD ) | ( RULE_MOD_KEYWORD ) | ( RULE_MAX_KEYWORD ) )
            int alt40=3;
            switch ( input.LA(1) ) {
            case RULE_MIN_KEYWORD:
                {
                alt40=1;
                }
                break;
            case RULE_MOD_KEYWORD:
                {
                alt40=2;
                }
                break;
            case RULE_MAX_KEYWORD:
                {
                alt40=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalEcl.g:3828:2: ( RULE_MIN_KEYWORD )
                    {
                    // InternalEcl.g:3828:2: ( RULE_MIN_KEYWORD )
                    // InternalEcl.g:3829:3: RULE_MIN_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMIN_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_MIN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMIN_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3834:2: ( RULE_MOD_KEYWORD )
                    {
                    // InternalEcl.g:3834:2: ( RULE_MOD_KEYWORD )
                    // InternalEcl.g:3835:3: RULE_MOD_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMOD_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_MOD_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMOD_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3840:2: ( RULE_MAX_KEYWORD )
                    {
                    // InternalEcl.g:3840:2: ( RULE_MAX_KEYWORD )
                    // InternalEcl.g:3841:3: RULE_MAX_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMAX_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_MAX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getHISTORY_PROFILE_TYPEAccess().getMAX_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HISTORY_PROFILE_TYPE__Alternatives"


    // $ANTLR start "rule__SHORT_DOMAIN__Alternatives"
    // InternalEcl.g:3850:1: rule__SHORT_DOMAIN__Alternatives : ( ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) );
    public final void rule__SHORT_DOMAIN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3854:1: ( ( RULE_CONCEPT_SHORT_KEYWORD ) | ( RULE_DESCRIPTION_SHORT_KEYWORD ) | ( RULE_MEMBER_SHORT_KEYWORD ) )
            int alt41=3;
            switch ( input.LA(1) ) {
            case RULE_CONCEPT_SHORT_KEYWORD:
                {
                alt41=1;
                }
                break;
            case RULE_DESCRIPTION_SHORT_KEYWORD:
                {
                alt41=2;
                }
                break;
            case RULE_MEMBER_SHORT_KEYWORD:
                {
                alt41=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }

            switch (alt41) {
                case 1 :
                    // InternalEcl.g:3855:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3855:2: ( RULE_CONCEPT_SHORT_KEYWORD )
                    // InternalEcl.g:3856:3: RULE_CONCEPT_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSHORT_DOMAINAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_CONCEPT_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSHORT_DOMAINAccess().getCONCEPT_SHORT_KEYWORDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3861:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3861:2: ( RULE_DESCRIPTION_SHORT_KEYWORD )
                    // InternalEcl.g:3862:3: RULE_DESCRIPTION_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSHORT_DOMAINAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_DESCRIPTION_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSHORT_DOMAINAccess().getDESCRIPTION_SHORT_KEYWORDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3867:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    {
                    // InternalEcl.g:3867:2: ( RULE_MEMBER_SHORT_KEYWORD )
                    // InternalEcl.g:3868:3: RULE_MEMBER_SHORT_KEYWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSHORT_DOMAINAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_2()); 
                    }
                    match(input,RULE_MEMBER_SHORT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSHORT_DOMAINAccess().getMEMBER_SHORT_KEYWORDTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SHORT_DOMAIN__Alternatives"


    // $ANTLR start "rule__NON_NUMERIC_OPERATOR__Alternatives"
    // InternalEcl.g:3877:1: rule__NON_NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__NON_NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3881:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_EQUAL) ) {
                alt42=1;
            }
            else if ( (LA42_0==RULE_NOT_EQUAL) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalEcl.g:3882:2: ( RULE_EQUAL )
                    {
                    // InternalEcl.g:3882:2: ( RULE_EQUAL )
                    // InternalEcl.g:3883:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3888:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEcl.g:3888:2: ( RULE_NOT_EQUAL )
                    // InternalEcl.g:3889:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NON_NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__NUMERIC_OPERATOR__Alternatives"
    // InternalEcl.g:3898:1: rule__NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3902:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt43=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt43=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt43=2;
                }
                break;
            case RULE_GT:
                {
                alt43=3;
                }
                break;
            case RULE_LT:
                {
                alt43=4;
                }
                break;
            case RULE_GTE:
                {
                alt43=5;
                }
                break;
            case RULE_LTE:
                {
                alt43=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // InternalEcl.g:3903:2: ( RULE_EQUAL )
                    {
                    // InternalEcl.g:3903:2: ( RULE_EQUAL )
                    // InternalEcl.g:3904:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEcl.g:3909:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEcl.g:3909:2: ( RULE_NOT_EQUAL )
                    // InternalEcl.g:3910:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEcl.g:3915:2: ( RULE_GT )
                    {
                    // InternalEcl.g:3915:2: ( RULE_GT )
                    // InternalEcl.g:3916:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEcl.g:3921:2: ( RULE_LT )
                    {
                    // InternalEcl.g:3921:2: ( RULE_LT )
                    // InternalEcl.g:3922:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEcl.g:3927:2: ( RULE_GTE )
                    {
                    // InternalEcl.g:3927:2: ( RULE_GTE )
                    // InternalEcl.g:3928:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEcl.g:3933:2: ( RULE_LTE )
                    {
                    // InternalEcl.g:3933:2: ( RULE_LTE )
                    // InternalEcl.g:3934:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__Script__Group__0"
    // InternalEcl.g:3943:1: rule__Script__Group__0 : rule__Script__Group__0__Impl rule__Script__Group__1 ;
    public final void rule__Script__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3947:1: ( rule__Script__Group__0__Impl rule__Script__Group__1 )
            // InternalEcl.g:3948:2: rule__Script__Group__0__Impl rule__Script__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Script__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0"


    // $ANTLR start "rule__Script__Group__0__Impl"
    // InternalEcl.g:3955:1: rule__Script__Group__0__Impl : ( () ) ;
    public final void rule__Script__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3959:1: ( ( () ) )
            // InternalEcl.g:3960:1: ( () )
            {
            // InternalEcl.g:3960:1: ( () )
            // InternalEcl.g:3961:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }
            // InternalEcl.g:3962:2: ()
            // InternalEcl.g:3962:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0__Impl"


    // $ANTLR start "rule__Script__Group__1"
    // InternalEcl.g:3970:1: rule__Script__Group__1 : rule__Script__Group__1__Impl ;
    public final void rule__Script__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3974:1: ( rule__Script__Group__1__Impl )
            // InternalEcl.g:3975:2: rule__Script__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1"


    // $ANTLR start "rule__Script__Group__1__Impl"
    // InternalEcl.g:3981:1: rule__Script__Group__1__Impl : ( ( rule__Script__ConstraintAssignment_1 )? ) ;
    public final void rule__Script__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:3985:1: ( ( ( rule__Script__ConstraintAssignment_1 )? ) )
            // InternalEcl.g:3986:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            {
            // InternalEcl.g:3986:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            // InternalEcl.g:3987:2: ( rule__Script__ConstraintAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:3988:2: ( rule__Script__ConstraintAssignment_1 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_DIGIT||(LA44_0>=RULE_ALPHA && LA44_0<=RULE_KEYWORD)||LA44_0==RULE_WILDCARD||(LA44_0>=RULE_GT && LA44_0<=RULE_LT)||(LA44_0>=RULE_LT_EM && LA44_0<=RULE_CARET)||LA44_0==RULE_ROUND_OPEN) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalEcl.g:3988:3: rule__Script__ConstraintAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Script__ConstraintAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEcl.g:3997:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4001:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEcl.g:4002:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4009:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4013:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEcl.g:4014:1: ( ruleAndExpressionConstraint )
            {
            // InternalEcl.g:4014:1: ( ruleAndExpressionConstraint )
            // InternalEcl.g:4015:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEcl.g:4024:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4028:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4029:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4035:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4039:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:4040:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:4040:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:4041:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4042:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalEcl.g:4042:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEcl.g:4051:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4055:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4056:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4063:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4067:1: ( ( () ) )
            // InternalEcl.g:4068:1: ( () )
            {
            // InternalEcl.g:4068:1: ( () )
            // InternalEcl.g:4069:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEcl.g:4070:2: ()
            // InternalEcl.g:4070:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEcl.g:4078:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4082:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEcl.g:4083:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4090:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4094:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:4095:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:4095:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:4096:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEcl.g:4105:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4109:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:4110:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:4116:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4120:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEcl.g:4121:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:4121:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEcl.g:4122:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:4123:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEcl.g:4123:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEcl.g:4132:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4136:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEcl.g:4137:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4144:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4148:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEcl.g:4149:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEcl.g:4149:1: ( ruleExclusionExpressionConstraint )
            // InternalEcl.g:4150:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEcl.g:4159:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4163:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4164:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4170:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4174:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:4175:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:4175:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:4176:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4177:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( ((LA46_0>=RULE_CONJUNCTION_KEYWORD && LA46_0<=RULE_COMMA)) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalEcl.g:4177:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEcl.g:4186:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4190:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4191:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4198:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4202:1: ( ( () ) )
            // InternalEcl.g:4203:1: ( () )
            {
            // InternalEcl.g:4203:1: ( () )
            // InternalEcl.g:4204:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEcl.g:4205:2: ()
            // InternalEcl.g:4205:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEcl.g:4213:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4217:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEcl.g:4218:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4225:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4229:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEcl.g:4230:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEcl.g:4230:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEcl.g:4231:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:4232:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEcl.g:4232:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEcl.g:4240:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4244:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:4245:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:4251:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4255:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEcl.g:4256:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:4256:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEcl.g:4257:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:4258:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEcl.g:4258:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEcl.g:4267:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4271:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEcl.g:4272:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4279:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4283:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEcl.g:4284:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEcl.g:4284:1: ( ruleRefinedExpressionConstraint )
            // InternalEcl.g:4285:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEcl.g:4294:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4298:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4299:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4305:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4309:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEcl.g:4310:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEcl.g:4310:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEcl.g:4311:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4312:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_EXCLUSION_KEYWORD) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalEcl.g:4312:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEcl.g:4321:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4325:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4326:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4333:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4337:1: ( ( () ) )
            // InternalEcl.g:4338:1: ( () )
            {
            // InternalEcl.g:4338:1: ( () )
            // InternalEcl.g:4339:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEcl.g:4340:2: ()
            // InternalEcl.g:4340:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEcl.g:4348:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4352:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEcl.g:4353:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4360:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( RULE_EXCLUSION_KEYWORD ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4364:1: ( ( RULE_EXCLUSION_KEYWORD ) )
            // InternalEcl.g:4365:1: ( RULE_EXCLUSION_KEYWORD )
            {
            // InternalEcl.g:4365:1: ( RULE_EXCLUSION_KEYWORD )
            // InternalEcl.g:4366:2: RULE_EXCLUSION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEcl.g:4375:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4379:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:4380:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:4386:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4390:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEcl.g:4391:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:4391:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEcl.g:4392:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:4393:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEcl.g:4393:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEcl.g:4402:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4406:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEcl.g:4407:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4414:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4418:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEcl.g:4419:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEcl.g:4419:1: ( ruleDottedExpressionConstraint )
            // InternalEcl.g:4420:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEcl.g:4429:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4433:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4434:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4440:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4444:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEcl.g:4445:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEcl.g:4445:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEcl.g:4446:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4447:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_COLON) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalEcl.g:4447:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEcl.g:4456:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4460:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4461:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4468:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4472:1: ( ( () ) )
            // InternalEcl.g:4473:1: ( () )
            {
            // InternalEcl.g:4473:1: ( () )
            // InternalEcl.g:4474:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEcl.g:4475:2: ()
            // InternalEcl.g:4475:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEcl.g:4483:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4487:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEcl.g:4488:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4495:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4499:1: ( ( RULE_COLON ) )
            // InternalEcl.g:4500:1: ( RULE_COLON )
            {
            // InternalEcl.g:4500:1: ( RULE_COLON )
            // InternalEcl.g:4501:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEcl.g:4510:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4514:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:4515:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:4521:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4525:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEcl.g:4526:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEcl.g:4526:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEcl.g:4527:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEcl.g:4528:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEcl.g:4528:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEcl.g:4537:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4541:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEcl.g:4542:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4549:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleSupplementExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4553:1: ( ( ruleSupplementExpressionConstraint ) )
            // InternalEcl.g:4554:1: ( ruleSupplementExpressionConstraint )
            {
            // InternalEcl.g:4554:1: ( ruleSupplementExpressionConstraint )
            // InternalEcl.g:4555:2: ruleSupplementExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getSupplementExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSupplementExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getSupplementExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEcl.g:4564:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4568:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4569:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4575:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4579:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:4580:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:4580:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:4581:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4582:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==RULE_DOT) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalEcl.g:4582:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEcl.g:4591:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4595:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4596:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4603:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4607:1: ( ( () ) )
            // InternalEcl.g:4608:1: ( () )
            {
            // InternalEcl.g:4608:1: ( () )
            // InternalEcl.g:4609:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEcl.g:4610:2: ()
            // InternalEcl.g:4610:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEcl.g:4618:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4622:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEcl.g:4623:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4630:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4634:1: ( ( RULE_DOT ) )
            // InternalEcl.g:4635:1: ( RULE_DOT )
            {
            // InternalEcl.g:4635:1: ( RULE_DOT )
            // InternalEcl.g:4636:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEcl.g:4645:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4649:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEcl.g:4650:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEcl.g:4656:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4660:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEcl.g:4661:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEcl.g:4661:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEcl.g:4662:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEcl.g:4663:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEcl.g:4663:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__0"
    // InternalEcl.g:4672:1: rule__SupplementExpressionConstraint__Group__0 : rule__SupplementExpressionConstraint__Group__0__Impl rule__SupplementExpressionConstraint__Group__1 ;
    public final void rule__SupplementExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4676:1: ( rule__SupplementExpressionConstraint__Group__0__Impl rule__SupplementExpressionConstraint__Group__1 )
            // InternalEcl.g:4677:2: rule__SupplementExpressionConstraint__Group__0__Impl rule__SupplementExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SupplementExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__0"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4684:1: rule__SupplementExpressionConstraint__Group__0__Impl : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__SupplementExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4688:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:4689:1: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:4689:1: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:4690:2: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__1"
    // InternalEcl.g:4699:1: rule__SupplementExpressionConstraint__Group__1 : rule__SupplementExpressionConstraint__Group__1__Impl ;
    public final void rule__SupplementExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4703:1: ( rule__SupplementExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4704:2: rule__SupplementExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__1"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4710:1: rule__SupplementExpressionConstraint__Group__1__Impl : ( ( rule__SupplementExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__SupplementExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4714:1: ( ( ( rule__SupplementExpressionConstraint__Group_1__0 )? ) )
            // InternalEcl.g:4715:1: ( ( rule__SupplementExpressionConstraint__Group_1__0 )? )
            {
            // InternalEcl.g:4715:1: ( ( rule__SupplementExpressionConstraint__Group_1__0 )? )
            // InternalEcl.g:4716:2: ( rule__SupplementExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4717:2: ( rule__SupplementExpressionConstraint__Group_1__0 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_DOUBLE_CURLY_OPEN) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalEcl.g:4717:3: rule__SupplementExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__SupplementExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__0"
    // InternalEcl.g:4726:1: rule__SupplementExpressionConstraint__Group_1__0 : rule__SupplementExpressionConstraint__Group_1__0__Impl rule__SupplementExpressionConstraint__Group_1__1 ;
    public final void rule__SupplementExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4730:1: ( rule__SupplementExpressionConstraint__Group_1__0__Impl rule__SupplementExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4731:2: rule__SupplementExpressionConstraint__Group_1__0__Impl rule__SupplementExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__SupplementExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4738:1: rule__SupplementExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__SupplementExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4742:1: ( ( () ) )
            // InternalEcl.g:4743:1: ( () )
            {
            // InternalEcl.g:4743:1: ( () )
            // InternalEcl.g:4744:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEcl.g:4745:2: ()
            // InternalEcl.g:4745:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__1"
    // InternalEcl.g:4753:1: rule__SupplementExpressionConstraint__Group_1__1 : rule__SupplementExpressionConstraint__Group_1__1__Impl ;
    public final void rule__SupplementExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4757:1: ( rule__SupplementExpressionConstraint__Group_1__1__Impl )
            // InternalEcl.g:4758:2: rule__SupplementExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__SupplementExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4764:1: rule__SupplementExpressionConstraint__Group_1__1__Impl : ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) ) ;
    public final void rule__SupplementExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4768:1: ( ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) ) )
            // InternalEcl.g:4769:1: ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) )
            {
            // InternalEcl.g:4769:1: ( ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 ) )
            // InternalEcl.g:4770:2: ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementAssignment_1_1()); 
            }
            // InternalEcl.g:4771:2: ( rule__SupplementExpressionConstraint__SupplementAssignment_1_1 )
            // InternalEcl.g:4771:3: rule__SupplementExpressionConstraint__SupplementAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SupplementExpressionConstraint__SupplementAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0"
    // InternalEcl.g:4780:1: rule__FilteredExpressionConstraint__Group__0 : rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 ;
    public final void rule__FilteredExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4784:1: ( rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 )
            // InternalEcl.g:4785:2: rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__FilteredExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0__Impl"
    // InternalEcl.g:4792:1: rule__FilteredExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__FilteredExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4796:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEcl.g:4797:1: ( ruleSubExpressionConstraint )
            {
            // InternalEcl.g:4797:1: ( ruleSubExpressionConstraint )
            // InternalEcl.g:4798:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1"
    // InternalEcl.g:4807:1: rule__FilteredExpressionConstraint__Group__1 : rule__FilteredExpressionConstraint__Group__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4811:1: ( rule__FilteredExpressionConstraint__Group__1__Impl )
            // InternalEcl.g:4812:2: rule__FilteredExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1__Impl"
    // InternalEcl.g:4818:1: rule__FilteredExpressionConstraint__Group__1__Impl : ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__FilteredExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4822:1: ( ( ( rule__FilteredExpressionConstraint__Group_1__0 )* ) )
            // InternalEcl.g:4823:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            {
            // InternalEcl.g:4823:1: ( ( rule__FilteredExpressionConstraint__Group_1__0 )* )
            // InternalEcl.g:4824:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEcl.g:4825:2: ( rule__FilteredExpressionConstraint__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==RULE_DOUBLE_CURLY_OPEN) ) {
                    int LA51_2 = input.LA(2);

                    if ( (LA51_2==RULE_CONJUNCTION_KEYWORD||(LA51_2>=RULE_CONCEPT_SHORT_KEYWORD && LA51_2<=RULE_KEYWORD)||LA51_2==RULE_WILDCARD||(LA51_2>=RULE_TRUE_KEYWORD && LA51_2<=RULE_MEMBER_SHORT_KEYWORD)||LA51_2==RULE_ROUND_OPEN) ) {
                        alt51=1;
                    }


                }


                switch (alt51) {
            	case 1 :
            	    // InternalEcl.g:4825:3: rule__FilteredExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_16);
            	    rule__FilteredExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0"
    // InternalEcl.g:4834:1: rule__FilteredExpressionConstraint__Group_1__0 : rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 ;
    public final void rule__FilteredExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4838:1: ( rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1 )
            // InternalEcl.g:4839:2: rule__FilteredExpressionConstraint__Group_1__0__Impl rule__FilteredExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__FilteredExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__0__Impl"
    // InternalEcl.g:4846:1: rule__FilteredExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4850:1: ( ( () ) )
            // InternalEcl.g:4851:1: ( () )
            {
            // InternalEcl.g:4851:1: ( () )
            // InternalEcl.g:4852:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEcl.g:4853:2: ()
            // InternalEcl.g:4853:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilteredExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1"
    // InternalEcl.g:4861:1: rule__FilteredExpressionConstraint__Group_1__1 : rule__FilteredExpressionConstraint__Group_1__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4865:1: ( rule__FilteredExpressionConstraint__Group_1__1__Impl )
            // InternalEcl.g:4866:2: rule__FilteredExpressionConstraint__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group_1__1__Impl"
    // InternalEcl.g:4872:1: rule__FilteredExpressionConstraint__Group_1__1__Impl : ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) ;
    public final void rule__FilteredExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4876:1: ( ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) ) )
            // InternalEcl.g:4877:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            {
            // InternalEcl.g:4877:1: ( ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 ) )
            // InternalEcl.g:4878:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }
            // InternalEcl.g:4879:2: ( rule__FilteredExpressionConstraint__FilterAssignment_1_1 )
            // InternalEcl.g:4879:3: rule__FilteredExpressionConstraint__FilterAssignment_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__FilterAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEcl.g:4888:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4892:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEcl.g:4893:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEcl.g:4900:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4904:1: ( ( RULE_LT_EM ) )
            // InternalEcl.g:4905:1: ( RULE_LT_EM )
            {
            // InternalEcl.g:4905:1: ( RULE_LT_EM )
            // InternalEcl.g:4906:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEcl.g:4915:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4919:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEcl.g:4920:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEcl.g:4926:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4930:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4931:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4931:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4932:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4933:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEcl.g:4933:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEcl.g:4942:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4946:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEcl.g:4947:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEcl.g:4954:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4958:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEcl.g:4959:1: ( RULE_DBL_LT_EM )
            {
            // InternalEcl.g:4959:1: ( RULE_DBL_LT_EM )
            // InternalEcl.g:4960:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEcl.g:4969:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4973:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEcl.g:4974:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEcl.g:4980:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:4984:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:4985:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:4985:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:4986:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:4987:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:4987:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEcl.g:4996:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5000:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEcl.g:5001:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEcl.g:5008:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5012:1: ( ( RULE_LT ) )
            // InternalEcl.g:5013:1: ( RULE_LT )
            {
            // InternalEcl.g:5013:1: ( RULE_LT )
            // InternalEcl.g:5014:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEcl.g:5023:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5027:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEcl.g:5028:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEcl.g:5034:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5038:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:5039:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:5039:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:5040:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:5041:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEcl.g:5041:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEcl.g:5050:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5054:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEcl.g:5055:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEcl.g:5062:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5066:1: ( ( RULE_DBL_LT ) )
            // InternalEcl.g:5067:1: ( RULE_DBL_LT )
            {
            // InternalEcl.g:5067:1: ( RULE_DBL_LT )
            // InternalEcl.g:5068:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEcl.g:5077:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5081:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEcl.g:5082:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEcl.g:5088:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5092:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:5093:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:5093:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:5094:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:5095:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:5095:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEcl.g:5104:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5108:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEcl.g:5109:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEcl.g:5116:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5120:1: ( ( RULE_GT_EM ) )
            // InternalEcl.g:5121:1: ( RULE_GT_EM )
            {
            // InternalEcl.g:5121:1: ( RULE_GT_EM )
            // InternalEcl.g:5122:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEcl.g:5131:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5135:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEcl.g:5136:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEcl.g:5142:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5146:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:5147:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:5147:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:5148:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:5149:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEcl.g:5149:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEcl.g:5158:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5162:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEcl.g:5163:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEcl.g:5170:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5174:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEcl.g:5175:1: ( RULE_DBL_GT_EM )
            {
            // InternalEcl.g:5175:1: ( RULE_DBL_GT_EM )
            // InternalEcl.g:5176:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEcl.g:5185:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5189:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEcl.g:5190:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEcl.g:5196:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5200:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:5201:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:5201:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:5202:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:5203:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:5203:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEcl.g:5212:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5216:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEcl.g:5217:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEcl.g:5224:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5228:1: ( ( RULE_GT ) )
            // InternalEcl.g:5229:1: ( RULE_GT )
            {
            // InternalEcl.g:5229:1: ( RULE_GT )
            // InternalEcl.g:5230:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEcl.g:5239:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5243:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEcl.g:5244:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEcl.g:5250:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5254:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:5255:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:5255:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:5256:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:5257:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEcl.g:5257:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEcl.g:5266:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5270:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEcl.g:5271:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEcl.g:5278:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5282:1: ( ( RULE_DBL_GT ) )
            // InternalEcl.g:5283:1: ( RULE_DBL_GT )
            {
            // InternalEcl.g:5283:1: ( RULE_DBL_GT )
            // InternalEcl.g:5284:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEcl.g:5293:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5297:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEcl.g:5298:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEcl.g:5304:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5308:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEcl.g:5309:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEcl.g:5309:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEcl.g:5310:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEcl.g:5311:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEcl.g:5311:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEcl.g:5320:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5324:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEcl.g:5325:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEcl.g:5332:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5336:1: ( ( RULE_CARET ) )
            // InternalEcl.g:5337:1: ( RULE_CARET )
            {
            // InternalEcl.g:5337:1: ( RULE_CARET )
            // InternalEcl.g:5338:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEcl.g:5347:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl rule__MemberOf__Group__2 ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5351:1: ( rule__MemberOf__Group__1__Impl rule__MemberOf__Group__2 )
            // InternalEcl.g:5352:2: rule__MemberOf__Group__1__Impl rule__MemberOf__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEcl.g:5359:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__Group_1__0 )? ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5363:1: ( ( ( rule__MemberOf__Group_1__0 )? ) )
            // InternalEcl.g:5364:1: ( ( rule__MemberOf__Group_1__0 )? )
            {
            // InternalEcl.g:5364:1: ( ( rule__MemberOf__Group_1__0 )? )
            // InternalEcl.g:5365:2: ( rule__MemberOf__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup_1()); 
            }
            // InternalEcl.g:5366:2: ( rule__MemberOf__Group_1__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_SQUARE_OPEN) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalEcl.g:5366:3: rule__MemberOf__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__MemberOf__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__2"
    // InternalEcl.g:5374:1: rule__MemberOf__Group__2 : rule__MemberOf__Group__2__Impl ;
    public final void rule__MemberOf__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5378:1: ( rule__MemberOf__Group__2__Impl )
            // InternalEcl.g:5379:2: rule__MemberOf__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__2"


    // $ANTLR start "rule__MemberOf__Group__2__Impl"
    // InternalEcl.g:5385:1: rule__MemberOf__Group__2__Impl : ( ( rule__MemberOf__ConstraintAssignment_2 ) ) ;
    public final void rule__MemberOf__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5389:1: ( ( ( rule__MemberOf__ConstraintAssignment_2 ) ) )
            // InternalEcl.g:5390:1: ( ( rule__MemberOf__ConstraintAssignment_2 ) )
            {
            // InternalEcl.g:5390:1: ( ( rule__MemberOf__ConstraintAssignment_2 ) )
            // InternalEcl.g:5391:2: ( rule__MemberOf__ConstraintAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_2()); 
            }
            // InternalEcl.g:5392:2: ( rule__MemberOf__ConstraintAssignment_2 )
            // InternalEcl.g:5392:3: rule__MemberOf__ConstraintAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__2__Impl"


    // $ANTLR start "rule__MemberOf__Group_1__0"
    // InternalEcl.g:5401:1: rule__MemberOf__Group_1__0 : rule__MemberOf__Group_1__0__Impl rule__MemberOf__Group_1__1 ;
    public final void rule__MemberOf__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5405:1: ( rule__MemberOf__Group_1__0__Impl rule__MemberOf__Group_1__1 )
            // InternalEcl.g:5406:2: rule__MemberOf__Group_1__0__Impl rule__MemberOf__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__MemberOf__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__0"


    // $ANTLR start "rule__MemberOf__Group_1__0__Impl"
    // InternalEcl.g:5413:1: rule__MemberOf__Group_1__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__MemberOf__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5417:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEcl.g:5418:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEcl.g:5418:1: ( RULE_SQUARE_OPEN )
            // InternalEcl.g:5419:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getSQUARE_OPENTerminalRuleCall_1_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getSQUARE_OPENTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__0__Impl"


    // $ANTLR start "rule__MemberOf__Group_1__1"
    // InternalEcl.g:5428:1: rule__MemberOf__Group_1__1 : rule__MemberOf__Group_1__1__Impl rule__MemberOf__Group_1__2 ;
    public final void rule__MemberOf__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5432:1: ( rule__MemberOf__Group_1__1__Impl rule__MemberOf__Group_1__2 )
            // InternalEcl.g:5433:2: rule__MemberOf__Group_1__1__Impl rule__MemberOf__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__MemberOf__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__1"


    // $ANTLR start "rule__MemberOf__Group_1__1__Impl"
    // InternalEcl.g:5440:1: rule__MemberOf__Group_1__1__Impl : ( ( rule__MemberOf__Group_1_1__0 ) ) ;
    public final void rule__MemberOf__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5444:1: ( ( ( rule__MemberOf__Group_1_1__0 ) ) )
            // InternalEcl.g:5445:1: ( ( rule__MemberOf__Group_1_1__0 ) )
            {
            // InternalEcl.g:5445:1: ( ( rule__MemberOf__Group_1_1__0 ) )
            // InternalEcl.g:5446:2: ( rule__MemberOf__Group_1_1__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup_1_1()); 
            }
            // InternalEcl.g:5447:2: ( rule__MemberOf__Group_1_1__0 )
            // InternalEcl.g:5447:3: rule__MemberOf__Group_1_1__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__1__Impl"


    // $ANTLR start "rule__MemberOf__Group_1__2"
    // InternalEcl.g:5455:1: rule__MemberOf__Group_1__2 : rule__MemberOf__Group_1__2__Impl ;
    public final void rule__MemberOf__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5459:1: ( rule__MemberOf__Group_1__2__Impl )
            // InternalEcl.g:5460:2: rule__MemberOf__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__2"


    // $ANTLR start "rule__MemberOf__Group_1__2__Impl"
    // InternalEcl.g:5466:1: rule__MemberOf__Group_1__2__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__MemberOf__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5470:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEcl.g:5471:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEcl.g:5471:1: ( RULE_SQUARE_CLOSE )
            // InternalEcl.g:5472:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getSQUARE_CLOSETerminalRuleCall_1_2()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getSQUARE_CLOSETerminalRuleCall_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1__2__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1__0"
    // InternalEcl.g:5482:1: rule__MemberOf__Group_1_1__0 : rule__MemberOf__Group_1_1__0__Impl rule__MemberOf__Group_1_1__1 ;
    public final void rule__MemberOf__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5486:1: ( rule__MemberOf__Group_1_1__0__Impl rule__MemberOf__Group_1_1__1 )
            // InternalEcl.g:5487:2: rule__MemberOf__Group_1_1__0__Impl rule__MemberOf__Group_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__MemberOf__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__0"


    // $ANTLR start "rule__MemberOf__Group_1_1__0__Impl"
    // InternalEcl.g:5494:1: rule__MemberOf__Group_1_1__0__Impl : ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) ) ;
    public final void rule__MemberOf__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5498:1: ( ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) ) )
            // InternalEcl.g:5499:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) )
            {
            // InternalEcl.g:5499:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 ) )
            // InternalEcl.g:5500:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_0()); 
            }
            // InternalEcl.g:5501:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_0 )
            // InternalEcl.g:5501:3: rule__MemberOf__RefsetFieldsAssignment_1_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__RefsetFieldsAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__0__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1__1"
    // InternalEcl.g:5509:1: rule__MemberOf__Group_1_1__1 : rule__MemberOf__Group_1_1__1__Impl ;
    public final void rule__MemberOf__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5513:1: ( rule__MemberOf__Group_1_1__1__Impl )
            // InternalEcl.g:5514:2: rule__MemberOf__Group_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__1"


    // $ANTLR start "rule__MemberOf__Group_1_1__1__Impl"
    // InternalEcl.g:5520:1: rule__MemberOf__Group_1_1__1__Impl : ( ( rule__MemberOf__Group_1_1_1__0 )* ) ;
    public final void rule__MemberOf__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5524:1: ( ( ( rule__MemberOf__Group_1_1_1__0 )* ) )
            // InternalEcl.g:5525:1: ( ( rule__MemberOf__Group_1_1_1__0 )* )
            {
            // InternalEcl.g:5525:1: ( ( rule__MemberOf__Group_1_1_1__0 )* )
            // InternalEcl.g:5526:2: ( rule__MemberOf__Group_1_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup_1_1_1()); 
            }
            // InternalEcl.g:5527:2: ( rule__MemberOf__Group_1_1_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==RULE_COMMA) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalEcl.g:5527:3: rule__MemberOf__Group_1_1_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_21);
            	    rule__MemberOf__Group_1_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1__1__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__0"
    // InternalEcl.g:5536:1: rule__MemberOf__Group_1_1_1__0 : rule__MemberOf__Group_1_1_1__0__Impl rule__MemberOf__Group_1_1_1__1 ;
    public final void rule__MemberOf__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5540:1: ( rule__MemberOf__Group_1_1_1__0__Impl rule__MemberOf__Group_1_1_1__1 )
            // InternalEcl.g:5541:2: rule__MemberOf__Group_1_1_1__0__Impl rule__MemberOf__Group_1_1_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__MemberOf__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__0"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__0__Impl"
    // InternalEcl.g:5548:1: rule__MemberOf__Group_1_1_1__0__Impl : ( RULE_COMMA ) ;
    public final void rule__MemberOf__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5552:1: ( ( RULE_COMMA ) )
            // InternalEcl.g:5553:1: ( RULE_COMMA )
            {
            // InternalEcl.g:5553:1: ( RULE_COMMA )
            // InternalEcl.g:5554:2: RULE_COMMA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCOMMATerminalRuleCall_1_1_1_0()); 
            }
            match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCOMMATerminalRuleCall_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__1"
    // InternalEcl.g:5563:1: rule__MemberOf__Group_1_1_1__1 : rule__MemberOf__Group_1_1_1__1__Impl ;
    public final void rule__MemberOf__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5567:1: ( rule__MemberOf__Group_1_1_1__1__Impl )
            // InternalEcl.g:5568:2: rule__MemberOf__Group_1_1_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__1"


    // $ANTLR start "rule__MemberOf__Group_1_1_1__1__Impl"
    // InternalEcl.g:5574:1: rule__MemberOf__Group_1_1_1__1__Impl : ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) ) ;
    public final void rule__MemberOf__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5578:1: ( ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) ) )
            // InternalEcl.g:5579:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) )
            {
            // InternalEcl.g:5579:1: ( ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 ) )
            // InternalEcl.g:5580:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_1_1()); 
            }
            // InternalEcl.g:5581:2: ( rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 )
            // InternalEcl.g:5581:3: rule__MemberOf__RefsetFieldsAssignment_1_1_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__RefsetFieldsAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEcl.g:5590:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5594:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEcl.g:5595:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEcl.g:5602:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5606:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEcl.g:5607:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEcl.g:5607:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEcl.g:5608:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEcl.g:5609:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEcl.g:5609:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEcl.g:5617:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5621:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEcl.g:5622:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEcl.g:5628:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5632:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEcl.g:5633:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEcl.g:5633:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEcl.g:5634:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEcl.g:5635:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_PIPE_DELIMITED_STRING) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalEcl.g:5635:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEcl.g:5644:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5648:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEcl.g:5649:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEcl.g:5656:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5660:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:5661:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:5661:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:5662:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEcl.g:5671:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5675:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEcl.g:5676:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEcl.g:5683:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5687:1: ( ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) ) )
            // InternalEcl.g:5688:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            {
            // InternalEcl.g:5688:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* ) )
            // InternalEcl.g:5689:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            {
            // InternalEcl.g:5689:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEcl.g:5690:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEcl.g:5691:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEcl.g:5691:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }

            // InternalEcl.g:5694:2: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )* )
            // InternalEcl.g:5695:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEcl.g:5696:3: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_DIGIT||(LA55_0>=RULE_ALPHA && LA55_0<=RULE_KEYWORD)) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalEcl.g:5696:4: rule__EclConceptReferenceSet__ConceptsAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEcl.g:5705:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5709:1: ( rule__EclConceptReferenceSet__Group__2__Impl )
            // InternalEcl.g:5710:2: rule__EclConceptReferenceSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEcl.g:5716:1: rule__EclConceptReferenceSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5720:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:5721:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:5721:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:5722:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEcl.g:5732:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5736:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEcl.g:5737:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEcl.g:5744:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5748:1: ( ( RULE_WILDCARD ) )
            // InternalEcl.g:5749:1: ( RULE_WILDCARD )
            {
            // InternalEcl.g:5749:1: ( RULE_WILDCARD )
            // InternalEcl.g:5750:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEcl.g:5759:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5763:1: ( rule__Any__Group__1__Impl )
            // InternalEcl.g:5764:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEcl.g:5770:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5774:1: ( ( () ) )
            // InternalEcl.g:5775:1: ( () )
            {
            // InternalEcl.g:5775:1: ( () )
            // InternalEcl.g:5776:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEcl.g:5777:2: ()
            // InternalEcl.g:5777:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEcl.g:5786:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5790:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEcl.g:5791:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEcl.g:5798:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5802:1: ( ( ruleAndRefinement ) )
            // InternalEcl.g:5803:1: ( ruleAndRefinement )
            {
            // InternalEcl.g:5803:1: ( ruleAndRefinement )
            // InternalEcl.g:5804:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEcl.g:5813:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5817:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEcl.g:5818:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEcl.g:5824:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5828:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEcl.g:5829:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEcl.g:5829:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEcl.g:5830:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEcl.g:5831:2: ( rule__OrRefinement__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_DISJUNCTION_KEYWORD) ) {
                    int LA56_5 = input.LA(2);

                    if ( (synpred132_InternalEcl()) ) {
                        alt56=1;
                    }


                }


                switch (alt56) {
            	case 1 :
            	    // InternalEcl.g:5831:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEcl.g:5840:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5844:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEcl.g:5845:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEcl.g:5851:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5855:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEcl.g:5856:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEcl.g:5856:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEcl.g:5857:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEcl.g:5858:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEcl.g:5858:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEcl.g:5867:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5871:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEcl.g:5872:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEcl.g:5879:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5883:1: ( ( () ) )
            // InternalEcl.g:5884:1: ( () )
            {
            // InternalEcl.g:5884:1: ( () )
            // InternalEcl.g:5885:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEcl.g:5886:2: ()
            // InternalEcl.g:5886:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEcl.g:5894:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5898:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEcl.g:5899:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEcl.g:5906:1: rule__OrRefinement__Group_1_0__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5910:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:5911:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:5911:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:5912:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEcl.g:5921:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5925:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEcl.g:5926:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEcl.g:5932:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5936:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEcl.g:5937:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEcl.g:5937:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEcl.g:5938:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEcl.g:5939:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEcl.g:5939:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEcl.g:5948:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5952:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEcl.g:5953:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEcl.g:5960:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5964:1: ( ( ruleSubRefinement ) )
            // InternalEcl.g:5965:1: ( ruleSubRefinement )
            {
            // InternalEcl.g:5965:1: ( ruleSubRefinement )
            // InternalEcl.g:5966:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEcl.g:5975:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5979:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEcl.g:5980:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEcl.g:5986:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:5990:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEcl.g:5991:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEcl.g:5991:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEcl.g:5992:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEcl.g:5993:2: ( rule__AndRefinement__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_CONJUNCTION_KEYWORD) ) {
                    int LA57_4 = input.LA(2);

                    if ( (synpred133_InternalEcl()) ) {
                        alt57=1;
                    }


                }
                else if ( (LA57_0==RULE_COMMA) ) {
                    int LA57_5 = input.LA(2);

                    if ( (synpred133_InternalEcl()) ) {
                        alt57=1;
                    }


                }


                switch (alt57) {
            	case 1 :
            	    // InternalEcl.g:5993:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEcl.g:6002:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6006:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEcl.g:6007:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEcl.g:6013:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6017:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEcl.g:6018:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEcl.g:6018:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEcl.g:6019:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEcl.g:6020:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEcl.g:6020:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEcl.g:6029:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6033:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEcl.g:6034:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEcl.g:6041:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6045:1: ( ( () ) )
            // InternalEcl.g:6046:1: ( () )
            {
            // InternalEcl.g:6046:1: ( () )
            // InternalEcl.g:6047:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEcl.g:6048:2: ()
            // InternalEcl.g:6048:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEcl.g:6056:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6060:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEcl.g:6061:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEcl.g:6068:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6072:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEcl.g:6073:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEcl.g:6073:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEcl.g:6074:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEcl.g:6075:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEcl.g:6075:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEcl.g:6083:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6087:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEcl.g:6088:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEcl.g:6094:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6098:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEcl.g:6099:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEcl.g:6099:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEcl.g:6100:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEcl.g:6101:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEcl.g:6101:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEcl.g:6110:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6114:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEcl.g:6115:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEcl.g:6122:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6126:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:6127:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:6127:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:6128:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEcl.g:6137:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6141:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEcl.g:6142:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEcl.g:6149:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6153:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEcl.g:6154:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEcl.g:6154:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEcl.g:6155:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:6156:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEcl.g:6156:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEcl.g:6164:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6168:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEcl.g:6169:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEcl.g:6175:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6179:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:6180:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:6180:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:6181:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEcl.g:6191:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6195:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEcl.g:6196:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEcl.g:6203:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6207:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEcl.g:6208:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEcl.g:6208:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEcl.g:6209:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEcl.g:6210:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==RULE_SQUARE_OPEN) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEcl.g:6210:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEcl.g:6218:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6222:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEcl.g:6223:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEcl.g:6230:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6234:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEcl.g:6235:1: ( RULE_CURLY_OPEN )
            {
            // InternalEcl.g:6235:1: ( RULE_CURLY_OPEN )
            // InternalEcl.g:6236:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEcl.g:6245:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6249:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEcl.g:6250:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEcl.g:6257:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6261:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEcl.g:6262:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEcl.g:6262:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEcl.g:6263:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEcl.g:6264:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEcl.g:6264:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEcl.g:6272:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6276:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEcl.g:6277:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEcl.g:6283:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6287:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEcl.g:6288:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEcl.g:6288:1: ( RULE_CURLY_CLOSE )
            // InternalEcl.g:6289:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEcl.g:6299:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6303:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEcl.g:6304:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEcl.g:6311:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6315:1: ( ( ruleAndAttributeSet ) )
            // InternalEcl.g:6316:1: ( ruleAndAttributeSet )
            {
            // InternalEcl.g:6316:1: ( ruleAndAttributeSet )
            // InternalEcl.g:6317:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEcl.g:6326:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6330:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEcl.g:6331:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEcl.g:6337:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6341:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEcl.g:6342:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEcl.g:6342:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEcl.g:6343:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEcl.g:6344:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalEcl.g:6344:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEcl.g:6353:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6357:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEcl.g:6358:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEcl.g:6365:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6369:1: ( ( () ) )
            // InternalEcl.g:6370:1: ( () )
            {
            // InternalEcl.g:6370:1: ( () )
            // InternalEcl.g:6371:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEcl.g:6372:2: ()
            // InternalEcl.g:6372:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEcl.g:6380:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6384:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEcl.g:6385:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEcl.g:6392:1: rule__OrAttributeSet__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6396:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:6397:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:6397:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:6398:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEcl.g:6407:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6411:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEcl.g:6412:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEcl.g:6418:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6422:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEcl.g:6423:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:6423:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEcl.g:6424:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:6425:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEcl.g:6425:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEcl.g:6434:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6438:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEcl.g:6439:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEcl.g:6446:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6450:1: ( ( ruleSubAttributeSet ) )
            // InternalEcl.g:6451:1: ( ruleSubAttributeSet )
            {
            // InternalEcl.g:6451:1: ( ruleSubAttributeSet )
            // InternalEcl.g:6452:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEcl.g:6461:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6465:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEcl.g:6466:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEcl.g:6472:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6476:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEcl.g:6477:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEcl.g:6477:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEcl.g:6478:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEcl.g:6479:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=RULE_CONJUNCTION_KEYWORD && LA60_0<=RULE_COMMA)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalEcl.g:6479:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEcl.g:6488:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6492:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEcl.g:6493:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEcl.g:6500:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6504:1: ( ( () ) )
            // InternalEcl.g:6505:1: ( () )
            {
            // InternalEcl.g:6505:1: ( () )
            // InternalEcl.g:6506:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEcl.g:6507:2: ()
            // InternalEcl.g:6507:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEcl.g:6515:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6519:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEcl.g:6520:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEcl.g:6527:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6531:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEcl.g:6532:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEcl.g:6532:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEcl.g:6533:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:6534:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEcl.g:6534:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEcl.g:6542:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6546:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEcl.g:6547:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEcl.g:6553:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6557:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEcl.g:6558:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:6558:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEcl.g:6559:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:6560:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEcl.g:6560:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEcl.g:6569:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6573:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEcl.g:6574:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEcl.g:6581:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6585:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:6586:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:6586:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:6587:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEcl.g:6596:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6600:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEcl.g:6601:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEcl.g:6608:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6612:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEcl.g:6613:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEcl.g:6613:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEcl.g:6614:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:6615:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEcl.g:6615:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEcl.g:6623:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6627:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEcl.g:6628:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEcl.g:6634:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6638:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:6639:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:6639:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:6640:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEcl.g:6650:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6654:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEcl.g:6655:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEcl.g:6662:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6666:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEcl.g:6667:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEcl.g:6667:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEcl.g:6668:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEcl.g:6669:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_SQUARE_OPEN) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalEcl.g:6669:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEcl.g:6677:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6681:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEcl.g:6682:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEcl.g:6689:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6693:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEcl.g:6694:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEcl.g:6694:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEcl.g:6695:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEcl.g:6696:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalEcl.g:6696:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEcl.g:6704:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6708:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEcl.g:6709:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEcl.g:6716:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6720:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEcl.g:6721:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEcl.g:6721:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEcl.g:6722:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEcl.g:6723:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEcl.g:6723:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEcl.g:6731:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6735:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEcl.g:6736:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEcl.g:6742:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6746:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? ) )
            // InternalEcl.g:6747:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            {
            // InternalEcl.g:6747:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 )? )
            // InternalEcl.g:6748:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEcl.g:6749:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( ((LA63_0>=RULE_EQUAL && LA63_0<=RULE_LTE)) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEcl.g:6749:3: rule__AttributeConstraint__ComparisonAssignment_3
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ComparisonAssignment_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEcl.g:6758:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6762:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEcl.g:6763:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEcl.g:6770:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6774:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEcl.g:6775:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEcl.g:6775:1: ( RULE_SQUARE_OPEN )
            // InternalEcl.g:6776:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEcl.g:6785:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6789:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEcl.g:6790:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEcl.g:6797:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6801:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEcl.g:6802:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEcl.g:6802:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEcl.g:6803:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEcl.g:6804:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEcl.g:6804:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEcl.g:6812:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6816:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEcl.g:6817:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEcl.g:6824:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6828:1: ( ( RULE_TO ) )
            // InternalEcl.g:6829:1: ( RULE_TO )
            {
            // InternalEcl.g:6829:1: ( RULE_TO )
            // InternalEcl.g:6830:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEcl.g:6839:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6843:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEcl.g:6844:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEcl.g:6851:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6855:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEcl.g:6856:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEcl.g:6856:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEcl.g:6857:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEcl.g:6858:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEcl.g:6858:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEcl.g:6866:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6870:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEcl.g:6871:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEcl.g:6877:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6881:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEcl.g:6882:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEcl.g:6882:1: ( RULE_SQUARE_CLOSE )
            // InternalEcl.g:6883:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEcl.g:6893:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6897:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEcl.g:6898:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEcl.g:6905:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6909:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:6910:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:6910:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEcl.g:6911:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6912:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEcl.g:6912:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEcl.g:6920:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6924:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEcl.g:6925:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEcl.g:6931:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6935:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEcl.g:6936:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEcl.g:6936:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEcl.g:6937:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEcl.g:6938:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEcl.g:6938:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEcl.g:6947:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6951:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEcl.g:6952:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEcl.g:6959:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6963:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:6964:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:6964:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:6965:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:6966:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEcl.g:6966:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEcl.g:6974:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6978:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEcl.g:6979:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEcl.g:6985:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:6989:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEcl.g:6990:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEcl.g:6990:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEcl.g:6991:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEcl.g:6992:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEcl.g:6992:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEcl.g:7001:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7005:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEcl.g:7006:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEcl.g:7013:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7017:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:7018:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:7018:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:7019:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:7020:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEcl.g:7020:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEcl.g:7028:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7032:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEcl.g:7033:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEcl.g:7039:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7043:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEcl.g:7044:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEcl.g:7044:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEcl.g:7045:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEcl.g:7046:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEcl.g:7046:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEcl.g:7055:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7059:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEcl.g:7060:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEcl.g:7067:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7071:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:7072:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:7072:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:7073:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:7074:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEcl.g:7074:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEcl.g:7082:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7086:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEcl.g:7087:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEcl.g:7094:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7098:1: ( ( RULE_HASH ) )
            // InternalEcl.g:7099:1: ( RULE_HASH )
            {
            // InternalEcl.g:7099:1: ( RULE_HASH )
            // InternalEcl.g:7100:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEcl.g:7109:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7113:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEcl.g:7114:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEcl.g:7120:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7124:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEcl.g:7125:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEcl.g:7125:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEcl.g:7126:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEcl.g:7127:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEcl.g:7127:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEcl.g:7136:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7140:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEcl.g:7141:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEcl.g:7148:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7152:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEcl.g:7153:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEcl.g:7153:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEcl.g:7154:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEcl.g:7155:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEcl.g:7155:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEcl.g:7163:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7167:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEcl.g:7168:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEcl.g:7175:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7179:1: ( ( RULE_HASH ) )
            // InternalEcl.g:7180:1: ( RULE_HASH )
            {
            // InternalEcl.g:7180:1: ( RULE_HASH )
            // InternalEcl.g:7181:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEcl.g:7190:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7194:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEcl.g:7195:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEcl.g:7201:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7205:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEcl.g:7206:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEcl.g:7206:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEcl.g:7207:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEcl.g:7208:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEcl.g:7208:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEcl.g:7217:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7221:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEcl.g:7222:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEcl.g:7229:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7233:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:7234:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:7234:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:7235:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEcl.g:7244:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7248:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEcl.g:7249:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEcl.g:7256:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7260:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEcl.g:7261:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEcl.g:7261:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEcl.g:7262:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:7263:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEcl.g:7263:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEcl.g:7271:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7275:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEcl.g:7276:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEcl.g:7282:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7286:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7287:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7287:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7288:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEcl.g:7298:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7302:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEcl.g:7303:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEcl.g:7310:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7314:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEcl.g:7315:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEcl.g:7315:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEcl.g:7316:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEcl.g:7325:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7329:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEcl.g:7330:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEcl.g:7337:1: rule__FilterConstraint__Group__1__Impl : ( ( rule__FilterConstraint__DomainAssignment_1 )? ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7341:1: ( ( ( rule__FilterConstraint__DomainAssignment_1 )? ) )
            // InternalEcl.g:7342:1: ( ( rule__FilterConstraint__DomainAssignment_1 )? )
            {
            // InternalEcl.g:7342:1: ( ( rule__FilterConstraint__DomainAssignment_1 )? )
            // InternalEcl.g:7343:2: ( rule__FilterConstraint__DomainAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDomainAssignment_1()); 
            }
            // InternalEcl.g:7344:2: ( rule__FilterConstraint__DomainAssignment_1 )?
            int alt64=2;
            switch ( input.LA(1) ) {
                case RULE_CONCEPT_SHORT_KEYWORD:
                    {
                    int LA64_1 = input.LA(2);

                    if ( (LA64_1==RULE_CONJUNCTION_KEYWORD||(LA64_1>=RULE_CONCEPT_SHORT_KEYWORD && LA64_1<=RULE_KEYWORD)||LA64_1==RULE_WILDCARD||(LA64_1>=RULE_TRUE_KEYWORD && LA64_1<=RULE_MEMBER_SHORT_KEYWORD)||LA64_1==RULE_ROUND_OPEN) ) {
                        alt64=1;
                    }
                    }
                    break;
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                    {
                    int LA64_2 = input.LA(2);

                    if ( (LA64_2==RULE_CONJUNCTION_KEYWORD||(LA64_2>=RULE_CONCEPT_SHORT_KEYWORD && LA64_2<=RULE_KEYWORD)||LA64_2==RULE_WILDCARD||(LA64_2>=RULE_TRUE_KEYWORD && LA64_2<=RULE_MEMBER_SHORT_KEYWORD)||LA64_2==RULE_ROUND_OPEN) ) {
                        alt64=1;
                    }
                    }
                    break;
                case RULE_MEMBER_SHORT_KEYWORD:
                    {
                    int LA64_3 = input.LA(2);

                    if ( (LA64_3==RULE_CONJUNCTION_KEYWORD||(LA64_3>=RULE_CONCEPT_SHORT_KEYWORD && LA64_3<=RULE_KEYWORD)||LA64_3==RULE_WILDCARD||(LA64_3>=RULE_TRUE_KEYWORD && LA64_3<=RULE_MEMBER_SHORT_KEYWORD)||LA64_3==RULE_ROUND_OPEN) ) {
                        alt64=1;
                    }
                    }
                    break;
            }

            switch (alt64) {
                case 1 :
                    // InternalEcl.g:7344:3: rule__FilterConstraint__DomainAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__FilterConstraint__DomainAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDomainAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEcl.g:7352:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl rule__FilterConstraint__Group__3 ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7356:1: ( rule__FilterConstraint__Group__2__Impl rule__FilterConstraint__Group__3 )
            // InternalEcl.g:7357:2: rule__FilterConstraint__Group__2__Impl rule__FilterConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEcl.g:7364:1: rule__FilterConstraint__Group__2__Impl : ( ( rule__FilterConstraint__FilterAssignment_2 ) ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7368:1: ( ( ( rule__FilterConstraint__FilterAssignment_2 ) ) )
            // InternalEcl.g:7369:1: ( ( rule__FilterConstraint__FilterAssignment_2 ) )
            {
            // InternalEcl.g:7369:1: ( ( rule__FilterConstraint__FilterAssignment_2 ) )
            // InternalEcl.g:7370:2: ( rule__FilterConstraint__FilterAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterAssignment_2()); 
            }
            // InternalEcl.g:7371:2: ( rule__FilterConstraint__FilterAssignment_2 )
            // InternalEcl.g:7371:3: rule__FilterConstraint__FilterAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__FilterAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__3"
    // InternalEcl.g:7379:1: rule__FilterConstraint__Group__3 : rule__FilterConstraint__Group__3__Impl ;
    public final void rule__FilterConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7383:1: ( rule__FilterConstraint__Group__3__Impl )
            // InternalEcl.g:7384:2: rule__FilterConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__3"


    // $ANTLR start "rule__FilterConstraint__Group__3__Impl"
    // InternalEcl.g:7390:1: rule__FilterConstraint__Group__3__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7394:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEcl.g:7395:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEcl.g:7395:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEcl.g:7396:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__3__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEcl.g:7406:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7410:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEcl.g:7411:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEcl.g:7418:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7422:1: ( ( ruleConjunctionFilter ) )
            // InternalEcl.g:7423:1: ( ruleConjunctionFilter )
            {
            // InternalEcl.g:7423:1: ( ruleConjunctionFilter )
            // InternalEcl.g:7424:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEcl.g:7433:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7437:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEcl.g:7438:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEcl.g:7444:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7448:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEcl.g:7449:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEcl.g:7449:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEcl.g:7450:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEcl.g:7451:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==RULE_DISJUNCTION_KEYWORD) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalEcl.g:7451:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_7);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEcl.g:7460:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7464:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEcl.g:7465:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_6);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEcl.g:7472:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7476:1: ( ( () ) )
            // InternalEcl.g:7477:1: ( () )
            {
            // InternalEcl.g:7477:1: ( () )
            // InternalEcl.g:7478:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEcl.g:7479:2: ()
            // InternalEcl.g:7479:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEcl.g:7487:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7491:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEcl.g:7492:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEcl.g:7499:1: rule__DisjunctionFilter__Group_1__1__Impl : ( RULE_DISJUNCTION_KEYWORD ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7503:1: ( ( RULE_DISJUNCTION_KEYWORD ) )
            // InternalEcl.g:7504:1: ( RULE_DISJUNCTION_KEYWORD )
            {
            // InternalEcl.g:7504:1: ( RULE_DISJUNCTION_KEYWORD )
            // InternalEcl.g:7505:2: RULE_DISJUNCTION_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTION_KEYWORDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEcl.g:7514:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7518:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEcl.g:7519:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEcl.g:7525:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7529:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEcl.g:7530:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:7530:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEcl.g:7531:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:7532:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEcl.g:7532:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEcl.g:7541:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7545:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEcl.g:7546:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEcl.g:7553:1: rule__ConjunctionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7557:1: ( ( rulePropertyFilter ) )
            // InternalEcl.g:7558:1: ( rulePropertyFilter )
            {
            // InternalEcl.g:7558:1: ( rulePropertyFilter )
            // InternalEcl.g:7559:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEcl.g:7568:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7572:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEcl.g:7573:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEcl.g:7579:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7583:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEcl.g:7584:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEcl.g:7584:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEcl.g:7585:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEcl.g:7586:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=RULE_CONJUNCTION_KEYWORD && LA66_0<=RULE_COMMA)) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalEcl.g:7586:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEcl.g:7595:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7599:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEcl.g:7600:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_8);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEcl.g:7607:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7611:1: ( ( () ) )
            // InternalEcl.g:7612:1: ( () )
            {
            // InternalEcl.g:7612:1: ( () )
            // InternalEcl.g:7613:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEcl.g:7614:2: ()
            // InternalEcl.g:7614:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEcl.g:7622:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7626:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEcl.g:7627:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEcl.g:7634:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7638:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEcl.g:7639:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEcl.g:7639:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEcl.g:7640:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:7641:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEcl.g:7641:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEcl.g:7649:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7653:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEcl.g:7654:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEcl.g:7660:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7664:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEcl.g:7665:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEcl.g:7665:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEcl.g:7666:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEcl.g:7667:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEcl.g:7667:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEcl.g:7676:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7680:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEcl.g:7681:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEcl.g:7688:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7692:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:7693:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:7693:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:7694:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEcl.g:7703:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7707:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEcl.g:7708:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEcl.g:7715:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7719:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEcl.g:7720:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEcl.g:7720:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEcl.g:7721:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEcl.g:7722:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEcl.g:7722:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEcl.g:7730:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7734:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEcl.g:7735:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEcl.g:7741:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7745:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7746:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7746:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7747:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__MemberFieldFilter__Group__0"
    // InternalEcl.g:7757:1: rule__MemberFieldFilter__Group__0 : rule__MemberFieldFilter__Group__0__Impl rule__MemberFieldFilter__Group__1 ;
    public final void rule__MemberFieldFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7761:1: ( rule__MemberFieldFilter__Group__0__Impl rule__MemberFieldFilter__Group__1 )
            // InternalEcl.g:7762:2: rule__MemberFieldFilter__Group__0__Impl rule__MemberFieldFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__MemberFieldFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__0"


    // $ANTLR start "rule__MemberFieldFilter__Group__0__Impl"
    // InternalEcl.g:7769:1: rule__MemberFieldFilter__Group__0__Impl : ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) ) ;
    public final void rule__MemberFieldFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7773:1: ( ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) ) )
            // InternalEcl.g:7774:1: ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) )
            {
            // InternalEcl.g:7774:1: ( ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 ) )
            // InternalEcl.g:7775:2: ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameAssignment_0()); 
            }
            // InternalEcl.g:7776:2: ( rule__MemberFieldFilter__RefsetFieldNameAssignment_0 )
            // InternalEcl.g:7776:3: rule__MemberFieldFilter__RefsetFieldNameAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__RefsetFieldNameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__0__Impl"


    // $ANTLR start "rule__MemberFieldFilter__Group__1"
    // InternalEcl.g:7784:1: rule__MemberFieldFilter__Group__1 : rule__MemberFieldFilter__Group__1__Impl ;
    public final void rule__MemberFieldFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7788:1: ( rule__MemberFieldFilter__Group__1__Impl )
            // InternalEcl.g:7789:2: rule__MemberFieldFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__1"


    // $ANTLR start "rule__MemberFieldFilter__Group__1__Impl"
    // InternalEcl.g:7795:1: rule__MemberFieldFilter__Group__1__Impl : ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) ) ;
    public final void rule__MemberFieldFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7799:1: ( ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) ) )
            // InternalEcl.g:7800:1: ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) )
            {
            // InternalEcl.g:7800:1: ( ( rule__MemberFieldFilter__ComparisonAssignment_1 ) )
            // InternalEcl.g:7801:2: ( rule__MemberFieldFilter__ComparisonAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getComparisonAssignment_1()); 
            }
            // InternalEcl.g:7802:2: ( rule__MemberFieldFilter__ComparisonAssignment_1 )
            // InternalEcl.g:7802:3: rule__MemberFieldFilter__ComparisonAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberFieldFilter__ComparisonAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getComparisonAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__Group__1__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEcl.g:7811:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7815:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEcl.g:7816:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEcl.g:7823:1: rule__TermFilter__Group__0__Impl : ( RULE_TERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7827:1: ( ( RULE_TERM_KEYWORD ) )
            // InternalEcl.g:7828:1: ( RULE_TERM_KEYWORD )
            {
            // InternalEcl.g:7828:1: ( RULE_TERM_KEYWORD )
            // InternalEcl.g:7829:2: RULE_TERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEcl.g:7838:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl rule__TermFilter__Group__2 ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7842:1: ( rule__TermFilter__Group__1__Impl rule__TermFilter__Group__2 )
            // InternalEcl.g:7843:2: rule__TermFilter__Group__1__Impl rule__TermFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEcl.g:7850:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__OpAssignment_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7854:1: ( ( ( rule__TermFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:7855:1: ( ( rule__TermFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:7855:1: ( ( rule__TermFilter__OpAssignment_1 ) )
            // InternalEcl.g:7856:2: ( rule__TermFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:7857:2: ( rule__TermFilter__OpAssignment_1 )
            // InternalEcl.g:7857:3: rule__TermFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TermFilter__Group__2"
    // InternalEcl.g:7865:1: rule__TermFilter__Group__2 : rule__TermFilter__Group__2__Impl ;
    public final void rule__TermFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7869:1: ( rule__TermFilter__Group__2__Impl )
            // InternalEcl.g:7870:2: rule__TermFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__2"


    // $ANTLR start "rule__TermFilter__Group__2__Impl"
    // InternalEcl.g:7876:1: rule__TermFilter__Group__2__Impl : ( ( rule__TermFilter__SearchTermAssignment_2 ) ) ;
    public final void rule__TermFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7880:1: ( ( ( rule__TermFilter__SearchTermAssignment_2 ) ) )
            // InternalEcl.g:7881:1: ( ( rule__TermFilter__SearchTermAssignment_2 ) )
            {
            // InternalEcl.g:7881:1: ( ( rule__TermFilter__SearchTermAssignment_2 ) )
            // InternalEcl.g:7882:2: ( rule__TermFilter__SearchTermAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getSearchTermAssignment_2()); 
            }
            // InternalEcl.g:7883:2: ( rule__TermFilter__SearchTermAssignment_2 )
            // InternalEcl.g:7883:3: rule__TermFilter__SearchTermAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__SearchTermAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getSearchTermAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__2__Impl"


    // $ANTLR start "rule__TypedSearchTermSet__Group__0"
    // InternalEcl.g:7892:1: rule__TypedSearchTermSet__Group__0 : rule__TypedSearchTermSet__Group__0__Impl rule__TypedSearchTermSet__Group__1 ;
    public final void rule__TypedSearchTermSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7896:1: ( rule__TypedSearchTermSet__Group__0__Impl rule__TypedSearchTermSet__Group__1 )
            // InternalEcl.g:7897:2: rule__TypedSearchTermSet__Group__0__Impl rule__TypedSearchTermSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__TypedSearchTermSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__0"


    // $ANTLR start "rule__TypedSearchTermSet__Group__0__Impl"
    // InternalEcl.g:7904:1: rule__TypedSearchTermSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedSearchTermSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7908:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:7909:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:7909:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:7910:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__0__Impl"


    // $ANTLR start "rule__TypedSearchTermSet__Group__1"
    // InternalEcl.g:7919:1: rule__TypedSearchTermSet__Group__1 : rule__TypedSearchTermSet__Group__1__Impl rule__TypedSearchTermSet__Group__2 ;
    public final void rule__TypedSearchTermSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7923:1: ( rule__TypedSearchTermSet__Group__1__Impl rule__TypedSearchTermSet__Group__2 )
            // InternalEcl.g:7924:2: rule__TypedSearchTermSet__Group__1__Impl rule__TypedSearchTermSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__TypedSearchTermSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__1"


    // $ANTLR start "rule__TypedSearchTermSet__Group__1__Impl"
    // InternalEcl.g:7931:1: rule__TypedSearchTermSet__Group__1__Impl : ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) ) ;
    public final void rule__TypedSearchTermSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7935:1: ( ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) ) )
            // InternalEcl.g:7936:1: ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) )
            {
            // InternalEcl.g:7936:1: ( ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* ) )
            // InternalEcl.g:7937:2: ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) ) ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* )
            {
            // InternalEcl.g:7937:2: ( ( rule__TypedSearchTermSet__ClausesAssignment_1 ) )
            // InternalEcl.g:7938:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }
            // InternalEcl.g:7939:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )
            // InternalEcl.g:7939:4: rule__TypedSearchTermSet__ClausesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__TypedSearchTermSet__ClausesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }

            }

            // InternalEcl.g:7942:2: ( ( rule__TypedSearchTermSet__ClausesAssignment_1 )* )
            // InternalEcl.g:7943:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }
            // InternalEcl.g:7944:3: ( rule__TypedSearchTermSet__ClausesAssignment_1 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==RULE_STRING||(LA67_0>=RULE_EXACT_KEYWORD && LA67_0<=RULE_REGEX_KEYWORD)||LA67_0==RULE_WILD_KEYWORD) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalEcl.g:7944:4: rule__TypedSearchTermSet__ClausesAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_40);
            	    rule__TypedSearchTermSet__ClausesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getClausesAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__1__Impl"


    // $ANTLR start "rule__TypedSearchTermSet__Group__2"
    // InternalEcl.g:7953:1: rule__TypedSearchTermSet__Group__2 : rule__TypedSearchTermSet__Group__2__Impl ;
    public final void rule__TypedSearchTermSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7957:1: ( rule__TypedSearchTermSet__Group__2__Impl )
            // InternalEcl.g:7958:2: rule__TypedSearchTermSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__2"


    // $ANTLR start "rule__TypedSearchTermSet__Group__2__Impl"
    // InternalEcl.g:7964:1: rule__TypedSearchTermSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedSearchTermSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7968:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:7969:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:7969:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:7970:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__Group__2__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__0"
    // InternalEcl.g:7980:1: rule__TypedSearchTermClause__Group_0__0 : rule__TypedSearchTermClause__Group_0__0__Impl rule__TypedSearchTermClause__Group_0__1 ;
    public final void rule__TypedSearchTermClause__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7984:1: ( rule__TypedSearchTermClause__Group_0__0__Impl rule__TypedSearchTermClause__Group_0__1 )
            // InternalEcl.g:7985:2: rule__TypedSearchTermClause__Group_0__0__Impl rule__TypedSearchTermClause__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__TypedSearchTermClause__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__0"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__0__Impl"
    // InternalEcl.g:7992:1: rule__TypedSearchTermClause__Group_0__0__Impl : ( ( rule__TypedSearchTermClause__Group_0_0__0 )? ) ;
    public final void rule__TypedSearchTermClause__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:7996:1: ( ( ( rule__TypedSearchTermClause__Group_0_0__0 )? ) )
            // InternalEcl.g:7997:1: ( ( rule__TypedSearchTermClause__Group_0_0__0 )? )
            {
            // InternalEcl.g:7997:1: ( ( rule__TypedSearchTermClause__Group_0_0__0 )? )
            // InternalEcl.g:7998:2: ( rule__TypedSearchTermClause__Group_0_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0_0()); 
            }
            // InternalEcl.g:7999:2: ( rule__TypedSearchTermClause__Group_0_0__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( ((LA68_0>=RULE_EXACT_KEYWORD && LA68_0<=RULE_MATCH_KEYWORD)||LA68_0==RULE_WILD_KEYWORD) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalEcl.g:7999:3: rule__TypedSearchTermClause__Group_0_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedSearchTermClause__Group_0_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getGroup_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__0__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__1"
    // InternalEcl.g:8007:1: rule__TypedSearchTermClause__Group_0__1 : rule__TypedSearchTermClause__Group_0__1__Impl ;
    public final void rule__TypedSearchTermClause__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8011:1: ( rule__TypedSearchTermClause__Group_0__1__Impl )
            // InternalEcl.g:8012:2: rule__TypedSearchTermClause__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__1"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0__1__Impl"
    // InternalEcl.g:8018:1: rule__TypedSearchTermClause__Group_0__1__Impl : ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) ) ;
    public final void rule__TypedSearchTermClause__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8022:1: ( ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) ) )
            // InternalEcl.g:8023:1: ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) )
            {
            // InternalEcl.g:8023:1: ( ( rule__TypedSearchTermClause__TermAssignment_0_1 ) )
            // InternalEcl.g:8024:2: ( rule__TypedSearchTermClause__TermAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_0_1()); 
            }
            // InternalEcl.g:8025:2: ( rule__TypedSearchTermClause__TermAssignment_0_1 )
            // InternalEcl.g:8025:3: rule__TypedSearchTermClause__TermAssignment_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__TermAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0__1__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__0"
    // InternalEcl.g:8034:1: rule__TypedSearchTermClause__Group_0_0__0 : rule__TypedSearchTermClause__Group_0_0__0__Impl rule__TypedSearchTermClause__Group_0_0__1 ;
    public final void rule__TypedSearchTermClause__Group_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8038:1: ( rule__TypedSearchTermClause__Group_0_0__0__Impl rule__TypedSearchTermClause__Group_0_0__1 )
            // InternalEcl.g:8039:2: rule__TypedSearchTermClause__Group_0_0__0__Impl rule__TypedSearchTermClause__Group_0_0__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__TypedSearchTermClause__Group_0_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__0"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__0__Impl"
    // InternalEcl.g:8046:1: rule__TypedSearchTermClause__Group_0_0__0__Impl : ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) ) ;
    public final void rule__TypedSearchTermClause__Group_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8050:1: ( ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) ) )
            // InternalEcl.g:8051:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) )
            {
            // InternalEcl.g:8051:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 ) )
            // InternalEcl.g:8052:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_0_0_0()); 
            }
            // InternalEcl.g:8053:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 )
            // InternalEcl.g:8053:3: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__0__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__1"
    // InternalEcl.g:8061:1: rule__TypedSearchTermClause__Group_0_0__1 : rule__TypedSearchTermClause__Group_0_0__1__Impl ;
    public final void rule__TypedSearchTermClause__Group_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8065:1: ( rule__TypedSearchTermClause__Group_0_0__1__Impl )
            // InternalEcl.g:8066:2: rule__TypedSearchTermClause__Group_0_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_0_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__1"


    // $ANTLR start "rule__TypedSearchTermClause__Group_0_0__1__Impl"
    // InternalEcl.g:8072:1: rule__TypedSearchTermClause__Group_0_0__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedSearchTermClause__Group_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8076:1: ( ( RULE_COLON ) )
            // InternalEcl.g:8077:1: ( RULE_COLON )
            {
            // InternalEcl.g:8077:1: ( RULE_COLON )
            // InternalEcl.g:8078:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_0_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_0_0__1__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__0"
    // InternalEcl.g:8088:1: rule__TypedSearchTermClause__Group_1__0 : rule__TypedSearchTermClause__Group_1__0__Impl rule__TypedSearchTermClause__Group_1__1 ;
    public final void rule__TypedSearchTermClause__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8092:1: ( rule__TypedSearchTermClause__Group_1__0__Impl rule__TypedSearchTermClause__Group_1__1 )
            // InternalEcl.g:8093:2: rule__TypedSearchTermClause__Group_1__0__Impl rule__TypedSearchTermClause__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__TypedSearchTermClause__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__0"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__0__Impl"
    // InternalEcl.g:8100:1: rule__TypedSearchTermClause__Group_1__0__Impl : ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) ) ;
    public final void rule__TypedSearchTermClause__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8104:1: ( ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) ) )
            // InternalEcl.g:8105:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) )
            {
            // InternalEcl.g:8105:1: ( ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 ) )
            // InternalEcl.g:8106:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_1_0()); 
            }
            // InternalEcl.g:8107:2: ( rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 )
            // InternalEcl.g:8107:3: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__0__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__1"
    // InternalEcl.g:8115:1: rule__TypedSearchTermClause__Group_1__1 : rule__TypedSearchTermClause__Group_1__1__Impl rule__TypedSearchTermClause__Group_1__2 ;
    public final void rule__TypedSearchTermClause__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8119:1: ( rule__TypedSearchTermClause__Group_1__1__Impl rule__TypedSearchTermClause__Group_1__2 )
            // InternalEcl.g:8120:2: rule__TypedSearchTermClause__Group_1__1__Impl rule__TypedSearchTermClause__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__TypedSearchTermClause__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__1"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__1__Impl"
    // InternalEcl.g:8127:1: rule__TypedSearchTermClause__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedSearchTermClause__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8131:1: ( ( RULE_COLON ) )
            // InternalEcl.g:8132:1: ( RULE_COLON )
            {
            // InternalEcl.g:8132:1: ( RULE_COLON )
            // InternalEcl.g:8133:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__1__Impl"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__2"
    // InternalEcl.g:8142:1: rule__TypedSearchTermClause__Group_1__2 : rule__TypedSearchTermClause__Group_1__2__Impl ;
    public final void rule__TypedSearchTermClause__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8146:1: ( rule__TypedSearchTermClause__Group_1__2__Impl )
            // InternalEcl.g:8147:2: rule__TypedSearchTermClause__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__2"


    // $ANTLR start "rule__TypedSearchTermClause__Group_1__2__Impl"
    // InternalEcl.g:8153:1: rule__TypedSearchTermClause__Group_1__2__Impl : ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) ) ;
    public final void rule__TypedSearchTermClause__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8157:1: ( ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) ) )
            // InternalEcl.g:8158:1: ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) )
            {
            // InternalEcl.g:8158:1: ( ( rule__TypedSearchTermClause__TermAssignment_1_2 ) )
            // InternalEcl.g:8159:2: ( rule__TypedSearchTermClause__TermAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_1_2()); 
            }
            // InternalEcl.g:8160:2: ( rule__TypedSearchTermClause__TermAssignment_1_2 )
            // InternalEcl.g:8160:3: rule__TypedSearchTermClause__TermAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedSearchTermClause__TermAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__Group_1__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__0"
    // InternalEcl.g:8169:1: rule__LanguageFilter__Group__0 : rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 ;
    public final void rule__LanguageFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8173:1: ( rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 )
            // InternalEcl.g:8174:2: rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__LanguageFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0"


    // $ANTLR start "rule__LanguageFilter__Group__0__Impl"
    // InternalEcl.g:8181:1: rule__LanguageFilter__Group__0__Impl : ( RULE_LANGUAGE_KEYWORD ) ;
    public final void rule__LanguageFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8185:1: ( ( RULE_LANGUAGE_KEYWORD ) )
            // InternalEcl.g:8186:1: ( RULE_LANGUAGE_KEYWORD )
            {
            // InternalEcl.g:8186:1: ( RULE_LANGUAGE_KEYWORD )
            // InternalEcl.g:8187:2: RULE_LANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__1"
    // InternalEcl.g:8196:1: rule__LanguageFilter__Group__1 : rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 ;
    public final void rule__LanguageFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8200:1: ( rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 )
            // InternalEcl.g:8201:2: rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__LanguageFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1"


    // $ANTLR start "rule__LanguageFilter__Group__1__Impl"
    // InternalEcl.g:8208:1: rule__LanguageFilter__Group__1__Impl : ( ( rule__LanguageFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8212:1: ( ( ( rule__LanguageFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:8213:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:8213:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            // InternalEcl.g:8214:2: ( rule__LanguageFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:8215:2: ( rule__LanguageFilter__OpAssignment_1 )
            // InternalEcl.g:8215:3: rule__LanguageFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__2"
    // InternalEcl.g:8223:1: rule__LanguageFilter__Group__2 : rule__LanguageFilter__Group__2__Impl ;
    public final void rule__LanguageFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8227:1: ( rule__LanguageFilter__Group__2__Impl )
            // InternalEcl.g:8228:2: rule__LanguageFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2"


    // $ANTLR start "rule__LanguageFilter__Group__2__Impl"
    // InternalEcl.g:8234:1: rule__LanguageFilter__Group__2__Impl : ( ( rule__LanguageFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8238:1: ( ( ( rule__LanguageFilter__Alternatives_2 ) ) )
            // InternalEcl.g:8239:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:8239:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            // InternalEcl.g:8240:2: ( rule__LanguageFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:8241:2: ( rule__LanguageFilter__Alternatives_2 )
            // InternalEcl.g:8241:3: rule__LanguageFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0"
    // InternalEcl.g:8250:1: rule__LanguageFilter__Group_2_1__0 : rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 ;
    public final void rule__LanguageFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8254:1: ( rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 )
            // InternalEcl.g:8255:2: rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__LanguageFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0__Impl"
    // InternalEcl.g:8262:1: rule__LanguageFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8266:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:8267:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:8267:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:8268:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1"
    // InternalEcl.g:8277:1: rule__LanguageFilter__Group_2_1__1 : rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 ;
    public final void rule__LanguageFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8281:1: ( rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 )
            // InternalEcl.g:8282:2: rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__LanguageFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1__Impl"
    // InternalEcl.g:8289:1: rule__LanguageFilter__Group_2_1__1__Impl : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) ;
    public final void rule__LanguageFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8293:1: ( ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:8294:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:8294:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* ) )
            // InternalEcl.g:8295:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            {
            // InternalEcl.g:8295:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEcl.g:8296:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEcl.g:8297:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEcl.g:8297:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:8300:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )* )
            // InternalEcl.g:8301:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEcl.g:8302:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==RULE_CONJUNCTION_KEYWORD||(LA69_0>=RULE_CONCEPT_SHORT_KEYWORD && LA69_0<=RULE_KEYWORD)||LA69_0==RULE_WILDCARD||(LA69_0>=RULE_TRUE_KEYWORD && LA69_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalEcl.g:8302:4: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2"
    // InternalEcl.g:8311:1: rule__LanguageFilter__Group_2_1__2 : rule__LanguageFilter__Group_2_1__2__Impl ;
    public final void rule__LanguageFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8315:1: ( rule__LanguageFilter__Group_2_1__2__Impl )
            // InternalEcl.g:8316:2: rule__LanguageFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2__Impl"
    // InternalEcl.g:8322:1: rule__LanguageFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8326:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:8327:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:8327:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:8328:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEcl.g:8338:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8342:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEcl.g:8343:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEcl.g:8350:1: rule__TypeIdFilter__Group__0__Impl : ( RULE_TYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8354:1: ( ( RULE_TYPEID_KEYWORD ) )
            // InternalEcl.g:8355:1: ( RULE_TYPEID_KEYWORD )
            {
            // InternalEcl.g:8355:1: ( RULE_TYPEID_KEYWORD )
            // InternalEcl.g:8356:2: RULE_TYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEcl.g:8365:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8369:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEcl.g:8370:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEcl.g:8377:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8381:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:8382:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:8382:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEcl.g:8383:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:8384:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEcl.g:8384:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEcl.g:8392:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8396:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEcl.g:8397:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEcl.g:8403:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8407:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEcl.g:8408:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEcl.g:8408:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEcl.g:8409:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEcl.g:8410:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEcl.g:8410:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEcl.g:8419:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8423:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEcl.g:8424:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEcl.g:8431:1: rule__TypeTokenFilter__Group__0__Impl : ( RULE_TYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8435:1: ( ( RULE_TYPE_KEYWORD ) )
            // InternalEcl.g:8436:1: ( RULE_TYPE_KEYWORD )
            {
            // InternalEcl.g:8436:1: ( RULE_TYPE_KEYWORD )
            // InternalEcl.g:8437:2: RULE_TYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEcl.g:8446:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8450:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEcl.g:8451:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEcl.g:8458:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8462:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:8463:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:8463:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEcl.g:8464:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:8465:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEcl.g:8465:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEcl.g:8473:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8477:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEcl.g:8478:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEcl.g:8484:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8488:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEcl.g:8489:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:8489:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEcl.g:8490:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:8491:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEcl.g:8491:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEcl.g:8500:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8504:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEcl.g:8505:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEcl.g:8512:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8516:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:8517:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:8517:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:8518:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEcl.g:8527:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8531:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEcl.g:8532:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEcl.g:8539:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8543:1: ( ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:8544:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:8544:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* ) )
            // InternalEcl.g:8545:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            {
            // InternalEcl.g:8545:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEcl.g:8546:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEcl.g:8547:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEcl.g:8547:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:8550:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )* )
            // InternalEcl.g:8551:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEcl.g:8552:3: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==RULE_CONJUNCTION_KEYWORD||(LA70_0>=RULE_CONCEPT_SHORT_KEYWORD && LA70_0<=RULE_KEYWORD)||LA70_0==RULE_WILDCARD||(LA70_0>=RULE_TRUE_KEYWORD && LA70_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalEcl.g:8552:4: rule__TypeTokenFilter__TokensAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEcl.g:8561:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8565:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl )
            // InternalEcl.g:8566:2: rule__TypeTokenFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEcl.g:8572:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8576:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:8577:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:8577:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:8578:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEcl.g:8588:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8592:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEcl.g:8593:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEcl.g:8600:1: rule__DialectIdFilter__Group__0__Impl : ( RULE_DIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8604:1: ( ( RULE_DIALECTID_KEYWORD ) )
            // InternalEcl.g:8605:1: ( RULE_DIALECTID_KEYWORD )
            {
            // InternalEcl.g:8605:1: ( RULE_DIALECTID_KEYWORD )
            // InternalEcl.g:8606:2: RULE_DIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEcl.g:8615:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8619:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEcl.g:8620:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEcl.g:8627:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8631:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:8632:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:8632:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEcl.g:8633:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:8634:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEcl.g:8634:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEcl.g:8642:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8646:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEcl.g:8647:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEcl.g:8653:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8657:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEcl.g:8658:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:8658:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEcl.g:8659:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:8660:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEcl.g:8660:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEcl.g:8669:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8673:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEcl.g:8674:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEcl.g:8681:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8685:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:8686:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:8686:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:8687:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEcl.g:8696:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8700:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEcl.g:8701:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEcl.g:8708:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8712:1: ( ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:8713:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:8713:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEcl.g:8714:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEcl.g:8714:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEcl.g:8715:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:8716:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEcl.g:8716:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:8719:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )* )
            // InternalEcl.g:8720:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:8721:3: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==RULE_DIGIT||(LA71_0>=RULE_ALPHA && LA71_0<=RULE_KEYWORD)||LA71_0==RULE_WILDCARD||(LA71_0>=RULE_GT && LA71_0<=RULE_LT)||(LA71_0>=RULE_LT_EM && LA71_0<=RULE_CARET)||LA71_0==RULE_ROUND_OPEN) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalEcl.g:8721:4: rule__DialectIdFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEcl.g:8730:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8734:1: ( rule__DialectIdFilter__Group_2_1__2__Impl )
            // InternalEcl.g:8735:2: rule__DialectIdFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEcl.g:8741:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8745:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:8746:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:8746:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:8747:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEcl.g:8757:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8761:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEcl.g:8762:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEcl.g:8769:1: rule__DialectAliasFilter__Group__0__Impl : ( RULE_DIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8773:1: ( ( RULE_DIALECT_KEYWORD ) )
            // InternalEcl.g:8774:1: ( RULE_DIALECT_KEYWORD )
            {
            // InternalEcl.g:8774:1: ( RULE_DIALECT_KEYWORD )
            // InternalEcl.g:8775:2: RULE_DIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEcl.g:8784:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8788:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEcl.g:8789:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEcl.g:8796:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8800:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:8801:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:8801:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEcl.g:8802:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:8803:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEcl.g:8803:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEcl.g:8811:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8815:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEcl.g:8816:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEcl.g:8822:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8826:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEcl.g:8827:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:8827:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEcl.g:8828:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:8829:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEcl.g:8829:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEcl.g:8838:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8842:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEcl.g:8843:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEcl.g:8850:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8854:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:8855:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:8855:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:8856:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEcl.g:8865:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8869:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEcl.g:8870:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEcl.g:8877:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8881:1: ( ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:8882:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:8882:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* ) )
            // InternalEcl.g:8883:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            {
            // InternalEcl.g:8883:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEcl.g:8884:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:8885:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEcl.g:8885:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:8888:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )* )
            // InternalEcl.g:8889:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEcl.g:8890:3: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=RULE_DIGIT && LA72_0<=RULE_CONJUNCTION_KEYWORD)||LA72_0==RULE_DASH||(LA72_0>=RULE_CONCEPT_SHORT_KEYWORD && LA72_0<=RULE_KEYWORD)||LA72_0==RULE_WILDCARD||(LA72_0>=RULE_TRUE_KEYWORD && LA72_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalEcl.g:8890:4: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEcl.g:8899:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8903:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl )
            // InternalEcl.g:8904:2: rule__DialectAliasFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEcl.g:8910:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8914:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:8915:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:8915:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:8916:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEcl.g:8926:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8930:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEcl.g:8931:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEcl.g:8938:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8942:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEcl.g:8943:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEcl.g:8943:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEcl.g:8944:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEcl.g:8945:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEcl.g:8945:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEcl.g:8953:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8957:1: ( rule__Dialect__Group__1__Impl )
            // InternalEcl.g:8958:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEcl.g:8964:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8968:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEcl.g:8969:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEcl.g:8969:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEcl.g:8970:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEcl.g:8971:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalEcl.g:8971:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEcl.g:8980:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8984:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEcl.g:8985:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEcl.g:8992:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:8996:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEcl.g:8997:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEcl.g:8997:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEcl.g:8998:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEcl.g:8999:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEcl.g:8999:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEcl.g:9007:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9011:1: ( rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2 )
            // InternalEcl.g:9012:2: rule__DialectAlias__Group__1__Impl rule__DialectAlias__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEcl.g:9019:1: rule__DialectAlias__Group__1__Impl : ( ( RULE_WS )* ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9023:1: ( ( ( RULE_WS )* ) )
            // InternalEcl.g:9024:1: ( ( RULE_WS )* )
            {
            // InternalEcl.g:9024:1: ( ( RULE_WS )* )
            // InternalEcl.g:9025:2: ( RULE_WS )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }
            // InternalEcl.g:9026:2: ( RULE_WS )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==RULE_WS) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalEcl.g:9026:3: RULE_WS
            	    {
            	    match(input,RULE_WS,FollowSets000.FOLLOW_48); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getWSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__2"
    // InternalEcl.g:9034:1: rule__DialectAlias__Group__2 : rule__DialectAlias__Group__2__Impl ;
    public final void rule__DialectAlias__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9038:1: ( rule__DialectAlias__Group__2__Impl )
            // InternalEcl.g:9039:2: rule__DialectAlias__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2"


    // $ANTLR start "rule__DialectAlias__Group__2__Impl"
    // InternalEcl.g:9045:1: rule__DialectAlias__Group__2__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) ;
    public final void rule__DialectAlias__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9049:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? ) )
            // InternalEcl.g:9050:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            {
            // InternalEcl.g:9050:1: ( ( rule__DialectAlias__AcceptabilityAssignment_2 )? )
            // InternalEcl.g:9051:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }
            // InternalEcl.g:9052:2: ( rule__DialectAlias__AcceptabilityAssignment_2 )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_ROUND_OPEN) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalEcl.g:9052:3: rule__DialectAlias__AcceptabilityAssignment_2
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__2__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0"
    // InternalEcl.g:9061:1: rule__AcceptabilityTokenSet__Group__0 : rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 ;
    public final void rule__AcceptabilityTokenSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9065:1: ( rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 )
            // InternalEcl.g:9066:2: rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__AcceptabilityTokenSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0__Impl"
    // InternalEcl.g:9073:1: rule__AcceptabilityTokenSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AcceptabilityTokenSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9077:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:9078:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:9078:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:9079:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1"
    // InternalEcl.g:9088:1: rule__AcceptabilityTokenSet__Group__1 : rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 ;
    public final void rule__AcceptabilityTokenSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9092:1: ( rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 )
            // InternalEcl.g:9093:2: rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__AcceptabilityTokenSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1__Impl"
    // InternalEcl.g:9100:1: rule__AcceptabilityTokenSet__Group__1__Impl : ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) ;
    public final void rule__AcceptabilityTokenSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9104:1: ( ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) ) )
            // InternalEcl.g:9105:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            {
            // InternalEcl.g:9105:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* ) )
            // InternalEcl.g:9106:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            {
            // InternalEcl.g:9106:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            // InternalEcl.g:9107:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEcl.g:9108:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            // InternalEcl.g:9108:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }

            // InternalEcl.g:9111:2: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )* )
            // InternalEcl.g:9112:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEcl.g:9113:3: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_CONJUNCTION_KEYWORD||(LA76_0>=RULE_CONCEPT_SHORT_KEYWORD && LA76_0<=RULE_KEYWORD)||LA76_0==RULE_WILDCARD||(LA76_0>=RULE_TRUE_KEYWORD && LA76_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalEcl.g:9113:4: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2"
    // InternalEcl.g:9122:1: rule__AcceptabilityTokenSet__Group__2 : rule__AcceptabilityTokenSet__Group__2__Impl ;
    public final void rule__AcceptabilityTokenSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9126:1: ( rule__AcceptabilityTokenSet__Group__2__Impl )
            // InternalEcl.g:9127:2: rule__AcceptabilityTokenSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2__Impl"
    // InternalEcl.g:9133:1: rule__AcceptabilityTokenSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AcceptabilityTokenSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9137:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:9138:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:9138:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:9139:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2__Impl"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__0"
    // InternalEcl.g:9149:1: rule__DefinitionStatusIdFilter__Group__0 : rule__DefinitionStatusIdFilter__Group__0__Impl rule__DefinitionStatusIdFilter__Group__1 ;
    public final void rule__DefinitionStatusIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9153:1: ( rule__DefinitionStatusIdFilter__Group__0__Impl rule__DefinitionStatusIdFilter__Group__1 )
            // InternalEcl.g:9154:2: rule__DefinitionStatusIdFilter__Group__0__Impl rule__DefinitionStatusIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__DefinitionStatusIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__0"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__0__Impl"
    // InternalEcl.g:9161:1: rule__DefinitionStatusIdFilter__Group__0__Impl : ( RULE_DEFINITION_STATUS_ID_KEYWORD ) ;
    public final void rule__DefinitionStatusIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9165:1: ( ( RULE_DEFINITION_STATUS_ID_KEYWORD ) )
            // InternalEcl.g:9166:1: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
            {
            // InternalEcl.g:9166:1: ( RULE_DEFINITION_STATUS_ID_KEYWORD )
            // InternalEcl.g:9167:2: RULE_DEFINITION_STATUS_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DEFINITION_STATUS_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getDEFINITION_STATUS_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__1"
    // InternalEcl.g:9176:1: rule__DefinitionStatusIdFilter__Group__1 : rule__DefinitionStatusIdFilter__Group__1__Impl rule__DefinitionStatusIdFilter__Group__2 ;
    public final void rule__DefinitionStatusIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9180:1: ( rule__DefinitionStatusIdFilter__Group__1__Impl rule__DefinitionStatusIdFilter__Group__2 )
            // InternalEcl.g:9181:2: rule__DefinitionStatusIdFilter__Group__1__Impl rule__DefinitionStatusIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DefinitionStatusIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__1"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__1__Impl"
    // InternalEcl.g:9188:1: rule__DefinitionStatusIdFilter__Group__1__Impl : ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DefinitionStatusIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9192:1: ( ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:9193:1: ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:9193:1: ( ( rule__DefinitionStatusIdFilter__OpAssignment_1 ) )
            // InternalEcl.g:9194:2: ( rule__DefinitionStatusIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:9195:2: ( rule__DefinitionStatusIdFilter__OpAssignment_1 )
            // InternalEcl.g:9195:3: rule__DefinitionStatusIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__2"
    // InternalEcl.g:9203:1: rule__DefinitionStatusIdFilter__Group__2 : rule__DefinitionStatusIdFilter__Group__2__Impl ;
    public final void rule__DefinitionStatusIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9207:1: ( rule__DefinitionStatusIdFilter__Group__2__Impl )
            // InternalEcl.g:9208:2: rule__DefinitionStatusIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__2"


    // $ANTLR start "rule__DefinitionStatusIdFilter__Group__2__Impl"
    // InternalEcl.g:9214:1: rule__DefinitionStatusIdFilter__Group__2__Impl : ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) ) ;
    public final void rule__DefinitionStatusIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9218:1: ( ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) ) )
            // InternalEcl.g:9219:1: ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) )
            {
            // InternalEcl.g:9219:1: ( ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 ) )
            // InternalEcl.g:9220:2: ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusAssignment_2()); 
            }
            // InternalEcl.g:9221:2: ( rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 )
            // InternalEcl.g:9221:3: rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__0"
    // InternalEcl.g:9230:1: rule__DefinitionStatusTokenFilter__Group__0 : rule__DefinitionStatusTokenFilter__Group__0__Impl rule__DefinitionStatusTokenFilter__Group__1 ;
    public final void rule__DefinitionStatusTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9234:1: ( rule__DefinitionStatusTokenFilter__Group__0__Impl rule__DefinitionStatusTokenFilter__Group__1 )
            // InternalEcl.g:9235:2: rule__DefinitionStatusTokenFilter__Group__0__Impl rule__DefinitionStatusTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__DefinitionStatusTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__0"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__0__Impl"
    // InternalEcl.g:9242:1: rule__DefinitionStatusTokenFilter__Group__0__Impl : ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) ;
    public final void rule__DefinitionStatusTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9246:1: ( ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD ) )
            // InternalEcl.g:9247:1: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
            {
            // InternalEcl.g:9247:1: ( RULE_DEFINITION_STATUS_TOKEN_KEYWORD )
            // InternalEcl.g:9248:2: RULE_DEFINITION_STATUS_TOKEN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DEFINITION_STATUS_TOKEN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDEFINITION_STATUS_TOKEN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__1"
    // InternalEcl.g:9257:1: rule__DefinitionStatusTokenFilter__Group__1 : rule__DefinitionStatusTokenFilter__Group__1__Impl rule__DefinitionStatusTokenFilter__Group__2 ;
    public final void rule__DefinitionStatusTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9261:1: ( rule__DefinitionStatusTokenFilter__Group__1__Impl rule__DefinitionStatusTokenFilter__Group__2 )
            // InternalEcl.g:9262:2: rule__DefinitionStatusTokenFilter__Group__1__Impl rule__DefinitionStatusTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__DefinitionStatusTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__1"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__1__Impl"
    // InternalEcl.g:9269:1: rule__DefinitionStatusTokenFilter__Group__1__Impl : ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__DefinitionStatusTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9273:1: ( ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:9274:1: ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:9274:1: ( ( rule__DefinitionStatusTokenFilter__OpAssignment_1 ) )
            // InternalEcl.g:9275:2: ( rule__DefinitionStatusTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:9276:2: ( rule__DefinitionStatusTokenFilter__OpAssignment_1 )
            // InternalEcl.g:9276:3: rule__DefinitionStatusTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__2"
    // InternalEcl.g:9284:1: rule__DefinitionStatusTokenFilter__Group__2 : rule__DefinitionStatusTokenFilter__Group__2__Impl ;
    public final void rule__DefinitionStatusTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9288:1: ( rule__DefinitionStatusTokenFilter__Group__2__Impl )
            // InternalEcl.g:9289:2: rule__DefinitionStatusTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__2"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group__2__Impl"
    // InternalEcl.g:9295:1: rule__DefinitionStatusTokenFilter__Group__2__Impl : ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) ) ;
    public final void rule__DefinitionStatusTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9299:1: ( ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) ) )
            // InternalEcl.g:9300:1: ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) )
            {
            // InternalEcl.g:9300:1: ( ( rule__DefinitionStatusTokenFilter__Alternatives_2 ) )
            // InternalEcl.g:9301:2: ( rule__DefinitionStatusTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEcl.g:9302:2: ( rule__DefinitionStatusTokenFilter__Alternatives_2 )
            // InternalEcl.g:9302:3: rule__DefinitionStatusTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__0"
    // InternalEcl.g:9311:1: rule__DefinitionStatusTokenFilter__Group_2_1__0 : rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl rule__DefinitionStatusTokenFilter__Group_2_1__1 ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9315:1: ( rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl rule__DefinitionStatusTokenFilter__Group_2_1__1 )
            // InternalEcl.g:9316:2: rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl rule__DefinitionStatusTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl"
    // InternalEcl.g:9323:1: rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9327:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEcl.g:9328:1: ( RULE_ROUND_OPEN )
            {
            // InternalEcl.g:9328:1: ( RULE_ROUND_OPEN )
            // InternalEcl.g:9329:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__1"
    // InternalEcl.g:9338:1: rule__DefinitionStatusTokenFilter__Group_2_1__1 : rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl rule__DefinitionStatusTokenFilter__Group_2_1__2 ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9342:1: ( rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl rule__DefinitionStatusTokenFilter__Group_2_1__2 )
            // InternalEcl.g:9343:2: rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl rule__DefinitionStatusTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl"
    // InternalEcl.g:9350:1: rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl : ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) ) ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9354:1: ( ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) ) )
            // InternalEcl.g:9355:1: ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) )
            {
            // InternalEcl.g:9355:1: ( ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* ) )
            // InternalEcl.g:9356:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) ) ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* )
            {
            // InternalEcl.g:9356:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 ) )
            // InternalEcl.g:9357:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }
            // InternalEcl.g:9358:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )
            // InternalEcl.g:9358:4: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }

            }

            // InternalEcl.g:9361:2: ( ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )* )
            // InternalEcl.g:9362:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }
            // InternalEcl.g:9363:3: ( rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==RULE_CONJUNCTION_KEYWORD||(LA77_0>=RULE_CONCEPT_SHORT_KEYWORD && LA77_0<=RULE_KEYWORD)||LA77_0==RULE_WILDCARD||(LA77_0>=RULE_TRUE_KEYWORD && LA77_0<=RULE_MEMBER_SHORT_KEYWORD)) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalEcl.g:9363:4: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensAssignment_2_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__2"
    // InternalEcl.g:9372:1: rule__DefinitionStatusTokenFilter__Group_2_1__2 : rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9376:1: ( rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl )
            // InternalEcl.g:9377:2: rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl"
    // InternalEcl.g:9383:1: rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9387:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEcl.g:9388:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEcl.g:9388:1: ( RULE_ROUND_CLOSE )
            // InternalEcl.g:9389:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__0"
    // InternalEcl.g:9399:1: rule__ModuleFilter__Group__0 : rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 ;
    public final void rule__ModuleFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9403:1: ( rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 )
            // InternalEcl.g:9404:2: rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__ModuleFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0"


    // $ANTLR start "rule__ModuleFilter__Group__0__Impl"
    // InternalEcl.g:9411:1: rule__ModuleFilter__Group__0__Impl : ( RULE_MODULEID_KEYWORD ) ;
    public final void rule__ModuleFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9415:1: ( ( RULE_MODULEID_KEYWORD ) )
            // InternalEcl.g:9416:1: ( RULE_MODULEID_KEYWORD )
            {
            // InternalEcl.g:9416:1: ( RULE_MODULEID_KEYWORD )
            // InternalEcl.g:9417:2: RULE_MODULEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_MODULEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__1"
    // InternalEcl.g:9426:1: rule__ModuleFilter__Group__1 : rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 ;
    public final void rule__ModuleFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9430:1: ( rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 )
            // InternalEcl.g:9431:2: rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__ModuleFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1"


    // $ANTLR start "rule__ModuleFilter__Group__1__Impl"
    // InternalEcl.g:9438:1: rule__ModuleFilter__Group__1__Impl : ( ( rule__ModuleFilter__OpAssignment_1 ) ) ;
    public final void rule__ModuleFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9442:1: ( ( ( rule__ModuleFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:9443:1: ( ( rule__ModuleFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:9443:1: ( ( rule__ModuleFilter__OpAssignment_1 ) )
            // InternalEcl.g:9444:2: ( rule__ModuleFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:9445:2: ( rule__ModuleFilter__OpAssignment_1 )
            // InternalEcl.g:9445:3: rule__ModuleFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__2"
    // InternalEcl.g:9453:1: rule__ModuleFilter__Group__2 : rule__ModuleFilter__Group__2__Impl ;
    public final void rule__ModuleFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9457:1: ( rule__ModuleFilter__Group__2__Impl )
            // InternalEcl.g:9458:2: rule__ModuleFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2"


    // $ANTLR start "rule__ModuleFilter__Group__2__Impl"
    // InternalEcl.g:9464:1: rule__ModuleFilter__Group__2__Impl : ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) ) ;
    public final void rule__ModuleFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9468:1: ( ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) ) )
            // InternalEcl.g:9469:1: ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) )
            {
            // InternalEcl.g:9469:1: ( ( rule__ModuleFilter__ModuleIdAssignment_2 ) )
            // InternalEcl.g:9470:2: ( rule__ModuleFilter__ModuleIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_2()); 
            }
            // InternalEcl.g:9471:2: ( rule__ModuleFilter__ModuleIdAssignment_2 )
            // InternalEcl.g:9471:3: rule__ModuleFilter__ModuleIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__ModuleIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0"
    // InternalEcl.g:9480:1: rule__EffectiveTimeFilter__Group__0 : rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 ;
    public final void rule__EffectiveTimeFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9484:1: ( rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1 )
            // InternalEcl.g:9485:2: rule__EffectiveTimeFilter__Group__0__Impl rule__EffectiveTimeFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__EffectiveTimeFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__0__Impl"
    // InternalEcl.g:9492:1: rule__EffectiveTimeFilter__Group__0__Impl : ( RULE_EFFECTIVE_TIME_KEYWORD ) ;
    public final void rule__EffectiveTimeFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9496:1: ( ( RULE_EFFECTIVE_TIME_KEYWORD ) )
            // InternalEcl.g:9497:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            {
            // InternalEcl.g:9497:1: ( RULE_EFFECTIVE_TIME_KEYWORD )
            // InternalEcl.g:9498:2: RULE_EFFECTIVE_TIME_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_EFFECTIVE_TIME_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEFFECTIVE_TIME_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__0__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1"
    // InternalEcl.g:9507:1: rule__EffectiveTimeFilter__Group__1 : rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 ;
    public final void rule__EffectiveTimeFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9511:1: ( rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2 )
            // InternalEcl.g:9512:2: rule__EffectiveTimeFilter__Group__1__Impl rule__EffectiveTimeFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__EffectiveTimeFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__1__Impl"
    // InternalEcl.g:9519:1: rule__EffectiveTimeFilter__Group__1__Impl : ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9523:1: ( ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:9524:1: ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:9524:1: ( ( rule__EffectiveTimeFilter__OpAssignment_1 ) )
            // InternalEcl.g:9525:2: ( rule__EffectiveTimeFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:9526:2: ( rule__EffectiveTimeFilter__OpAssignment_1 )
            // InternalEcl.g:9526:3: rule__EffectiveTimeFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__1__Impl"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2"
    // InternalEcl.g:9534:1: rule__EffectiveTimeFilter__Group__2 : rule__EffectiveTimeFilter__Group__2__Impl ;
    public final void rule__EffectiveTimeFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9538:1: ( rule__EffectiveTimeFilter__Group__2__Impl )
            // InternalEcl.g:9539:2: rule__EffectiveTimeFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2"


    // $ANTLR start "rule__EffectiveTimeFilter__Group__2__Impl"
    // InternalEcl.g:9545:1: rule__EffectiveTimeFilter__Group__2__Impl : ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) ) ;
    public final void rule__EffectiveTimeFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9549:1: ( ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) ) )
            // InternalEcl.g:9550:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) )
            {
            // InternalEcl.g:9550:1: ( ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 ) )
            // InternalEcl.g:9551:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_2()); 
            }
            // InternalEcl.g:9552:2: ( rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 )
            // InternalEcl.g:9552:3: rule__EffectiveTimeFilter__EffectiveTimeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EffectiveTimeFilter__EffectiveTimeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__0"
    // InternalEcl.g:9561:1: rule__ActiveFilter__Group__0 : rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 ;
    public final void rule__ActiveFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9565:1: ( rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 )
            // InternalEcl.g:9566:2: rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__ActiveFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0"


    // $ANTLR start "rule__ActiveFilter__Group__0__Impl"
    // InternalEcl.g:9573:1: rule__ActiveFilter__Group__0__Impl : ( RULE_ACTIVE_KEYWORD ) ;
    public final void rule__ActiveFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9577:1: ( ( RULE_ACTIVE_KEYWORD ) )
            // InternalEcl.g:9578:1: ( RULE_ACTIVE_KEYWORD )
            {
            // InternalEcl.g:9578:1: ( RULE_ACTIVE_KEYWORD )
            // InternalEcl.g:9579:2: RULE_ACTIVE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ACTIVE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__1"
    // InternalEcl.g:9588:1: rule__ActiveFilter__Group__1 : rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 ;
    public final void rule__ActiveFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9592:1: ( rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 )
            // InternalEcl.g:9593:2: rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_49);
            rule__ActiveFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1"


    // $ANTLR start "rule__ActiveFilter__Group__1__Impl"
    // InternalEcl.g:9600:1: rule__ActiveFilter__Group__1__Impl : ( ( rule__ActiveFilter__OpAssignment_1 ) ) ;
    public final void rule__ActiveFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9604:1: ( ( ( rule__ActiveFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:9605:1: ( ( rule__ActiveFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:9605:1: ( ( rule__ActiveFilter__OpAssignment_1 ) )
            // InternalEcl.g:9606:2: ( rule__ActiveFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:9607:2: ( rule__ActiveFilter__OpAssignment_1 )
            // InternalEcl.g:9607:3: rule__ActiveFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__2"
    // InternalEcl.g:9615:1: rule__ActiveFilter__Group__2 : rule__ActiveFilter__Group__2__Impl ;
    public final void rule__ActiveFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9619:1: ( rule__ActiveFilter__Group__2__Impl )
            // InternalEcl.g:9620:2: rule__ActiveFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2"


    // $ANTLR start "rule__ActiveFilter__Group__2__Impl"
    // InternalEcl.g:9626:1: rule__ActiveFilter__Group__2__Impl : ( ( rule__ActiveFilter__ActiveAssignment_2 ) ) ;
    public final void rule__ActiveFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9630:1: ( ( ( rule__ActiveFilter__ActiveAssignment_2 ) ) )
            // InternalEcl.g:9631:1: ( ( rule__ActiveFilter__ActiveAssignment_2 ) )
            {
            // InternalEcl.g:9631:1: ( ( rule__ActiveFilter__ActiveAssignment_2 ) )
            // InternalEcl.g:9632:2: ( rule__ActiveFilter__ActiveAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveAssignment_2()); 
            }
            // InternalEcl.g:9633:2: ( rule__ActiveFilter__ActiveAssignment_2 )
            // InternalEcl.g:9633:3: rule__ActiveFilter__ActiveAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__ActiveAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__0"
    // InternalEcl.g:9642:1: rule__SemanticTagFilter__Group__0 : rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 ;
    public final void rule__SemanticTagFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9646:1: ( rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1 )
            // InternalEcl.g:9647:2: rule__SemanticTagFilter__Group__0__Impl rule__SemanticTagFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__SemanticTagFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0"


    // $ANTLR start "rule__SemanticTagFilter__Group__0__Impl"
    // InternalEcl.g:9654:1: rule__SemanticTagFilter__Group__0__Impl : ( RULE_SEMANTIC_TAG_KEYWORD ) ;
    public final void rule__SemanticTagFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9658:1: ( ( RULE_SEMANTIC_TAG_KEYWORD ) )
            // InternalEcl.g:9659:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            {
            // InternalEcl.g:9659:1: ( RULE_SEMANTIC_TAG_KEYWORD )
            // InternalEcl.g:9660:2: RULE_SEMANTIC_TAG_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_SEMANTIC_TAG_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSEMANTIC_TAG_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__0__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__1"
    // InternalEcl.g:9669:1: rule__SemanticTagFilter__Group__1 : rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 ;
    public final void rule__SemanticTagFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9673:1: ( rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2 )
            // InternalEcl.g:9674:2: rule__SemanticTagFilter__Group__1__Impl rule__SemanticTagFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__SemanticTagFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1"


    // $ANTLR start "rule__SemanticTagFilter__Group__1__Impl"
    // InternalEcl.g:9681:1: rule__SemanticTagFilter__Group__1__Impl : ( ( rule__SemanticTagFilter__OpAssignment_1 ) ) ;
    public final void rule__SemanticTagFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9685:1: ( ( ( rule__SemanticTagFilter__OpAssignment_1 ) ) )
            // InternalEcl.g:9686:1: ( ( rule__SemanticTagFilter__OpAssignment_1 ) )
            {
            // InternalEcl.g:9686:1: ( ( rule__SemanticTagFilter__OpAssignment_1 ) )
            // InternalEcl.g:9687:2: ( rule__SemanticTagFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_1()); 
            }
            // InternalEcl.g:9688:2: ( rule__SemanticTagFilter__OpAssignment_1 )
            // InternalEcl.g:9688:3: rule__SemanticTagFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__1__Impl"


    // $ANTLR start "rule__SemanticTagFilter__Group__2"
    // InternalEcl.g:9696:1: rule__SemanticTagFilter__Group__2 : rule__SemanticTagFilter__Group__2__Impl ;
    public final void rule__SemanticTagFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9700:1: ( rule__SemanticTagFilter__Group__2__Impl )
            // InternalEcl.g:9701:2: rule__SemanticTagFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2"


    // $ANTLR start "rule__SemanticTagFilter__Group__2__Impl"
    // InternalEcl.g:9707:1: rule__SemanticTagFilter__Group__2__Impl : ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) ) ;
    public final void rule__SemanticTagFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9711:1: ( ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) ) )
            // InternalEcl.g:9712:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) )
            {
            // InternalEcl.g:9712:1: ( ( rule__SemanticTagFilter__SemanticTagAssignment_2 ) )
            // InternalEcl.g:9713:2: ( rule__SemanticTagFilter__SemanticTagAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_2()); 
            }
            // InternalEcl.g:9714:2: ( rule__SemanticTagFilter__SemanticTagAssignment_2 )
            // InternalEcl.g:9714:3: rule__SemanticTagFilter__SemanticTagAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SemanticTagFilter__SemanticTagAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__Group__2__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__0"
    // InternalEcl.g:9723:1: rule__PreferredInFilter__Group__0 : rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 ;
    public final void rule__PreferredInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9727:1: ( rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 )
            // InternalEcl.g:9728:2: rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__PreferredInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0"


    // $ANTLR start "rule__PreferredInFilter__Group__0__Impl"
    // InternalEcl.g:9735:1: rule__PreferredInFilter__Group__0__Impl : ( RULE_PREFERRED_IN_KEYWORD ) ;
    public final void rule__PreferredInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9739:1: ( ( RULE_PREFERRED_IN_KEYWORD ) )
            // InternalEcl.g:9740:1: ( RULE_PREFERRED_IN_KEYWORD )
            {
            // InternalEcl.g:9740:1: ( RULE_PREFERRED_IN_KEYWORD )
            // InternalEcl.g:9741:2: RULE_PREFERRED_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_PREFERRED_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__1"
    // InternalEcl.g:9750:1: rule__PreferredInFilter__Group__1 : rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 ;
    public final void rule__PreferredInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9754:1: ( rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 )
            // InternalEcl.g:9755:2: rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__PreferredInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1"


    // $ANTLR start "rule__PreferredInFilter__Group__1__Impl"
    // InternalEcl.g:9762:1: rule__PreferredInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__PreferredInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9766:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:9767:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:9767:1: ( RULE_EQUAL )
            // InternalEcl.g:9768:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__2"
    // InternalEcl.g:9777:1: rule__PreferredInFilter__Group__2 : rule__PreferredInFilter__Group__2__Impl ;
    public final void rule__PreferredInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9781:1: ( rule__PreferredInFilter__Group__2__Impl )
            // InternalEcl.g:9782:2: rule__PreferredInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2"


    // $ANTLR start "rule__PreferredInFilter__Group__2__Impl"
    // InternalEcl.g:9788:1: rule__PreferredInFilter__Group__2__Impl : ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__PreferredInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9792:1: ( ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEcl.g:9793:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEcl.g:9793:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEcl.g:9794:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEcl.g:9795:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEcl.g:9795:3: rule__PreferredInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__0"
    // InternalEcl.g:9804:1: rule__AcceptableInFilter__Group__0 : rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 ;
    public final void rule__AcceptableInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9808:1: ( rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 )
            // InternalEcl.g:9809:2: rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__AcceptableInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0"


    // $ANTLR start "rule__AcceptableInFilter__Group__0__Impl"
    // InternalEcl.g:9816:1: rule__AcceptableInFilter__Group__0__Impl : ( RULE_ACCEPTABLE_IN_KEYWORD ) ;
    public final void rule__AcceptableInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9820:1: ( ( RULE_ACCEPTABLE_IN_KEYWORD ) )
            // InternalEcl.g:9821:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            {
            // InternalEcl.g:9821:1: ( RULE_ACCEPTABLE_IN_KEYWORD )
            // InternalEcl.g:9822:2: RULE_ACCEPTABLE_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_ACCEPTABLE_IN_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__1"
    // InternalEcl.g:9831:1: rule__AcceptableInFilter__Group__1 : rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 ;
    public final void rule__AcceptableInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9835:1: ( rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 )
            // InternalEcl.g:9836:2: rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__AcceptableInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1"


    // $ANTLR start "rule__AcceptableInFilter__Group__1__Impl"
    // InternalEcl.g:9843:1: rule__AcceptableInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__AcceptableInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9847:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:9848:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:9848:1: ( RULE_EQUAL )
            // InternalEcl.g:9849:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__2"
    // InternalEcl.g:9858:1: rule__AcceptableInFilter__Group__2 : rule__AcceptableInFilter__Group__2__Impl ;
    public final void rule__AcceptableInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9862:1: ( rule__AcceptableInFilter__Group__2__Impl )
            // InternalEcl.g:9863:2: rule__AcceptableInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2"


    // $ANTLR start "rule__AcceptableInFilter__Group__2__Impl"
    // InternalEcl.g:9869:1: rule__AcceptableInFilter__Group__2__Impl : ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__AcceptableInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9873:1: ( ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEcl.g:9874:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEcl.g:9874:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEcl.g:9875:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEcl.g:9876:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEcl.g:9876:3: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0"
    // InternalEcl.g:9885:1: rule__LanguageRefSetFilter__Group__0 : rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 ;
    public final void rule__LanguageRefSetFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9889:1: ( rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 )
            // InternalEcl.g:9890:2: rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__LanguageRefSetFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0__Impl"
    // InternalEcl.g:9897:1: rule__LanguageRefSetFilter__Group__0__Impl : ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) ;
    public final void rule__LanguageRefSetFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9901:1: ( ( RULE_LANGUAGE_REFSET_ID_KEYWORD ) )
            // InternalEcl.g:9902:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            {
            // InternalEcl.g:9902:1: ( RULE_LANGUAGE_REFSET_ID_KEYWORD )
            // InternalEcl.g:9903:2: RULE_LANGUAGE_REFSET_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_REFSET_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1"
    // InternalEcl.g:9912:1: rule__LanguageRefSetFilter__Group__1 : rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 ;
    public final void rule__LanguageRefSetFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9916:1: ( rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 )
            // InternalEcl.g:9917:2: rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__LanguageRefSetFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1__Impl"
    // InternalEcl.g:9924:1: rule__LanguageRefSetFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__LanguageRefSetFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9928:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:9929:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:9929:1: ( RULE_EQUAL )
            // InternalEcl.g:9930:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2"
    // InternalEcl.g:9939:1: rule__LanguageRefSetFilter__Group__2 : rule__LanguageRefSetFilter__Group__2__Impl ;
    public final void rule__LanguageRefSetFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9943:1: ( rule__LanguageRefSetFilter__Group__2__Impl )
            // InternalEcl.g:9944:2: rule__LanguageRefSetFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2__Impl"
    // InternalEcl.g:9950:1: rule__LanguageRefSetFilter__Group__2__Impl : ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__LanguageRefSetFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9954:1: ( ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEcl.g:9955:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEcl.g:9955:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEcl.g:9956:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEcl.g:9957:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            // InternalEcl.g:9957:3: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0"
    // InternalEcl.g:9966:1: rule__CaseSignificanceFilter__Group__0 : rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 ;
    public final void rule__CaseSignificanceFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9970:1: ( rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 )
            // InternalEcl.g:9971:2: rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_50);
            rule__CaseSignificanceFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0__Impl"
    // InternalEcl.g:9978:1: rule__CaseSignificanceFilter__Group__0__Impl : ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) ;
    public final void rule__CaseSignificanceFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9982:1: ( ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD ) )
            // InternalEcl.g:9983:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            {
            // InternalEcl.g:9983:1: ( RULE_CASE_SIGNIFICANCE_ID_KEYWORD )
            // InternalEcl.g:9984:2: RULE_CASE_SIGNIFICANCE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_CASE_SIGNIFICANCE_ID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1"
    // InternalEcl.g:9993:1: rule__CaseSignificanceFilter__Group__1 : rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 ;
    public final void rule__CaseSignificanceFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:9997:1: ( rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 )
            // InternalEcl.g:9998:2: rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__CaseSignificanceFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1__Impl"
    // InternalEcl.g:10005:1: rule__CaseSignificanceFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__CaseSignificanceFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10009:1: ( ( RULE_EQUAL ) )
            // InternalEcl.g:10010:1: ( RULE_EQUAL )
            {
            // InternalEcl.g:10010:1: ( RULE_EQUAL )
            // InternalEcl.g:10011:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2"
    // InternalEcl.g:10020:1: rule__CaseSignificanceFilter__Group__2 : rule__CaseSignificanceFilter__Group__2__Impl ;
    public final void rule__CaseSignificanceFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10024:1: ( rule__CaseSignificanceFilter__Group__2__Impl )
            // InternalEcl.g:10025:2: rule__CaseSignificanceFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2__Impl"
    // InternalEcl.g:10031:1: rule__CaseSignificanceFilter__Group__2__Impl : ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) ;
    public final void rule__CaseSignificanceFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10035:1: ( ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) )
            // InternalEcl.g:10036:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            {
            // InternalEcl.g:10036:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            // InternalEcl.g:10037:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }
            // InternalEcl.g:10038:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            // InternalEcl.g:10038:3: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__0"
    // InternalEcl.g:10047:1: rule__HistorySupplement__Group__0 : rule__HistorySupplement__Group__0__Impl rule__HistorySupplement__Group__1 ;
    public final void rule__HistorySupplement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10051:1: ( rule__HistorySupplement__Group__0__Impl rule__HistorySupplement__Group__1 )
            // InternalEcl.g:10052:2: rule__HistorySupplement__Group__0__Impl rule__HistorySupplement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_51);
            rule__HistorySupplement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__0"


    // $ANTLR start "rule__HistorySupplement__Group__0__Impl"
    // InternalEcl.g:10059:1: rule__HistorySupplement__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__HistorySupplement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10063:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEcl.g:10064:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEcl.g:10064:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEcl.g:10065:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__0__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__1"
    // InternalEcl.g:10074:1: rule__HistorySupplement__Group__1 : rule__HistorySupplement__Group__1__Impl rule__HistorySupplement__Group__2 ;
    public final void rule__HistorySupplement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10078:1: ( rule__HistorySupplement__Group__1__Impl rule__HistorySupplement__Group__2 )
            // InternalEcl.g:10079:2: rule__HistorySupplement__Group__1__Impl rule__HistorySupplement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_52);
            rule__HistorySupplement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__1"


    // $ANTLR start "rule__HistorySupplement__Group__1__Impl"
    // InternalEcl.g:10086:1: rule__HistorySupplement__Group__1__Impl : ( RULE_PLUS ) ;
    public final void rule__HistorySupplement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10090:1: ( ( RULE_PLUS ) )
            // InternalEcl.g:10091:1: ( RULE_PLUS )
            {
            // InternalEcl.g:10091:1: ( RULE_PLUS )
            // InternalEcl.g:10092:2: RULE_PLUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getPLUSTerminalRuleCall_1()); 
            }
            match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getPLUSTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__1__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__2"
    // InternalEcl.g:10101:1: rule__HistorySupplement__Group__2 : rule__HistorySupplement__Group__2__Impl rule__HistorySupplement__Group__3 ;
    public final void rule__HistorySupplement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10105:1: ( rule__HistorySupplement__Group__2__Impl rule__HistorySupplement__Group__3 )
            // InternalEcl.g:10106:2: rule__HistorySupplement__Group__2__Impl rule__HistorySupplement__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__HistorySupplement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__2"


    // $ANTLR start "rule__HistorySupplement__Group__2__Impl"
    // InternalEcl.g:10113:1: rule__HistorySupplement__Group__2__Impl : ( RULE_HISTORY_KEYWORD ) ;
    public final void rule__HistorySupplement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10117:1: ( ( RULE_HISTORY_KEYWORD ) )
            // InternalEcl.g:10118:1: ( RULE_HISTORY_KEYWORD )
            {
            // InternalEcl.g:10118:1: ( RULE_HISTORY_KEYWORD )
            // InternalEcl.g:10119:2: RULE_HISTORY_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHISTORY_KEYWORDTerminalRuleCall_2()); 
            }
            match(input,RULE_HISTORY_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHISTORY_KEYWORDTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__2__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__3"
    // InternalEcl.g:10128:1: rule__HistorySupplement__Group__3 : rule__HistorySupplement__Group__3__Impl rule__HistorySupplement__Group__4 ;
    public final void rule__HistorySupplement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10132:1: ( rule__HistorySupplement__Group__3__Impl rule__HistorySupplement__Group__4 )
            // InternalEcl.g:10133:2: rule__HistorySupplement__Group__3__Impl rule__HistorySupplement__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__HistorySupplement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__3"


    // $ANTLR start "rule__HistorySupplement__Group__3__Impl"
    // InternalEcl.g:10140:1: rule__HistorySupplement__Group__3__Impl : ( () ) ;
    public final void rule__HistorySupplement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10144:1: ( ( () ) )
            // InternalEcl.g:10145:1: ( () )
            {
            // InternalEcl.g:10145:1: ( () )
            // InternalEcl.g:10146:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHistorySupplementAction_3()); 
            }
            // InternalEcl.g:10147:2: ()
            // InternalEcl.g:10147:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHistorySupplementAction_3()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__3__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__4"
    // InternalEcl.g:10155:1: rule__HistorySupplement__Group__4 : rule__HistorySupplement__Group__4__Impl rule__HistorySupplement__Group__5 ;
    public final void rule__HistorySupplement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10159:1: ( rule__HistorySupplement__Group__4__Impl rule__HistorySupplement__Group__5 )
            // InternalEcl.g:10160:2: rule__HistorySupplement__Group__4__Impl rule__HistorySupplement__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_53);
            rule__HistorySupplement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__4"


    // $ANTLR start "rule__HistorySupplement__Group__4__Impl"
    // InternalEcl.g:10167:1: rule__HistorySupplement__Group__4__Impl : ( ( rule__HistorySupplement__HistoryAssignment_4 )? ) ;
    public final void rule__HistorySupplement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10171:1: ( ( ( rule__HistorySupplement__HistoryAssignment_4 )? ) )
            // InternalEcl.g:10172:1: ( ( rule__HistorySupplement__HistoryAssignment_4 )? )
            {
            // InternalEcl.g:10172:1: ( ( rule__HistorySupplement__HistoryAssignment_4 )? )
            // InternalEcl.g:10173:2: ( rule__HistorySupplement__HistoryAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHistoryAssignment_4()); 
            }
            // InternalEcl.g:10174:2: ( rule__HistorySupplement__HistoryAssignment_4 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( ((LA78_0>=RULE_DASH && LA78_0<=RULE_UNDERSCORE)||LA78_0==RULE_ROUND_OPEN) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalEcl.g:10174:3: rule__HistorySupplement__HistoryAssignment_4
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__HistorySupplement__HistoryAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHistoryAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__4__Impl"


    // $ANTLR start "rule__HistorySupplement__Group__5"
    // InternalEcl.g:10182:1: rule__HistorySupplement__Group__5 : rule__HistorySupplement__Group__5__Impl ;
    public final void rule__HistorySupplement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10186:1: ( rule__HistorySupplement__Group__5__Impl )
            // InternalEcl.g:10187:2: rule__HistorySupplement__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__5"


    // $ANTLR start "rule__HistorySupplement__Group__5__Impl"
    // InternalEcl.g:10193:1: rule__HistorySupplement__Group__5__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__HistorySupplement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10197:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEcl.g:10198:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEcl.g:10198:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEcl.g:10199:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_5()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__Group__5__Impl"


    // $ANTLR start "rule__HistoryProfile__Group__0"
    // InternalEcl.g:10209:1: rule__HistoryProfile__Group__0 : rule__HistoryProfile__Group__0__Impl rule__HistoryProfile__Group__1 ;
    public final void rule__HistoryProfile__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10213:1: ( rule__HistoryProfile__Group__0__Impl rule__HistoryProfile__Group__1 )
            // InternalEcl.g:10214:2: rule__HistoryProfile__Group__0__Impl rule__HistoryProfile__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_54);
            rule__HistoryProfile__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__0"


    // $ANTLR start "rule__HistoryProfile__Group__0__Impl"
    // InternalEcl.g:10221:1: rule__HistoryProfile__Group__0__Impl : ( ( rule__HistoryProfile__Alternatives_0 ) ) ;
    public final void rule__HistoryProfile__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10225:1: ( ( ( rule__HistoryProfile__Alternatives_0 ) ) )
            // InternalEcl.g:10226:1: ( ( rule__HistoryProfile__Alternatives_0 ) )
            {
            // InternalEcl.g:10226:1: ( ( rule__HistoryProfile__Alternatives_0 ) )
            // InternalEcl.g:10227:2: ( rule__HistoryProfile__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getAlternatives_0()); 
            }
            // InternalEcl.g:10228:2: ( rule__HistoryProfile__Alternatives_0 )
            // InternalEcl.g:10228:3: rule__HistoryProfile__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__0__Impl"


    // $ANTLR start "rule__HistoryProfile__Group__1"
    // InternalEcl.g:10236:1: rule__HistoryProfile__Group__1 : rule__HistoryProfile__Group__1__Impl ;
    public final void rule__HistoryProfile__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10240:1: ( rule__HistoryProfile__Group__1__Impl )
            // InternalEcl.g:10241:2: rule__HistoryProfile__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__1"


    // $ANTLR start "rule__HistoryProfile__Group__1__Impl"
    // InternalEcl.g:10247:1: rule__HistoryProfile__Group__1__Impl : ( ( rule__HistoryProfile__ProfileAssignment_1 ) ) ;
    public final void rule__HistoryProfile__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10251:1: ( ( ( rule__HistoryProfile__ProfileAssignment_1 ) ) )
            // InternalEcl.g:10252:1: ( ( rule__HistoryProfile__ProfileAssignment_1 ) )
            {
            // InternalEcl.g:10252:1: ( ( rule__HistoryProfile__ProfileAssignment_1 ) )
            // InternalEcl.g:10253:2: ( rule__HistoryProfile__ProfileAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getProfileAssignment_1()); 
            }
            // InternalEcl.g:10254:2: ( rule__HistoryProfile__ProfileAssignment_1 )
            // InternalEcl.g:10254:3: rule__HistoryProfile__ProfileAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistoryProfile__ProfileAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getProfileAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__Group__1__Impl"


    // $ANTLR start "rule__Identifier__Group__0"
    // InternalEcl.g:10263:1: rule__Identifier__Group__0 : rule__Identifier__Group__0__Impl rule__Identifier__Group__1 ;
    public final void rule__Identifier__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10267:1: ( rule__Identifier__Group__0__Impl rule__Identifier__Group__1 )
            // InternalEcl.g:10268:2: rule__Identifier__Group__0__Impl rule__Identifier__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_55);
            rule__Identifier__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__0"


    // $ANTLR start "rule__Identifier__Group__0__Impl"
    // InternalEcl.g:10275:1: rule__Identifier__Group__0__Impl : ( ( ( rule__Identifier__Alternatives_0 ) ) ( ( rule__Identifier__Alternatives_0 )* ) ) ;
    public final void rule__Identifier__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10279:1: ( ( ( ( rule__Identifier__Alternatives_0 ) ) ( ( rule__Identifier__Alternatives_0 )* ) ) )
            // InternalEcl.g:10280:1: ( ( ( rule__Identifier__Alternatives_0 ) ) ( ( rule__Identifier__Alternatives_0 )* ) )
            {
            // InternalEcl.g:10280:1: ( ( ( rule__Identifier__Alternatives_0 ) ) ( ( rule__Identifier__Alternatives_0 )* ) )
            // InternalEcl.g:10281:2: ( ( rule__Identifier__Alternatives_0 ) ) ( ( rule__Identifier__Alternatives_0 )* )
            {
            // InternalEcl.g:10281:2: ( ( rule__Identifier__Alternatives_0 ) )
            // InternalEcl.g:10282:3: ( rule__Identifier__Alternatives_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getAlternatives_0()); 
            }
            // InternalEcl.g:10283:3: ( rule__Identifier__Alternatives_0 )
            // InternalEcl.g:10283:4: rule__Identifier__Alternatives_0
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__Identifier__Alternatives_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getAlternatives_0()); 
            }

            }

            // InternalEcl.g:10286:2: ( ( rule__Identifier__Alternatives_0 )* )
            // InternalEcl.g:10287:3: ( rule__Identifier__Alternatives_0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getAlternatives_0()); 
            }
            // InternalEcl.g:10288:3: ( rule__Identifier__Alternatives_0 )*
            loop79:
            do {
                int alt79=2;
                switch ( input.LA(1) ) {
                case RULE_DIGIT:
                    {
                    int LA79_2 = input.LA(2);

                    if ( (synpred155_InternalEcl()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case RULE_ALPHA:
                    {
                    int LA79_3 = input.LA(2);

                    if ( (synpred155_InternalEcl()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case RULE_CONCEPT_SHORT_KEYWORD:
                    {
                    int LA79_4 = input.LA(2);

                    if ( (synpred155_InternalEcl()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                    {
                    int LA79_5 = input.LA(2);

                    if ( (synpred155_InternalEcl()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case RULE_REVERSED:
                    {
                    int LA79_6 = input.LA(2);

                    if ( (synpred155_InternalEcl()) ) {
                        alt79=1;
                    }


                    }
                    break;
                case RULE_KEYWORD:
                    {
                    int LA79_7 = input.LA(2);

                    if ( (synpred155_InternalEcl()) ) {
                        alt79=1;
                    }


                    }
                    break;

                }

                switch (alt79) {
            	case 1 :
            	    // InternalEcl.g:10288:4: rule__Identifier__Alternatives_0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    rule__Identifier__Alternatives_0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getAlternatives_0()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__0__Impl"


    // $ANTLR start "rule__Identifier__Group__1"
    // InternalEcl.g:10297:1: rule__Identifier__Group__1 : rule__Identifier__Group__1__Impl ;
    public final void rule__Identifier__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10301:1: ( rule__Identifier__Group__1__Impl )
            // InternalEcl.g:10302:2: rule__Identifier__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__1"


    // $ANTLR start "rule__Identifier__Group__1__Impl"
    // InternalEcl.g:10308:1: rule__Identifier__Group__1__Impl : ( ( rule__Identifier__Group_1__0 )* ) ;
    public final void rule__Identifier__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10312:1: ( ( ( rule__Identifier__Group_1__0 )* ) )
            // InternalEcl.g:10313:1: ( ( rule__Identifier__Group_1__0 )* )
            {
            // InternalEcl.g:10313:1: ( ( rule__Identifier__Group_1__0 )* )
            // InternalEcl.g:10314:2: ( rule__Identifier__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getGroup_1()); 
            }
            // InternalEcl.g:10315:2: ( rule__Identifier__Group_1__0 )*
            loop80:
            do {
                int alt80=2;
                alt80 = dfa80.predict(input);
                switch (alt80) {
            	case 1 :
            	    // InternalEcl.g:10315:3: rule__Identifier__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    rule__Identifier__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group__1__Impl"


    // $ANTLR start "rule__Identifier__Group_1__0"
    // InternalEcl.g:10324:1: rule__Identifier__Group_1__0 : rule__Identifier__Group_1__0__Impl rule__Identifier__Group_1__1 ;
    public final void rule__Identifier__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10328:1: ( rule__Identifier__Group_1__0__Impl rule__Identifier__Group_1__1 )
            // InternalEcl.g:10329:2: rule__Identifier__Group_1__0__Impl rule__Identifier__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__Identifier__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group_1__0"


    // $ANTLR start "rule__Identifier__Group_1__0__Impl"
    // InternalEcl.g:10336:1: rule__Identifier__Group_1__0__Impl : ( ( rule__Identifier__Alternatives_1_0 ) ) ;
    public final void rule__Identifier__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10340:1: ( ( ( rule__Identifier__Alternatives_1_0 ) ) )
            // InternalEcl.g:10341:1: ( ( rule__Identifier__Alternatives_1_0 ) )
            {
            // InternalEcl.g:10341:1: ( ( rule__Identifier__Alternatives_1_0 ) )
            // InternalEcl.g:10342:2: ( rule__Identifier__Alternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getAlternatives_1_0()); 
            }
            // InternalEcl.g:10343:2: ( rule__Identifier__Alternatives_1_0 )
            // InternalEcl.g:10343:3: rule__Identifier__Alternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Alternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group_1__0__Impl"


    // $ANTLR start "rule__Identifier__Group_1__1"
    // InternalEcl.g:10351:1: rule__Identifier__Group_1__1 : rule__Identifier__Group_1__1__Impl ;
    public final void rule__Identifier__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10355:1: ( rule__Identifier__Group_1__1__Impl )
            // InternalEcl.g:10356:2: rule__Identifier__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Identifier__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group_1__1"


    // $ANTLR start "rule__Identifier__Group_1__1__Impl"
    // InternalEcl.g:10362:1: rule__Identifier__Group_1__1__Impl : ( ( ( rule__Identifier__Alternatives_1_1 ) ) ( ( rule__Identifier__Alternatives_1_1 )* ) ) ;
    public final void rule__Identifier__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10366:1: ( ( ( ( rule__Identifier__Alternatives_1_1 ) ) ( ( rule__Identifier__Alternatives_1_1 )* ) ) )
            // InternalEcl.g:10367:1: ( ( ( rule__Identifier__Alternatives_1_1 ) ) ( ( rule__Identifier__Alternatives_1_1 )* ) )
            {
            // InternalEcl.g:10367:1: ( ( ( rule__Identifier__Alternatives_1_1 ) ) ( ( rule__Identifier__Alternatives_1_1 )* ) )
            // InternalEcl.g:10368:2: ( ( rule__Identifier__Alternatives_1_1 ) ) ( ( rule__Identifier__Alternatives_1_1 )* )
            {
            // InternalEcl.g:10368:2: ( ( rule__Identifier__Alternatives_1_1 ) )
            // InternalEcl.g:10369:3: ( rule__Identifier__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:10370:3: ( rule__Identifier__Alternatives_1_1 )
            // InternalEcl.g:10370:4: rule__Identifier__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__Identifier__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getAlternatives_1_1()); 
            }

            }

            // InternalEcl.g:10373:2: ( ( rule__Identifier__Alternatives_1_1 )* )
            // InternalEcl.g:10374:3: ( rule__Identifier__Alternatives_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIdentifierAccess().getAlternatives_1_1()); 
            }
            // InternalEcl.g:10375:3: ( rule__Identifier__Alternatives_1_1 )*
            loop81:
            do {
                int alt81=2;
                switch ( input.LA(1) ) {
                case RULE_DIGIT:
                    {
                    int LA81_2 = input.LA(2);

                    if ( (synpred157_InternalEcl()) ) {
                        alt81=1;
                    }


                    }
                    break;
                case RULE_ALPHA:
                    {
                    int LA81_3 = input.LA(2);

                    if ( (synpred157_InternalEcl()) ) {
                        alt81=1;
                    }


                    }
                    break;
                case RULE_CONCEPT_SHORT_KEYWORD:
                    {
                    int LA81_4 = input.LA(2);

                    if ( (synpred157_InternalEcl()) ) {
                        alt81=1;
                    }


                    }
                    break;
                case RULE_DESCRIPTION_SHORT_KEYWORD:
                    {
                    int LA81_5 = input.LA(2);

                    if ( (synpred157_InternalEcl()) ) {
                        alt81=1;
                    }


                    }
                    break;
                case RULE_REVERSED:
                    {
                    int LA81_6 = input.LA(2);

                    if ( (synpred157_InternalEcl()) ) {
                        alt81=1;
                    }


                    }
                    break;
                case RULE_KEYWORD:
                    {
                    int LA81_7 = input.LA(2);

                    if ( (synpred157_InternalEcl()) ) {
                        alt81=1;
                    }


                    }
                    break;

                }

                switch (alt81) {
            	case 1 :
            	    // InternalEcl.g:10375:4: rule__Identifier__Alternatives_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    rule__Identifier__Alternatives_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIdentifierAccess().getAlternatives_1_1()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Identifier__Group_1__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEcl.g:10385:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10389:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEcl.g:10390:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_13);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEcl.g:10397:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10401:1: ( ( ruleNonNegativeInteger ) )
            // InternalEcl.g:10402:1: ( ruleNonNegativeInteger )
            {
            // InternalEcl.g:10402:1: ( ruleNonNegativeInteger )
            // InternalEcl.g:10403:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEcl.g:10412:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10416:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEcl.g:10417:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEcl.g:10424:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10428:1: ( ( RULE_DOT ) )
            // InternalEcl.g:10429:1: ( RULE_DOT )
            {
            // InternalEcl.g:10429:1: ( RULE_DOT )
            // InternalEcl.g:10430:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEcl.g:10439:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10443:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEcl.g:10444:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEcl.g:10450:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( RULE_DIGIT )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10454:1: ( ( ( RULE_DIGIT )* ) )
            // InternalEcl.g:10455:1: ( ( RULE_DIGIT )* )
            {
            // InternalEcl.g:10455:1: ( ( RULE_DIGIT )* )
            // InternalEcl.g:10456:2: ( RULE_DIGIT )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDIGITTerminalRuleCall_2()); 
            }
            // InternalEcl.g:10457:2: ( RULE_DIGIT )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_DIGIT) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalEcl.g:10457:3: RULE_DIGIT
            	    {
            	    match(input,RULE_DIGIT,FollowSets000.FOLLOW_3); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDIGITTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEcl.g:10466:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10470:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEcl.g:10471:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEcl.g:10478:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10482:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEcl.g:10483:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEcl.g:10483:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEcl.g:10484:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEcl.g:10485:2: ( rule__Integer__Alternatives_0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==RULE_DASH||LA83_0==RULE_PLUS) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalEcl.g:10485:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEcl.g:10493:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10497:1: ( rule__Integer__Group__1__Impl )
            // InternalEcl.g:10498:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEcl.g:10504:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10508:1: ( ( ruleNonNegativeInteger ) )
            // InternalEcl.g:10509:1: ( ruleNonNegativeInteger )
            {
            // InternalEcl.g:10509:1: ( ruleNonNegativeInteger )
            // InternalEcl.g:10510:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEcl.g:10520:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10524:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEcl.g:10525:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEcl.g:10532:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10536:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEcl.g:10537:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEcl.g:10537:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEcl.g:10538:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEcl.g:10539:2: ( rule__Decimal__Alternatives_0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_DASH||LA84_0==RULE_PLUS) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalEcl.g:10539:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEcl.g:10547:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10551:1: ( rule__Decimal__Group__1__Impl )
            // InternalEcl.g:10552:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEcl.g:10558:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10562:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEcl.g:10563:1: ( ruleNonNegativeDecimal )
            {
            // InternalEcl.g:10563:1: ( ruleNonNegativeDecimal )
            // InternalEcl.g:10564:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__Script__ConstraintAssignment_1"
    // InternalEcl.g:10574:1: rule__Script__ConstraintAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__Script__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10578:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:10579:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:10579:2: ( ruleExpressionConstraint )
            // InternalEcl.g:10580:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__ConstraintAssignment_1"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEcl.g:10589:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10593:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEcl.g:10594:2: ( ruleAndExpressionConstraint )
            {
            // InternalEcl.g:10594:2: ( ruleAndExpressionConstraint )
            // InternalEcl.g:10595:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEcl.g:10604:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10608:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEcl.g:10609:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEcl.g:10609:2: ( ruleExclusionExpressionConstraint )
            // InternalEcl.g:10610:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEcl.g:10619:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10623:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEcl.g:10624:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEcl.g:10624:2: ( ruleRefinedExpressionConstraint )
            // InternalEcl.g:10625:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEcl.g:10634:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10638:1: ( ( ruleEclRefinement ) )
            // InternalEcl.g:10639:2: ( ruleEclRefinement )
            {
            // InternalEcl.g:10639:2: ( ruleEclRefinement )
            // InternalEcl.g:10640:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEcl.g:10649:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleSupplementExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10653:1: ( ( ruleSupplementExpressionConstraint ) )
            // InternalEcl.g:10654:2: ( ruleSupplementExpressionConstraint )
            {
            // InternalEcl.g:10654:2: ( ruleSupplementExpressionConstraint )
            // InternalEcl.g:10655:3: ruleSupplementExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSupplementExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSupplementExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSupplementExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__SupplementExpressionConstraint__SupplementAssignment_1_1"
    // InternalEcl.g:10664:1: rule__SupplementExpressionConstraint__SupplementAssignment_1_1 : ( ruleSupplement ) ;
    public final void rule__SupplementExpressionConstraint__SupplementAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10668:1: ( ( ruleSupplement ) )
            // InternalEcl.g:10669:2: ( ruleSupplement )
            {
            // InternalEcl.g:10669:2: ( ruleSupplement )
            // InternalEcl.g:10670:3: ruleSupplement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementSupplementParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSupplement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSupplementExpressionConstraintAccess().getSupplementSupplementParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SupplementExpressionConstraint__SupplementAssignment_1_1"


    // $ANTLR start "rule__FilteredExpressionConstraint__FilterAssignment_1_1"
    // InternalEcl.g:10679:1: rule__FilteredExpressionConstraint__FilterAssignment_1_1 : ( ruleFilterConstraint ) ;
    public final void rule__FilteredExpressionConstraint__FilterAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10683:1: ( ( ruleFilterConstraint ) )
            // InternalEcl.g:10684:2: ( ruleFilterConstraint )
            {
            // InternalEcl.g:10684:2: ( ruleFilterConstraint )
            // InternalEcl.g:10685:3: ruleFilterConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFilterFilterConstraintParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__FilterAssignment_1_1"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEcl.g:10694:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10698:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10699:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10699:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10700:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:10709:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10713:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10714:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10714:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10715:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEcl.g:10724:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10728:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10729:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10729:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10730:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:10739:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10743:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10744:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10744:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10745:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEcl.g:10754:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10758:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10759:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10759:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10760:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:10769:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10773:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10774:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10774:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10775:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEcl.g:10784:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10788:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10789:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10789:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10790:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEcl.g:10799:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10803:1: ( ( ruleEclFocusConcept ) )
            // InternalEcl.g:10804:2: ( ruleEclFocusConcept )
            {
            // InternalEcl.g:10804:2: ( ruleEclFocusConcept )
            // InternalEcl.g:10805:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__RefsetFieldsAssignment_1_1_0"
    // InternalEcl.g:10814:1: rule__MemberOf__RefsetFieldsAssignment_1_1_0 : ( ruleUnquotedString ) ;
    public final void rule__MemberOf__RefsetFieldsAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10818:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:10819:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:10819:2: ( ruleUnquotedString )
            // InternalEcl.g:10820:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__RefsetFieldsAssignment_1_1_0"


    // $ANTLR start "rule__MemberOf__RefsetFieldsAssignment_1_1_1_1"
    // InternalEcl.g:10829:1: rule__MemberOf__RefsetFieldsAssignment_1_1_1_1 : ( ruleUnquotedString ) ;
    public final void rule__MemberOf__RefsetFieldsAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10833:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:10834:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:10834:2: ( ruleUnquotedString )
            // InternalEcl.g:10835:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getRefsetFieldsUnquotedStringParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__RefsetFieldsAssignment_1_1_1_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_2"
    // InternalEcl.g:10844:1: rule__MemberOf__ConstraintAssignment_2 : ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10848:1: ( ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) ) )
            // InternalEcl.g:10849:2: ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) )
            {
            // InternalEcl.g:10849:2: ( ( rule__MemberOf__ConstraintAlternatives_2_0 ) )
            // InternalEcl.g:10850:3: ( rule__MemberOf__ConstraintAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_2_0()); 
            }
            // InternalEcl.g:10851:3: ( rule__MemberOf__ConstraintAlternatives_2_0 )
            // InternalEcl.g:10851:4: rule__MemberOf__ConstraintAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_2"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEcl.g:10859:1: rule__EclConceptReference__IdAssignment_0 : ( ruleIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10863:1: ( ( ruleIdentifier ) )
            // InternalEcl.g:10864:2: ( ruleIdentifier )
            {
            // InternalEcl.g:10864:2: ( ruleIdentifier )
            // InternalEcl.g:10865:3: ruleIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEcl.g:10874:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_PIPE_DELIMITED_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10878:1: ( ( RULE_PIPE_DELIMITED_STRING ) )
            // InternalEcl.g:10879:2: ( RULE_PIPE_DELIMITED_STRING )
            {
            // InternalEcl.g:10879:2: ( RULE_PIPE_DELIMITED_STRING )
            // InternalEcl.g:10880:3: RULE_PIPE_DELIMITED_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_PIPE_DELIMITED_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermPIPE_DELIMITED_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEcl.g:10889:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10893:1: ( ( ruleEclConceptReference ) )
            // InternalEcl.g:10894:2: ( ruleEclConceptReference )
            {
            // InternalEcl.g:10894:2: ( ruleEclConceptReference )
            // InternalEcl.g:10895:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEcl.g:10904:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10908:1: ( ( ruleAndRefinement ) )
            // InternalEcl.g:10909:2: ( ruleAndRefinement )
            {
            // InternalEcl.g:10909:2: ( ruleAndRefinement )
            // InternalEcl.g:10910:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEcl.g:10919:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10923:1: ( ( ruleSubRefinement ) )
            // InternalEcl.g:10924:2: ( ruleSubRefinement )
            {
            // InternalEcl.g:10924:2: ( ruleSubRefinement )
            // InternalEcl.g:10925:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEcl.g:10934:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10938:1: ( ( ruleEclRefinement ) )
            // InternalEcl.g:10939:2: ( ruleEclRefinement )
            {
            // InternalEcl.g:10939:2: ( ruleEclRefinement )
            // InternalEcl.g:10940:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEcl.g:10949:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10953:1: ( ( ruleCardinality ) )
            // InternalEcl.g:10954:2: ( ruleCardinality )
            {
            // InternalEcl.g:10954:2: ( ruleCardinality )
            // InternalEcl.g:10955:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEcl.g:10964:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10968:1: ( ( ruleEclAttributeSet ) )
            // InternalEcl.g:10969:2: ( ruleEclAttributeSet )
            {
            // InternalEcl.g:10969:2: ( ruleEclAttributeSet )
            // InternalEcl.g:10970:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEcl.g:10979:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10983:1: ( ( ruleAndAttributeSet ) )
            // InternalEcl.g:10984:2: ( ruleAndAttributeSet )
            {
            // InternalEcl.g:10984:2: ( ruleAndAttributeSet )
            // InternalEcl.g:10985:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEcl.g:10994:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:10998:1: ( ( ruleSubAttributeSet ) )
            // InternalEcl.g:10999:2: ( ruleSubAttributeSet )
            {
            // InternalEcl.g:10999:2: ( ruleSubAttributeSet )
            // InternalEcl.g:11000:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEcl.g:11009:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11013:1: ( ( ruleEclAttributeSet ) )
            // InternalEcl.g:11014:2: ( ruleEclAttributeSet )
            {
            // InternalEcl.g:11014:2: ( ruleEclAttributeSet )
            // InternalEcl.g:11015:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEcl.g:11024:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11028:1: ( ( ruleCardinality ) )
            // InternalEcl.g:11029:2: ( ruleCardinality )
            {
            // InternalEcl.g:11029:2: ( ruleCardinality )
            // InternalEcl.g:11030:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEcl.g:11039:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11043:1: ( ( RULE_REVERSED ) )
            // InternalEcl.g:11044:2: ( RULE_REVERSED )
            {
            // InternalEcl.g:11044:2: ( RULE_REVERSED )
            // InternalEcl.g:11045:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEcl.g:11054:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11058:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:11059:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:11059:2: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:11060:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEcl.g:11069:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11073:1: ( ( ruleComparison ) )
            // InternalEcl.g:11074:2: ( ruleComparison )
            {
            // InternalEcl.g:11074:2: ( ruleComparison )
            // InternalEcl.g:11075:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEcl.g:11084:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11088:1: ( ( ruleNonNegativeInteger ) )
            // InternalEcl.g:11089:2: ( ruleNonNegativeInteger )
            {
            // InternalEcl.g:11089:2: ( ruleNonNegativeInteger )
            // InternalEcl.g:11090:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEcl.g:11099:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11103:1: ( ( ruleMaxValue ) )
            // InternalEcl.g:11104:2: ( ruleMaxValue )
            {
            // InternalEcl.g:11104:2: ( ruleMaxValue )
            // InternalEcl.g:11105:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEcl.g:11114:1: rule__AttributeComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11118:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11119:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11119:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11120:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEcl.g:11129:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11133:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:11134:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:11134:2: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:11135:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEcl.g:11144:1: rule__BooleanValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11148:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11149:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11149:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11150:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEcl.g:11159:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11163:1: ( ( ruleBoolean ) )
            // InternalEcl.g:11164:2: ( ruleBoolean )
            {
            // InternalEcl.g:11164:2: ( ruleBoolean )
            // InternalEcl.g:11165:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEcl.g:11174:1: rule__StringValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11178:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11179:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11179:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11180:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEcl.g:11189:1: rule__StringValueComparison__ValueAssignment_1 : ( ruleSearchTerm ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11193:1: ( ( ruleSearchTerm ) )
            // InternalEcl.g:11194:2: ( ruleSearchTerm )
            {
            // InternalEcl.g:11194:2: ( ruleSearchTerm )
            // InternalEcl.g:11195:3: ruleSearchTerm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSearchTermParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSearchTermParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEcl.g:11204:1: rule__IntegerValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11208:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEcl.g:11209:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEcl.g:11209:2: ( ruleNUMERIC_OPERATOR )
            // InternalEcl.g:11210:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEcl.g:11219:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11223:1: ( ( ruleInteger ) )
            // InternalEcl.g:11224:2: ( ruleInteger )
            {
            // InternalEcl.g:11224:2: ( ruleInteger )
            // InternalEcl.g:11225:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEcl.g:11234:1: rule__DecimalValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11238:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEcl.g:11239:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEcl.g:11239:2: ( ruleNUMERIC_OPERATOR )
            // InternalEcl.g:11240:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEcl.g:11249:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11253:1: ( ( ruleDecimal ) )
            // InternalEcl.g:11254:2: ( ruleDecimal )
            {
            // InternalEcl.g:11254:2: ( ruleDecimal )
            // InternalEcl.g:11255:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEcl.g:11264:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11268:1: ( ( ruleExpressionConstraint ) )
            // InternalEcl.g:11269:2: ( ruleExpressionConstraint )
            {
            // InternalEcl.g:11269:2: ( ruleExpressionConstraint )
            // InternalEcl.g:11270:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__FilterConstraint__DomainAssignment_1"
    // InternalEcl.g:11279:1: rule__FilterConstraint__DomainAssignment_1 : ( ruleSHORT_DOMAIN ) ;
    public final void rule__FilterConstraint__DomainAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11283:1: ( ( ruleSHORT_DOMAIN ) )
            // InternalEcl.g:11284:2: ( ruleSHORT_DOMAIN )
            {
            // InternalEcl.g:11284:2: ( ruleSHORT_DOMAIN )
            // InternalEcl.g:11285:3: ruleSHORT_DOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDomainSHORT_DOMAINParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSHORT_DOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDomainSHORT_DOMAINParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__DomainAssignment_1"


    // $ANTLR start "rule__FilterConstraint__FilterAssignment_2"
    // InternalEcl.g:11294:1: rule__FilterConstraint__FilterAssignment_2 : ( ruleFilter ) ;
    public final void rule__FilterConstraint__FilterAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11298:1: ( ( ruleFilter ) )
            // InternalEcl.g:11299:2: ( ruleFilter )
            {
            // InternalEcl.g:11299:2: ( ruleFilter )
            // InternalEcl.g:11300:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterFilterParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterFilterParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__FilterAssignment_2"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEcl.g:11309:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11313:1: ( ( ruleConjunctionFilter ) )
            // InternalEcl.g:11314:2: ( ruleConjunctionFilter )
            {
            // InternalEcl.g:11314:2: ( ruleConjunctionFilter )
            // InternalEcl.g:11315:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEcl.g:11324:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11328:1: ( ( rulePropertyFilter ) )
            // InternalEcl.g:11329:2: ( rulePropertyFilter )
            {
            // InternalEcl.g:11329:2: ( rulePropertyFilter )
            // InternalEcl.g:11330:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEcl.g:11339:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11343:1: ( ( ruleFilter ) )
            // InternalEcl.g:11344:2: ( ruleFilter )
            {
            // InternalEcl.g:11344:2: ( ruleFilter )
            // InternalEcl.g:11345:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__MemberFieldFilter__RefsetFieldNameAssignment_0"
    // InternalEcl.g:11354:1: rule__MemberFieldFilter__RefsetFieldNameAssignment_0 : ( ruleUnquotedString ) ;
    public final void rule__MemberFieldFilter__RefsetFieldNameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11358:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11359:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11359:2: ( ruleUnquotedString )
            // InternalEcl.g:11360:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameUnquotedStringParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getRefsetFieldNameUnquotedStringParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__RefsetFieldNameAssignment_0"


    // $ANTLR start "rule__MemberFieldFilter__ComparisonAssignment_1"
    // InternalEcl.g:11369:1: rule__MemberFieldFilter__ComparisonAssignment_1 : ( ruleComparison ) ;
    public final void rule__MemberFieldFilter__ComparisonAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11373:1: ( ( ruleComparison ) )
            // InternalEcl.g:11374:2: ( ruleComparison )
            {
            // InternalEcl.g:11374:2: ( ruleComparison )
            // InternalEcl.g:11375:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberFieldFilterAccess().getComparisonComparisonParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberFieldFilterAccess().getComparisonComparisonParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberFieldFilter__ComparisonAssignment_1"


    // $ANTLR start "rule__TermFilter__OpAssignment_1"
    // InternalEcl.g:11384:1: rule__TermFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TermFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11388:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11389:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11389:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11390:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__OpAssignment_1"


    // $ANTLR start "rule__TermFilter__SearchTermAssignment_2"
    // InternalEcl.g:11399:1: rule__TermFilter__SearchTermAssignment_2 : ( ruleSearchTerm ) ;
    public final void rule__TermFilter__SearchTermAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11403:1: ( ( ruleSearchTerm ) )
            // InternalEcl.g:11404:2: ( ruleSearchTerm )
            {
            // InternalEcl.g:11404:2: ( ruleSearchTerm )
            // InternalEcl.g:11405:3: ruleSearchTerm
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getSearchTermSearchTermParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSearchTerm();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getSearchTermSearchTermParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__SearchTermAssignment_2"


    // $ANTLR start "rule__TypedSearchTerm__ClauseAssignment"
    // InternalEcl.g:11414:1: rule__TypedSearchTerm__ClauseAssignment : ( ruleTypedSearchTermClause ) ;
    public final void rule__TypedSearchTerm__ClauseAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11418:1: ( ( ruleTypedSearchTermClause ) )
            // InternalEcl.g:11419:2: ( ruleTypedSearchTermClause )
            {
            // InternalEcl.g:11419:2: ( ruleTypedSearchTermClause )
            // InternalEcl.g:11420:3: ruleTypedSearchTermClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermAccess().getClauseTypedSearchTermClauseParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedSearchTermClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermAccess().getClauseTypedSearchTermClauseParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTerm__ClauseAssignment"


    // $ANTLR start "rule__TypedSearchTermSet__ClausesAssignment_1"
    // InternalEcl.g:11429:1: rule__TypedSearchTermSet__ClausesAssignment_1 : ( ruleTypedSearchTermClause ) ;
    public final void rule__TypedSearchTermSet__ClausesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11433:1: ( ( ruleTypedSearchTermClause ) )
            // InternalEcl.g:11434:2: ( ruleTypedSearchTermClause )
            {
            // InternalEcl.g:11434:2: ( ruleTypedSearchTermClause )
            // InternalEcl.g:11435:3: ruleTypedSearchTermClause
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermSetAccess().getClausesTypedSearchTermClauseParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedSearchTermClause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermSetAccess().getClausesTypedSearchTermClauseParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermSet__ClausesAssignment_1"


    // $ANTLR start "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0"
    // InternalEcl.g:11444:1: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0 : ( ruleLEXICAL_SEARCH_TYPE ) ;
    public final void rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11448:1: ( ( ruleLEXICAL_SEARCH_TYPE ) )
            // InternalEcl.g:11449:2: ( ruleLEXICAL_SEARCH_TYPE )
            {
            // InternalEcl.g:11449:2: ( ruleLEXICAL_SEARCH_TYPE )
            // InternalEcl.g:11450:3: ruleLEXICAL_SEARCH_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_0_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_0_0_0"


    // $ANTLR start "rule__TypedSearchTermClause__TermAssignment_0_1"
    // InternalEcl.g:11459:1: rule__TypedSearchTermClause__TermAssignment_0_1 : ( RULE_STRING ) ;
    public final void rule__TypedSearchTermClause__TermAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11463:1: ( ( RULE_STRING ) )
            // InternalEcl.g:11464:2: ( RULE_STRING )
            {
            // InternalEcl.g:11464:2: ( RULE_STRING )
            // InternalEcl.g:11465:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermSTRINGTerminalRuleCall_0_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermSTRINGTerminalRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__TermAssignment_0_1"


    // $ANTLR start "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0"
    // InternalEcl.g:11474:1: rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0 : ( RULE_REGEX_KEYWORD ) ;
    public final void rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11478:1: ( ( RULE_REGEX_KEYWORD ) )
            // InternalEcl.g:11479:2: ( RULE_REGEX_KEYWORD )
            {
            // InternalEcl.g:11479:2: ( RULE_REGEX_KEYWORD )
            // InternalEcl.g:11480:3: RULE_REGEX_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeREGEX_KEYWORDTerminalRuleCall_1_0_0()); 
            }
            match(input,RULE_REGEX_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getLexicalSearchTypeREGEX_KEYWORDTerminalRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__LexicalSearchTypeAssignment_1_0"


    // $ANTLR start "rule__TypedSearchTermClause__TermAssignment_1_2"
    // InternalEcl.g:11489:1: rule__TypedSearchTermClause__TermAssignment_1_2 : ( ruleRegularExpression ) ;
    public final void rule__TypedSearchTermClause__TermAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11493:1: ( ( ruleRegularExpression ) )
            // InternalEcl.g:11494:2: ( ruleRegularExpression )
            {
            // InternalEcl.g:11494:2: ( ruleRegularExpression )
            // InternalEcl.g:11495:3: ruleRegularExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedSearchTermClauseAccess().getTermRegularExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRegularExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedSearchTermClauseAccess().getTermRegularExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedSearchTermClause__TermAssignment_1_2"


    // $ANTLR start "rule__LanguageFilter__OpAssignment_1"
    // InternalEcl.g:11504:1: rule__LanguageFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__LanguageFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11508:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11509:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11509:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11510:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_0"
    // InternalEcl.g:11519:1: rule__LanguageFilter__LanguageCodesAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11523:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11524:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11524:2: ( ruleUnquotedString )
            // InternalEcl.g:11525:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"
    // InternalEcl.g:11534:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11538:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11539:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11539:2: ( ruleUnquotedString )
            // InternalEcl.g:11540:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEcl.g:11549:1: rule__TypeIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11553:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11554:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11554:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11555:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEcl.g:11564:1: rule__TypeIdFilter__TypeAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11568:1: ( ( ruleFilterValue ) )
            // InternalEcl.g:11569:2: ( ruleFilterValue )
            {
            // InternalEcl.g:11569:2: ( ruleFilterValue )
            // InternalEcl.g:11570:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEcl.g:11579:1: rule__TypeTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11583:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11584:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11584:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11585:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEcl.g:11594:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11598:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11599:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11599:2: ( ruleUnquotedString )
            // InternalEcl.g:11600:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEcl.g:11609:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11613:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11614:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11614:2: ( ruleUnquotedString )
            // InternalEcl.g:11615:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEcl.g:11624:1: rule__DialectIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11628:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11629:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11629:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11630:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEcl.g:11639:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11643:1: ( ( ruleDialect ) )
            // InternalEcl.g:11644:2: ( ruleDialect )
            {
            // InternalEcl.g:11644:2: ( ruleDialect )
            // InternalEcl.g:11645:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEcl.g:11654:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11658:1: ( ( ruleDialect ) )
            // InternalEcl.g:11659:2: ( ruleDialect )
            {
            // InternalEcl.g:11659:2: ( ruleDialect )
            // InternalEcl.g:11660:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEcl.g:11669:1: rule__DialectAliasFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11673:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11674:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11674:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11675:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEcl.g:11684:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11688:1: ( ( ruleDialectAlias ) )
            // InternalEcl.g:11689:2: ( ruleDialectAlias )
            {
            // InternalEcl.g:11689:2: ( ruleDialectAlias )
            // InternalEcl.g:11690:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEcl.g:11699:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11703:1: ( ( ruleDialectAlias ) )
            // InternalEcl.g:11704:2: ( ruleDialectAlias )
            {
            // InternalEcl.g:11704:2: ( ruleDialectAlias )
            // InternalEcl.g:11705:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEcl.g:11714:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11718:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEcl.g:11719:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEcl.g:11719:2: ( ruleFilteredExpressionConstraint )
            // InternalEcl.g:11720:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdFilteredExpressionConstraintParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdFilteredExpressionConstraintParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEcl.g:11729:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11733:1: ( ( ruleAcceptability ) )
            // InternalEcl.g:11734:2: ( ruleAcceptability )
            {
            // InternalEcl.g:11734:2: ( ruleAcceptability )
            // InternalEcl.g:11735:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEcl.g:11744:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11748:1: ( ( ruleDialectAliasValue ) )
            // InternalEcl.g:11749:2: ( ruleDialectAliasValue )
            {
            // InternalEcl.g:11749:2: ( ruleDialectAliasValue )
            // InternalEcl.g:11750:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_2"
    // InternalEcl.g:11759:1: rule__DialectAlias__AcceptabilityAssignment_2 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11763:1: ( ( ruleAcceptability ) )
            // InternalEcl.g:11764:2: ( ruleAcceptability )
            {
            // InternalEcl.g:11764:2: ( ruleAcceptability )
            // InternalEcl.g:11765:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_2"


    // $ANTLR start "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"
    // InternalEcl.g:11774:1: rule__AcceptabilityIdSet__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__AcceptabilityIdSet__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11778:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEcl.g:11779:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEcl.g:11779:2: ( ruleEclConceptReferenceSet )
            // InternalEcl.g:11780:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"
    // InternalEcl.g:11789:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 : ( ruleUnquotedString ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11793:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11794:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11794:2: ( ruleUnquotedString )
            // InternalEcl.g:11795:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesUnquotedStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"


    // $ANTLR start "rule__DefinitionStatusIdFilter__OpAssignment_1"
    // InternalEcl.g:11804:1: rule__DefinitionStatusIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DefinitionStatusIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11808:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11809:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11809:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11810:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2"
    // InternalEcl.g:11819:1: rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11823:1: ( ( ruleFilterValue ) )
            // InternalEcl.g:11824:2: ( ruleFilterValue )
            {
            // InternalEcl.g:11824:2: ( ruleFilterValue )
            // InternalEcl.g:11825:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusIdFilterAccess().getDefinitionStatusFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusIdFilter__DefinitionStatusAssignment_2"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__OpAssignment_1"
    // InternalEcl.g:11834:1: rule__DefinitionStatusTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DefinitionStatusTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11838:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11839:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11839:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11840:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0"
    // InternalEcl.g:11849:1: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0 : ( ruleUnquotedString ) ;
    public final void rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11853:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11854:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11854:2: ( ruleUnquotedString )
            // InternalEcl.g:11855:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_0"


    // $ANTLR start "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1"
    // InternalEcl.g:11864:1: rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1 : ( ruleUnquotedString ) ;
    public final void rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11868:1: ( ( ruleUnquotedString ) )
            // InternalEcl.g:11869:2: ( ruleUnquotedString )
            {
            // InternalEcl.g:11869:2: ( ruleUnquotedString )
            // InternalEcl.g:11870:3: ruleUnquotedString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleUnquotedString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDefinitionStatusTokenFilterAccess().getDefinitionStatusTokensUnquotedStringParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DefinitionStatusTokenFilter__DefinitionStatusTokensAssignment_2_1_1"


    // $ANTLR start "rule__ModuleFilter__OpAssignment_1"
    // InternalEcl.g:11879:1: rule__ModuleFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__ModuleFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11883:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11884:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11884:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11885:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__OpAssignment_1"


    // $ANTLR start "rule__ModuleFilter__ModuleIdAssignment_2"
    // InternalEcl.g:11894:1: rule__ModuleFilter__ModuleIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__ModuleFilter__ModuleIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11898:1: ( ( ruleFilterValue ) )
            // InternalEcl.g:11899:2: ( ruleFilterValue )
            {
            // InternalEcl.g:11899:2: ( ruleFilterValue )
            // InternalEcl.g:11900:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__ModuleIdAssignment_2"


    // $ANTLR start "rule__EffectiveTimeFilter__OpAssignment_1"
    // InternalEcl.g:11909:1: rule__EffectiveTimeFilter__OpAssignment_1 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__EffectiveTimeFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11913:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEcl.g:11914:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEcl.g:11914:2: ( ruleNUMERIC_OPERATOR )
            // InternalEcl.g:11915:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getOpNUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__OpAssignment_1"


    // $ANTLR start "rule__EffectiveTimeFilter__EffectiveTimeAssignment_2"
    // InternalEcl.g:11924:1: rule__EffectiveTimeFilter__EffectiveTimeAssignment_2 : ( RULE_STRING ) ;
    public final void rule__EffectiveTimeFilter__EffectiveTimeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11928:1: ( ( RULE_STRING ) )
            // InternalEcl.g:11929:2: ( RULE_STRING )
            {
            // InternalEcl.g:11929:2: ( RULE_STRING )
            // InternalEcl.g:11930:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEffectiveTimeFilterAccess().getEffectiveTimeSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EffectiveTimeFilter__EffectiveTimeAssignment_2"


    // $ANTLR start "rule__ActiveFilter__OpAssignment_1"
    // InternalEcl.g:11939:1: rule__ActiveFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__ActiveFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11943:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11944:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11944:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11945:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__OpAssignment_1"


    // $ANTLR start "rule__ActiveFilter__ActiveAssignment_2"
    // InternalEcl.g:11954:1: rule__ActiveFilter__ActiveAssignment_2 : ( ruleActiveBoolean ) ;
    public final void rule__ActiveFilter__ActiveAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11958:1: ( ( ruleActiveBoolean ) )
            // InternalEcl.g:11959:2: ( ruleActiveBoolean )
            {
            // InternalEcl.g:11959:2: ( ruleActiveBoolean )
            // InternalEcl.g:11960:3: ruleActiveBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveActiveBooleanParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleActiveBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveActiveBooleanParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__ActiveAssignment_2"


    // $ANTLR start "rule__SemanticTagFilter__OpAssignment_1"
    // InternalEcl.g:11969:1: rule__SemanticTagFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__SemanticTagFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11973:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEcl.g:11974:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEcl.g:11974:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEcl.g:11975:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__OpAssignment_1"


    // $ANTLR start "rule__SemanticTagFilter__SemanticTagAssignment_2"
    // InternalEcl.g:11984:1: rule__SemanticTagFilter__SemanticTagAssignment_2 : ( RULE_STRING ) ;
    public final void rule__SemanticTagFilter__SemanticTagAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:11988:1: ( ( RULE_STRING ) )
            // InternalEcl.g:11989:2: ( RULE_STRING )
            {
            // InternalEcl.g:11989:2: ( RULE_STRING )
            // InternalEcl.g:11990:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSemanticTagFilterAccess().getSemanticTagSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SemanticTagFilter__SemanticTagAssignment_2"


    // $ANTLR start "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"
    // InternalEcl.g:11999:1: rule__PreferredInFilter__LanguageRefSetIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__PreferredInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:12003:1: ( ( ruleFilterValue ) )
            // InternalEcl.g:12004:2: ( ruleFilterValue )
            {
            // InternalEcl.g:12004:2: ( ruleFilterValue )
            // InternalEcl.g:12005:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"
    // InternalEcl.g:12014:1: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__AcceptableInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:12018:1: ( ( ruleFilterValue ) )
            // InternalEcl.g:12019:2: ( ruleFilterValue )
            {
            // InternalEcl.g:12019:2: ( ruleFilterValue )
            // InternalEcl.g:12020:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"
    // InternalEcl.g:12029:1: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:12033:1: ( ( ruleFilterValue ) )
            // InternalEcl.g:12034:2: ( ruleFilterValue )
            {
            // InternalEcl.g:12034:2: ( ruleFilterValue )
            // InternalEcl.g:12035:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"
    // InternalEcl.g:12044:1: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 : ( ruleFilterValue ) ;
    public final void rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:12048:1: ( ( ruleFilterValue ) )
            // InternalEcl.g:12049:2: ( ruleFilterValue )
            {
            // InternalEcl.g:12049:2: ( ruleFilterValue )
            // InternalEcl.g:12050:3: ruleFilterValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdFilterValueParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdFilterValueParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"


    // $ANTLR start "rule__HistorySupplement__HistoryAssignment_4"
    // InternalEcl.g:12059:1: rule__HistorySupplement__HistoryAssignment_4 : ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) ) ;
    public final void rule__HistorySupplement__HistoryAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:12063:1: ( ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) ) )
            // InternalEcl.g:12064:2: ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) )
            {
            // InternalEcl.g:12064:2: ( ( rule__HistorySupplement__HistoryAlternatives_4_0 ) )
            // InternalEcl.g:12065:3: ( rule__HistorySupplement__HistoryAlternatives_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistorySupplementAccess().getHistoryAlternatives_4_0()); 
            }
            // InternalEcl.g:12066:3: ( rule__HistorySupplement__HistoryAlternatives_4_0 )
            // InternalEcl.g:12066:4: rule__HistorySupplement__HistoryAlternatives_4_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__HistorySupplement__HistoryAlternatives_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistorySupplementAccess().getHistoryAlternatives_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistorySupplement__HistoryAssignment_4"


    // $ANTLR start "rule__HistoryProfile__ProfileAssignment_1"
    // InternalEcl.g:12074:1: rule__HistoryProfile__ProfileAssignment_1 : ( ruleHISTORY_PROFILE_TYPE ) ;
    public final void rule__HistoryProfile__ProfileAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEcl.g:12078:1: ( ( ruleHISTORY_PROFILE_TYPE ) )
            // InternalEcl.g:12079:2: ( ruleHISTORY_PROFILE_TYPE )
            {
            // InternalEcl.g:12079:2: ( ruleHISTORY_PROFILE_TYPE )
            // InternalEcl.g:12080:3: ruleHISTORY_PROFILE_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getHistoryProfileAccess().getProfileHISTORY_PROFILE_TYPEParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleHISTORY_PROFILE_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getHistoryProfileAccess().getProfileHISTORY_PROFILE_TYPEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__HistoryProfile__ProfileAssignment_1"

    // $ANTLR start synpred2_InternalEcl
    public final void synpred2_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2491:5: ( rule__DialectAliasValue__Alternatives )
        // InternalEcl.g:2491:5: rule__DialectAliasValue__Alternatives
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalEcl

    // $ANTLR start synpred18_InternalEcl
    public final void synpred18_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2796:2: ( ( ruleAttributeConstraint ) )
        // InternalEcl.g:2796:2: ( ruleAttributeConstraint )
        {
        // InternalEcl.g:2796:2: ( ruleAttributeConstraint )
        // InternalEcl.g:2797:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalEcl

    // $ANTLR start synpred19_InternalEcl
    public final void synpred19_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2802:2: ( ( ruleEclAttributeGroup ) )
        // InternalEcl.g:2802:2: ( ruleEclAttributeGroup )
        {
        // InternalEcl.g:2802:2: ( ruleEclAttributeGroup )
        // InternalEcl.g:2803:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalEcl

    // $ANTLR start synpred21_InternalEcl
    public final void synpred21_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2844:2: ( ( ruleAttributeConstraint ) )
        // InternalEcl.g:2844:2: ( ruleAttributeConstraint )
        {
        // InternalEcl.g:2844:2: ( ruleAttributeConstraint )
        // InternalEcl.g:2845:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalEcl

    // $ANTLR start synpred27_InternalEcl
    public final void synpred27_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2940:2: ( ( ruleTermFilter ) )
        // InternalEcl.g:2940:2: ( ruleTermFilter )
        {
        // InternalEcl.g:2940:2: ( ruleTermFilter )
        // InternalEcl.g:2941:3: ruleTermFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleTermFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_InternalEcl

    // $ANTLR start synpred28_InternalEcl
    public final void synpred28_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2946:2: ( ( ruleLanguageFilter ) )
        // InternalEcl.g:2946:2: ( ruleLanguageFilter )
        {
        // InternalEcl.g:2946:2: ( ruleLanguageFilter )
        // InternalEcl.g:2947:3: ruleLanguageFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLanguageFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred28_InternalEcl

    // $ANTLR start synpred29_InternalEcl
    public final void synpred29_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2952:2: ( ( ruleTypeFilter ) )
        // InternalEcl.g:2952:2: ( ruleTypeFilter )
        {
        // InternalEcl.g:2952:2: ( ruleTypeFilter )
        // InternalEcl.g:2953:3: ruleTypeFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleTypeFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalEcl

    // $ANTLR start synpred30_InternalEcl
    public final void synpred30_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2958:2: ( ( ruleDialectFilter ) )
        // InternalEcl.g:2958:2: ( ruleDialectFilter )
        {
        // InternalEcl.g:2958:2: ( ruleDialectFilter )
        // InternalEcl.g:2959:3: ruleDialectFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDialectFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalEcl

    // $ANTLR start synpred31_InternalEcl
    public final void synpred31_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2964:2: ( ( ruleDefinitionStatusFilter ) )
        // InternalEcl.g:2964:2: ( ruleDefinitionStatusFilter )
        {
        // InternalEcl.g:2964:2: ( ruleDefinitionStatusFilter )
        // InternalEcl.g:2965:3: ruleDefinitionStatusFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getDefinitionStatusFilterParserRuleCall_4()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleDefinitionStatusFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalEcl

    // $ANTLR start synpred32_InternalEcl
    public final void synpred32_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2970:2: ( ( ruleModuleFilter ) )
        // InternalEcl.g:2970:2: ( ruleModuleFilter )
        {
        // InternalEcl.g:2970:2: ( ruleModuleFilter )
        // InternalEcl.g:2971:3: ruleModuleFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_5()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleModuleFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalEcl

    // $ANTLR start synpred33_InternalEcl
    public final void synpred33_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2976:2: ( ( ruleEffectiveTimeFilter ) )
        // InternalEcl.g:2976:2: ( ruleEffectiveTimeFilter )
        {
        // InternalEcl.g:2976:2: ( ruleEffectiveTimeFilter )
        // InternalEcl.g:2977:3: ruleEffectiveTimeFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getEffectiveTimeFilterParserRuleCall_6()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEffectiveTimeFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalEcl

    // $ANTLR start synpred34_InternalEcl
    public final void synpred34_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2982:2: ( ( ruleActiveFilter ) )
        // InternalEcl.g:2982:2: ( ruleActiveFilter )
        {
        // InternalEcl.g:2982:2: ( ruleActiveFilter )
        // InternalEcl.g:2983:3: ruleActiveFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_7()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleActiveFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalEcl

    // $ANTLR start synpred35_InternalEcl
    public final void synpred35_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2988:2: ( ( ruleSemanticTagFilter ) )
        // InternalEcl.g:2988:2: ( ruleSemanticTagFilter )
        {
        // InternalEcl.g:2988:2: ( ruleSemanticTagFilter )
        // InternalEcl.g:2989:3: ruleSemanticTagFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getSemanticTagFilterParserRuleCall_8()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleSemanticTagFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred35_InternalEcl

    // $ANTLR start synpred36_InternalEcl
    public final void synpred36_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:2994:2: ( ( rulePreferredInFilter ) )
        // InternalEcl.g:2994:2: ( rulePreferredInFilter )
        {
        // InternalEcl.g:2994:2: ( rulePreferredInFilter )
        // InternalEcl.g:2995:3: rulePreferredInFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_9()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        rulePreferredInFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred36_InternalEcl

    // $ANTLR start synpred37_InternalEcl
    public final void synpred37_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3000:2: ( ( ruleAcceptableInFilter ) )
        // InternalEcl.g:3000:2: ( ruleAcceptableInFilter )
        {
        // InternalEcl.g:3000:2: ( ruleAcceptableInFilter )
        // InternalEcl.g:3001:3: ruleAcceptableInFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_10()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAcceptableInFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred37_InternalEcl

    // $ANTLR start synpred38_InternalEcl
    public final void synpred38_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3006:2: ( ( ruleLanguageRefSetFilter ) )
        // InternalEcl.g:3006:2: ( ruleLanguageRefSetFilter )
        {
        // InternalEcl.g:3006:2: ( ruleLanguageRefSetFilter )
        // InternalEcl.g:3007:3: ruleLanguageRefSetFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_11()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleLanguageRefSetFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred38_InternalEcl

    // $ANTLR start synpred39_InternalEcl
    public final void synpred39_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3012:2: ( ( ruleCaseSignificanceFilter ) )
        // InternalEcl.g:3012:2: ( ruleCaseSignificanceFilter )
        {
        // InternalEcl.g:3012:2: ( ruleCaseSignificanceFilter )
        // InternalEcl.g:3013:3: ruleCaseSignificanceFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_12()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleCaseSignificanceFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred39_InternalEcl

    // $ANTLR start synpred40_InternalEcl
    public final void synpred40_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3018:2: ( ( ruleMemberFieldFilter ) )
        // InternalEcl.g:3018:2: ( ruleMemberFieldFilter )
        {
        // InternalEcl.g:3018:2: ( ruleMemberFieldFilter )
        // InternalEcl.g:3019:3: ruleMemberFieldFilter
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getPropertyFilterAccess().getMemberFieldFilterParserRuleCall_13()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleMemberFieldFilter();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred40_InternalEcl

    // $ANTLR start synpred47_InternalEcl
    public final void synpred47_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3165:2: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) )
        // InternalEcl.g:3165:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
        {
        // InternalEcl.g:3165:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
        // InternalEcl.g:3166:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
        }
        // InternalEcl.g:3167:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
        // InternalEcl.g:3167:4: rule__DialectIdFilter__DialectsAssignment_2_0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectIdFilter__DialectsAssignment_2_0();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred47_InternalEcl

    // $ANTLR start synpred49_InternalEcl
    public final void synpred49_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3207:2: ( ( ruleAcceptabilityIdSet ) )
        // InternalEcl.g:3207:2: ( ruleAcceptabilityIdSet )
        {
        // InternalEcl.g:3207:2: ( ruleAcceptabilityIdSet )
        // InternalEcl.g:3208:3: ruleAcceptabilityIdSet
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAcceptabilityIdSet();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred49_InternalEcl

    // $ANTLR start synpred52_InternalEcl
    public final void synpred52_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:3270:2: ( ( ruleFilteredExpressionConstraint ) )
        // InternalEcl.g:3270:2: ( ruleFilteredExpressionConstraint )
        {
        // InternalEcl.g:3270:2: ( ruleFilteredExpressionConstraint )
        // InternalEcl.g:3271:3: ruleFilteredExpressionConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getFilterValueAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleFilteredExpressionConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred52_InternalEcl

    // $ANTLR start synpred132_InternalEcl
    public final void synpred132_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:5831:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEcl.g:5831:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_InternalEcl

    // $ANTLR start synpred133_InternalEcl
    public final void synpred133_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:5993:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEcl.g:5993:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_InternalEcl

    // $ANTLR start synpred138_InternalEcl
    public final void synpred138_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:6696:3: ( rule__AttributeConstraint__ReversedAssignment_1 )
        // InternalEcl.g:6696:3: rule__AttributeConstraint__ReversedAssignment_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AttributeConstraint__ReversedAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_InternalEcl

    // $ANTLR start synpred149_InternalEcl
    public final void synpred149_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:8971:3: ( rule__Dialect__AcceptabilityAssignment_1 )
        // InternalEcl.g:8971:3: rule__Dialect__AcceptabilityAssignment_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Dialect__AcceptabilityAssignment_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_InternalEcl

    // $ANTLR start synpred155_InternalEcl
    public final void synpred155_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:10288:4: ( rule__Identifier__Alternatives_0 )
        // InternalEcl.g:10288:4: rule__Identifier__Alternatives_0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Identifier__Alternatives_0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred155_InternalEcl

    // $ANTLR start synpred156_InternalEcl
    public final void synpred156_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:10315:3: ( rule__Identifier__Group_1__0 )
        // InternalEcl.g:10315:3: rule__Identifier__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Identifier__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalEcl

    // $ANTLR start synpred157_InternalEcl
    public final void synpred157_InternalEcl_fragment() throws RecognitionException {   
        // InternalEcl.g:10375:4: ( rule__Identifier__Alternatives_1_1 )
        // InternalEcl.g:10375:4: rule__Identifier__Alternatives_1_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__Identifier__Alternatives_1_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_InternalEcl

    // Delegated rules

    public final boolean synpred32_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalEcl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalEcl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA2 dfa2 = new DFA2(this);
    protected DFA8 dfa8 = new DFA8(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA26 dfa26 = new DFA26(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA80 dfa80 = new DFA80(this);
    static final String dfa_1s = "\50\uffff";
    static final String dfa_2s = "\1\1\47\uffff";
    static final String dfa_3s = "\1\5\1\uffff\45\0\1\uffff";
    static final String dfa_4s = "\1\107\1\uffff\45\0\1\uffff";
    static final String dfa_5s = "\1\uffff\1\2\45\uffff\1\1";
    static final String dfa_6s = "\2\uffff\1\31\1\16\1\22\1\32\1\11\1\4\1\27\1\0\1\23\1\14\1\43\1\7\1\36\1\25\1\6\1\21\1\2\1\40\1\17\1\33\1\12\1\5\1\30\1\1\1\24\1\15\1\44\1\10\1\37\1\26\1\3\1\41\1\20\1\34\1\13\1\35\1\42\1\uffff}>";
    static final String[] dfa_7s = {
            "\1\46\1\2\1\1\1\4\2\uffff\1\43\1\42\1\40\1\45\1\uffff\1\44\1\uffff\1\32\1\26\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\27\1\30\1\31\1\33\1\34\1\35\1\36\1\37\1\3\1\41\20\uffff\2\1\5\uffff\2\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 2491:4: ( rule__DialectAliasValue__Alternatives )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA2_9 = input.LA(1);

                         
                        int index2_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA2_25 = input.LA(1);

                         
                        int index2_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA2_18 = input.LA(1);

                         
                        int index2_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_18);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA2_32 = input.LA(1);

                         
                        int index2_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_32);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA2_7 = input.LA(1);

                         
                        int index2_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA2_23 = input.LA(1);

                         
                        int index2_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_23);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA2_16 = input.LA(1);

                         
                        int index2_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_16);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA2_13 = input.LA(1);

                         
                        int index2_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA2_29 = input.LA(1);

                         
                        int index2_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_29);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA2_6 = input.LA(1);

                         
                        int index2_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_6);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA2_22 = input.LA(1);

                         
                        int index2_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA2_36 = input.LA(1);

                         
                        int index2_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_36);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA2_11 = input.LA(1);

                         
                        int index2_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_11);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA2_27 = input.LA(1);

                         
                        int index2_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_27);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA2_3 = input.LA(1);

                         
                        int index2_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_3);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA2_20 = input.LA(1);

                         
                        int index2_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_20);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA2_34 = input.LA(1);

                         
                        int index2_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_34);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA2_17 = input.LA(1);

                         
                        int index2_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA2_4 = input.LA(1);

                         
                        int index2_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_4);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA2_10 = input.LA(1);

                         
                        int index2_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_10);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA2_26 = input.LA(1);

                         
                        int index2_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_26);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA2_15 = input.LA(1);

                         
                        int index2_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_15);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA2_31 = input.LA(1);

                         
                        int index2_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_31);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA2_8 = input.LA(1);

                         
                        int index2_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_8);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA2_24 = input.LA(1);

                         
                        int index2_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA2_2 = input.LA(1);

                         
                        int index2_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_2);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA2_5 = input.LA(1);

                         
                        int index2_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_5);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA2_21 = input.LA(1);

                         
                        int index2_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_21);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA2_35 = input.LA(1);

                         
                        int index2_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_35);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA2_37 = input.LA(1);

                         
                        int index2_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_37);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA2_14 = input.LA(1);

                         
                        int index2_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_14);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA2_30 = input.LA(1);

                         
                        int index2_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_30);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA2_19 = input.LA(1);

                         
                        int index2_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_19);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA2_33 = input.LA(1);

                         
                        int index2_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA2_38 = input.LA(1);

                         
                        int index2_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_38);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA2_12 = input.LA(1);

                         
                        int index2_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_12);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA2_28 = input.LA(1);

                         
                        int index2_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalEcl()) ) {s = 39;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index2_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 2, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\25\uffff";
    static final String dfa_9s = "\1\5\1\0\20\uffff\1\0\2\uffff";
    static final String dfa_10s = "\1\101\1\0\20\uffff\1\0\2\uffff";
    static final String dfa_11s = "\2\uffff\1\1\20\uffff\1\2\1\3";
    static final String dfa_12s = "\1\uffff\1\0\20\uffff\1\1\2\uffff}>";
    static final String[] dfa_13s = {
            "\1\2\4\uffff\5\2\1\uffff\1\2\40\uffff\2\2\3\uffff\7\2\1\1\1\uffff\1\22\1\uffff\1\23",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA8 extends DFA {

        public DFA8(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 8;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "2791:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA8_1 = input.LA(1);

                         
                        int index8_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEcl()) ) {s = 2;}

                        else if ( (synpred19_InternalEcl()) ) {s = 19;}

                         
                        input.seek(index8_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA8_18 = input.LA(1);

                         
                        int index8_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEcl()) ) {s = 2;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index8_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 8, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\24\uffff";
    static final String dfa_15s = "\1\5\21\uffff\1\0\1\uffff";
    static final String dfa_16s = "\1\77\21\uffff\1\0\1\uffff";
    static final String dfa_17s = "\1\uffff\1\1\21\uffff\1\2";
    static final String dfa_18s = "\22\uffff\1\0\1\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\4\uffff\5\1\1\uffff\1\1\40\uffff\2\1\3\uffff\10\1\1\uffff\1\22",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2839:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_18 = input.LA(1);

                         
                        int index10_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalEcl()) ) {s = 1;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index10_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\20\uffff";
    static final String dfa_21s = "\14\uffff\2\17\2\uffff";
    static final String dfa_22s = "\1\57\2\4\4\104\2\uffff\5\5\2\uffff";
    static final String dfa_23s = "\1\64\6\104\2\uffff\1\21\2\5\2\106\2\uffff";
    static final String dfa_24s = "\7\uffff\1\1\1\2\5\uffff\1\4\1\3";
    static final String dfa_25s = "\20\uffff}>";
    static final String[] dfa_26s = {
            "\1\1\1\2\1\3\1\4\1\5\1\6",
            "\1\10\15\uffff\2\7\20\uffff\3\10\2\uffff\1\10\25\uffff\1\10\4\uffff\1\11",
            "\1\10\15\uffff\2\7\20\uffff\3\10\2\uffff\1\10\25\uffff\1\10\4\uffff\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "",
            "",
            "\1\14\2\uffff\1\13\10\uffff\1\12",
            "\1\14",
            "\1\14",
            "\1\15\2\17\7\uffff\1\16\23\uffff\1\17\11\uffff\1\17\22\uffff\1\17\1\uffff\1\17\3\uffff\1\17",
            "\1\15\2\17\7\uffff\1\16\23\uffff\1\17\11\uffff\1\17\22\uffff\1\17\1\uffff\1\17\3\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "2881:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_27s = "\62\uffff";
    static final String dfa_28s = "\1\6\20\0\41\uffff";
    static final String dfa_29s = "\1\77\20\0\41\uffff";
    static final String dfa_30s = "\21\uffff\1\16\22\uffff\1\17\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15";
    static final String dfa_31s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\41\uffff}>";
    static final String[] dfa_32s = {
            "\1\21\4\uffff\4\21\1\uffff\1\21\1\uffff\3\21\1\20\1\7\1\10\1\17\1\12\1\16\1\15\1\14\1\5\1\2\1\11\1\6\1\13\1\3\4\21\1\1\1\4\6\21\20\uffff\1\44",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "2935:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleDefinitionStatusFilter ) | ( ruleModuleFilter ) | ( ruleEffectiveTimeFilter ) | ( ruleActiveFilter ) | ( ruleSemanticTagFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleMemberFieldFilter ) | ( ruleNestedFilter ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA14_1 = input.LA(1);

                         
                        int index14_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalEcl()) ) {s = 37;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA14_2 = input.LA(1);

                         
                        int index14_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_InternalEcl()) ) {s = 38;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA14_3 = input.LA(1);

                         
                        int index14_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalEcl()) ) {s = 39;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA14_4 = input.LA(1);

                         
                        int index14_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_InternalEcl()) ) {s = 39;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA14_5 = input.LA(1);

                         
                        int index14_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEcl()) ) {s = 40;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA14_6 = input.LA(1);

                         
                        int index14_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalEcl()) ) {s = 40;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA14_7 = input.LA(1);

                         
                        int index14_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalEcl()) ) {s = 41;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA14_8 = input.LA(1);

                         
                        int index14_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred31_InternalEcl()) ) {s = 41;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA14_9 = input.LA(1);

                         
                        int index14_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalEcl()) ) {s = 42;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA14_10 = input.LA(1);

                         
                        int index14_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_InternalEcl()) ) {s = 43;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA14_11 = input.LA(1);

                         
                        int index14_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalEcl()) ) {s = 44;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA14_12 = input.LA(1);

                         
                        int index14_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred35_InternalEcl()) ) {s = 45;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA14_13 = input.LA(1);

                         
                        int index14_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred36_InternalEcl()) ) {s = 46;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA14_14 = input.LA(1);

                         
                        int index14_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalEcl()) ) {s = 47;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA14_15 = input.LA(1);

                         
                        int index14_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred38_InternalEcl()) ) {s = 48;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA14_16 = input.LA(1);

                         
                        int index14_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_InternalEcl()) ) {s = 49;}

                        else if ( (synpred40_InternalEcl()) ) {s = 17;}

                         
                        input.seek(index14_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 14, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_33s = "\23\uffff";
    static final String dfa_34s = "\1\5\20\uffff\1\0\1\uffff";
    static final String dfa_35s = "\1\77\20\uffff\1\0\1\uffff";
    static final String dfa_36s = "\1\uffff\1\1\20\uffff\1\2";
    static final String dfa_37s = "\21\uffff\1\0\1\uffff}>";
    static final String[] dfa_38s = {
            "\1\1\4\uffff\5\1\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\21",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3160:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA21_17 = input.LA(1);

                         
                        int index21_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalEcl()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index21_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 21, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\21\uffff";
    static final String dfa_40s = "\1\77\1\5\1\uffff\4\5\1\uffff\4\5\1\0\4\5";
    static final String dfa_41s = "\1\77\1\56\1\uffff\4\110\1\uffff\4\110\1\0\4\110";
    static final String dfa_42s = "\2\uffff\1\1\4\uffff\1\2\11\uffff";
    static final String dfa_43s = "\14\uffff\1\0\4\uffff}>";
    static final String[] dfa_44s = {
            "\1\1",
            "\1\2\1\7\3\uffff\1\2\1\3\1\4\1\5\1\6\1\uffff\1\7\1\uffff\35\7",
            "",
            "\1\2\1\7\1\uffff\3\2\1\12\1\11\1\10\1\13\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\12\1\11\1\10\1\13\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\12\1\11\1\10\1\13\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\12\1\11\1\10\1\13\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\uffff",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2",
            "\1\2\1\7\1\uffff\3\2\1\17\1\16\1\15\1\20\1\2\1\7\1\uffff\35\7\21\uffff\1\14\7\uffff\1\2"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final char[] dfa_40 = DFA.unpackEncodedStringToUnsignedChars(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_39;
            this.eof = dfa_39;
            this.min = dfa_40;
            this.max = dfa_41;
            this.accept = dfa_42;
            this.special = dfa_43;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "3202:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_12 = input.LA(1);

                         
                        int index23_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalEcl()) ) {s = 2;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index23_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_45s = "\u00b7\uffff";
    static final String dfa_46s = "\1\5\1\uffff\21\5\1\0\26\5\1\uffff\u008c\5";
    static final String dfa_47s = "\1\77\1\uffff\1\77\14\110\1\77\2\16\1\105\1\0\1\77\2\16\1\105\22\110\1\uffff\22\110\1\105\1\77\2\16\14\110\1\105\1\77\2\16\146\110";
    static final String dfa_48s = "\1\uffff\1\1\50\uffff\1\2\u008c\uffff";
    static final String dfa_49s = "\23\uffff\1\0\u00a3\uffff}>";
    static final String[] dfa_50s = {
            "\1\1\4\uffff\5\1\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\2",
            "",
            "\1\3\4\uffff\1\4\1\5\1\6\1\7\1\10\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\1",
            "\1\11\2\1\1\20\1\21\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\11\2\1\1\20\1\21\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\11\2\1\1\20\1\21\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\11\2\1\1\20\1\21\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\11\2\1\1\20\1\21\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\11\2\1\1\20\1\21\1\12\1\13\1\14\1\15\1\16\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\36\4\uffff\1\37\1\40\1\41\1\42\1\43\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\1",
            "\1\44\4\uffff\1\45\1\46\1\47\1\50\1\51",
            "\1\44\4\uffff\1\45\1\46\1\47\1\50\1\51",
            "\1\52\2\1\2\uffff\5\52\1\1\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1",
            "\1\uffff",
            "\1\53\4\uffff\1\54\1\55\1\56\1\57\1\60\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\1",
            "\1\61\4\uffff\1\62\1\63\1\64\1\65\1\66",
            "\1\61\4\uffff\1\62\1\63\1\64\1\65\1\66",
            "\1\52\2\1\2\uffff\5\52\1\1\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\30\2\1\1\25\1\26\1\31\1\32\1\33\1\34\1\35\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\67\2\1\1\77\1\100\1\70\1\71\1\72\1\73\1\74\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\67\2\1\1\77\1\100\1\70\1\71\1\72\1\73\1\74\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\67\2\1\1\77\1\100\1\70\1\71\1\72\1\73\1\74\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\67\2\1\1\77\1\100\1\70\1\71\1\72\1\73\1\74\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\67\2\1\1\77\1\100\1\70\1\71\1\72\1\73\1\74\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\67\2\1\1\77\1\100\1\70\1\71\1\72\1\73\1\74\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\101\2\1\1\20\1\21\1\102\1\103\1\104\1\105\1\106\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\101\2\1\1\20\1\21\1\102\1\103\1\104\1\105\1\106\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\101\2\1\1\20\1\21\1\102\1\103\1\104\1\105\1\106\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\101\2\1\1\20\1\21\1\102\1\103\1\104\1\105\1\106\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\101\2\1\1\20\1\21\1\102\1\103\1\104\1\105\1\106\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "\1\101\2\1\1\20\1\21\1\102\1\103\1\104\1\105\1\106\1\17\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\22",
            "",
            "\1\107\2\1\1\117\1\120\1\110\1\111\1\112\1\113\1\114\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\107\2\1\1\117\1\120\1\110\1\111\1\112\1\113\1\114\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\107\2\1\1\117\1\120\1\110\1\111\1\112\1\113\1\114\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\107\2\1\1\117\1\120\1\110\1\111\1\112\1\113\1\114\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\107\2\1\1\117\1\120\1\110\1\111\1\112\1\113\1\114\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\107\2\1\1\117\1\120\1\110\1\111\1\112\1\113\1\114\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\121\2\1\1\25\1\26\1\122\1\123\1\124\1\125\1\126\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\121\2\1\1\25\1\26\1\122\1\123\1\124\1\125\1\126\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\121\2\1\1\25\1\26\1\122\1\123\1\124\1\125\1\126\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\121\2\1\1\25\1\26\1\122\1\123\1\124\1\125\1\126\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\121\2\1\1\25\1\26\1\122\1\123\1\124\1\125\1\126\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\121\2\1\1\25\1\26\1\122\1\123\1\124\1\125\1\126\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\52\2\1\2\uffff\5\52\1\1\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1",
            "\1\135\4\uffff\1\136\1\137\1\140\1\141\1\142\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\1",
            "\1\143\4\uffff\1\144\1\145\1\146\1\147\1\150",
            "\1\143\4\uffff\1\144\1\145\1\146\1\147\1\150",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\52\2\1\2\uffff\5\52\1\1\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1",
            "\1\165\4\uffff\1\166\1\167\1\170\1\171\1\172\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\1",
            "\1\173\4\uffff\1\174\1\175\1\176\1\177\1\u0080",
            "\1\173\4\uffff\1\174\1\175\1\176\1\177\1\u0080",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\127\2\1\1\117\1\120\1\130\1\131\1\132\1\133\1\134\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0087\2\1\1\77\1\100\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u0087\2\1\1\77\1\100\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u0087\2\1\1\77\1\100\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u0087\2\1\1\77\1\100\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u0087\2\1\1\77\1\100\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u0087\2\1\1\77\1\100\1\u0088\1\u0089\1\u008a\1\u008b\1\u008c\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u008d\2\1\1\77\1\100\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u008d\2\1\1\77\1\100\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u008d\2\1\1\77\1\100\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u008d\2\1\1\77\1\100\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u008d\2\1\1\77\1\100\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\u008d\2\1\1\77\1\100\1\u008e\1\u008f\1\u0090\1\u0091\1\u0092\1\76\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\75",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\151\2\1\1\25\1\26\1\152\1\153\1\154\1\155\1\156\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\157\2\1\1\117\1\120\1\160\1\161\1\162\1\163\1\164\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0093\2\1\1\117\1\120\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0093\2\1\1\117\1\120\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0093\2\1\1\117\1\120\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0093\2\1\1\117\1\120\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0093\2\1\1\117\1\120\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0093\2\1\1\117\1\120\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0099\2\1\1\117\1\120\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0099\2\1\1\117\1\120\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0099\2\1\1\117\1\120\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0099\2\1\1\117\1\120\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0099\2\1\1\117\1\120\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0099\2\1\1\117\1\120\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u0081\2\1\1\25\1\26\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\24\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\27",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u009f\2\1\1\117\1\120\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\u00a4\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00a5\2\1\1\117\1\120\1\u00a6\1\u00a7\1\u00a8\1\u00a9\1\u00aa\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00ab\2\1\1\117\1\120\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115",
            "\1\u00b1\2\1\1\117\1\120\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\116\23\uffff\1\1\11\uffff\1\1\7\uffff\1\1\12\uffff\1\23\4\uffff\1\1\2\uffff\1\115"
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_45;
            this.eof = dfa_45;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "3265:1: rule__FilterValue__Alternatives : ( ( ruleFilteredExpressionConstraint ) | ( ruleEclConceptReferenceSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_19 = input.LA(1);

                         
                        int index26_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_InternalEcl()) ) {s = 1;}

                        else if ( (true) ) {s = 42;}

                         
                        input.seek(index26_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\14\uffff";
    static final String dfa_52s = "\1\uffff\1\2\12\uffff";
    static final String dfa_53s = "\2\5\2\uffff\2\5\6\0";
    static final String dfa_54s = "\1\77\1\110\2\uffff\2\104\6\0";
    static final String dfa_55s = "\2\uffff\1\2\1\1\10\uffff";
    static final String dfa_56s = "\6\uffff\1\3\1\5\1\4\1\1\1\0\1\2}>";
    static final String[] dfa_57s = {
            "\1\2\4\uffff\3\2\1\1\1\2\1\uffff\1\2\40\uffff\2\2\3\uffff\7\2\2\uffff\1\2",
            "\1\6\4\2\1\7\1\10\1\11\1\12\1\13\1\2\1\3\22\uffff\1\2\11\uffff\1\2\1\uffff\2\2\1\5\1\4\2\2\1\uffff\7\3\2\uffff\1\3\1\2\1\uffff\1\2\2\uffff\1\2\2\uffff\1\2",
            "",
            "",
            "\1\3\4\uffff\5\3\1\uffff\1\3\53\uffff\1\3\2\uffff\1\3\4\uffff\1\2",
            "\1\3\4\uffff\5\3\1\uffff\1\3\53\uffff\1\3\2\uffff\1\3\4\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "6696:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_10 = input.LA(1);

                         
                        int index62_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_9 = input.LA(1);

                         
                        int index62_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_11 = input.LA(1);

                         
                        int index62_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA62_6 = input.LA(1);

                         
                        int index62_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA62_8 = input.LA(1);

                         
                        int index62_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA62_7 = input.LA(1);

                         
                        int index62_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index62_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\u0108\uffff";
    static final String dfa_59s = "\1\2\u0107\uffff";
    static final String dfa_60s = "\2\5\1\uffff\6\5\1\uffff\1\6\12\5\1\0\7\5\2\0\31\5\1\6\4\5\1\6\5\5\1\6\133\5\1\6\4\5\1\6\4\5\1\6\114\5\1\6\21\5";
    static final String dfa_61s = "\1\106\1\77\1\uffff\6\110\1\uffff\1\105\6\110\1\77\2\16\1\105\1\0\3\100\4\110\2\0\1\77\2\16\1\105\25\110\1\105\4\110\1\105\5\110\1\105\26\110\1\105\1\77\2\16\12\110\1\100\10\110\2\100\6\110\1\105\1\77\2\16\42\110\1\105\4\110\1\105\4\110\1\105\54\110\1\100\37\110\1\105\21\110";
    static final String dfa_62s = "\2\uffff\1\2\6\uffff\1\1\u00fe\uffff";
    static final String dfa_63s = "\25\uffff\1\0\7\uffff\1\1\1\2\u00e9\uffff}>";
    static final String[] dfa_64s = {
            "\3\2\2\uffff\5\2\1\uffff\1\2\34\uffff\1\2\3\uffff\2\2\3\uffff\7\2\2\uffff\1\1\1\2\5\uffff\1\2",
            "\1\3\1\11\3\uffff\1\4\1\5\1\6\1\7\1\10\1\uffff\1\12\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2",
            "",
            "\1\13\2\2\1\22\1\23\1\14\1\15\1\16\1\17\1\20\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\13\2\2\1\22\1\23\1\14\1\15\1\16\1\17\1\20\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\13\1\27\1\2\1\22\1\23\1\14\1\33\1\32\1\31\1\34\1\21\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\24",
            "\1\13\1\27\1\2\1\22\1\23\1\14\1\33\1\32\1\31\1\34\1\21\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\24",
            "\1\13\1\27\1\2\1\22\1\23\1\14\1\33\1\32\1\31\1\34\1\21\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\24",
            "\1\13\1\27\1\2\1\22\1\23\1\14\1\33\1\32\1\31\1\34\1\21\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\24",
            "",
            "\1\27\1\2\3\uffff\4\11\1\2\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\51\4\uffff\1\52\1\53\1\54\1\55\1\56\1\uffff\1\2\40\uffff\2\2\3\uffff\7\2\2\uffff\1\2",
            "\1\57\4\uffff\1\60\1\61\1\62\1\63\1\64",
            "\1\57\4\uffff\1\60\1\61\1\62\1\63\1\64",
            "\1\11\2\2\2\uffff\5\11\1\2\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2",
            "\1\uffff",
            "\1\2\1\11\3\uffff\1\2\1\67\1\66\1\65\1\71\1\uffff\1\70\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2\1\11",
            "\1\2\1\11\3\uffff\1\2\1\74\1\73\1\72\1\76\1\uffff\1\75\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2\1\11",
            "\1\2\1\11\3\uffff\1\2\1\77\1\100\1\101\1\102\1\uffff\1\103\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2\1\11",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\uffff",
            "\1\uffff",
            "\1\110\4\uffff\1\111\1\112\1\113\1\114\1\115\1\uffff\1\2\40\uffff\2\2\3\uffff\7\2\2\uffff\1\2",
            "\1\116\4\uffff\1\117\1\120\1\121\1\122\1\123",
            "\1\116\4\uffff\1\117\1\120\1\121\1\122\1\123",
            "\1\11\2\2\2\uffff\5\11\1\2\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\43\2\2\1\40\1\41\1\44\1\45\1\46\1\47\1\50\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\124\2\2\1\134\1\135\1\125\1\126\1\127\1\130\1\131\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\124\2\2\1\134\1\135\1\125\1\126\1\127\1\130\1\131\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\124\2\2\1\134\1\135\1\125\1\126\1\127\1\130\1\131\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\124\2\2\1\134\1\135\1\125\1\126\1\127\1\130\1\131\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\124\2\2\1\134\1\135\1\125\1\126\1\127\1\130\1\131\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\124\2\2\1\134\1\135\1\125\1\126\1\127\1\130\1\131\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\136\2\2\1\22\1\23\1\137\1\140\1\141\1\142\1\143\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\136\2\2\1\22\1\23\1\137\1\140\1\141\1\142\1\143\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\136\2\2\1\22\1\23\1\137\1\140\1\141\1\142\1\143\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\136\2\2\1\22\1\23\1\137\1\140\1\141\1\142\1\143\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\136\2\2\1\22\1\23\1\137\1\140\1\141\1\142\1\143\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\136\2\2\1\22\1\23\1\137\1\140\1\141\1\142\1\143\1\21\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\24",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\27\1\2\3\uffff\4\11\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\27\1\2\3\uffff\4\11\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\162\1\2\3\uffff\4\11\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\43\1\27\1\2\1\40\1\41\1\44\1\106\1\105\1\104\1\107\1\37\1\11\1\uffff\21\11\1\26\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\35\4\uffff\1\2\2\uffff\1\42",
            "\1\163\2\2\1\173\1\174\1\164\1\165\1\166\1\167\1\170\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\163\2\2\1\173\1\174\1\164\1\165\1\166\1\167\1\170\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\163\2\2\1\173\1\174\1\164\1\165\1\166\1\167\1\170\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\163\2\2\1\173\1\174\1\164\1\165\1\166\1\167\1\170\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\163\2\2\1\173\1\174\1\164\1\165\1\166\1\167\1\170\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\163\2\2\1\173\1\174\1\164\1\165\1\166\1\167\1\170\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\175\2\2\1\40\1\41\1\176\1\177\1\u0080\1\u0081\1\u0082\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\175\2\2\1\40\1\41\1\176\1\177\1\u0080\1\u0081\1\u0082\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\175\2\2\1\40\1\41\1\176\1\177\1\u0080\1\u0081\1\u0082\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\175\2\2\1\40\1\41\1\176\1\177\1\u0080\1\u0081\1\u0082\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\175\2\2\1\40\1\41\1\176\1\177\1\u0080\1\u0081\1\u0082\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\175\2\2\1\40\1\41\1\176\1\177\1\u0080\1\u0081\1\u0082\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\11\2\2\2\uffff\5\11\1\2\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2",
            "\1\u0089\4\uffff\1\u008a\1\u008b\1\u008c\1\u008d\1\u008e\1\uffff\1\2\40\uffff\2\2\3\uffff\7\2\2\uffff\1\2",
            "\1\u008f\4\uffff\1\u0090\1\u0091\1\u0092\1\u0093\1\u0094",
            "\1\u008f\4\uffff\1\u0090\1\u0091\1\u0092\1\u0093\1\u0094",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\146\1\145\1\144\1\147\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\11\3\uffff\1\2\1\u009b\1\u009c\1\u009d\1\u009e\1\uffff\1\u009f\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2\1\11",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\153\1\152\1\151\1\154\1\2\1\11\1\uffff\21\11\1\150\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\155\1\156\1\157\1\160\1\2\1\11\1\uffff\21\11\1\161\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\11\3\uffff\1\2\1\u00a0\1\u00a1\1\u00a2\1\u00a3\1\uffff\1\u00a4\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2\1\11",
            "\1\2\1\11\3\uffff\1\2\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1\uffff\1\u00a9\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2\1\11",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\11\2\2\2\uffff\5\11\1\2\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2",
            "\1\u00b0\4\uffff\1\u00b1\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\uffff\1\2\40\uffff\2\2\3\uffff\7\2\2\uffff\1\2",
            "\1\u00b6\4\uffff\1\u00b7\1\u00b8\1\u00b9\1\u00ba\1\u00bb",
            "\1\u00b6\4\uffff\1\u00b7\1\u00b8\1\u00b9\1\u00ba\1\u00bb",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u0083\2\2\1\173\1\174\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00c2\2\2\1\134\1\135\1\u00c3\1\u00c4\1\u00c5\1\u00c6\1\u00c7\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c2\2\2\1\134\1\135\1\u00c3\1\u00c4\1\u00c5\1\u00c6\1\u00c7\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c2\2\2\1\134\1\135\1\u00c3\1\u00c4\1\u00c5\1\u00c6\1\u00c7\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c2\2\2\1\134\1\135\1\u00c3\1\u00c4\1\u00c5\1\u00c6\1\u00c7\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c2\2\2\1\134\1\135\1\u00c3\1\u00c4\1\u00c5\1\u00c6\1\u00c7\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c2\2\2\1\134\1\135\1\u00c3\1\u00c4\1\u00c5\1\u00c6\1\u00c7\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c8\2\2\1\134\1\135\1\u00c9\1\u00ca\1\u00cb\1\u00cc\1\u00cd\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c8\2\2\1\134\1\135\1\u00c9\1\u00ca\1\u00cb\1\u00cc\1\u00cd\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c8\2\2\1\134\1\135\1\u00c9\1\u00ca\1\u00cb\1\u00cc\1\u00cd\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c8\2\2\1\134\1\135\1\u00c9\1\u00ca\1\u00cb\1\u00cc\1\u00cd\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c8\2\2\1\134\1\135\1\u00c9\1\u00ca\1\u00cb\1\u00cc\1\u00cd\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u00c8\2\2\1\134\1\135\1\u00c9\1\u00ca\1\u00cb\1\u00cc\1\u00cd\1\133\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\132",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u0095\2\2\1\40\1\41\1\u0096\1\u0097\1\u0098\1\u0099\1\u009a\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\27\1\2\3\uffff\4\11\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\162\1\2\3\uffff\4\11\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\162\1\2\3\uffff\4\11\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00aa\2\2\1\173\1\174\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00db\2\2\1\173\1\174\1\u00dc\1\u00dd\1\u00de\1\u00df\1\u00e0\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00db\2\2\1\173\1\174\1\u00dc\1\u00dd\1\u00de\1\u00df\1\u00e0\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00db\2\2\1\173\1\174\1\u00dc\1\u00dd\1\u00de\1\u00df\1\u00e0\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00db\2\2\1\173\1\174\1\u00dc\1\u00dd\1\u00de\1\u00df\1\u00e0\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00db\2\2\1\173\1\174\1\u00dc\1\u00dd\1\u00de\1\u00df\1\u00e0\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00db\2\2\1\173\1\174\1\u00dc\1\u00dd\1\u00de\1\u00df\1\u00e0\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e1\2\2\1\173\1\174\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e1\2\2\1\173\1\174\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e1\2\2\1\173\1\174\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e1\2\2\1\173\1\174\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e1\2\2\1\173\1\174\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e1\2\2\1\173\1\174\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00bc\2\2\1\40\1\41\1\u00bd\1\u00be\1\u00bf\1\u00c0\1\u00c1\1\37\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\42",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\27\4\2\1\u00ce\1\u00cf\1\u00d0\1\u00d1\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\11\3\uffff\1\2\1\u00f5\1\u00f4\1\u00f3\1\u00f7\1\uffff\1\u00f6\1\uffff\35\11\2\uffff\2\2\3\uffff\7\2\2\uffff\1\2\1\11",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u00d9\1\u00d8\1\u00d7\1\u00da\1\2\1\11\1\uffff\21\11\1\u00d6\11\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00e7\2\2\1\173\1\174\1\u00e8\1\u00e9\1\u00ea\1\u00eb\1\u00ec\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00ed\2\2\1\173\1\174\1\u00ee\1\u00ef\1\u00f0\1\u00f1\1\u00f2\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\162\1\2\3\uffff\4\11\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00f8\2\2\1\173\1\174\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\u00fe\2\2\1\173\1\174\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\172\23\uffff\1\2\11\uffff\1\2\7\uffff\1\2\12\uffff\1\25\4\uffff\1\2\2\uffff\1\171",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2",
            "\1\2\1\162\4\2\1\u0104\1\u0105\1\u0106\1\u0107\1\2\1\11\1\uffff\33\11\1\30\1\11\6\uffff\1\2\12\uffff\1\36\4\uffff\1\2\2\uffff\1\2"
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_58;
            this.eof = dfa_59;
            this.min = dfa_60;
            this.max = dfa_61;
            this.accept = dfa_62;
            this.special = dfa_63;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "8971:2: ( rule__Dialect__AcceptabilityAssignment_1 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_21 = input.LA(1);

                         
                        int index73_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalEcl()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index73_21);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_29 = input.LA(1);

                         
                        int index73_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalEcl()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index73_29);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_30 = input.LA(1);

                         
                        int index73_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalEcl()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index73_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\12\uffff";
    static final String dfa_66s = "\1\1\11\uffff";
    static final String dfa_67s = "\1\5\1\uffff\1\5\1\uffff\6\0";
    static final String dfa_68s = "\1\110\1\uffff\1\77\1\uffff\6\0";
    static final String dfa_69s = "\1\uffff\1\2\1\uffff\1\1\6\uffff";
    static final String dfa_70s = "\4\uffff\1\4\1\5\1\1\1\2\1\0\1\3}>";
    static final String[] dfa_71s = {
            "\3\1\2\3\5\1\1\2\1\1\22\uffff\1\1\11\uffff\1\1\1\uffff\16\1\2\uffff\2\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\1",
            "",
            "\1\4\4\uffff\1\5\1\6\1\7\1\10\1\11\1\uffff\1\1\40\uffff\2\1\3\uffff\7\1\2\uffff\1\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_65;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "()* loopback of 10315:2: ( rule__Identifier__Group_1__0 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_8 = input.LA(1);

                         
                        int index80_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index80_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_6 = input.LA(1);

                         
                        int index80_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index80_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_7 = input.LA(1);

                         
                        int index80_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index80_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA80_9 = input.LA(1);

                         
                        int index80_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index80_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA80_4 = input.LA(1);

                         
                        int index80_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index80_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA80_5 = input.LA(1);

                         
                        int index80_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalEcl()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index80_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000022L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x00007FFFFFFD7962L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x9FC6000000017C20L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000200000000002L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x00000000000000C0L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00000000000000C2L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0xBFC6000000017C20L,0x0000000000000002L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000008002L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0xBFC6000000017C20L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x00007FFFFFFD7840L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000082L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000007C20L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000007C22L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x2000000000000000L,0x0000000000000002L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x001F800000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000010020L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00000000000C0000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x8000027000000010L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000020120L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x80007FFFFFFD7840L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0001800000000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000027000000010L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000027000000012L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000023000000010L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x00007FFFFFFD7842L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x9FC6000000017C22L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x80007FFFFFFD7960L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x00007FFFFFFD7960L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x9FC6000000017C20L,0x0000000000000080L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000000000C0020L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000800000000000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x9FC6000000017F20L,0x0000000000000040L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x00001C0000000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000008300L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000008302L});
    }


}