package com.b2international.snomed.ecl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.ecl.services.EclGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEclParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Exact", "False", "Match", "Regex", "True", "Wild", "RULE_TERM_STRING", "RULE_REVERSED", "RULE_TO", "RULE_COMMA", "RULE_CONJUNCTION", "RULE_DISJUNCTION", "RULE_EXCLUSION", "RULE_ZERO", "RULE_DIGIT_NONZERO", "RULE_COLON", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_PLUS", "RULE_DASH", "RULE_CARET", "RULE_DOT", "RULE_WILDCARD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_LT", "RULE_GT", "RULE_DBL_LT", "RULE_DBL_GT", "RULE_LT_EM", "RULE_DBL_LT_EM", "RULE_GT_EM", "RULE_DBL_GT_EM", "RULE_GTE", "RULE_LTE", "RULE_HASH", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_TERM_KEYWORD", "RULE_LANGUAGE_KEYWORD", "RULE_TYPEID_KEYWORD", "RULE_TYPE_KEYWORD", "RULE_DIALECTID_KEYWORD", "RULE_DIALECT_KEYWORD", "RULE_ALPHA", "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_STRING"
    };
    public static final int RULE_DIALECT_KEYWORD=51;
    public static final int RULE_LANGUAGE_KEYWORD=47;
    public static final int RULE_DIGIT_NONZERO=18;
    public static final int RULE_CURLY_OPEN=20;
    public static final int RULE_TO=12;
    public static final int RULE_ROUND_CLOSE=23;
    public static final int RULE_DBL_GT=36;
    public static final int True=8;
    public static final int RULE_GT=34;
    public static final int False=5;
    public static final int RULE_GTE=41;
    public static final int Regex=7;
    public static final int RULE_ROUND_OPEN=22;
    public static final int RULE_DBL_LT=35;
    public static final int RULE_TYPEID_KEYWORD=48;
    public static final int RULE_NOT_EQUAL=32;
    public static final int RULE_SQUARE_CLOSE=25;
    public static final int RULE_SQUARE_OPEN=24;
    public static final int RULE_EQUAL=31;
    public static final int RULE_COMMA=13;
    public static final int RULE_LT_EM=37;
    public static final int RULE_CURLY_CLOSE=21;
    public static final int RULE_ZERO=17;
    public static final int RULE_DBL_GT_EM=40;
    public static final int RULE_COLON=19;
    public static final int RULE_LT=33;
    public static final int RULE_DOUBLE_CURLY_CLOSE=45;
    public static final int RULE_ML_COMMENT=54;
    public static final int RULE_LTE=42;
    public static final int RULE_ALPHA=52;
    public static final int Wild=9;
    public static final int RULE_TYPE_KEYWORD=49;
    public static final int RULE_STRING=56;
    public static final int RULE_REVERSED=11;
    public static final int Match=6;
    public static final int RULE_SL_COMMENT=55;
    public static final int RULE_HASH=43;
    public static final int RULE_DASH=27;
    public static final int RULE_PLUS=26;
    public static final int Exact=4;
    public static final int RULE_DOT=29;
    public static final int EOF=-1;
    public static final int RULE_DIALECTID_KEYWORD=50;
    public static final int RULE_GT_EM=39;
    public static final int RULE_TERM_KEYWORD=46;
    public static final int RULE_WS=53;
    public static final int RULE_EXCLUSION=16;
    public static final int RULE_CARET=28;
    public static final int RULE_DOUBLE_CURLY_OPEN=44;
    public static final int RULE_CONJUNCTION=14;
    public static final int RULE_WILDCARD=30;
    public static final int RULE_DISJUNCTION=15;
    public static final int RULE_TERM_STRING=10;
    public static final int RULE_DBL_LT_EM=38;

    // delegates
    // delegators


        public InternalEclParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEclParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEclParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEclParser.g"; }


    	private EclGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("True", "'true'");
    		tokenNameToValue.put("Wild", "'wild'");
    		tokenNameToValue.put("Exact", "'exact'");
    		tokenNameToValue.put("False", "'false'");
    		tokenNameToValue.put("Match", "'match'");
    		tokenNameToValue.put("Regex", "'regex'");
    	}

    	public void setGrammarAccess(EclGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleScript"
    // InternalEclParser.g:74:1: entryRuleScript : ruleScript EOF ;
    public final void entryRuleScript() throws RecognitionException {
        try {
            // InternalEclParser.g:75:1: ( ruleScript EOF )
            // InternalEclParser.g:76:1: ruleScript EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleScript();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScript"


    // $ANTLR start "ruleScript"
    // InternalEclParser.g:83:1: ruleScript : ( ( rule__Script__Group__0 ) ) ;
    public final void ruleScript() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:87:2: ( ( ( rule__Script__Group__0 ) ) )
            // InternalEclParser.g:88:2: ( ( rule__Script__Group__0 ) )
            {
            // InternalEclParser.g:88:2: ( ( rule__Script__Group__0 ) )
            // InternalEclParser.g:89:3: ( rule__Script__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getGroup()); 
            }
            // InternalEclParser.g:90:3: ( rule__Script__Group__0 )
            // InternalEclParser.g:90:4: rule__Script__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScript"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEclParser.g:99:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:100:1: ( ruleExpressionConstraint EOF )
            // InternalEclParser.g:101:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEclParser.g:108:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:112:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEclParser.g:113:2: ( ruleOrExpressionConstraint )
            {
            // InternalEclParser.g:113:2: ( ruleOrExpressionConstraint )
            // InternalEclParser.g:114:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEclParser.g:124:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:125:1: ( ruleOrExpressionConstraint EOF )
            // InternalEclParser.g:126:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEclParser.g:133:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:137:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:138:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:138:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:139:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:140:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEclParser.g:140:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEclParser.g:149:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:150:1: ( ruleAndExpressionConstraint EOF )
            // InternalEclParser.g:151:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEclParser.g:158:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:162:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:163:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:163:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:164:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:165:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEclParser.g:165:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEclParser.g:174:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:175:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEclParser.g:176:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEclParser.g:183:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:187:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:188:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:188:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:189:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:190:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEclParser.g:190:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEclParser.g:199:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:200:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEclParser.g:201:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEclParser.g:208:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:212:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:213:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:213:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:214:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:215:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEclParser.g:215:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEclParser.g:224:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:225:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEclParser.g:226:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEclParser.g:233:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:237:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:238:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:238:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:239:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:240:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEclParser.g:240:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEclParser.g:249:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:250:1: ( ruleSubExpressionConstraint EOF )
            // InternalEclParser.g:251:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEclParser.g:258:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:262:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEclParser.g:263:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEclParser.g:263:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEclParser.g:264:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEclParser.g:265:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEclParser.g:265:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEclParser.g:274:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEclParser.g:275:1: ( ruleEclFocusConcept EOF )
            // InternalEclParser.g:276:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEclParser.g:283:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:287:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEclParser.g:288:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEclParser.g:288:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEclParser.g:289:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEclParser.g:290:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEclParser.g:290:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEclParser.g:299:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEclParser.g:300:1: ( ruleChildOf EOF )
            // InternalEclParser.g:301:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEclParser.g:308:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:312:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEclParser.g:313:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEclParser.g:313:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEclParser.g:314:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEclParser.g:315:3: ( rule__ChildOf__Group__0 )
            // InternalEclParser.g:315:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEclParser.g:324:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:325:1: ( ruleChildOrSelfOf EOF )
            // InternalEclParser.g:326:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEclParser.g:333:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:337:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:338:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:338:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEclParser.g:339:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:340:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEclParser.g:340:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEclParser.g:349:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEclParser.g:350:1: ( ruleDescendantOf EOF )
            // InternalEclParser.g:351:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEclParser.g:358:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:362:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEclParser.g:363:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEclParser.g:363:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEclParser.g:364:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEclParser.g:365:3: ( rule__DescendantOf__Group__0 )
            // InternalEclParser.g:365:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEclParser.g:374:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:375:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEclParser.g:376:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEclParser.g:383:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:387:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:388:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:388:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEclParser.g:389:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:390:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEclParser.g:390:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEclParser.g:399:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEclParser.g:400:1: ( ruleParentOf EOF )
            // InternalEclParser.g:401:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEclParser.g:408:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:412:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEclParser.g:413:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEclParser.g:413:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEclParser.g:414:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEclParser.g:415:3: ( rule__ParentOf__Group__0 )
            // InternalEclParser.g:415:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEclParser.g:424:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:425:1: ( ruleParentOrSelfOf EOF )
            // InternalEclParser.g:426:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEclParser.g:433:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:437:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:438:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:438:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEclParser.g:439:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:440:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEclParser.g:440:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEclParser.g:449:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEclParser.g:450:1: ( ruleAncestorOf EOF )
            // InternalEclParser.g:451:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEclParser.g:458:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:462:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEclParser.g:463:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEclParser.g:463:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEclParser.g:464:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEclParser.g:465:3: ( rule__AncestorOf__Group__0 )
            // InternalEclParser.g:465:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEclParser.g:474:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:475:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEclParser.g:476:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEclParser.g:483:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:487:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:488:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:488:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEclParser.g:489:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:490:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEclParser.g:490:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEclParser.g:499:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEclParser.g:500:1: ( ruleMemberOf EOF )
            // InternalEclParser.g:501:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEclParser.g:508:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:512:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEclParser.g:513:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEclParser.g:513:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEclParser.g:514:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEclParser.g:515:3: ( rule__MemberOf__Group__0 )
            // InternalEclParser.g:515:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEclParser.g:524:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEclParser.g:525:1: ( ruleEclConceptReference EOF )
            // InternalEclParser.g:526:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEclParser.g:533:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:537:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEclParser.g:538:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEclParser.g:538:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEclParser.g:539:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEclParser.g:540:3: ( rule__EclConceptReference__Group__0 )
            // InternalEclParser.g:540:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEclParser.g:549:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEclParser.g:550:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEclParser.g:551:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEclParser.g:558:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:562:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEclParser.g:563:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEclParser.g:563:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEclParser.g:564:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEclParser.g:565:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEclParser.g:565:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEclParser.g:574:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEclParser.g:575:1: ( ruleAny EOF )
            // InternalEclParser.g:576:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEclParser.g:583:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:587:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEclParser.g:588:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEclParser.g:588:2: ( ( rule__Any__Group__0 ) )
            // InternalEclParser.g:589:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEclParser.g:590:3: ( rule__Any__Group__0 )
            // InternalEclParser.g:590:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEclParser.g:599:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:600:1: ( ruleEclRefinement EOF )
            // InternalEclParser.g:601:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEclParser.g:608:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:612:2: ( ( ruleOrRefinement ) )
            // InternalEclParser.g:613:2: ( ruleOrRefinement )
            {
            // InternalEclParser.g:613:2: ( ruleOrRefinement )
            // InternalEclParser.g:614:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEclParser.g:624:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:625:1: ( ruleOrRefinement EOF )
            // InternalEclParser.g:626:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEclParser.g:633:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:637:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEclParser.g:638:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEclParser.g:638:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEclParser.g:639:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:640:3: ( rule__OrRefinement__Group__0 )
            // InternalEclParser.g:640:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEclParser.g:649:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:650:1: ( ruleAndRefinement EOF )
            // InternalEclParser.g:651:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEclParser.g:658:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:662:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEclParser.g:663:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEclParser.g:663:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEclParser.g:664:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:665:3: ( rule__AndRefinement__Group__0 )
            // InternalEclParser.g:665:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEclParser.g:674:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:675:1: ( ruleSubRefinement EOF )
            // InternalEclParser.g:676:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEclParser.g:683:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:687:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEclParser.g:688:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEclParser.g:688:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEclParser.g:689:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEclParser.g:690:3: ( rule__SubRefinement__Alternatives )
            // InternalEclParser.g:690:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEclParser.g:699:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:700:1: ( ruleNestedRefinement EOF )
            // InternalEclParser.g:701:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEclParser.g:708:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:712:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEclParser.g:713:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEclParser.g:713:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEclParser.g:714:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:715:3: ( rule__NestedRefinement__Group__0 )
            // InternalEclParser.g:715:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEclParser.g:724:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEclParser.g:725:1: ( ruleEclAttributeGroup EOF )
            // InternalEclParser.g:726:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEclParser.g:733:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:737:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEclParser.g:738:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEclParser.g:738:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEclParser.g:739:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEclParser.g:740:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEclParser.g:740:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEclParser.g:749:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:750:1: ( ruleEclAttributeSet EOF )
            // InternalEclParser.g:751:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEclParser.g:758:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:762:2: ( ( ruleOrAttributeSet ) )
            // InternalEclParser.g:763:2: ( ruleOrAttributeSet )
            {
            // InternalEclParser.g:763:2: ( ruleOrAttributeSet )
            // InternalEclParser.g:764:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEclParser.g:774:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:775:1: ( ruleOrAttributeSet EOF )
            // InternalEclParser.g:776:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEclParser.g:783:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:787:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:788:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:788:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEclParser.g:789:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:790:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEclParser.g:790:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEclParser.g:799:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:800:1: ( ruleAndAttributeSet EOF )
            // InternalEclParser.g:801:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEclParser.g:808:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:812:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:813:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:813:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEclParser.g:814:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:815:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEclParser.g:815:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEclParser.g:824:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:825:1: ( ruleSubAttributeSet EOF )
            // InternalEclParser.g:826:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEclParser.g:833:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:837:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEclParser.g:838:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEclParser.g:838:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEclParser.g:839:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEclParser.g:840:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEclParser.g:840:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEclParser.g:849:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:850:1: ( ruleNestedAttributeSet EOF )
            // InternalEclParser.g:851:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEclParser.g:858:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:862:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:863:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:863:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEclParser.g:864:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:865:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEclParser.g:865:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEclParser.g:874:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:875:1: ( ruleAttributeConstraint EOF )
            // InternalEclParser.g:876:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEclParser.g:883:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:887:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEclParser.g:888:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEclParser.g:888:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEclParser.g:889:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:890:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEclParser.g:890:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEclParser.g:899:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEclParser.g:900:1: ( ruleCardinality EOF )
            // InternalEclParser.g:901:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEclParser.g:908:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:912:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEclParser.g:913:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEclParser.g:913:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEclParser.g:914:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEclParser.g:915:3: ( rule__Cardinality__Group__0 )
            // InternalEclParser.g:915:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEclParser.g:924:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:925:1: ( ruleComparison EOF )
            // InternalEclParser.g:926:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEclParser.g:933:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:937:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEclParser.g:938:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEclParser.g:938:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEclParser.g:939:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEclParser.g:940:3: ( rule__Comparison__Alternatives )
            // InternalEclParser.g:940:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEclParser.g:949:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:950:1: ( ruleAttributeComparison EOF )
            // InternalEclParser.g:951:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEclParser.g:958:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:962:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEclParser.g:963:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEclParser.g:963:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEclParser.g:964:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:965:3: ( rule__AttributeComparison__Group__0 )
            // InternalEclParser.g:965:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEclParser.g:974:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:975:1: ( ruleDataTypeComparison EOF )
            // InternalEclParser.g:976:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEclParser.g:983:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:987:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEclParser.g:988:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEclParser.g:988:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEclParser.g:989:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEclParser.g:990:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEclParser.g:990:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEclParser.g:999:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1000:1: ( ruleBooleanValueComparison EOF )
            // InternalEclParser.g:1001:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEclParser.g:1008:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1012:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1013:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1013:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEclParser.g:1014:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1015:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEclParser.g:1015:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEclParser.g:1024:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1025:1: ( ruleStringValueComparison EOF )
            // InternalEclParser.g:1026:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEclParser.g:1033:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1037:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1038:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1038:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEclParser.g:1039:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1040:3: ( rule__StringValueComparison__Group__0 )
            // InternalEclParser.g:1040:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEclParser.g:1049:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1050:1: ( ruleIntegerValueComparison EOF )
            // InternalEclParser.g:1051:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEclParser.g:1058:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1062:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1063:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1063:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEclParser.g:1064:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1065:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEclParser.g:1065:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEclParser.g:1074:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1075:1: ( ruleDecimalValueComparison EOF )
            // InternalEclParser.g:1076:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEclParser.g:1083:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1087:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1088:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1088:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEclParser.g:1089:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1090:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEclParser.g:1090:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEclParser.g:1099:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEclParser.g:1100:1: ( ruleNestedExpression EOF )
            // InternalEclParser.g:1101:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEclParser.g:1108:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1112:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEclParser.g:1113:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEclParser.g:1113:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEclParser.g:1114:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEclParser.g:1115:3: ( rule__NestedExpression__Group__0 )
            // InternalEclParser.g:1115:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEclParser.g:1124:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:1125:1: ( ruleFilterConstraint EOF )
            // InternalEclParser.g:1126:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEclParser.g:1133:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1137:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEclParser.g:1138:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEclParser.g:1138:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEclParser.g:1139:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:1140:3: ( rule__FilterConstraint__Group__0 )
            // InternalEclParser.g:1140:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEclParser.g:1149:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1150:1: ( ruleFilter EOF )
            // InternalEclParser.g:1151:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEclParser.g:1158:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1162:2: ( ( ruleDisjunctionFilter ) )
            // InternalEclParser.g:1163:2: ( ruleDisjunctionFilter )
            {
            // InternalEclParser.g:1163:2: ( ruleDisjunctionFilter )
            // InternalEclParser.g:1164:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEclParser.g:1174:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1175:1: ( ruleDisjunctionFilter EOF )
            // InternalEclParser.g:1176:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEclParser.g:1183:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1187:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEclParser.g:1188:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEclParser.g:1188:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEclParser.g:1189:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1190:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEclParser.g:1190:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEclParser.g:1199:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1200:1: ( ruleConjunctionFilter EOF )
            // InternalEclParser.g:1201:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEclParser.g:1208:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1212:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEclParser.g:1213:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEclParser.g:1213:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEclParser.g:1214:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1215:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEclParser.g:1215:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleExclusionFilter"
    // InternalEclParser.g:1224:1: entryRuleExclusionFilter : ruleExclusionFilter EOF ;
    public final void entryRuleExclusionFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1225:1: ( ruleExclusionFilter EOF )
            // InternalEclParser.g:1226:1: ruleExclusionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionFilter"


    // $ANTLR start "ruleExclusionFilter"
    // InternalEclParser.g:1233:1: ruleExclusionFilter : ( ( rule__ExclusionFilter__Group__0 ) ) ;
    public final void ruleExclusionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1237:2: ( ( ( rule__ExclusionFilter__Group__0 ) ) )
            // InternalEclParser.g:1238:2: ( ( rule__ExclusionFilter__Group__0 ) )
            {
            // InternalEclParser.g:1238:2: ( ( rule__ExclusionFilter__Group__0 ) )
            // InternalEclParser.g:1239:3: ( rule__ExclusionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1240:3: ( rule__ExclusionFilter__Group__0 )
            // InternalEclParser.g:1240:4: rule__ExclusionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEclParser.g:1249:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1250:1: ( ruleNestedFilter EOF )
            // InternalEclParser.g:1251:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEclParser.g:1258:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1262:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEclParser.g:1263:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEclParser.g:1263:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEclParser.g:1264:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1265:3: ( rule__NestedFilter__Group__0 )
            // InternalEclParser.g:1265:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEclParser.g:1274:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1275:1: ( rulePropertyFilter EOF )
            // InternalEclParser.g:1276:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEclParser.g:1283:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1287:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEclParser.g:1288:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEclParser.g:1288:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEclParser.g:1289:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1290:3: ( rule__PropertyFilter__Alternatives )
            // InternalEclParser.g:1290:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEclParser.g:1299:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1300:1: ( ruleTermFilter EOF )
            // InternalEclParser.g:1301:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEclParser.g:1308:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1312:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEclParser.g:1313:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEclParser.g:1313:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEclParser.g:1314:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1315:3: ( rule__TermFilter__Group__0 )
            // InternalEclParser.g:1315:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleTypedTermFilter"
    // InternalEclParser.g:1324:1: entryRuleTypedTermFilter : ruleTypedTermFilter EOF ;
    public final void entryRuleTypedTermFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1325:1: ( ruleTypedTermFilter EOF )
            // InternalEclParser.g:1326:1: ruleTypedTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilter"


    // $ANTLR start "ruleTypedTermFilter"
    // InternalEclParser.g:1333:1: ruleTypedTermFilter : ( ( rule__TypedTermFilter__Group__0 ) ) ;
    public final void ruleTypedTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1337:2: ( ( ( rule__TypedTermFilter__Group__0 ) ) )
            // InternalEclParser.g:1338:2: ( ( rule__TypedTermFilter__Group__0 ) )
            {
            // InternalEclParser.g:1338:2: ( ( rule__TypedTermFilter__Group__0 ) )
            // InternalEclParser.g:1339:3: ( rule__TypedTermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1340:3: ( rule__TypedTermFilter__Group__0 )
            // InternalEclParser.g:1340:4: rule__TypedTermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilter"


    // $ANTLR start "entryRuleTypedTermFilterSet"
    // InternalEclParser.g:1349:1: entryRuleTypedTermFilterSet : ruleTypedTermFilterSet EOF ;
    public final void entryRuleTypedTermFilterSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1350:1: ( ruleTypedTermFilterSet EOF )
            // InternalEclParser.g:1351:1: ruleTypedTermFilterSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterSet"


    // $ANTLR start "ruleTypedTermFilterSet"
    // InternalEclParser.g:1358:1: ruleTypedTermFilterSet : ( ( rule__TypedTermFilterSet__Group__0 ) ) ;
    public final void ruleTypedTermFilterSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1362:2: ( ( ( rule__TypedTermFilterSet__Group__0 ) ) )
            // InternalEclParser.g:1363:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            {
            // InternalEclParser.g:1363:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            // InternalEclParser.g:1364:3: ( rule__TypedTermFilterSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }
            // InternalEclParser.g:1365:3: ( rule__TypedTermFilterSet__Group__0 )
            // InternalEclParser.g:1365:4: rule__TypedTermFilterSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterSet"


    // $ANTLR start "entryRuleLanguageCodeFilter"
    // InternalEclParser.g:1374:1: entryRuleLanguageCodeFilter : ruleLanguageCodeFilter EOF ;
    public final void entryRuleLanguageCodeFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1375:1: ( ruleLanguageCodeFilter EOF )
            // InternalEclParser.g:1376:1: ruleLanguageCodeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageCodeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageCodeFilter"


    // $ANTLR start "ruleLanguageCodeFilter"
    // InternalEclParser.g:1383:1: ruleLanguageCodeFilter : ( ( rule__LanguageCodeFilter__Group__0 ) ) ;
    public final void ruleLanguageCodeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1387:2: ( ( ( rule__LanguageCodeFilter__Group__0 ) ) )
            // InternalEclParser.g:1388:2: ( ( rule__LanguageCodeFilter__Group__0 ) )
            {
            // InternalEclParser.g:1388:2: ( ( rule__LanguageCodeFilter__Group__0 ) )
            // InternalEclParser.g:1389:3: ( rule__LanguageCodeFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1390:3: ( rule__LanguageCodeFilter__Group__0 )
            // InternalEclParser.g:1390:4: rule__LanguageCodeFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageCodeFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEclParser.g:1399:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1400:1: ( ruleTypeFilter EOF )
            // InternalEclParser.g:1401:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEclParser.g:1408:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1412:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEclParser.g:1413:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEclParser.g:1413:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEclParser.g:1414:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1415:3: ( rule__TypeFilter__Alternatives )
            // InternalEclParser.g:1415:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEclParser.g:1424:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1425:1: ( ruleTypeIdFilter EOF )
            // InternalEclParser.g:1426:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEclParser.g:1433:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1437:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEclParser.g:1438:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEclParser.g:1438:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEclParser.g:1439:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1440:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEclParser.g:1440:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEclParser.g:1449:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1450:1: ( ruleTypeTokenFilter EOF )
            // InternalEclParser.g:1451:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEclParser.g:1458:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1462:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEclParser.g:1463:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEclParser.g:1463:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEclParser.g:1464:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1465:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEclParser.g:1465:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEclParser.g:1474:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1475:1: ( ruleDialectFilter EOF )
            // InternalEclParser.g:1476:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEclParser.g:1483:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1487:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEclParser.g:1488:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEclParser.g:1488:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEclParser.g:1489:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1490:3: ( rule__DialectFilter__Alternatives )
            // InternalEclParser.g:1490:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEclParser.g:1499:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1500:1: ( ruleDialectIdFilter EOF )
            // InternalEclParser.g:1501:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEclParser.g:1508:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1512:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEclParser.g:1513:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEclParser.g:1513:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEclParser.g:1514:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1515:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEclParser.g:1515:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEclParser.g:1524:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1525:1: ( ruleDialectAliasFilter EOF )
            // InternalEclParser.g:1526:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEclParser.g:1533:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1537:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEclParser.g:1538:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEclParser.g:1538:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEclParser.g:1539:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1540:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEclParser.g:1540:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEclParser.g:1549:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEclParser.g:1550:1: ( ruleDialect EOF )
            // InternalEclParser.g:1551:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEclParser.g:1558:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1562:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEclParser.g:1563:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEclParser.g:1563:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEclParser.g:1564:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEclParser.g:1565:3: ( rule__Dialect__Group__0 )
            // InternalEclParser.g:1565:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEclParser.g:1574:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
        try {
            // InternalEclParser.g:1575:1: ( ruleDialectAlias EOF )
            // InternalEclParser.g:1576:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEclParser.g:1583:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1587:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEclParser.g:1588:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEclParser.g:1588:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEclParser.g:1589:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEclParser.g:1590:3: ( rule__DialectAlias__Group__0 )
            // InternalEclParser.g:1590:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEclParser.g:1599:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEclParser.g:1600:1: ( ruleAcceptability EOF )
            // InternalEclParser.g:1601:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEclParser.g:1608:1: ruleAcceptability : ( ( rule__Acceptability__Alternatives ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1612:2: ( ( ( rule__Acceptability__Alternatives ) ) )
            // InternalEclParser.g:1613:2: ( ( rule__Acceptability__Alternatives ) )
            {
            // InternalEclParser.g:1613:2: ( ( rule__Acceptability__Alternatives ) )
            // InternalEclParser.g:1614:3: ( rule__Acceptability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1615:3: ( rule__Acceptability__Alternatives )
            // InternalEclParser.g:1615:4: rule__Acceptability__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleAcceptabilityIdSet"
    // InternalEclParser.g:1624:1: entryRuleAcceptabilityIdSet : ruleAcceptabilityIdSet EOF ;
    public final void entryRuleAcceptabilityIdSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1625:1: ( ruleAcceptabilityIdSet EOF )
            // InternalEclParser.g:1626:1: ruleAcceptabilityIdSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityIdSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityIdSet"


    // $ANTLR start "ruleAcceptabilityIdSet"
    // InternalEclParser.g:1633:1: ruleAcceptabilityIdSet : ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptabilityIdSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1637:2: ( ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) )
            // InternalEclParser.g:1638:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            {
            // InternalEclParser.g:1638:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            // InternalEclParser.g:1639:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEclParser.g:1640:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            // InternalEclParser.g:1640:4: rule__AcceptabilityIdSet__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityIdSet__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityIdSet"


    // $ANTLR start "entryRuleAcceptabilityTokenSet"
    // InternalEclParser.g:1649:1: entryRuleAcceptabilityTokenSet : ruleAcceptabilityTokenSet EOF ;
    public final void entryRuleAcceptabilityTokenSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1650:1: ( ruleAcceptabilityTokenSet EOF )
            // InternalEclParser.g:1651:1: ruleAcceptabilityTokenSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityTokenSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityTokenSet"


    // $ANTLR start "ruleAcceptabilityTokenSet"
    // InternalEclParser.g:1658:1: ruleAcceptabilityTokenSet : ( ( rule__AcceptabilityTokenSet__Group__0 ) ) ;
    public final void ruleAcceptabilityTokenSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1662:2: ( ( ( rule__AcceptabilityTokenSet__Group__0 ) ) )
            // InternalEclParser.g:1663:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            {
            // InternalEclParser.g:1663:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            // InternalEclParser.g:1664:3: ( rule__AcceptabilityTokenSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }
            // InternalEclParser.g:1665:3: ( rule__AcceptabilityTokenSet__Group__0 )
            // InternalEclParser.g:1665:4: rule__AcceptabilityTokenSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityTokenSet"


    // $ANTLR start "entryRuleSnomedIdentifier"
    // InternalEclParser.g:1674:1: entryRuleSnomedIdentifier : ruleSnomedIdentifier EOF ;
    public final void entryRuleSnomedIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1678:1: ( ruleSnomedIdentifier EOF )
            // InternalEclParser.g:1679:1: ruleSnomedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSnomedIdentifier"


    // $ANTLR start "ruleSnomedIdentifier"
    // InternalEclParser.g:1689:1: ruleSnomedIdentifier : ( ( rule__SnomedIdentifier__Group__0 ) ) ;
    public final void ruleSnomedIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1694:2: ( ( ( rule__SnomedIdentifier__Group__0 ) ) )
            // InternalEclParser.g:1695:2: ( ( rule__SnomedIdentifier__Group__0 ) )
            {
            // InternalEclParser.g:1695:2: ( ( rule__SnomedIdentifier__Group__0 ) )
            // InternalEclParser.g:1696:3: ( rule__SnomedIdentifier__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getGroup()); 
            }
            // InternalEclParser.g:1697:3: ( rule__SnomedIdentifier__Group__0 )
            // InternalEclParser.g:1697:4: rule__SnomedIdentifier__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSnomedIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEclParser.g:1707:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1711:1: ( ruleNonNegativeInteger EOF )
            // InternalEclParser.g:1712:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEclParser.g:1722:1: ruleNonNegativeInteger : ( ( rule__NonNegativeInteger__Alternatives ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1727:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) )
            // InternalEclParser.g:1728:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            {
            // InternalEclParser.g:1728:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            // InternalEclParser.g:1729:3: ( rule__NonNegativeInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1730:3: ( rule__NonNegativeInteger__Alternatives )
            // InternalEclParser.g:1730:4: rule__NonNegativeInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEclParser.g:1740:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1744:1: ( ruleMaxValue EOF )
            // InternalEclParser.g:1745:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEclParser.g:1755:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1760:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEclParser.g:1761:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEclParser.g:1761:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEclParser.g:1762:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1763:3: ( rule__MaxValue__Alternatives )
            // InternalEclParser.g:1763:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEclParser.g:1773:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1777:1: ( ruleInteger EOF )
            // InternalEclParser.g:1778:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEclParser.g:1788:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1793:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEclParser.g:1794:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEclParser.g:1794:2: ( ( rule__Integer__Group__0 ) )
            // InternalEclParser.g:1795:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEclParser.g:1796:3: ( rule__Integer__Group__0 )
            // InternalEclParser.g:1796:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEclParser.g:1806:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1810:1: ( ruleDecimal EOF )
            // InternalEclParser.g:1811:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEclParser.g:1821:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1826:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEclParser.g:1827:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEclParser.g:1827:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEclParser.g:1828:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEclParser.g:1829:3: ( rule__Decimal__Group__0 )
            // InternalEclParser.g:1829:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEclParser.g:1839:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1843:1: ( ruleNonNegativeDecimal EOF )
            // InternalEclParser.g:1844:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEclParser.g:1854:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1859:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEclParser.g:1860:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEclParser.g:1860:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEclParser.g:1861:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEclParser.g:1862:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEclParser.g:1862:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEclParser.g:1872:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1876:1: ( ruleBoolean EOF )
            // InternalEclParser.g:1877:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEclParser.g:1887:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1892:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEclParser.g:1893:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEclParser.g:1893:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEclParser.g:1894:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1895:3: ( rule__Boolean__Alternatives )
            // InternalEclParser.g:1895:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEclParser.g:1905:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1909:1: ( ruleDialectAliasValue EOF )
            // InternalEclParser.g:1910:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEclParser.g:1920:1: ruleDialectAliasValue : ( ( rule__DialectAliasValue__Group__0 ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1925:2: ( ( ( rule__DialectAliasValue__Group__0 ) ) )
            // InternalEclParser.g:1926:2: ( ( rule__DialectAliasValue__Group__0 ) )
            {
            // InternalEclParser.g:1926:2: ( ( rule__DialectAliasValue__Group__0 ) )
            // InternalEclParser.g:1927:3: ( rule__DialectAliasValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getGroup()); 
            }
            // InternalEclParser.g:1928:3: ( rule__DialectAliasValue__Group__0 )
            // InternalEclParser.g:1928:4: rule__DialectAliasValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleAlphabetical"
    // InternalEclParser.g:1938:1: entryRuleAlphabetical : ruleAlphabetical EOF ;
    public final void entryRuleAlphabetical() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1942:1: ( ruleAlphabetical EOF )
            // InternalEclParser.g:1943:1: ruleAlphabetical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAlphabetical"


    // $ANTLR start "ruleAlphabetical"
    // InternalEclParser.g:1953:1: ruleAlphabetical : ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) ) ;
    public final void ruleAlphabetical() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1958:2: ( ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) ) )
            // InternalEclParser.g:1959:2: ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) )
            {
            // InternalEclParser.g:1959:2: ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) )
            // InternalEclParser.g:1960:3: ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* )
            {
            // InternalEclParser.g:1960:3: ( ( RULE_ALPHA ) )
            // InternalEclParser.g:1961:4: ( RULE_ALPHA )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }
            // InternalEclParser.g:1962:4: ( RULE_ALPHA )
            // InternalEclParser.g:1962:5: RULE_ALPHA
            {
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_3); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }

            }

            // InternalEclParser.g:1965:3: ( ( RULE_ALPHA )* )
            // InternalEclParser.g:1966:4: ( RULE_ALPHA )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }
            // InternalEclParser.g:1967:4: ( RULE_ALPHA )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_ALPHA) ) {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalEclParser()) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // InternalEclParser.g:1967:5: RULE_ALPHA
            	    {
            	    match(input,RULE_ALPHA,FollowSets000.FOLLOW_3); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAlphabetical"


    // $ANTLR start "ruleLexicalSearchType"
    // InternalEclParser.g:1978:1: ruleLexicalSearchType : ( ( rule__LexicalSearchType__Alternatives ) ) ;
    public final void ruleLexicalSearchType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1982:1: ( ( ( rule__LexicalSearchType__Alternatives ) ) )
            // InternalEclParser.g:1983:2: ( ( rule__LexicalSearchType__Alternatives ) )
            {
            // InternalEclParser.g:1983:2: ( ( rule__LexicalSearchType__Alternatives ) )
            // InternalEclParser.g:1984:3: ( rule__LexicalSearchType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLexicalSearchTypeAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1985:3: ( rule__LexicalSearchType__Alternatives )
            // InternalEclParser.g:1985:4: rule__LexicalSearchType__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LexicalSearchType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLexicalSearchTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLexicalSearchType"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEclParser.g:1993:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1997:1: ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==RULE_CONJUNCTION) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_COMMA) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalEclParser.g:1998:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEclParser.g:1998:2: ( RULE_CONJUNCTION )
                    // InternalEclParser.g:1999:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2004:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2004:2: ( RULE_COMMA )
                    // InternalEclParser.g:2005:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEclParser.g:2014:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) | ( ruleFilterConstraint ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2018:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) | ( ruleFilterConstraint ) )
            int alt3=10;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt3=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt3=2;
                }
                break;
            case RULE_LT:
                {
                alt3=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt3=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt3=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt3=6;
                }
                break;
            case RULE_GT:
                {
                alt3=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt3=8;
                }
                break;
            case RULE_DIGIT_NONZERO:
            case RULE_ROUND_OPEN:
            case RULE_CARET:
            case RULE_WILDCARD:
                {
                alt3=9;
                }
                break;
            case RULE_DOUBLE_CURLY_OPEN:
                {
                alt3=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalEclParser.g:2019:2: ( ruleChildOf )
                    {
                    // InternalEclParser.g:2019:2: ( ruleChildOf )
                    // InternalEclParser.g:2020:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2025:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEclParser.g:2025:2: ( ruleChildOrSelfOf )
                    // InternalEclParser.g:2026:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2031:2: ( ruleDescendantOf )
                    {
                    // InternalEclParser.g:2031:2: ( ruleDescendantOf )
                    // InternalEclParser.g:2032:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2037:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEclParser.g:2037:2: ( ruleDescendantOrSelfOf )
                    // InternalEclParser.g:2038:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:2043:2: ( ruleParentOf )
                    {
                    // InternalEclParser.g:2043:2: ( ruleParentOf )
                    // InternalEclParser.g:2044:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:2049:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEclParser.g:2049:2: ( ruleParentOrSelfOf )
                    // InternalEclParser.g:2050:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEclParser.g:2055:2: ( ruleAncestorOf )
                    {
                    // InternalEclParser.g:2055:2: ( ruleAncestorOf )
                    // InternalEclParser.g:2056:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEclParser.g:2061:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEclParser.g:2061:2: ( ruleAncestorOrSelfOf )
                    // InternalEclParser.g:2062:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEclParser.g:2067:2: ( ruleEclFocusConcept )
                    {
                    // InternalEclParser.g:2067:2: ( ruleEclFocusConcept )
                    // InternalEclParser.g:2068:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEclParser.g:2073:2: ( ruleFilterConstraint )
                    {
                    // InternalEclParser.g:2073:2: ( ruleFilterConstraint )
                    // InternalEclParser.g:2074:3: ruleFilterConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getFilterConstraintParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleFilterConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getFilterConstraintParserRuleCall_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEclParser.g:2083:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2087:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt4=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt4=1;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt4=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt4=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt4=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalEclParser.g:2088:2: ( ruleMemberOf )
                    {
                    // InternalEclParser.g:2088:2: ( ruleMemberOf )
                    // InternalEclParser.g:2089:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2094:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:2094:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:2095:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2100:2: ( ruleAny )
                    {
                    // InternalEclParser.g:2100:2: ( ruleAny )
                    // InternalEclParser.g:2101:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2106:2: ( ruleNestedExpression )
                    {
                    // InternalEclParser.g:2106:2: ( ruleNestedExpression )
                    // InternalEclParser.g:2107:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_1_0"
    // InternalEclParser.g:2116:1: rule__MemberOf__ConstraintAlternatives_1_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2120:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt5=3;
            switch ( input.LA(1) ) {
            case RULE_DIGIT_NONZERO:
                {
                alt5=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt5=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalEclParser.g:2121:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:2121:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:2122:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2127:2: ( ruleAny )
                    {
                    // InternalEclParser.g:2127:2: ( ruleAny )
                    // InternalEclParser.g:2128:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2133:2: ( ruleNestedExpression )
                    {
                    // InternalEclParser.g:2133:2: ( ruleNestedExpression )
                    // InternalEclParser.g:2134:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_1_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEclParser.g:2143:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2147:1: ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_CONJUNCTION) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_COMMA) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalEclParser.g:2148:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEclParser.g:2148:2: ( RULE_CONJUNCTION )
                    // InternalEclParser.g:2149:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTIONTerminalRuleCall_1_0_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTIONTerminalRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2154:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2154:2: ( RULE_COMMA )
                    // InternalEclParser.g:2155:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEclParser.g:2164:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2168:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt7=3;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalEclParser.g:2169:2: ( ruleAttributeConstraint )
                    {
                    // InternalEclParser.g:2169:2: ( ruleAttributeConstraint )
                    // InternalEclParser.g:2170:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2175:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEclParser.g:2175:2: ( ruleEclAttributeGroup )
                    // InternalEclParser.g:2176:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2181:2: ( ruleNestedRefinement )
                    {
                    // InternalEclParser.g:2181:2: ( ruleNestedRefinement )
                    // InternalEclParser.g:2182:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEclParser.g:2191:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2195:1: ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_CONJUNCTION) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_COMMA) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalEclParser.g:2196:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEclParser.g:2196:2: ( RULE_CONJUNCTION )
                    // InternalEclParser.g:2197:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2202:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2202:2: ( RULE_COMMA )
                    // InternalEclParser.g:2203:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEclParser.g:2212:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2216:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt9=2;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalEclParser.g:2217:2: ( ruleAttributeConstraint )
                    {
                    // InternalEclParser.g:2217:2: ( ruleAttributeConstraint )
                    // InternalEclParser.g:2218:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2223:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEclParser.g:2223:2: ( ruleNestedAttributeSet )
                    // InternalEclParser.g:2224:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEclParser.g:2233:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2237:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt10=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==False||LA10_1==True||LA10_1==RULE_HASH||LA10_1==RULE_STRING) ) {
                    alt10=2;
                }
                else if ( (LA10_1==RULE_DIGIT_NONZERO||LA10_1==RULE_ROUND_OPEN||LA10_1==RULE_CARET||LA10_1==RULE_WILDCARD||(LA10_1>=RULE_LT && LA10_1<=RULE_DBL_GT_EM)||LA10_1==RULE_DOUBLE_CURLY_OPEN) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NOT_EQUAL:
                {
                int LA10_2 = input.LA(2);

                if ( (LA10_2==RULE_DIGIT_NONZERO||LA10_2==RULE_ROUND_OPEN||LA10_2==RULE_CARET||LA10_2==RULE_WILDCARD||(LA10_2>=RULE_LT && LA10_2<=RULE_DBL_GT_EM)||LA10_2==RULE_DOUBLE_CURLY_OPEN) ) {
                    alt10=1;
                }
                else if ( (LA10_2==False||LA10_2==True||LA10_2==RULE_HASH||LA10_2==RULE_STRING) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LT:
            case RULE_GT:
            case RULE_GTE:
            case RULE_LTE:
                {
                alt10=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalEclParser.g:2238:2: ( ruleAttributeComparison )
                    {
                    // InternalEclParser.g:2238:2: ( ruleAttributeComparison )
                    // InternalEclParser.g:2239:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2244:2: ( ruleDataTypeComparison )
                    {
                    // InternalEclParser.g:2244:2: ( ruleDataTypeComparison )
                    // InternalEclParser.g:2245:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__AttributeComparison__OpAlternatives_0_0"
    // InternalEclParser.g:2254:1: rule__AttributeComparison__OpAlternatives_0_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__AttributeComparison__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2258:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_EQUAL) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_NOT_EQUAL) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalEclParser.g:2259:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2259:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2260:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2265:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2265:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2266:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAttributeComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAttributeComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAlternatives_0_0"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEclParser.g:2275:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2279:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt12=4;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalEclParser.g:2280:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEclParser.g:2280:2: ( ruleBooleanValueComparison )
                    // InternalEclParser.g:2281:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2286:2: ( ruleStringValueComparison )
                    {
                    // InternalEclParser.g:2286:2: ( ruleStringValueComparison )
                    // InternalEclParser.g:2287:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2292:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEclParser.g:2292:2: ( ruleIntegerValueComparison )
                    // InternalEclParser.g:2293:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2298:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEclParser.g:2298:2: ( ruleDecimalValueComparison )
                    // InternalEclParser.g:2299:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__BooleanValueComparison__OpAlternatives_0_0"
    // InternalEclParser.g:2308:1: rule__BooleanValueComparison__OpAlternatives_0_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__BooleanValueComparison__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2312:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_EQUAL) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_NOT_EQUAL) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalEclParser.g:2313:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2313:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2314:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2319:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2319:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2320:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAlternatives_0_0"


    // $ANTLR start "rule__StringValueComparison__OpAlternatives_0_0"
    // InternalEclParser.g:2329:1: rule__StringValueComparison__OpAlternatives_0_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__StringValueComparison__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2333:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_EQUAL) ) {
                alt14=1;
            }
            else if ( (LA14_0==RULE_NOT_EQUAL) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalEclParser.g:2334:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2334:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2335:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStringValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStringValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2340:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2340:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2341:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStringValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStringValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAlternatives_0_0"


    // $ANTLR start "rule__IntegerValueComparison__OpAlternatives_0_0"
    // InternalEclParser.g:2350:1: rule__IntegerValueComparison__OpAlternatives_0_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__IntegerValueComparison__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2354:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt15=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt15=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt15=2;
                }
                break;
            case RULE_GT:
                {
                alt15=3;
                }
                break;
            case RULE_LT:
                {
                alt15=4;
                }
                break;
            case RULE_GTE:
                {
                alt15=5;
                }
                break;
            case RULE_LTE:
                {
                alt15=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalEclParser.g:2355:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2355:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2356:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2361:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2361:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2362:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2367:2: ( RULE_GT )
                    {
                    // InternalEclParser.g:2367:2: ( RULE_GT )
                    // InternalEclParser.g:2368:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerValueComparisonAccess().getOpGTTerminalRuleCall_0_0_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerValueComparisonAccess().getOpGTTerminalRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2373:2: ( RULE_LT )
                    {
                    // InternalEclParser.g:2373:2: ( RULE_LT )
                    // InternalEclParser.g:2374:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerValueComparisonAccess().getOpLTTerminalRuleCall_0_0_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerValueComparisonAccess().getOpLTTerminalRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:2379:2: ( RULE_GTE )
                    {
                    // InternalEclParser.g:2379:2: ( RULE_GTE )
                    // InternalEclParser.g:2380:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerValueComparisonAccess().getOpGTETerminalRuleCall_0_0_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerValueComparisonAccess().getOpGTETerminalRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:2385:2: ( RULE_LTE )
                    {
                    // InternalEclParser.g:2385:2: ( RULE_LTE )
                    // InternalEclParser.g:2386:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerValueComparisonAccess().getOpLTETerminalRuleCall_0_0_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerValueComparisonAccess().getOpLTETerminalRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAlternatives_0_0"


    // $ANTLR start "rule__DecimalValueComparison__OpAlternatives_0_0"
    // InternalEclParser.g:2395:1: rule__DecimalValueComparison__OpAlternatives_0_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__DecimalValueComparison__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2399:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt16=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt16=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt16=2;
                }
                break;
            case RULE_GT:
                {
                alt16=3;
                }
                break;
            case RULE_LT:
                {
                alt16=4;
                }
                break;
            case RULE_GTE:
                {
                alt16=5;
                }
                break;
            case RULE_LTE:
                {
                alt16=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalEclParser.g:2400:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2400:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2401:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalValueComparisonAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2406:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2406:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2407:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalValueComparisonAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2412:2: ( RULE_GT )
                    {
                    // InternalEclParser.g:2412:2: ( RULE_GT )
                    // InternalEclParser.g:2413:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalValueComparisonAccess().getOpGTTerminalRuleCall_0_0_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalValueComparisonAccess().getOpGTTerminalRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2418:2: ( RULE_LT )
                    {
                    // InternalEclParser.g:2418:2: ( RULE_LT )
                    // InternalEclParser.g:2419:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalValueComparisonAccess().getOpLTTerminalRuleCall_0_0_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalValueComparisonAccess().getOpLTTerminalRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:2424:2: ( RULE_GTE )
                    {
                    // InternalEclParser.g:2424:2: ( RULE_GTE )
                    // InternalEclParser.g:2425:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalValueComparisonAccess().getOpGTETerminalRuleCall_0_0_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalValueComparisonAccess().getOpGTETerminalRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:2430:2: ( RULE_LTE )
                    {
                    // InternalEclParser.g:2430:2: ( RULE_LTE )
                    // InternalEclParser.g:2431:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalValueComparisonAccess().getOpLTETerminalRuleCall_0_0_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalValueComparisonAccess().getOpLTETerminalRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAlternatives_0_0"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEclParser.g:2440:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2444:1: ( ( RULE_CONJUNCTION ) | ( RULE_COMMA ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_CONJUNCTION) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_COMMA) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEclParser.g:2445:2: ( RULE_CONJUNCTION )
                    {
                    // InternalEclParser.g:2445:2: ( RULE_CONJUNCTION )
                    // InternalEclParser.g:2446:3: RULE_CONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_CONJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTIONTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2451:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2451:2: ( RULE_COMMA )
                    // InternalEclParser.g:2452:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEclParser.g:2461:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageCodeFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2465:1: ( ( ruleTermFilter ) | ( ruleLanguageCodeFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleNestedFilter ) )
            int alt18=5;
            switch ( input.LA(1) ) {
            case RULE_TERM_KEYWORD:
                {
                alt18=1;
                }
                break;
            case RULE_LANGUAGE_KEYWORD:
                {
                alt18=2;
                }
                break;
            case RULE_TYPEID_KEYWORD:
            case RULE_TYPE_KEYWORD:
                {
                alt18=3;
                }
                break;
            case RULE_DIALECTID_KEYWORD:
            case RULE_DIALECT_KEYWORD:
                {
                alt18=4;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt18=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalEclParser.g:2466:2: ( ruleTermFilter )
                    {
                    // InternalEclParser.g:2466:2: ( ruleTermFilter )
                    // InternalEclParser.g:2467:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2472:2: ( ruleLanguageCodeFilter )
                    {
                    // InternalEclParser.g:2472:2: ( ruleLanguageCodeFilter )
                    // InternalEclParser.g:2473:3: ruleLanguageCodeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageCodeFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageCodeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageCodeFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2478:2: ( ruleTypeFilter )
                    {
                    // InternalEclParser.g:2478:2: ( ruleTypeFilter )
                    // InternalEclParser.g:2479:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2484:2: ( ruleDialectFilter )
                    {
                    // InternalEclParser.g:2484:2: ( ruleDialectFilter )
                    // InternalEclParser.g:2485:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:2490:2: ( ruleNestedFilter )
                    {
                    // InternalEclParser.g:2490:2: ( ruleNestedFilter )
                    // InternalEclParser.g:2491:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__TermFilter__Alternatives_1"
    // InternalEclParser.g:2500:1: rule__TermFilter__Alternatives_1 : ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) );
    public final void rule__TermFilter__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2504:1: ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_EQUAL) ) {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==RULE_ROUND_OPEN) ) {
                    alt19=2;
                }
                else if ( (LA19_1==Exact||(LA19_1>=Match && LA19_1<=Regex)||LA19_1==Wild||LA19_1==RULE_STRING) ) {
                    alt19=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA19_0==RULE_NOT_EQUAL) ) {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==Exact||(LA19_2>=Match && LA19_2<=Regex)||LA19_2==Wild||LA19_2==RULE_STRING) ) {
                    alt19=1;
                }
                else if ( (LA19_2==RULE_ROUND_OPEN) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEclParser.g:2505:2: ( ruleTypedTermFilter )
                    {
                    // InternalEclParser.g:2505:2: ( ruleTypedTermFilter )
                    // InternalEclParser.g:2506:3: ruleTypedTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2511:2: ( ruleTypedTermFilterSet )
                    {
                    // InternalEclParser.g:2511:2: ( ruleTypedTermFilterSet )
                    // InternalEclParser.g:2512:3: ruleTypedTermFilterSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilterSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Alternatives_1"


    // $ANTLR start "rule__TypedTermFilter__OpAlternatives_0_0"
    // InternalEclParser.g:2521:1: rule__TypedTermFilter__OpAlternatives_0_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__TypedTermFilter__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2525:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_EQUAL) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_NOT_EQUAL) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalEclParser.g:2526:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2526:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2527:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedTermFilterAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedTermFilterAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2532:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2532:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2533:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedTermFilterAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedTermFilterAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__OpAlternatives_0_0"


    // $ANTLR start "rule__TypedTermFilterSet__OpAlternatives_0_0"
    // InternalEclParser.g:2542:1: rule__TypedTermFilterSet__OpAlternatives_0_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__TypedTermFilterSet__OpAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2546:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_EQUAL) ) {
                alt21=1;
            }
            else if ( (LA21_0==RULE_NOT_EQUAL) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalEclParser.g:2547:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2547:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2548:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedTermFilterSetAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedTermFilterSetAccess().getOpEQUALTerminalRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2553:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2553:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2554:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypedTermFilterSetAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypedTermFilterSetAccess().getOpNOT_EQUALTerminalRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__OpAlternatives_0_0"


    // $ANTLR start "rule__LanguageCodeFilter__OpAlternatives_1_0"
    // InternalEclParser.g:2563:1: rule__LanguageCodeFilter__OpAlternatives_1_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__LanguageCodeFilter__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2567:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_EQUAL) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_NOT_EQUAL) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEclParser.g:2568:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2568:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2569:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageCodeFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageCodeFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2574:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2574:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2575:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageCodeFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageCodeFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__OpAlternatives_1_0"


    // $ANTLR start "rule__LanguageCodeFilter__Alternatives_2"
    // InternalEclParser.g:2584:1: rule__LanguageCodeFilter__Alternatives_2 : ( ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageCodeFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageCodeFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2588:1: ( ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageCodeFilter__Group_2_1__0 ) ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ALPHA) ) {
                alt23=1;
            }
            else if ( (LA23_0==RULE_ROUND_OPEN) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalEclParser.g:2589:2: ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:2589:2: ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEclParser.g:2590:3: ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEclParser.g:2591:3: ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_0 )
                    // InternalEclParser.g:2591:4: rule__LanguageCodeFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageCodeFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2595:2: ( ( rule__LanguageCodeFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:2595:2: ( ( rule__LanguageCodeFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:2596:3: ( rule__LanguageCodeFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageCodeFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:2597:3: ( rule__LanguageCodeFilter__Group_2_1__0 )
                    // InternalEclParser.g:2597:4: rule__LanguageCodeFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageCodeFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageCodeFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEclParser.g:2605:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2609:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_TYPEID_KEYWORD) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_TYPE_KEYWORD) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEclParser.g:2610:2: ( ruleTypeIdFilter )
                    {
                    // InternalEclParser.g:2610:2: ( ruleTypeIdFilter )
                    // InternalEclParser.g:2611:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2616:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEclParser.g:2616:2: ( ruleTypeTokenFilter )
                    // InternalEclParser.g:2617:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeIdFilter__OpAlternatives_1_0"
    // InternalEclParser.g:2626:1: rule__TypeIdFilter__OpAlternatives_1_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__TypeIdFilter__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2630:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_EQUAL) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_NOT_EQUAL) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalEclParser.g:2631:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2631:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2632:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2637:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2637:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2638:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAlternatives_1_0"


    // $ANTLR start "rule__TypeIdFilter__TypeAlternatives_2_0"
    // InternalEclParser.g:2647:1: rule__TypeIdFilter__TypeAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__TypeIdFilter__TypeAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2651:1: ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_DIGIT_NONZERO) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_ROUND_OPEN) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEclParser.g:2652:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:2652:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:2653:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2658:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEclParser.g:2658:2: ( ruleEclConceptReferenceSet )
                    // InternalEclParser.g:2659:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAlternatives_2_0"


    // $ANTLR start "rule__TypeTokenFilter__OpAlternatives_1_0"
    // InternalEclParser.g:2668:1: rule__TypeTokenFilter__OpAlternatives_1_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__TypeTokenFilter__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2672:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_EQUAL) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_NOT_EQUAL) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalEclParser.g:2673:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2673:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2674:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2679:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2679:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2680:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAlternatives_1_0"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEclParser.g:2689:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2693:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_ALPHA) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_ROUND_OPEN) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEclParser.g:2694:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:2694:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEclParser.g:2695:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEclParser.g:2696:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEclParser.g:2696:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2700:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:2700:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:2701:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:2702:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEclParser.g:2702:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEclParser.g:2710:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2714:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_DIALECTID_KEYWORD) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_DIALECT_KEYWORD) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEclParser.g:2715:2: ( ruleDialectIdFilter )
                    {
                    // InternalEclParser.g:2715:2: ( ruleDialectIdFilter )
                    // InternalEclParser.g:2716:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2721:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEclParser.g:2721:2: ( ruleDialectAliasFilter )
                    // InternalEclParser.g:2722:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__OpAlternatives_1_0"
    // InternalEclParser.g:2731:1: rule__DialectIdFilter__OpAlternatives_1_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__DialectIdFilter__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2735:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==RULE_EQUAL) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_NOT_EQUAL) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEclParser.g:2736:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2736:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2737:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2742:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2742:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2743:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAlternatives_1_0"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEclParser.g:2752:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2756:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_DIGIT_NONZERO) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_ROUND_OPEN) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEclParser.g:2757:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:2757:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEclParser.g:2758:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEclParser.g:2759:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEclParser.g:2759:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2763:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:2763:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:2764:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:2765:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEclParser.g:2765:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__OpAlternatives_1_0"
    // InternalEclParser.g:2773:1: rule__DialectAliasFilter__OpAlternatives_1_0 : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__DialectAliasFilter__OpAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2777:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_EQUAL) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_NOT_EQUAL) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalEclParser.g:2778:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:2778:2: ( RULE_EQUAL )
                    // InternalEclParser.g:2779:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getOpEQUALTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2784:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:2784:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:2785:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getOpNOT_EQUALTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAlternatives_1_0"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEclParser.g:2794:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2798:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_ALPHA) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_ROUND_OPEN) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalEclParser.g:2799:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:2799:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEclParser.g:2800:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEclParser.g:2801:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEclParser.g:2801:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2805:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:2805:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:2806:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:2807:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEclParser.g:2807:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__Acceptability__Alternatives"
    // InternalEclParser.g:2815:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );
    public final void rule__Acceptability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2819:1: ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_ROUND_OPEN) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==RULE_ALPHA) ) {
                    alt34=2;
                }
                else if ( (LA34_1==RULE_DIGIT_NONZERO) ) {
                    alt34=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalEclParser.g:2820:2: ( ruleAcceptabilityIdSet )
                    {
                    // InternalEclParser.g:2820:2: ( ruleAcceptabilityIdSet )
                    // InternalEclParser.g:2821:3: ruleAcceptabilityIdSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityIdSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2826:2: ( ruleAcceptabilityTokenSet )
                    {
                    // InternalEclParser.g:2826:2: ( ruleAcceptabilityTokenSet )
                    // InternalEclParser.g:2827:3: ruleAcceptabilityTokenSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityTokenSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__Alternatives"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_1"
    // InternalEclParser.g:2836:1: rule__SnomedIdentifier__Alternatives_1 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2840:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_DIGIT_NONZERO) ) {
                alt35=1;
            }
            else if ( (LA35_0==RULE_ZERO) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // InternalEclParser.g:2841:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:2841:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:2842:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2847:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:2847:2: ( RULE_ZERO )
                    // InternalEclParser.g:2848:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_1"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_2"
    // InternalEclParser.g:2857:1: rule__SnomedIdentifier__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2861:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_DIGIT_NONZERO) ) {
                alt36=1;
            }
            else if ( (LA36_0==RULE_ZERO) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalEclParser.g:2862:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:2862:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:2863:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2868:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:2868:2: ( RULE_ZERO )
                    // InternalEclParser.g:2869:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_2"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_3"
    // InternalEclParser.g:2878:1: rule__SnomedIdentifier__Alternatives_3 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2882:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==RULE_DIGIT_NONZERO) ) {
                alt37=1;
            }
            else if ( (LA37_0==RULE_ZERO) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalEclParser.g:2883:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:2883:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:2884:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_3_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2889:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:2889:2: ( RULE_ZERO )
                    // InternalEclParser.g:2890:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_3_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_3"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_4"
    // InternalEclParser.g:2899:1: rule__SnomedIdentifier__Alternatives_4 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2903:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_DIGIT_NONZERO) ) {
                alt38=1;
            }
            else if ( (LA38_0==RULE_ZERO) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalEclParser.g:2904:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:2904:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:2905:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_4_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_4_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2910:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:2910:2: ( RULE_ZERO )
                    // InternalEclParser.g:2911:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_4_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_4_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_4"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_5"
    // InternalEclParser.g:2920:1: rule__SnomedIdentifier__Alternatives_5 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2924:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==RULE_DIGIT_NONZERO) ) {
                alt39=1;
            }
            else if ( (LA39_0==RULE_ZERO) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalEclParser.g:2925:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:2925:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:2926:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_5_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2931:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:2931:2: ( RULE_ZERO )
                    // InternalEclParser.g:2932:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_5_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_5"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives"
    // InternalEclParser.g:2941:1: rule__NonNegativeInteger__Alternatives : ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) );
    public final void rule__NonNegativeInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2945:1: ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_ZERO) ) {
                alt40=1;
            }
            else if ( (LA40_0==RULE_DIGIT_NONZERO) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalEclParser.g:2946:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:2946:2: ( RULE_ZERO )
                    // InternalEclParser.g:2947:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2952:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    {
                    // InternalEclParser.g:2952:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    // InternalEclParser.g:2953:3: ( rule__NonNegativeInteger__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }
                    // InternalEclParser.g:2954:3: ( rule__NonNegativeInteger__Group_1__0 )
                    // InternalEclParser.g:2954:4: rule__NonNegativeInteger__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NonNegativeInteger__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives_1_1"
    // InternalEclParser.g:2962:1: rule__NonNegativeInteger__Alternatives_1_1 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeInteger__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2966:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==RULE_DIGIT_NONZERO) ) {
                alt41=1;
            }
            else if ( (LA41_0==RULE_ZERO) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalEclParser.g:2967:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:2967:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:2968:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2973:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:2973:2: ( RULE_ZERO )
                    // InternalEclParser.g:2974:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives_1_1"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEclParser.g:2983:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2987:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( ((LA42_0>=RULE_ZERO && LA42_0<=RULE_DIGIT_NONZERO)) ) {
                alt42=1;
            }
            else if ( (LA42_0==RULE_WILDCARD) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalEclParser.g:2988:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEclParser.g:2988:2: ( ruleNonNegativeInteger )
                    // InternalEclParser.g:2989:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2994:2: ( RULE_WILDCARD )
                    {
                    // InternalEclParser.g:2994:2: ( RULE_WILDCARD )
                    // InternalEclParser.g:2995:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEclParser.g:3004:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3008:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_PLUS) ) {
                alt43=1;
            }
            else if ( (LA43_0==RULE_DASH) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalEclParser.g:3009:2: ( RULE_PLUS )
                    {
                    // InternalEclParser.g:3009:2: ( RULE_PLUS )
                    // InternalEclParser.g:3010:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3015:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3015:2: ( RULE_DASH )
                    // InternalEclParser.g:3016:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEclParser.g:3025:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3029:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_PLUS) ) {
                alt44=1;
            }
            else if ( (LA44_0==RULE_DASH) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalEclParser.g:3030:2: ( RULE_PLUS )
                    {
                    // InternalEclParser.g:3030:2: ( RULE_PLUS )
                    // InternalEclParser.g:3031:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3036:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3036:2: ( RULE_DASH )
                    // InternalEclParser.g:3037:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__NonNegativeDecimal__Alternatives_2"
    // InternalEclParser.g:3046:1: rule__NonNegativeDecimal__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeDecimal__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3050:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RULE_DIGIT_NONZERO) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ZERO) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalEclParser.g:3051:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3051:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3052:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3057:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3057:2: ( RULE_ZERO )
                    // InternalEclParser.g:3058:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Alternatives_2"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEclParser.g:3067:1: rule__Boolean__Alternatives : ( ( True ) | ( False ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3071:1: ( ( True ) | ( False ) )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==True) ) {
                alt46=1;
            }
            else if ( (LA46_0==False) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalEclParser.g:3072:2: ( True )
                    {
                    // InternalEclParser.g:3072:2: ( True )
                    // InternalEclParser.g:3073:3: True
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }
                    match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3078:2: ( False )
                    {
                    // InternalEclParser.g:3078:2: ( False )
                    // InternalEclParser.g:3079:3: False
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }
                    match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives_1"
    // InternalEclParser.g:3088:1: rule__DialectAliasValue__Alternatives_1 : ( ( RULE_DASH ) | ( RULE_ALPHA ) | ( RULE_ZERO ) | ( RULE_DIGIT_NONZERO ) );
    public final void rule__DialectAliasValue__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3092:1: ( ( RULE_DASH ) | ( RULE_ALPHA ) | ( RULE_ZERO ) | ( RULE_DIGIT_NONZERO ) )
            int alt47=4;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt47=1;
                }
                break;
            case RULE_ALPHA:
                {
                alt47=2;
                }
                break;
            case RULE_ZERO:
                {
                alt47=3;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt47=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }

            switch (alt47) {
                case 1 :
                    // InternalEclParser.g:3093:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3093:2: ( RULE_DASH )
                    // InternalEclParser.g:3094:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3099:2: ( RULE_ALPHA )
                    {
                    // InternalEclParser.g:3099:2: ( RULE_ALPHA )
                    // InternalEclParser.g:3100:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3105:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3105:2: ( RULE_ZERO )
                    // InternalEclParser.g:3106:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getZEROTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getZEROTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3111:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3111:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3112:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_1_3()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives_1"


    // $ANTLR start "rule__LexicalSearchType__Alternatives"
    // InternalEclParser.g:3121:1: rule__LexicalSearchType__Alternatives : ( ( ( Match ) ) | ( ( Wild ) ) | ( ( Regex ) ) | ( ( Exact ) ) );
    public final void rule__LexicalSearchType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3125:1: ( ( ( Match ) ) | ( ( Wild ) ) | ( ( Regex ) ) | ( ( Exact ) ) )
            int alt48=4;
            switch ( input.LA(1) ) {
            case Match:
                {
                alt48=1;
                }
                break;
            case Wild:
                {
                alt48=2;
                }
                break;
            case Regex:
                {
                alt48=3;
                }
                break;
            case Exact:
                {
                alt48=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalEclParser.g:3126:2: ( ( Match ) )
                    {
                    // InternalEclParser.g:3126:2: ( ( Match ) )
                    // InternalEclParser.g:3127:3: ( Match )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLexicalSearchTypeAccess().getMATCHEnumLiteralDeclaration_0()); 
                    }
                    // InternalEclParser.g:3128:3: ( Match )
                    // InternalEclParser.g:3128:4: Match
                    {
                    match(input,Match,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLexicalSearchTypeAccess().getMATCHEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3132:2: ( ( Wild ) )
                    {
                    // InternalEclParser.g:3132:2: ( ( Wild ) )
                    // InternalEclParser.g:3133:3: ( Wild )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLexicalSearchTypeAccess().getWILDEnumLiteralDeclaration_1()); 
                    }
                    // InternalEclParser.g:3134:3: ( Wild )
                    // InternalEclParser.g:3134:4: Wild
                    {
                    match(input,Wild,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLexicalSearchTypeAccess().getWILDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3138:2: ( ( Regex ) )
                    {
                    // InternalEclParser.g:3138:2: ( ( Regex ) )
                    // InternalEclParser.g:3139:3: ( Regex )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLexicalSearchTypeAccess().getREGEXEnumLiteralDeclaration_2()); 
                    }
                    // InternalEclParser.g:3140:3: ( Regex )
                    // InternalEclParser.g:3140:4: Regex
                    {
                    match(input,Regex,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLexicalSearchTypeAccess().getREGEXEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3144:2: ( ( Exact ) )
                    {
                    // InternalEclParser.g:3144:2: ( ( Exact ) )
                    // InternalEclParser.g:3145:3: ( Exact )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLexicalSearchTypeAccess().getEXACTEnumLiteralDeclaration_3()); 
                    }
                    // InternalEclParser.g:3146:3: ( Exact )
                    // InternalEclParser.g:3146:4: Exact
                    {
                    match(input,Exact,FollowSets000.FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLexicalSearchTypeAccess().getEXACTEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LexicalSearchType__Alternatives"


    // $ANTLR start "rule__Script__Group__0"
    // InternalEclParser.g:3154:1: rule__Script__Group__0 : rule__Script__Group__0__Impl rule__Script__Group__1 ;
    public final void rule__Script__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3158:1: ( rule__Script__Group__0__Impl rule__Script__Group__1 )
            // InternalEclParser.g:3159:2: rule__Script__Group__0__Impl rule__Script__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__Script__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0"


    // $ANTLR start "rule__Script__Group__0__Impl"
    // InternalEclParser.g:3166:1: rule__Script__Group__0__Impl : ( () ) ;
    public final void rule__Script__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3170:1: ( ( () ) )
            // InternalEclParser.g:3171:1: ( () )
            {
            // InternalEclParser.g:3171:1: ( () )
            // InternalEclParser.g:3172:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }
            // InternalEclParser.g:3173:2: ()
            // InternalEclParser.g:3173:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0__Impl"


    // $ANTLR start "rule__Script__Group__1"
    // InternalEclParser.g:3181:1: rule__Script__Group__1 : rule__Script__Group__1__Impl ;
    public final void rule__Script__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3185:1: ( rule__Script__Group__1__Impl )
            // InternalEclParser.g:3186:2: rule__Script__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1"


    // $ANTLR start "rule__Script__Group__1__Impl"
    // InternalEclParser.g:3192:1: rule__Script__Group__1__Impl : ( ( rule__Script__ConstraintAssignment_1 )? ) ;
    public final void rule__Script__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3196:1: ( ( ( rule__Script__ConstraintAssignment_1 )? ) )
            // InternalEclParser.g:3197:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            {
            // InternalEclParser.g:3197:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            // InternalEclParser.g:3198:2: ( rule__Script__ConstraintAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:3199:2: ( rule__Script__ConstraintAssignment_1 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_DIGIT_NONZERO||LA49_0==RULE_ROUND_OPEN||LA49_0==RULE_CARET||LA49_0==RULE_WILDCARD||(LA49_0>=RULE_LT && LA49_0<=RULE_DBL_GT_EM)||LA49_0==RULE_DOUBLE_CURLY_OPEN) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalEclParser.g:3199:3: rule__Script__ConstraintAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Script__ConstraintAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEclParser.g:3208:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3212:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEclParser.g:3213:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3220:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3224:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEclParser.g:3225:1: ( ruleAndExpressionConstraint )
            {
            // InternalEclParser.g:3225:1: ( ruleAndExpressionConstraint )
            // InternalEclParser.g:3226:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEclParser.g:3235:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3239:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3240:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3246:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3250:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:3251:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:3251:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:3252:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3253:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==RULE_DISJUNCTION) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalEclParser.g:3253:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3262:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3266:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3267:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3274:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3278:1: ( ( () ) )
            // InternalEclParser.g:3279:1: ( () )
            {
            // InternalEclParser.g:3279:1: ( () )
            // InternalEclParser.g:3280:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3281:2: ()
            // InternalEclParser.g:3281:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3289:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3293:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3294:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3301:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( RULE_DISJUNCTION ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3305:1: ( ( RULE_DISJUNCTION ) )
            // InternalEclParser.g:3306:1: ( RULE_DISJUNCTION )
            {
            // InternalEclParser.g:3306:1: ( RULE_DISJUNCTION )
            // InternalEclParser.g:3307:2: RULE_DISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3316:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3320:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3321:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3327:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3331:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:3332:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:3332:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:3333:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:3334:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:3334:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEclParser.g:3343:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3347:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEclParser.g:3348:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3355:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3359:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEclParser.g:3360:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEclParser.g:3360:1: ( ruleExclusionExpressionConstraint )
            // InternalEclParser.g:3361:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEclParser.g:3370:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3374:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3375:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3381:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3385:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:3386:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:3386:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:3387:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3388:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( ((LA51_0>=RULE_COMMA && LA51_0<=RULE_CONJUNCTION)) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalEclParser.g:3388:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3397:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3401:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3402:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3409:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3413:1: ( ( () ) )
            // InternalEclParser.g:3414:1: ( () )
            {
            // InternalEclParser.g:3414:1: ( () )
            // InternalEclParser.g:3415:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3416:2: ()
            // InternalEclParser.g:3416:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3424:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3428:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3429:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3436:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3440:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEclParser.g:3441:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:3441:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEclParser.g:3442:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:3443:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEclParser.g:3443:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3451:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3455:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3456:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3462:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3466:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:3467:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:3467:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:3468:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:3469:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:3469:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEclParser.g:3478:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3482:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEclParser.g:3483:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3490:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3494:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEclParser.g:3495:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEclParser.g:3495:1: ( ruleRefinedExpressionConstraint )
            // InternalEclParser.g:3496:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEclParser.g:3505:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3509:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3510:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3516:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3520:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEclParser.g:3521:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEclParser.g:3521:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEclParser.g:3522:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3523:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==RULE_EXCLUSION) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalEclParser.g:3523:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3532:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3536:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3537:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3544:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3548:1: ( ( () ) )
            // InternalEclParser.g:3549:1: ( () )
            {
            // InternalEclParser.g:3549:1: ( () )
            // InternalEclParser.g:3550:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3551:2: ()
            // InternalEclParser.g:3551:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3559:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3563:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3564:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3571:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( RULE_EXCLUSION ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3575:1: ( ( RULE_EXCLUSION ) )
            // InternalEclParser.g:3576:1: ( RULE_EXCLUSION )
            {
            // InternalEclParser.g:3576:1: ( RULE_EXCLUSION )
            // InternalEclParser.g:3577:2: RULE_EXCLUSION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3586:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3590:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3591:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3597:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3601:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:3602:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:3602:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:3603:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:3604:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:3604:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEclParser.g:3613:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3617:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEclParser.g:3618:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3625:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3629:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEclParser.g:3630:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEclParser.g:3630:1: ( ruleDottedExpressionConstraint )
            // InternalEclParser.g:3631:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEclParser.g:3640:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3644:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3645:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3651:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3655:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEclParser.g:3656:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEclParser.g:3656:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEclParser.g:3657:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3658:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==RULE_COLON) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalEclParser.g:3658:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3667:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3671:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3672:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3679:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3683:1: ( ( () ) )
            // InternalEclParser.g:3684:1: ( () )
            {
            // InternalEclParser.g:3684:1: ( () )
            // InternalEclParser.g:3685:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEclParser.g:3686:2: ()
            // InternalEclParser.g:3686:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3694:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3698:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3699:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3706:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3710:1: ( ( RULE_COLON ) )
            // InternalEclParser.g:3711:1: ( RULE_COLON )
            {
            // InternalEclParser.g:3711:1: ( RULE_COLON )
            // InternalEclParser.g:3712:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3721:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3725:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3726:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3732:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3736:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEclParser.g:3737:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEclParser.g:3737:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEclParser.g:3738:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEclParser.g:3739:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEclParser.g:3739:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEclParser.g:3748:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3752:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEclParser.g:3753:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3760:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleSubExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3764:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEclParser.g:3765:1: ( ruleSubExpressionConstraint )
            {
            // InternalEclParser.g:3765:1: ( ruleSubExpressionConstraint )
            // InternalEclParser.g:3766:2: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getSubExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEclParser.g:3775:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3779:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3780:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3786:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3790:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:3791:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:3791:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:3792:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3793:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==RULE_DOT) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // InternalEclParser.g:3793:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_13);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3802:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3806:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3807:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3814:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3818:1: ( ( () ) )
            // InternalEclParser.g:3819:1: ( () )
            {
            // InternalEclParser.g:3819:1: ( () )
            // InternalEclParser.g:3820:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEclParser.g:3821:2: ()
            // InternalEclParser.g:3821:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3829:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3833:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3834:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3841:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3845:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:3846:1: ( RULE_DOT )
            {
            // InternalEclParser.g:3846:1: ( RULE_DOT )
            // InternalEclParser.g:3847:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3856:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3860:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3861:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3867:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3871:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEclParser.g:3872:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEclParser.g:3872:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEclParser.g:3873:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEclParser.g:3874:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEclParser.g:3874:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEclParser.g:3883:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3887:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEclParser.g:3888:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEclParser.g:3895:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3899:1: ( ( RULE_LT_EM ) )
            // InternalEclParser.g:3900:1: ( RULE_LT_EM )
            {
            // InternalEclParser.g:3900:1: ( RULE_LT_EM )
            // InternalEclParser.g:3901:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEclParser.g:3910:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3914:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEclParser.g:3915:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEclParser.g:3921:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3925:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:3926:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:3926:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:3927:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:3928:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEclParser.g:3928:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEclParser.g:3937:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3941:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEclParser.g:3942:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:3949:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3953:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEclParser.g:3954:1: ( RULE_DBL_LT_EM )
            {
            // InternalEclParser.g:3954:1: ( RULE_DBL_LT_EM )
            // InternalEclParser.g:3955:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEclParser.g:3964:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3968:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:3969:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:3975:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3979:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:3980:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:3980:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:3981:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:3982:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:3982:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEclParser.g:3991:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3995:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEclParser.g:3996:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEclParser.g:4003:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4007:1: ( ( RULE_LT ) )
            // InternalEclParser.g:4008:1: ( RULE_LT )
            {
            // InternalEclParser.g:4008:1: ( RULE_LT )
            // InternalEclParser.g:4009:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEclParser.g:4018:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4022:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEclParser.g:4023:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEclParser.g:4029:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4033:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4034:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4034:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4035:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4036:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4036:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEclParser.g:4045:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4049:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEclParser.g:4050:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4057:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4061:1: ( ( RULE_DBL_LT ) )
            // InternalEclParser.g:4062:1: ( RULE_DBL_LT )
            {
            // InternalEclParser.g:4062:1: ( RULE_DBL_LT )
            // InternalEclParser.g:4063:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEclParser.g:4072:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4076:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4077:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4083:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4087:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4088:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4088:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4089:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4090:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4090:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEclParser.g:4099:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4103:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEclParser.g:4104:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEclParser.g:4111:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4115:1: ( ( RULE_GT_EM ) )
            // InternalEclParser.g:4116:1: ( RULE_GT_EM )
            {
            // InternalEclParser.g:4116:1: ( RULE_GT_EM )
            // InternalEclParser.g:4117:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEclParser.g:4126:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4130:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEclParser.g:4131:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEclParser.g:4137:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4141:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4142:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4142:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4143:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4144:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4144:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEclParser.g:4153:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4157:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEclParser.g:4158:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4165:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4169:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEclParser.g:4170:1: ( RULE_DBL_GT_EM )
            {
            // InternalEclParser.g:4170:1: ( RULE_DBL_GT_EM )
            // InternalEclParser.g:4171:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEclParser.g:4180:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4184:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4185:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4191:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4195:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4196:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4196:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4197:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4198:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4198:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEclParser.g:4207:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4211:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEclParser.g:4212:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEclParser.g:4219:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4223:1: ( ( RULE_GT ) )
            // InternalEclParser.g:4224:1: ( RULE_GT )
            {
            // InternalEclParser.g:4224:1: ( RULE_GT )
            // InternalEclParser.g:4225:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEclParser.g:4234:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4238:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEclParser.g:4239:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEclParser.g:4245:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4249:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4250:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4250:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4251:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4252:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4252:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEclParser.g:4261:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4265:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEclParser.g:4266:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4273:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4277:1: ( ( RULE_DBL_GT ) )
            // InternalEclParser.g:4278:1: ( RULE_DBL_GT )
            {
            // InternalEclParser.g:4278:1: ( RULE_DBL_GT )
            // InternalEclParser.g:4279:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEclParser.g:4288:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4292:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4293:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4299:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4303:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4304:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4304:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4305:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4306:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4306:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEclParser.g:4315:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4319:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEclParser.g:4320:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEclParser.g:4327:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4331:1: ( ( RULE_CARET ) )
            // InternalEclParser.g:4332:1: ( RULE_CARET )
            {
            // InternalEclParser.g:4332:1: ( RULE_CARET )
            // InternalEclParser.g:4333:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEclParser.g:4342:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4346:1: ( rule__MemberOf__Group__1__Impl )
            // InternalEclParser.g:4347:2: rule__MemberOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEclParser.g:4353:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__ConstraintAssignment_1 ) ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4357:1: ( ( ( rule__MemberOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4358:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4358:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4359:2: ( rule__MemberOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4360:2: ( rule__MemberOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4360:3: rule__MemberOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEclParser.g:4369:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4373:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEclParser.g:4374:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_15);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEclParser.g:4381:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4385:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEclParser.g:4386:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEclParser.g:4386:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEclParser.g:4387:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEclParser.g:4388:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEclParser.g:4388:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEclParser.g:4396:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4400:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEclParser.g:4401:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEclParser.g:4407:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4411:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEclParser.g:4412:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEclParser.g:4412:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEclParser.g:4413:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEclParser.g:4414:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_TERM_STRING) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalEclParser.g:4414:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEclParser.g:4423:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4427:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEclParser.g:4428:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEclParser.g:4435:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4439:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:4440:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:4440:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:4441:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEclParser.g:4450:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4454:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEclParser.g:4455:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEclParser.g:4462:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4466:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) )
            // InternalEclParser.g:4467:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            {
            // InternalEclParser.g:4467:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEclParser.g:4468:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEclParser.g:4469:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEclParser.g:4469:3: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEclParser.g:4477:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3 ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4481:1: ( rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3 )
            // InternalEclParser.g:4482:2: rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEclParser.g:4489:1: rule__EclConceptReferenceSet__Group__2__Impl : ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4493:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* ) )
            // InternalEclParser.g:4494:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* )
            {
            // InternalEclParser.g:4494:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* )
            // InternalEclParser.g:4495:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_2()); 
            }
            // InternalEclParser.g:4496:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==RULE_DIGIT_NONZERO) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalEclParser.g:4496:3: rule__EclConceptReferenceSet__ConceptsAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__3"
    // InternalEclParser.g:4504:1: rule__EclConceptReferenceSet__Group__3 : rule__EclConceptReferenceSet__Group__3__Impl ;
    public final void rule__EclConceptReferenceSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4508:1: ( rule__EclConceptReferenceSet__Group__3__Impl )
            // InternalEclParser.g:4509:2: rule__EclConceptReferenceSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__3"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__3__Impl"
    // InternalEclParser.g:4515:1: rule__EclConceptReferenceSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4519:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:4520:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:4520:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:4521:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__3__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEclParser.g:4531:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4535:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEclParser.g:4536:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEclParser.g:4543:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4547:1: ( ( RULE_WILDCARD ) )
            // InternalEclParser.g:4548:1: ( RULE_WILDCARD )
            {
            // InternalEclParser.g:4548:1: ( RULE_WILDCARD )
            // InternalEclParser.g:4549:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEclParser.g:4558:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4562:1: ( rule__Any__Group__1__Impl )
            // InternalEclParser.g:4563:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEclParser.g:4569:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4573:1: ( ( () ) )
            // InternalEclParser.g:4574:1: ( () )
            {
            // InternalEclParser.g:4574:1: ( () )
            // InternalEclParser.g:4575:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEclParser.g:4576:2: ()
            // InternalEclParser.g:4576:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEclParser.g:4585:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4589:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEclParser.g:4590:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEclParser.g:4597:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4601:1: ( ( ruleAndRefinement ) )
            // InternalEclParser.g:4602:1: ( ruleAndRefinement )
            {
            // InternalEclParser.g:4602:1: ( ruleAndRefinement )
            // InternalEclParser.g:4603:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEclParser.g:4612:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4616:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEclParser.g:4617:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEclParser.g:4623:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4627:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEclParser.g:4628:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEclParser.g:4628:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEclParser.g:4629:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4630:2: ( rule__OrRefinement__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==RULE_DISJUNCTION) ) {
                    int LA57_5 = input.LA(2);

                    if ( (synpred86_InternalEclParser()) ) {
                        alt57=1;
                    }


                }


                switch (alt57) {
            	case 1 :
            	    // InternalEclParser.g:4630:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEclParser.g:4639:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4643:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEclParser.g:4644:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEclParser.g:4650:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4654:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEclParser.g:4655:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEclParser.g:4655:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEclParser.g:4656:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEclParser.g:4657:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEclParser.g:4657:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEclParser.g:4666:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4670:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEclParser.g:4671:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEclParser.g:4678:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4682:1: ( ( () ) )
            // InternalEclParser.g:4683:1: ( () )
            {
            // InternalEclParser.g:4683:1: ( () )
            // InternalEclParser.g:4684:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEclParser.g:4685:2: ()
            // InternalEclParser.g:4685:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEclParser.g:4693:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4697:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEclParser.g:4698:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEclParser.g:4705:1: rule__OrRefinement__Group_1_0__1__Impl : ( RULE_DISJUNCTION ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4709:1: ( ( RULE_DISJUNCTION ) )
            // InternalEclParser.g:4710:1: ( RULE_DISJUNCTION )
            {
            // InternalEclParser.g:4710:1: ( RULE_DISJUNCTION )
            // InternalEclParser.g:4711:2: RULE_DISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTIONTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTIONTerminalRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEclParser.g:4720:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4724:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEclParser.g:4725:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEclParser.g:4731:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4735:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEclParser.g:4736:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEclParser.g:4736:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEclParser.g:4737:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEclParser.g:4738:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEclParser.g:4738:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEclParser.g:4747:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4751:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEclParser.g:4752:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEclParser.g:4759:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4763:1: ( ( ruleSubRefinement ) )
            // InternalEclParser.g:4764:1: ( ruleSubRefinement )
            {
            // InternalEclParser.g:4764:1: ( ruleSubRefinement )
            // InternalEclParser.g:4765:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEclParser.g:4774:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4778:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEclParser.g:4779:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEclParser.g:4785:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4789:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEclParser.g:4790:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEclParser.g:4790:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEclParser.g:4791:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4792:2: ( rule__AndRefinement__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_CONJUNCTION) ) {
                    int LA58_4 = input.LA(2);

                    if ( (synpred87_InternalEclParser()) ) {
                        alt58=1;
                    }


                }
                else if ( (LA58_0==RULE_COMMA) ) {
                    int LA58_5 = input.LA(2);

                    if ( (synpred87_InternalEclParser()) ) {
                        alt58=1;
                    }


                }


                switch (alt58) {
            	case 1 :
            	    // InternalEclParser.g:4792:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEclParser.g:4801:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4805:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEclParser.g:4806:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEclParser.g:4812:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4816:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEclParser.g:4817:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEclParser.g:4817:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEclParser.g:4818:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEclParser.g:4819:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEclParser.g:4819:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEclParser.g:4828:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4832:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEclParser.g:4833:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEclParser.g:4840:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4844:1: ( ( () ) )
            // InternalEclParser.g:4845:1: ( () )
            {
            // InternalEclParser.g:4845:1: ( () )
            // InternalEclParser.g:4846:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEclParser.g:4847:2: ()
            // InternalEclParser.g:4847:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEclParser.g:4855:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4859:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEclParser.g:4860:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEclParser.g:4867:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4871:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEclParser.g:4872:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEclParser.g:4872:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEclParser.g:4873:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEclParser.g:4874:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEclParser.g:4874:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEclParser.g:4882:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4886:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEclParser.g:4887:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEclParser.g:4893:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4897:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEclParser.g:4898:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEclParser.g:4898:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEclParser.g:4899:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEclParser.g:4900:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEclParser.g:4900:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEclParser.g:4909:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4913:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEclParser.g:4914:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEclParser.g:4921:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4925:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:4926:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:4926:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:4927:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEclParser.g:4936:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4940:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEclParser.g:4941:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEclParser.g:4948:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4952:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEclParser.g:4953:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:4953:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEclParser.g:4954:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:4955:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEclParser.g:4955:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEclParser.g:4963:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4967:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEclParser.g:4968:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEclParser.g:4974:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4978:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:4979:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:4979:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:4980:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEclParser.g:4990:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4994:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEclParser.g:4995:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEclParser.g:5002:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5006:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEclParser.g:5007:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEclParser.g:5007:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEclParser.g:5008:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEclParser.g:5009:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==RULE_SQUARE_OPEN) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalEclParser.g:5009:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEclParser.g:5017:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5021:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEclParser.g:5022:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEclParser.g:5029:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5033:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEclParser.g:5034:1: ( RULE_CURLY_OPEN )
            {
            // InternalEclParser.g:5034:1: ( RULE_CURLY_OPEN )
            // InternalEclParser.g:5035:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEclParser.g:5044:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5048:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEclParser.g:5049:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEclParser.g:5056:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5060:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEclParser.g:5061:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEclParser.g:5061:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEclParser.g:5062:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEclParser.g:5063:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEclParser.g:5063:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEclParser.g:5071:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5075:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEclParser.g:5076:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEclParser.g:5082:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5086:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEclParser.g:5087:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEclParser.g:5087:1: ( RULE_CURLY_CLOSE )
            // InternalEclParser.g:5088:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEclParser.g:5098:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5102:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEclParser.g:5103:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5110:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5114:1: ( ( ruleAndAttributeSet ) )
            // InternalEclParser.g:5115:1: ( ruleAndAttributeSet )
            {
            // InternalEclParser.g:5115:1: ( ruleAndAttributeSet )
            // InternalEclParser.g:5116:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEclParser.g:5125:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5129:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEclParser.g:5130:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5136:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5140:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEclParser.g:5141:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEclParser.g:5141:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEclParser.g:5142:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5143:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_DISJUNCTION) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalEclParser.g:5143:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEclParser.g:5152:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5156:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEclParser.g:5157:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEclParser.g:5164:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5168:1: ( ( () ) )
            // InternalEclParser.g:5169:1: ( () )
            {
            // InternalEclParser.g:5169:1: ( () )
            // InternalEclParser.g:5170:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEclParser.g:5171:2: ()
            // InternalEclParser.g:5171:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEclParser.g:5179:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5183:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEclParser.g:5184:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEclParser.g:5191:1: rule__OrAttributeSet__Group_1__1__Impl : ( RULE_DISJUNCTION ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5195:1: ( ( RULE_DISJUNCTION ) )
            // InternalEclParser.g:5196:1: ( RULE_DISJUNCTION )
            {
            // InternalEclParser.g:5196:1: ( RULE_DISJUNCTION )
            // InternalEclParser.g:5197:2: RULE_DISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEclParser.g:5206:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5210:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEclParser.g:5211:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEclParser.g:5217:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5221:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:5222:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:5222:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEclParser.g:5223:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:5224:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEclParser.g:5224:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEclParser.g:5233:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5237:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEclParser.g:5238:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5245:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5249:1: ( ( ruleSubAttributeSet ) )
            // InternalEclParser.g:5250:1: ( ruleSubAttributeSet )
            {
            // InternalEclParser.g:5250:1: ( ruleSubAttributeSet )
            // InternalEclParser.g:5251:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEclParser.g:5260:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5264:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEclParser.g:5265:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5271:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5275:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEclParser.g:5276:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEclParser.g:5276:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEclParser.g:5277:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5278:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=RULE_COMMA && LA61_0<=RULE_CONJUNCTION)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalEclParser.g:5278:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEclParser.g:5287:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5291:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEclParser.g:5292:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEclParser.g:5299:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5303:1: ( ( () ) )
            // InternalEclParser.g:5304:1: ( () )
            {
            // InternalEclParser.g:5304:1: ( () )
            // InternalEclParser.g:5305:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEclParser.g:5306:2: ()
            // InternalEclParser.g:5306:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEclParser.g:5314:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5318:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEclParser.g:5319:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEclParser.g:5326:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5330:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEclParser.g:5331:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:5331:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEclParser.g:5332:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:5333:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEclParser.g:5333:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEclParser.g:5341:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5345:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEclParser.g:5346:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEclParser.g:5352:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5356:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:5357:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:5357:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEclParser.g:5358:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:5359:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEclParser.g:5359:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEclParser.g:5368:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5372:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEclParser.g:5373:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5380:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5384:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:5385:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:5385:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:5386:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEclParser.g:5395:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5399:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEclParser.g:5400:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5407:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5411:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEclParser.g:5412:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:5412:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEclParser.g:5413:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:5414:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEclParser.g:5414:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEclParser.g:5422:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5426:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEclParser.g:5427:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEclParser.g:5433:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5437:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:5438:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:5438:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:5439:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEclParser.g:5449:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5453:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEclParser.g:5454:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEclParser.g:5461:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5465:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEclParser.g:5466:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEclParser.g:5466:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEclParser.g:5467:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEclParser.g:5468:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==RULE_SQUARE_OPEN) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalEclParser.g:5468:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEclParser.g:5476:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5480:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEclParser.g:5481:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEclParser.g:5488:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5492:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEclParser.g:5493:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEclParser.g:5493:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEclParser.g:5494:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEclParser.g:5495:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==RULE_REVERSED) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalEclParser.g:5495:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEclParser.g:5503:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5507:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEclParser.g:5508:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEclParser.g:5515:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5519:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEclParser.g:5520:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEclParser.g:5520:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEclParser.g:5521:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEclParser.g:5522:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEclParser.g:5522:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEclParser.g:5530:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5534:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEclParser.g:5535:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEclParser.g:5541:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5545:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) ) )
            // InternalEclParser.g:5546:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) )
            {
            // InternalEclParser.g:5546:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) )
            // InternalEclParser.g:5547:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEclParser.g:5548:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )
            // InternalEclParser.g:5548:3: rule__AttributeConstraint__ComparisonAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__ComparisonAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEclParser.g:5557:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5561:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEclParser.g:5562:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEclParser.g:5569:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5573:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEclParser.g:5574:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEclParser.g:5574:1: ( RULE_SQUARE_OPEN )
            // InternalEclParser.g:5575:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEclParser.g:5584:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5588:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEclParser.g:5589:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEclParser.g:5596:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5600:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEclParser.g:5601:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEclParser.g:5601:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEclParser.g:5602:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEclParser.g:5603:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEclParser.g:5603:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEclParser.g:5611:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5615:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEclParser.g:5616:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEclParser.g:5623:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5627:1: ( ( RULE_TO ) )
            // InternalEclParser.g:5628:1: ( RULE_TO )
            {
            // InternalEclParser.g:5628:1: ( RULE_TO )
            // InternalEclParser.g:5629:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEclParser.g:5638:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5642:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEclParser.g:5643:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEclParser.g:5650:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5654:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEclParser.g:5655:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEclParser.g:5655:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEclParser.g:5656:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEclParser.g:5657:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEclParser.g:5657:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEclParser.g:5665:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5669:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEclParser.g:5670:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEclParser.g:5676:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5680:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEclParser.g:5681:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEclParser.g:5681:1: ( RULE_SQUARE_CLOSE )
            // InternalEclParser.g:5682:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEclParser.g:5692:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5696:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEclParser.g:5697:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEclParser.g:5704:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5708:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:5709:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:5709:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEclParser.g:5710:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:5711:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEclParser.g:5711:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEclParser.g:5719:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5723:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEclParser.g:5724:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEclParser.g:5730:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5734:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:5735:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:5735:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:5736:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:5737:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEclParser.g:5737:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEclParser.g:5746:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5750:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEclParser.g:5751:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEclParser.g:5758:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5762:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:5763:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:5763:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:5764:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:5765:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEclParser.g:5765:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEclParser.g:5773:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5777:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEclParser.g:5778:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEclParser.g:5784:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5788:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:5789:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:5789:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:5790:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:5791:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEclParser.g:5791:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEclParser.g:5800:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5804:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEclParser.g:5805:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEclParser.g:5812:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5816:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:5817:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:5817:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:5818:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:5819:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEclParser.g:5819:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEclParser.g:5827:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5831:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEclParser.g:5832:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEclParser.g:5838:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5842:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:5843:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:5843:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:5844:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:5845:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEclParser.g:5845:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEclParser.g:5854:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5858:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEclParser.g:5859:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEclParser.g:5866:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5870:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:5871:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:5871:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:5872:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:5873:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEclParser.g:5873:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEclParser.g:5881:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5885:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEclParser.g:5886:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEclParser.g:5893:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5897:1: ( ( RULE_HASH ) )
            // InternalEclParser.g:5898:1: ( RULE_HASH )
            {
            // InternalEclParser.g:5898:1: ( RULE_HASH )
            // InternalEclParser.g:5899:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEclParser.g:5908:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5912:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEclParser.g:5913:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEclParser.g:5919:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5923:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEclParser.g:5924:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEclParser.g:5924:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEclParser.g:5925:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEclParser.g:5926:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEclParser.g:5926:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEclParser.g:5935:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5939:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEclParser.g:5940:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEclParser.g:5947:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5951:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:5952:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:5952:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:5953:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:5954:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEclParser.g:5954:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEclParser.g:5962:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5966:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEclParser.g:5967:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEclParser.g:5974:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5978:1: ( ( RULE_HASH ) )
            // InternalEclParser.g:5979:1: ( RULE_HASH )
            {
            // InternalEclParser.g:5979:1: ( RULE_HASH )
            // InternalEclParser.g:5980:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEclParser.g:5989:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5993:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEclParser.g:5994:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEclParser.g:6000:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6004:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEclParser.g:6005:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEclParser.g:6005:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEclParser.g:6006:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEclParser.g:6007:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEclParser.g:6007:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEclParser.g:6016:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6020:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEclParser.g:6021:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEclParser.g:6028:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6032:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:6033:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:6033:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:6034:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEclParser.g:6043:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6047:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEclParser.g:6048:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEclParser.g:6055:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6059:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEclParser.g:6060:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:6060:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEclParser.g:6061:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:6062:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEclParser.g:6062:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEclParser.g:6070:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6074:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEclParser.g:6075:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEclParser.g:6081:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6085:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:6086:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:6086:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:6087:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEclParser.g:6097:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6101:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEclParser.g:6102:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEclParser.g:6109:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6113:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEclParser.g:6114:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEclParser.g:6114:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEclParser.g:6115:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEclParser.g:6124:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6128:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEclParser.g:6129:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEclParser.g:6136:1: rule__FilterConstraint__Group__1__Impl : ( ruleFilter ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6140:1: ( ( ruleFilter ) )
            // InternalEclParser.g:6141:1: ( ruleFilter )
            {
            // InternalEclParser.g:6141:1: ( ruleFilter )
            // InternalEclParser.g:6142:2: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEclParser.g:6151:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6155:1: ( rule__FilterConstraint__Group__2__Impl )
            // InternalEclParser.g:6156:2: rule__FilterConstraint__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEclParser.g:6162:1: rule__FilterConstraint__Group__2__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6166:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEclParser.g:6167:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEclParser.g:6167:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEclParser.g:6168:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEclParser.g:6178:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6182:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEclParser.g:6183:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEclParser.g:6190:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6194:1: ( ( ruleConjunctionFilter ) )
            // InternalEclParser.g:6195:1: ( ruleConjunctionFilter )
            {
            // InternalEclParser.g:6195:1: ( ruleConjunctionFilter )
            // InternalEclParser.g:6196:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEclParser.g:6205:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6209:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEclParser.g:6210:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEclParser.g:6216:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6220:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEclParser.g:6221:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEclParser.g:6221:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEclParser.g:6222:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6223:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==RULE_DISJUNCTION) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalEclParser.g:6223:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEclParser.g:6232:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6236:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEclParser.g:6237:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEclParser.g:6244:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6248:1: ( ( () ) )
            // InternalEclParser.g:6249:1: ( () )
            {
            // InternalEclParser.g:6249:1: ( () )
            // InternalEclParser.g:6250:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEclParser.g:6251:2: ()
            // InternalEclParser.g:6251:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEclParser.g:6259:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6263:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEclParser.g:6264:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEclParser.g:6271:1: rule__DisjunctionFilter__Group_1__1__Impl : ( RULE_DISJUNCTION ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6275:1: ( ( RULE_DISJUNCTION ) )
            // InternalEclParser.g:6276:1: ( RULE_DISJUNCTION )
            {
            // InternalEclParser.g:6276:1: ( RULE_DISJUNCTION )
            // InternalEclParser.g:6277:2: RULE_DISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DISJUNCTION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEclParser.g:6286:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6290:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEclParser.g:6291:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEclParser.g:6297:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6301:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:6302:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:6302:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEclParser.g:6303:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:6304:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEclParser.g:6304:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEclParser.g:6313:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6317:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEclParser.g:6318:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEclParser.g:6325:1: rule__ConjunctionFilter__Group__0__Impl : ( ruleExclusionFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6329:1: ( ( ruleExclusionFilter ) )
            // InternalEclParser.g:6330:1: ( ruleExclusionFilter )
            {
            // InternalEclParser.g:6330:1: ( ruleExclusionFilter )
            // InternalEclParser.g:6331:2: ruleExclusionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getExclusionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getExclusionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEclParser.g:6340:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6344:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEclParser.g:6345:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEclParser.g:6351:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6355:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEclParser.g:6356:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEclParser.g:6356:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEclParser.g:6357:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6358:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( ((LA65_0>=RULE_COMMA && LA65_0<=RULE_CONJUNCTION)) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalEclParser.g:6358:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEclParser.g:6367:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6371:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEclParser.g:6372:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEclParser.g:6379:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6383:1: ( ( () ) )
            // InternalEclParser.g:6384:1: ( () )
            {
            // InternalEclParser.g:6384:1: ( () )
            // InternalEclParser.g:6385:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEclParser.g:6386:2: ()
            // InternalEclParser.g:6386:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEclParser.g:6394:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6398:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEclParser.g:6399:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEclParser.g:6406:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6410:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEclParser.g:6411:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:6411:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEclParser.g:6412:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:6413:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEclParser.g:6413:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEclParser.g:6421:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6425:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEclParser.g:6426:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEclParser.g:6432:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6436:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:6437:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:6437:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEclParser.g:6438:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:6439:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEclParser.g:6439:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionFilter__Group__0"
    // InternalEclParser.g:6448:1: rule__ExclusionFilter__Group__0 : rule__ExclusionFilter__Group__0__Impl rule__ExclusionFilter__Group__1 ;
    public final void rule__ExclusionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6452:1: ( rule__ExclusionFilter__Group__0__Impl rule__ExclusionFilter__Group__1 )
            // InternalEclParser.g:6453:2: rule__ExclusionFilter__Group__0__Impl rule__ExclusionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ExclusionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group__0"


    // $ANTLR start "rule__ExclusionFilter__Group__0__Impl"
    // InternalEclParser.g:6460:1: rule__ExclusionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ExclusionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6464:1: ( ( rulePropertyFilter ) )
            // InternalEclParser.g:6465:1: ( rulePropertyFilter )
            {
            // InternalEclParser.g:6465:1: ( rulePropertyFilter )
            // InternalEclParser.g:6466:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group__0__Impl"


    // $ANTLR start "rule__ExclusionFilter__Group__1"
    // InternalEclParser.g:6475:1: rule__ExclusionFilter__Group__1 : rule__ExclusionFilter__Group__1__Impl ;
    public final void rule__ExclusionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6479:1: ( rule__ExclusionFilter__Group__1__Impl )
            // InternalEclParser.g:6480:2: rule__ExclusionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group__1"


    // $ANTLR start "rule__ExclusionFilter__Group__1__Impl"
    // InternalEclParser.g:6486:1: rule__ExclusionFilter__Group__1__Impl : ( ( rule__ExclusionFilter__Group_1__0 )? ) ;
    public final void rule__ExclusionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6490:1: ( ( ( rule__ExclusionFilter__Group_1__0 )? ) )
            // InternalEclParser.g:6491:1: ( ( rule__ExclusionFilter__Group_1__0 )? )
            {
            // InternalEclParser.g:6491:1: ( ( rule__ExclusionFilter__Group_1__0 )? )
            // InternalEclParser.g:6492:2: ( rule__ExclusionFilter__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6493:2: ( rule__ExclusionFilter__Group_1__0 )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==RULE_EXCLUSION) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalEclParser.g:6493:3: rule__ExclusionFilter__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionFilter__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group__1__Impl"


    // $ANTLR start "rule__ExclusionFilter__Group_1__0"
    // InternalEclParser.g:6502:1: rule__ExclusionFilter__Group_1__0 : rule__ExclusionFilter__Group_1__0__Impl rule__ExclusionFilter__Group_1__1 ;
    public final void rule__ExclusionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6506:1: ( rule__ExclusionFilter__Group_1__0__Impl rule__ExclusionFilter__Group_1__1 )
            // InternalEclParser.g:6507:2: rule__ExclusionFilter__Group_1__0__Impl rule__ExclusionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ExclusionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group_1__0"


    // $ANTLR start "rule__ExclusionFilter__Group_1__0__Impl"
    // InternalEclParser.g:6514:1: rule__ExclusionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6518:1: ( ( () ) )
            // InternalEclParser.g:6519:1: ( () )
            {
            // InternalEclParser.g:6519:1: ( () )
            // InternalEclParser.g:6520:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterAccess().getExclusionFilterLeftAction_1_0()); 
            }
            // InternalEclParser.g:6521:2: ()
            // InternalEclParser.g:6521:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterAccess().getExclusionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionFilter__Group_1__1"
    // InternalEclParser.g:6529:1: rule__ExclusionFilter__Group_1__1 : rule__ExclusionFilter__Group_1__1__Impl rule__ExclusionFilter__Group_1__2 ;
    public final void rule__ExclusionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6533:1: ( rule__ExclusionFilter__Group_1__1__Impl rule__ExclusionFilter__Group_1__2 )
            // InternalEclParser.g:6534:2: rule__ExclusionFilter__Group_1__1__Impl rule__ExclusionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__ExclusionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group_1__1"


    // $ANTLR start "rule__ExclusionFilter__Group_1__1__Impl"
    // InternalEclParser.g:6541:1: rule__ExclusionFilter__Group_1__1__Impl : ( RULE_EXCLUSION ) ;
    public final void rule__ExclusionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6545:1: ( ( RULE_EXCLUSION ) )
            // InternalEclParser.g:6546:1: ( RULE_EXCLUSION )
            {
            // InternalEclParser.g:6546:1: ( RULE_EXCLUSION )
            // InternalEclParser.g:6547:2: RULE_EXCLUSION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterAccess().getEXCLUSIONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_EXCLUSION,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterAccess().getEXCLUSIONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionFilter__Group_1__2"
    // InternalEclParser.g:6556:1: rule__ExclusionFilter__Group_1__2 : rule__ExclusionFilter__Group_1__2__Impl ;
    public final void rule__ExclusionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6560:1: ( rule__ExclusionFilter__Group_1__2__Impl )
            // InternalEclParser.g:6561:2: rule__ExclusionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group_1__2"


    // $ANTLR start "rule__ExclusionFilter__Group_1__2__Impl"
    // InternalEclParser.g:6567:1: rule__ExclusionFilter__Group_1__2__Impl : ( ( rule__ExclusionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6571:1: ( ( ( rule__ExclusionFilter__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:6572:1: ( ( rule__ExclusionFilter__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:6572:1: ( ( rule__ExclusionFilter__RightAssignment_1_2 ) )
            // InternalEclParser.g:6573:2: ( rule__ExclusionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:6574:2: ( rule__ExclusionFilter__RightAssignment_1_2 )
            // InternalEclParser.g:6574:3: rule__ExclusionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEclParser.g:6583:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6587:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEclParser.g:6588:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEclParser.g:6595:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6599:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:6600:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:6600:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:6601:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEclParser.g:6610:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6614:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEclParser.g:6615:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_19);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEclParser.g:6622:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6626:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEclParser.g:6627:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:6627:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEclParser.g:6628:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:6629:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEclParser.g:6629:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEclParser.g:6637:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6641:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEclParser.g:6642:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEclParser.g:6648:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6652:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:6653:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:6653:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:6654:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEclParser.g:6664:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6668:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEclParser.g:6669:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEclParser.g:6676:1: rule__TermFilter__Group__0__Impl : ( RULE_TERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6680:1: ( ( RULE_TERM_KEYWORD ) )
            // InternalEclParser.g:6681:1: ( RULE_TERM_KEYWORD )
            {
            // InternalEclParser.g:6681:1: ( RULE_TERM_KEYWORD )
            // InternalEclParser.g:6682:2: RULE_TERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TERM_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEclParser.g:6691:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6695:1: ( rule__TermFilter__Group__1__Impl )
            // InternalEclParser.g:6696:2: rule__TermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEclParser.g:6702:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__Alternatives_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6706:1: ( ( ( rule__TermFilter__Alternatives_1 ) ) )
            // InternalEclParser.g:6707:1: ( ( rule__TermFilter__Alternatives_1 ) )
            {
            // InternalEclParser.g:6707:1: ( ( rule__TermFilter__Alternatives_1 ) )
            // InternalEclParser.g:6708:2: ( rule__TermFilter__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:6709:2: ( rule__TermFilter__Alternatives_1 )
            // InternalEclParser.g:6709:3: rule__TermFilter__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__0"
    // InternalEclParser.g:6718:1: rule__TypedTermFilter__Group__0 : rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 ;
    public final void rule__TypedTermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6722:1: ( rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 )
            // InternalEclParser.g:6723:2: rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypedTermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0"


    // $ANTLR start "rule__TypedTermFilter__Group__0__Impl"
    // InternalEclParser.g:6730:1: rule__TypedTermFilter__Group__0__Impl : ( ( rule__TypedTermFilter__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6734:1: ( ( ( rule__TypedTermFilter__OpAssignment_0 ) ) )
            // InternalEclParser.g:6735:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6735:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            // InternalEclParser.g:6736:2: ( rule__TypedTermFilter__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6737:2: ( rule__TypedTermFilter__OpAssignment_0 )
            // InternalEclParser.g:6737:3: rule__TypedTermFilter__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__1"
    // InternalEclParser.g:6745:1: rule__TypedTermFilter__Group__1 : rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 ;
    public final void rule__TypedTermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6749:1: ( rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 )
            // InternalEclParser.g:6750:2: rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypedTermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1"


    // $ANTLR start "rule__TypedTermFilter__Group__1__Impl"
    // InternalEclParser.g:6757:1: rule__TypedTermFilter__Group__1__Impl : ( ( rule__TypedTermFilter__Group_1__0 )? ) ;
    public final void rule__TypedTermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6761:1: ( ( ( rule__TypedTermFilter__Group_1__0 )? ) )
            // InternalEclParser.g:6762:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            {
            // InternalEclParser.g:6762:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            // InternalEclParser.g:6763:2: ( rule__TypedTermFilter__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6764:2: ( rule__TypedTermFilter__Group_1__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Exact||(LA67_0>=Match && LA67_0<=Regex)||LA67_0==Wild) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEclParser.g:6764:3: rule__TypedTermFilter__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilter__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__2"
    // InternalEclParser.g:6772:1: rule__TypedTermFilter__Group__2 : rule__TypedTermFilter__Group__2__Impl ;
    public final void rule__TypedTermFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6776:1: ( rule__TypedTermFilter__Group__2__Impl )
            // InternalEclParser.g:6777:2: rule__TypedTermFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2"


    // $ANTLR start "rule__TypedTermFilter__Group__2__Impl"
    // InternalEclParser.g:6783:1: rule__TypedTermFilter__Group__2__Impl : ( ( rule__TypedTermFilter__TermAssignment_2 ) ) ;
    public final void rule__TypedTermFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6787:1: ( ( ( rule__TypedTermFilter__TermAssignment_2 ) ) )
            // InternalEclParser.g:6788:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            {
            // InternalEclParser.g:6788:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            // InternalEclParser.g:6789:2: ( rule__TypedTermFilter__TermAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }
            // InternalEclParser.g:6790:2: ( rule__TypedTermFilter__TermAssignment_2 )
            // InternalEclParser.g:6790:3: rule__TypedTermFilter__TermAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__TermAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0"
    // InternalEclParser.g:6799:1: rule__TypedTermFilter__Group_1__0 : rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 ;
    public final void rule__TypedTermFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6803:1: ( rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 )
            // InternalEclParser.g:6804:2: rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__TypedTermFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0__Impl"
    // InternalEclParser.g:6811:1: rule__TypedTermFilter__Group_1__0__Impl : ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) ;
    public final void rule__TypedTermFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6815:1: ( ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) )
            // InternalEclParser.g:6816:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            {
            // InternalEclParser.g:6816:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            // InternalEclParser.g:6817:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }
            // InternalEclParser.g:6818:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            // InternalEclParser.g:6818:3: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1"
    // InternalEclParser.g:6826:1: rule__TypedTermFilter__Group_1__1 : rule__TypedTermFilter__Group_1__1__Impl ;
    public final void rule__TypedTermFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6830:1: ( rule__TypedTermFilter__Group_1__1__Impl )
            // InternalEclParser.g:6831:2: rule__TypedTermFilter__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1__Impl"
    // InternalEclParser.g:6837:1: rule__TypedTermFilter__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedTermFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6841:1: ( ( RULE_COLON ) )
            // InternalEclParser.g:6842:1: ( RULE_COLON )
            {
            // InternalEclParser.g:6842:1: ( RULE_COLON )
            // InternalEclParser.g:6843:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0"
    // InternalEclParser.g:6853:1: rule__TypedTermFilterSet__Group__0 : rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 ;
    public final void rule__TypedTermFilterSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6857:1: ( rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 )
            // InternalEclParser.g:6858:2: rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__TypedTermFilterSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0__Impl"
    // InternalEclParser.g:6865:1: rule__TypedTermFilterSet__Group__0__Impl : ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilterSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6869:1: ( ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) )
            // InternalEclParser.g:6870:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6870:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            // InternalEclParser.g:6871:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6872:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            // InternalEclParser.g:6872:3: rule__TypedTermFilterSet__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1"
    // InternalEclParser.g:6880:1: rule__TypedTermFilterSet__Group__1 : rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 ;
    public final void rule__TypedTermFilterSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6884:1: ( rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 )
            // InternalEclParser.g:6885:2: rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypedTermFilterSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1__Impl"
    // InternalEclParser.g:6892:1: rule__TypedTermFilterSet__Group__1__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedTermFilterSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6896:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:6897:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:6897:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:6898:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2"
    // InternalEclParser.g:6907:1: rule__TypedTermFilterSet__Group__2 : rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 ;
    public final void rule__TypedTermFilterSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6911:1: ( rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 )
            // InternalEclParser.g:6912:2: rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__TypedTermFilterSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2__Impl"
    // InternalEclParser.g:6919:1: rule__TypedTermFilterSet__Group__2__Impl : ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ;
    public final void rule__TypedTermFilterSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6923:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) )
            // InternalEclParser.g:6924:1: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) )
            {
            // InternalEclParser.g:6924:1: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) )
            // InternalEclParser.g:6925:2: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }
            // InternalEclParser.g:6926:2: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            // InternalEclParser.g:6926:3: rule__TypedTermFilterSet__TermsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__TermsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3"
    // InternalEclParser.g:6934:1: rule__TypedTermFilterSet__Group__3 : rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4 ;
    public final void rule__TypedTermFilterSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6938:1: ( rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4 )
            // InternalEclParser.g:6939:2: rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__TypedTermFilterSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3__Impl"
    // InternalEclParser.g:6946:1: rule__TypedTermFilterSet__Group__3__Impl : ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* ) ;
    public final void rule__TypedTermFilterSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6950:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* ) )
            // InternalEclParser.g:6951:1: ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* )
            {
            // InternalEclParser.g:6951:1: ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* )
            // InternalEclParser.g:6952:2: ( rule__TypedTermFilterSet__TermsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_3()); 
            }
            // InternalEclParser.g:6953:2: ( rule__TypedTermFilterSet__TermsAssignment_3 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( ((LA68_0>=RULE_EQUAL && LA68_0<=RULE_NOT_EQUAL)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalEclParser.g:6953:3: rule__TypedTermFilterSet__TermsAssignment_3
            	    {
            	    pushFollow(FollowSets000.FOLLOW_38);
            	    rule__TypedTermFilterSet__TermsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__4"
    // InternalEclParser.g:6961:1: rule__TypedTermFilterSet__Group__4 : rule__TypedTermFilterSet__Group__4__Impl ;
    public final void rule__TypedTermFilterSet__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6965:1: ( rule__TypedTermFilterSet__Group__4__Impl )
            // InternalEclParser.g:6966:2: rule__TypedTermFilterSet__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__4"


    // $ANTLR start "rule__TypedTermFilterSet__Group__4__Impl"
    // InternalEclParser.g:6972:1: rule__TypedTermFilterSet__Group__4__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedTermFilterSet__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6976:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:6977:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:6977:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:6978:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__4__Impl"


    // $ANTLR start "rule__LanguageCodeFilter__Group__0"
    // InternalEclParser.g:6988:1: rule__LanguageCodeFilter__Group__0 : rule__LanguageCodeFilter__Group__0__Impl rule__LanguageCodeFilter__Group__1 ;
    public final void rule__LanguageCodeFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6992:1: ( rule__LanguageCodeFilter__Group__0__Impl rule__LanguageCodeFilter__Group__1 )
            // InternalEclParser.g:6993:2: rule__LanguageCodeFilter__Group__0__Impl rule__LanguageCodeFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__LanguageCodeFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group__0"


    // $ANTLR start "rule__LanguageCodeFilter__Group__0__Impl"
    // InternalEclParser.g:7000:1: rule__LanguageCodeFilter__Group__0__Impl : ( RULE_LANGUAGE_KEYWORD ) ;
    public final void rule__LanguageCodeFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7004:1: ( ( RULE_LANGUAGE_KEYWORD ) )
            // InternalEclParser.g:7005:1: ( RULE_LANGUAGE_KEYWORD )
            {
            // InternalEclParser.g:7005:1: ( RULE_LANGUAGE_KEYWORD )
            // InternalEclParser.g:7006:2: RULE_LANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_LANGUAGE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getLANGUAGE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageCodeFilter__Group__1"
    // InternalEclParser.g:7015:1: rule__LanguageCodeFilter__Group__1 : rule__LanguageCodeFilter__Group__1__Impl rule__LanguageCodeFilter__Group__2 ;
    public final void rule__LanguageCodeFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7019:1: ( rule__LanguageCodeFilter__Group__1__Impl rule__LanguageCodeFilter__Group__2 )
            // InternalEclParser.g:7020:2: rule__LanguageCodeFilter__Group__1__Impl rule__LanguageCodeFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__LanguageCodeFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group__1"


    // $ANTLR start "rule__LanguageCodeFilter__Group__1__Impl"
    // InternalEclParser.g:7027:1: rule__LanguageCodeFilter__Group__1__Impl : ( ( rule__LanguageCodeFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageCodeFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7031:1: ( ( ( rule__LanguageCodeFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7032:1: ( ( rule__LanguageCodeFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7032:1: ( ( rule__LanguageCodeFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7033:2: ( rule__LanguageCodeFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7034:2: ( rule__LanguageCodeFilter__OpAssignment_1 )
            // InternalEclParser.g:7034:3: rule__LanguageCodeFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageCodeFilter__Group__2"
    // InternalEclParser.g:7042:1: rule__LanguageCodeFilter__Group__2 : rule__LanguageCodeFilter__Group__2__Impl ;
    public final void rule__LanguageCodeFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7046:1: ( rule__LanguageCodeFilter__Group__2__Impl )
            // InternalEclParser.g:7047:2: rule__LanguageCodeFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group__2"


    // $ANTLR start "rule__LanguageCodeFilter__Group__2__Impl"
    // InternalEclParser.g:7053:1: rule__LanguageCodeFilter__Group__2__Impl : ( ( rule__LanguageCodeFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageCodeFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7057:1: ( ( ( rule__LanguageCodeFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7058:1: ( ( rule__LanguageCodeFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7058:1: ( ( rule__LanguageCodeFilter__Alternatives_2 ) )
            // InternalEclParser.g:7059:2: ( rule__LanguageCodeFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7060:2: ( rule__LanguageCodeFilter__Alternatives_2 )
            // InternalEclParser.g:7060:3: rule__LanguageCodeFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__0"
    // InternalEclParser.g:7069:1: rule__LanguageCodeFilter__Group_2_1__0 : rule__LanguageCodeFilter__Group_2_1__0__Impl rule__LanguageCodeFilter__Group_2_1__1 ;
    public final void rule__LanguageCodeFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7073:1: ( rule__LanguageCodeFilter__Group_2_1__0__Impl rule__LanguageCodeFilter__Group_2_1__1 )
            // InternalEclParser.g:7074:2: rule__LanguageCodeFilter__Group_2_1__0__Impl rule__LanguageCodeFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__LanguageCodeFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7081:1: rule__LanguageCodeFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageCodeFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7085:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7086:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7086:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7087:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__1"
    // InternalEclParser.g:7096:1: rule__LanguageCodeFilter__Group_2_1__1 : rule__LanguageCodeFilter__Group_2_1__1__Impl rule__LanguageCodeFilter__Group_2_1__2 ;
    public final void rule__LanguageCodeFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7100:1: ( rule__LanguageCodeFilter__Group_2_1__1__Impl rule__LanguageCodeFilter__Group_2_1__2 )
            // InternalEclParser.g:7101:2: rule__LanguageCodeFilter__Group_2_1__1__Impl rule__LanguageCodeFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__LanguageCodeFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7108:1: rule__LanguageCodeFilter__Group_2_1__1__Impl : ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1 ) ) ;
    public final void rule__LanguageCodeFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7112:1: ( ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7113:1: ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7113:1: ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEclParser.g:7114:2: ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7115:2: ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEclParser.g:7115:3: rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__2"
    // InternalEclParser.g:7123:1: rule__LanguageCodeFilter__Group_2_1__2 : rule__LanguageCodeFilter__Group_2_1__2__Impl rule__LanguageCodeFilter__Group_2_1__3 ;
    public final void rule__LanguageCodeFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7127:1: ( rule__LanguageCodeFilter__Group_2_1__2__Impl rule__LanguageCodeFilter__Group_2_1__3 )
            // InternalEclParser.g:7128:2: rule__LanguageCodeFilter__Group_2_1__2__Impl rule__LanguageCodeFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__LanguageCodeFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7135:1: rule__LanguageCodeFilter__Group_2_1__2__Impl : ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2 )* ) ;
    public final void rule__LanguageCodeFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7139:1: ( ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7140:1: ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7140:1: ( ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2 )* )
            // InternalEclParser.g:7141:2: ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7142:2: ( rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==RULE_ALPHA) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalEclParser.g:7142:3: rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__3"
    // InternalEclParser.g:7150:1: rule__LanguageCodeFilter__Group_2_1__3 : rule__LanguageCodeFilter__Group_2_1__3__Impl ;
    public final void rule__LanguageCodeFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7154:1: ( rule__LanguageCodeFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7155:2: rule__LanguageCodeFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__3"


    // $ANTLR start "rule__LanguageCodeFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7161:1: rule__LanguageCodeFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageCodeFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7165:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7166:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7166:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7167:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEclParser.g:7177:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7181:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEclParser.g:7182:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEclParser.g:7189:1: rule__TypeIdFilter__Group__0__Impl : ( RULE_TYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7193:1: ( ( RULE_TYPEID_KEYWORD ) )
            // InternalEclParser.g:7194:1: ( RULE_TYPEID_KEYWORD )
            {
            // InternalEclParser.g:7194:1: ( RULE_TYPEID_KEYWORD )
            // InternalEclParser.g:7195:2: RULE_TYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPEID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEclParser.g:7204:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7208:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEclParser.g:7209:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEclParser.g:7216:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7220:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7221:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7221:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7222:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7223:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEclParser.g:7223:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEclParser.g:7231:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7235:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEclParser.g:7236:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEclParser.g:7242:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7246:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEclParser.g:7247:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEclParser.g:7247:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEclParser.g:7248:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEclParser.g:7249:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEclParser.g:7249:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEclParser.g:7258:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7262:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEclParser.g:7263:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEclParser.g:7270:1: rule__TypeTokenFilter__Group__0__Impl : ( RULE_TYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7274:1: ( ( RULE_TYPE_KEYWORD ) )
            // InternalEclParser.g:7275:1: ( RULE_TYPE_KEYWORD )
            {
            // InternalEclParser.g:7275:1: ( RULE_TYPE_KEYWORD )
            // InternalEclParser.g:7276:2: RULE_TYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_TYPE_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEclParser.g:7285:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7289:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEclParser.g:7290:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEclParser.g:7297:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7301:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7302:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7302:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7303:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7304:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEclParser.g:7304:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEclParser.g:7312:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7316:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEclParser.g:7317:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEclParser.g:7323:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7327:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7328:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7328:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEclParser.g:7329:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7330:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEclParser.g:7330:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEclParser.g:7339:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7343:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEclParser.g:7344:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7351:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7355:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7356:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7356:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7357:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEclParser.g:7366:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7370:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEclParser.g:7371:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7378:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7382:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7383:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7383:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEclParser.g:7384:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7385:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEclParser.g:7385:3: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEclParser.g:7393:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3 ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7397:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3 )
            // InternalEclParser.g:7398:2: rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7405:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7409:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7410:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7410:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* )
            // InternalEclParser.g:7411:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7412:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==RULE_ALPHA) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalEclParser.g:7412:3: rule__TypeTokenFilter__TokensAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__3"
    // InternalEclParser.g:7420:1: rule__TypeTokenFilter__Group_2_1__3 : rule__TypeTokenFilter__Group_2_1__3__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7424:1: ( rule__TypeTokenFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7425:2: rule__TypeTokenFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__3"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7431:1: rule__TypeTokenFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7435:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7436:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7436:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7437:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEclParser.g:7447:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7451:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEclParser.g:7452:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEclParser.g:7459:1: rule__DialectIdFilter__Group__0__Impl : ( RULE_DIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7463:1: ( ( RULE_DIALECTID_KEYWORD ) )
            // InternalEclParser.g:7464:1: ( RULE_DIALECTID_KEYWORD )
            {
            // InternalEclParser.g:7464:1: ( RULE_DIALECTID_KEYWORD )
            // InternalEclParser.g:7465:2: RULE_DIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECTID_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEclParser.g:7474:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7478:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEclParser.g:7479:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEclParser.g:7486:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7490:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7491:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7491:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7492:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7493:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEclParser.g:7493:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEclParser.g:7501:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7505:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEclParser.g:7506:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEclParser.g:7512:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7516:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7517:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7517:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEclParser.g:7518:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7519:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEclParser.g:7519:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEclParser.g:7528:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7532:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEclParser.g:7533:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7540:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7544:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7545:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7545:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7546:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEclParser.g:7555:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7559:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEclParser.g:7560:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7567:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7571:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7572:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7572:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEclParser.g:7573:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7574:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEclParser.g:7574:3: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEclParser.g:7582:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3 ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7586:1: ( rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3 )
            // InternalEclParser.g:7587:2: rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7594:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7598:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7599:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7599:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* )
            // InternalEclParser.g:7600:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7601:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==RULE_DIGIT_NONZERO) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalEclParser.g:7601:3: rule__DialectIdFilter__DialectsAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_18);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__3"
    // InternalEclParser.g:7609:1: rule__DialectIdFilter__Group_2_1__3 : rule__DialectIdFilter__Group_2_1__3__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7613:1: ( rule__DialectIdFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7614:2: rule__DialectIdFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__3"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7620:1: rule__DialectIdFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7624:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7625:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7625:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7626:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEclParser.g:7636:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7640:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEclParser.g:7641:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEclParser.g:7648:1: rule__DialectAliasFilter__Group__0__Impl : ( RULE_DIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7652:1: ( ( RULE_DIALECT_KEYWORD ) )
            // InternalEclParser.g:7653:1: ( RULE_DIALECT_KEYWORD )
            {
            // InternalEclParser.g:7653:1: ( RULE_DIALECT_KEYWORD )
            // InternalEclParser.g:7654:2: RULE_DIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }
            match(input,RULE_DIALECT_KEYWORD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEclParser.g:7663:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7667:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEclParser.g:7668:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_39);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEclParser.g:7675:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7679:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7680:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7680:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7681:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7682:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEclParser.g:7682:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEclParser.g:7690:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7694:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEclParser.g:7695:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEclParser.g:7701:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7705:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7706:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7706:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEclParser.g:7707:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7708:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEclParser.g:7708:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEclParser.g:7717:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7721:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEclParser.g:7722:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7729:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7733:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7734:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7734:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7735:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEclParser.g:7744:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7748:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEclParser.g:7749:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7756:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7760:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7761:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7761:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEclParser.g:7762:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7763:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEclParser.g:7763:3: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEclParser.g:7771:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3 ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7775:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3 )
            // InternalEclParser.g:7776:2: rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7783:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7787:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7788:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7788:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* )
            // InternalEclParser.g:7789:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7790:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==RULE_ALPHA) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalEclParser.g:7790:3: rule__DialectAliasFilter__DialectsAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__3"
    // InternalEclParser.g:7798:1: rule__DialectAliasFilter__Group_2_1__3 : rule__DialectAliasFilter__Group_2_1__3__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7802:1: ( rule__DialectAliasFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7803:2: rule__DialectAliasFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__3"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7809:1: rule__DialectAliasFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7813:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7814:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7814:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7815:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEclParser.g:7825:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7829:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEclParser.g:7830:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEclParser.g:7837:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7841:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEclParser.g:7842:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEclParser.g:7842:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEclParser.g:7843:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEclParser.g:7844:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEclParser.g:7844:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEclParser.g:7852:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7856:1: ( rule__Dialect__Group__1__Impl )
            // InternalEclParser.g:7857:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEclParser.g:7863:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7867:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEclParser.g:7868:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEclParser.g:7868:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEclParser.g:7869:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEclParser.g:7870:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_ROUND_OPEN) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalEclParser.g:7870:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEclParser.g:7879:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7883:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEclParser.g:7884:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEclParser.g:7891:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7895:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEclParser.g:7896:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEclParser.g:7896:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEclParser.g:7897:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEclParser.g:7898:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEclParser.g:7898:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEclParser.g:7906:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7910:1: ( rule__DialectAlias__Group__1__Impl )
            // InternalEclParser.g:7911:2: rule__DialectAlias__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEclParser.g:7917:1: rule__DialectAlias__Group__1__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7921:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) )
            // InternalEclParser.g:7922:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            {
            // InternalEclParser.g:7922:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            // InternalEclParser.g:7923:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEclParser.g:7924:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==RULE_ROUND_OPEN) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalEclParser.g:7924:3: rule__DialectAlias__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0"
    // InternalEclParser.g:7933:1: rule__AcceptabilityTokenSet__Group__0 : rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 ;
    public final void rule__AcceptabilityTokenSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7937:1: ( rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 )
            // InternalEclParser.g:7938:2: rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__AcceptabilityTokenSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0__Impl"
    // InternalEclParser.g:7945:1: rule__AcceptabilityTokenSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AcceptabilityTokenSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7949:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7950:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7950:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7951:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1"
    // InternalEclParser.g:7960:1: rule__AcceptabilityTokenSet__Group__1 : rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 ;
    public final void rule__AcceptabilityTokenSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7964:1: ( rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 )
            // InternalEclParser.g:7965:2: rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__AcceptabilityTokenSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1__Impl"
    // InternalEclParser.g:7972:1: rule__AcceptabilityTokenSet__Group__1__Impl : ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ;
    public final void rule__AcceptabilityTokenSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7976:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) )
            // InternalEclParser.g:7977:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            {
            // InternalEclParser.g:7977:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            // InternalEclParser.g:7978:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEclParser.g:7979:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            // InternalEclParser.g:7979:3: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2"
    // InternalEclParser.g:7987:1: rule__AcceptabilityTokenSet__Group__2 : rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3 ;
    public final void rule__AcceptabilityTokenSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7991:1: ( rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3 )
            // InternalEclParser.g:7992:2: rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__AcceptabilityTokenSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2__Impl"
    // InternalEclParser.g:7999:1: rule__AcceptabilityTokenSet__Group__2__Impl : ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* ) ;
    public final void rule__AcceptabilityTokenSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8003:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* ) )
            // InternalEclParser.g:8004:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* )
            {
            // InternalEclParser.g:8004:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* )
            // InternalEclParser.g:8005:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_2()); 
            }
            // InternalEclParser.g:8006:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==RULE_ALPHA) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalEclParser.g:8006:3: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__3"
    // InternalEclParser.g:8014:1: rule__AcceptabilityTokenSet__Group__3 : rule__AcceptabilityTokenSet__Group__3__Impl ;
    public final void rule__AcceptabilityTokenSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8018:1: ( rule__AcceptabilityTokenSet__Group__3__Impl )
            // InternalEclParser.g:8019:2: rule__AcceptabilityTokenSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__3"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__3__Impl"
    // InternalEclParser.g:8025:1: rule__AcceptabilityTokenSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AcceptabilityTokenSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8029:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:8030:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:8030:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:8031:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__3__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__0"
    // InternalEclParser.g:8041:1: rule__SnomedIdentifier__Group__0 : rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1 ;
    public final void rule__SnomedIdentifier__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8045:1: ( rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1 )
            // InternalEclParser.g:8046:2: rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__SnomedIdentifier__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__0"


    // $ANTLR start "rule__SnomedIdentifier__Group__0__Impl"
    // InternalEclParser.g:8053:1: rule__SnomedIdentifier__Group__0__Impl : ( RULE_DIGIT_NONZERO ) ;
    public final void rule__SnomedIdentifier__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8057:1: ( ( RULE_DIGIT_NONZERO ) )
            // InternalEclParser.g:8058:1: ( RULE_DIGIT_NONZERO )
            {
            // InternalEclParser.g:8058:1: ( RULE_DIGIT_NONZERO )
            // InternalEclParser.g:8059:2: RULE_DIGIT_NONZERO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
            }
            match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__0__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__1"
    // InternalEclParser.g:8068:1: rule__SnomedIdentifier__Group__1 : rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2 ;
    public final void rule__SnomedIdentifier__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8072:1: ( rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2 )
            // InternalEclParser.g:8073:2: rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__SnomedIdentifier__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__1"


    // $ANTLR start "rule__SnomedIdentifier__Group__1__Impl"
    // InternalEclParser.g:8080:1: rule__SnomedIdentifier__Group__1__Impl : ( ( rule__SnomedIdentifier__Alternatives_1 ) ) ;
    public final void rule__SnomedIdentifier__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8084:1: ( ( ( rule__SnomedIdentifier__Alternatives_1 ) ) )
            // InternalEclParser.g:8085:1: ( ( rule__SnomedIdentifier__Alternatives_1 ) )
            {
            // InternalEclParser.g:8085:1: ( ( rule__SnomedIdentifier__Alternatives_1 ) )
            // InternalEclParser.g:8086:2: ( rule__SnomedIdentifier__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:8087:2: ( rule__SnomedIdentifier__Alternatives_1 )
            // InternalEclParser.g:8087:3: rule__SnomedIdentifier__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__1__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__2"
    // InternalEclParser.g:8095:1: rule__SnomedIdentifier__Group__2 : rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3 ;
    public final void rule__SnomedIdentifier__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8099:1: ( rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3 )
            // InternalEclParser.g:8100:2: rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__SnomedIdentifier__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__2"


    // $ANTLR start "rule__SnomedIdentifier__Group__2__Impl"
    // InternalEclParser.g:8107:1: rule__SnomedIdentifier__Group__2__Impl : ( ( rule__SnomedIdentifier__Alternatives_2 ) ) ;
    public final void rule__SnomedIdentifier__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8111:1: ( ( ( rule__SnomedIdentifier__Alternatives_2 ) ) )
            // InternalEclParser.g:8112:1: ( ( rule__SnomedIdentifier__Alternatives_2 ) )
            {
            // InternalEclParser.g:8112:1: ( ( rule__SnomedIdentifier__Alternatives_2 ) )
            // InternalEclParser.g:8113:2: ( rule__SnomedIdentifier__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:8114:2: ( rule__SnomedIdentifier__Alternatives_2 )
            // InternalEclParser.g:8114:3: rule__SnomedIdentifier__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__2__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__3"
    // InternalEclParser.g:8122:1: rule__SnomedIdentifier__Group__3 : rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4 ;
    public final void rule__SnomedIdentifier__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8126:1: ( rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4 )
            // InternalEclParser.g:8127:2: rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__SnomedIdentifier__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__3"


    // $ANTLR start "rule__SnomedIdentifier__Group__3__Impl"
    // InternalEclParser.g:8134:1: rule__SnomedIdentifier__Group__3__Impl : ( ( rule__SnomedIdentifier__Alternatives_3 ) ) ;
    public final void rule__SnomedIdentifier__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8138:1: ( ( ( rule__SnomedIdentifier__Alternatives_3 ) ) )
            // InternalEclParser.g:8139:1: ( ( rule__SnomedIdentifier__Alternatives_3 ) )
            {
            // InternalEclParser.g:8139:1: ( ( rule__SnomedIdentifier__Alternatives_3 ) )
            // InternalEclParser.g:8140:2: ( rule__SnomedIdentifier__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_3()); 
            }
            // InternalEclParser.g:8141:2: ( rule__SnomedIdentifier__Alternatives_3 )
            // InternalEclParser.g:8141:3: rule__SnomedIdentifier__Alternatives_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__3__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__4"
    // InternalEclParser.g:8149:1: rule__SnomedIdentifier__Group__4 : rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5 ;
    public final void rule__SnomedIdentifier__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8153:1: ( rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5 )
            // InternalEclParser.g:8154:2: rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__SnomedIdentifier__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__4"


    // $ANTLR start "rule__SnomedIdentifier__Group__4__Impl"
    // InternalEclParser.g:8161:1: rule__SnomedIdentifier__Group__4__Impl : ( ( rule__SnomedIdentifier__Alternatives_4 ) ) ;
    public final void rule__SnomedIdentifier__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8165:1: ( ( ( rule__SnomedIdentifier__Alternatives_4 ) ) )
            // InternalEclParser.g:8166:1: ( ( rule__SnomedIdentifier__Alternatives_4 ) )
            {
            // InternalEclParser.g:8166:1: ( ( rule__SnomedIdentifier__Alternatives_4 ) )
            // InternalEclParser.g:8167:2: ( rule__SnomedIdentifier__Alternatives_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_4()); 
            }
            // InternalEclParser.g:8168:2: ( rule__SnomedIdentifier__Alternatives_4 )
            // InternalEclParser.g:8168:3: rule__SnomedIdentifier__Alternatives_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__4__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__5"
    // InternalEclParser.g:8176:1: rule__SnomedIdentifier__Group__5 : rule__SnomedIdentifier__Group__5__Impl ;
    public final void rule__SnomedIdentifier__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8180:1: ( rule__SnomedIdentifier__Group__5__Impl )
            // InternalEclParser.g:8181:2: rule__SnomedIdentifier__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__5"


    // $ANTLR start "rule__SnomedIdentifier__Group__5__Impl"
    // InternalEclParser.g:8187:1: rule__SnomedIdentifier__Group__5__Impl : ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) ) ;
    public final void rule__SnomedIdentifier__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8191:1: ( ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) ) )
            // InternalEclParser.g:8192:1: ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) )
            {
            // InternalEclParser.g:8192:1: ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) )
            // InternalEclParser.g:8193:2: ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* )
            {
            // InternalEclParser.g:8193:2: ( ( rule__SnomedIdentifier__Alternatives_5 ) )
            // InternalEclParser.g:8194:3: ( rule__SnomedIdentifier__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }
            // InternalEclParser.g:8195:3: ( rule__SnomedIdentifier__Alternatives_5 )
            // InternalEclParser.g:8195:4: rule__SnomedIdentifier__Alternatives_5
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__SnomedIdentifier__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }

            }

            // InternalEclParser.g:8198:2: ( ( rule__SnomedIdentifier__Alternatives_5 )* )
            // InternalEclParser.g:8199:3: ( rule__SnomedIdentifier__Alternatives_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }
            // InternalEclParser.g:8200:3: ( rule__SnomedIdentifier__Alternatives_5 )*
            loop76:
            do {
                int alt76=2;
                alt76 = dfa76.predict(input);
                switch (alt76) {
            	case 1 :
            	    // InternalEclParser.g:8200:4: rule__SnomedIdentifier__Alternatives_5
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__SnomedIdentifier__Alternatives_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__5__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0"
    // InternalEclParser.g:8210:1: rule__NonNegativeInteger__Group_1__0 : rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 ;
    public final void rule__NonNegativeInteger__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8214:1: ( rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 )
            // InternalEclParser.g:8215:2: rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__NonNegativeInteger__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0__Impl"
    // InternalEclParser.g:8222:1: rule__NonNegativeInteger__Group_1__0__Impl : ( RULE_DIGIT_NONZERO ) ;
    public final void rule__NonNegativeInteger__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8226:1: ( ( RULE_DIGIT_NONZERO ) )
            // InternalEclParser.g:8227:1: ( RULE_DIGIT_NONZERO )
            {
            // InternalEclParser.g:8227:1: ( RULE_DIGIT_NONZERO )
            // InternalEclParser.g:8228:2: RULE_DIGIT_NONZERO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1"
    // InternalEclParser.g:8237:1: rule__NonNegativeInteger__Group_1__1 : rule__NonNegativeInteger__Group_1__1__Impl ;
    public final void rule__NonNegativeInteger__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8241:1: ( rule__NonNegativeInteger__Group_1__1__Impl )
            // InternalEclParser.g:8242:2: rule__NonNegativeInteger__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1__Impl"
    // InternalEclParser.g:8248:1: rule__NonNegativeInteger__Group_1__1__Impl : ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) ;
    public final void rule__NonNegativeInteger__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8252:1: ( ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) )
            // InternalEclParser.g:8253:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            {
            // InternalEclParser.g:8253:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            // InternalEclParser.g:8254:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:8255:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( ((LA77_0>=RULE_ZERO && LA77_0<=RULE_DIGIT_NONZERO)) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalEclParser.g:8255:3: rule__NonNegativeInteger__Alternatives_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__NonNegativeInteger__Alternatives_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEclParser.g:8264:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8268:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEclParser.g:8269:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEclParser.g:8276:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8280:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEclParser.g:8281:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEclParser.g:8281:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEclParser.g:8282:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEclParser.g:8283:2: ( rule__Integer__Alternatives_0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( ((LA78_0>=RULE_PLUS && LA78_0<=RULE_DASH)) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalEclParser.g:8283:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEclParser.g:8291:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8295:1: ( rule__Integer__Group__1__Impl )
            // InternalEclParser.g:8296:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEclParser.g:8302:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8306:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:8307:1: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:8307:1: ( ruleNonNegativeInteger )
            // InternalEclParser.g:8308:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEclParser.g:8318:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8322:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEclParser.g:8323:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEclParser.g:8330:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8334:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEclParser.g:8335:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEclParser.g:8335:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEclParser.g:8336:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEclParser.g:8337:2: ( rule__Decimal__Alternatives_0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( ((LA79_0>=RULE_PLUS && LA79_0<=RULE_DASH)) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalEclParser.g:8337:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEclParser.g:8345:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8349:1: ( rule__Decimal__Group__1__Impl )
            // InternalEclParser.g:8350:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEclParser.g:8356:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8360:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEclParser.g:8361:1: ( ruleNonNegativeDecimal )
            {
            // InternalEclParser.g:8361:1: ( ruleNonNegativeDecimal )
            // InternalEclParser.g:8362:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEclParser.g:8372:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8376:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEclParser.g:8377:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEclParser.g:8384:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8388:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:8389:1: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:8389:1: ( ruleNonNegativeInteger )
            // InternalEclParser.g:8390:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEclParser.g:8399:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8403:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEclParser.g:8404:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEclParser.g:8411:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8415:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:8416:1: ( RULE_DOT )
            {
            // InternalEclParser.g:8416:1: ( RULE_DOT )
            // InternalEclParser.g:8417:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEclParser.g:8426:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8430:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEclParser.g:8431:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEclParser.g:8437:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8441:1: ( ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) )
            // InternalEclParser.g:8442:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            {
            // InternalEclParser.g:8442:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            // InternalEclParser.g:8443:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:8444:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( ((LA80_0>=RULE_ZERO && LA80_0<=RULE_DIGIT_NONZERO)) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalEclParser.g:8444:3: rule__NonNegativeDecimal__Alternatives_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_43);
            	    rule__NonNegativeDecimal__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasValue__Group__0"
    // InternalEclParser.g:8453:1: rule__DialectAliasValue__Group__0 : rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1 ;
    public final void rule__DialectAliasValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8457:1: ( rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1 )
            // InternalEclParser.g:8458:2: rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__DialectAliasValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__0"


    // $ANTLR start "rule__DialectAliasValue__Group__0__Impl"
    // InternalEclParser.g:8465:1: rule__DialectAliasValue__Group__0__Impl : ( RULE_ALPHA ) ;
    public final void rule__DialectAliasValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8469:1: ( ( RULE_ALPHA ) )
            // InternalEclParser.g:8470:1: ( RULE_ALPHA )
            {
            // InternalEclParser.g:8470:1: ( RULE_ALPHA )
            // InternalEclParser.g:8471:2: RULE_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_0()); 
            }
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasValue__Group__1"
    // InternalEclParser.g:8480:1: rule__DialectAliasValue__Group__1 : rule__DialectAliasValue__Group__1__Impl ;
    public final void rule__DialectAliasValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8484:1: ( rule__DialectAliasValue__Group__1__Impl )
            // InternalEclParser.g:8485:2: rule__DialectAliasValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__1"


    // $ANTLR start "rule__DialectAliasValue__Group__1__Impl"
    // InternalEclParser.g:8491:1: rule__DialectAliasValue__Group__1__Impl : ( ( rule__DialectAliasValue__Alternatives_1 )* ) ;
    public final void rule__DialectAliasValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8495:1: ( ( ( rule__DialectAliasValue__Alternatives_1 )* ) )
            // InternalEclParser.g:8496:1: ( ( rule__DialectAliasValue__Alternatives_1 )* )
            {
            // InternalEclParser.g:8496:1: ( ( rule__DialectAliasValue__Alternatives_1 )* )
            // InternalEclParser.g:8497:2: ( rule__DialectAliasValue__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:8498:2: ( rule__DialectAliasValue__Alternatives_1 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==RULE_ALPHA) ) {
                    int LA81_2 = input.LA(2);

                    if ( (synpred110_InternalEclParser()) ) {
                        alt81=1;
                    }


                }
                else if ( ((LA81_0>=RULE_ZERO && LA81_0<=RULE_DIGIT_NONZERO)||LA81_0==RULE_DASH) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalEclParser.g:8498:3: rule__DialectAliasValue__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    rule__DialectAliasValue__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__1__Impl"


    // $ANTLR start "rule__Script__ConstraintAssignment_1"
    // InternalEclParser.g:8507:1: rule__Script__ConstraintAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__Script__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8511:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:8512:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:8512:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:8513:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__ConstraintAssignment_1"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:8522:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8526:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEclParser.g:8527:2: ( ruleAndExpressionConstraint )
            {
            // InternalEclParser.g:8527:2: ( ruleAndExpressionConstraint )
            // InternalEclParser.g:8528:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:8537:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8541:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEclParser.g:8542:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEclParser.g:8542:2: ( ruleExclusionExpressionConstraint )
            // InternalEclParser.g:8543:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:8552:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8556:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEclParser.g:8557:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEclParser.g:8557:2: ( ruleRefinedExpressionConstraint )
            // InternalEclParser.g:8558:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEclParser.g:8567:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8571:1: ( ( ruleEclRefinement ) )
            // InternalEclParser.g:8572:2: ( ruleEclRefinement )
            {
            // InternalEclParser.g:8572:2: ( ruleEclRefinement )
            // InternalEclParser.g:8573:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEclParser.g:8582:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleSubExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8586:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEclParser.g:8587:2: ( ruleSubExpressionConstraint )
            {
            // InternalEclParser.g:8587:2: ( ruleSubExpressionConstraint )
            // InternalEclParser.g:8588:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEclParser.g:8597:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8601:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8602:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8602:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8603:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:8612:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8616:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8617:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8617:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8618:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEclParser.g:8627:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8631:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8632:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8632:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8633:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:8642:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8646:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8647:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8647:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8648:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEclParser.g:8657:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8661:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8662:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8662:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8663:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:8672:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8676:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8677:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8677:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8678:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEclParser.g:8687:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8691:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8692:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8692:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8693:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:8702:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8706:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:8707:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:8707:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:8708:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_1"
    // InternalEclParser.g:8717:1: rule__MemberOf__ConstraintAssignment_1 : ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8721:1: ( ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) )
            // InternalEclParser.g:8722:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            {
            // InternalEclParser.g:8722:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            // InternalEclParser.g:8723:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }
            // InternalEclParser.g:8724:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            // InternalEclParser.g:8724:4: rule__MemberOf__ConstraintAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_1"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEclParser.g:8732:1: rule__EclConceptReference__IdAssignment_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8736:1: ( ( ruleSnomedIdentifier ) )
            // InternalEclParser.g:8737:2: ( ruleSnomedIdentifier )
            {
            // InternalEclParser.g:8737:2: ( ruleSnomedIdentifier )
            // InternalEclParser.g:8738:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEclParser.g:8747:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_TERM_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8751:1: ( ( RULE_TERM_STRING ) )
            // InternalEclParser.g:8752:2: ( RULE_TERM_STRING )
            {
            // InternalEclParser.g:8752:2: ( RULE_TERM_STRING )
            // InternalEclParser.g:8753:3: RULE_TERM_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TERM_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEclParser.g:8762:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8766:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:8767:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:8767:2: ( ruleEclConceptReference )
            // InternalEclParser.g:8768:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_2"
    // InternalEclParser.g:8777:1: rule__EclConceptReferenceSet__ConceptsAssignment_2 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8781:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:8782:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:8782:2: ( ruleEclConceptReference )
            // InternalEclParser.g:8783:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_2"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEclParser.g:8792:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8796:1: ( ( ruleAndRefinement ) )
            // InternalEclParser.g:8797:2: ( ruleAndRefinement )
            {
            // InternalEclParser.g:8797:2: ( ruleAndRefinement )
            // InternalEclParser.g:8798:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEclParser.g:8807:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8811:1: ( ( ruleSubRefinement ) )
            // InternalEclParser.g:8812:2: ( ruleSubRefinement )
            {
            // InternalEclParser.g:8812:2: ( ruleSubRefinement )
            // InternalEclParser.g:8813:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEclParser.g:8822:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8826:1: ( ( ruleEclRefinement ) )
            // InternalEclParser.g:8827:2: ( ruleEclRefinement )
            {
            // InternalEclParser.g:8827:2: ( ruleEclRefinement )
            // InternalEclParser.g:8828:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEclParser.g:8837:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8841:1: ( ( ruleCardinality ) )
            // InternalEclParser.g:8842:2: ( ruleCardinality )
            {
            // InternalEclParser.g:8842:2: ( ruleCardinality )
            // InternalEclParser.g:8843:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEclParser.g:8852:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8856:1: ( ( ruleEclAttributeSet ) )
            // InternalEclParser.g:8857:2: ( ruleEclAttributeSet )
            {
            // InternalEclParser.g:8857:2: ( ruleEclAttributeSet )
            // InternalEclParser.g:8858:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEclParser.g:8867:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8871:1: ( ( ruleAndAttributeSet ) )
            // InternalEclParser.g:8872:2: ( ruleAndAttributeSet )
            {
            // InternalEclParser.g:8872:2: ( ruleAndAttributeSet )
            // InternalEclParser.g:8873:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEclParser.g:8882:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8886:1: ( ( ruleSubAttributeSet ) )
            // InternalEclParser.g:8887:2: ( ruleSubAttributeSet )
            {
            // InternalEclParser.g:8887:2: ( ruleSubAttributeSet )
            // InternalEclParser.g:8888:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEclParser.g:8897:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8901:1: ( ( ruleEclAttributeSet ) )
            // InternalEclParser.g:8902:2: ( ruleEclAttributeSet )
            {
            // InternalEclParser.g:8902:2: ( ruleEclAttributeSet )
            // InternalEclParser.g:8903:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEclParser.g:8912:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8916:1: ( ( ruleCardinality ) )
            // InternalEclParser.g:8917:2: ( ruleCardinality )
            {
            // InternalEclParser.g:8917:2: ( ruleCardinality )
            // InternalEclParser.g:8918:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEclParser.g:8927:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8931:1: ( ( RULE_REVERSED ) )
            // InternalEclParser.g:8932:2: ( RULE_REVERSED )
            {
            // InternalEclParser.g:8932:2: ( RULE_REVERSED )
            // InternalEclParser.g:8933:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEclParser.g:8942:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleSubExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8946:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEclParser.g:8947:2: ( ruleSubExpressionConstraint )
            {
            // InternalEclParser.g:8947:2: ( ruleSubExpressionConstraint )
            // InternalEclParser.g:8948:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeSubExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEclParser.g:8957:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8961:1: ( ( ruleComparison ) )
            // InternalEclParser.g:8962:2: ( ruleComparison )
            {
            // InternalEclParser.g:8962:2: ( ruleComparison )
            // InternalEclParser.g:8963:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEclParser.g:8972:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8976:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:8977:2: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:8977:2: ( ruleNonNegativeInteger )
            // InternalEclParser.g:8978:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEclParser.g:8987:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8991:1: ( ( ruleMaxValue ) )
            // InternalEclParser.g:8992:2: ( ruleMaxValue )
            {
            // InternalEclParser.g:8992:2: ( ruleMaxValue )
            // InternalEclParser.g:8993:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEclParser.g:9002:1: rule__AttributeComparison__OpAssignment_0 : ( ( rule__AttributeComparison__OpAlternatives_0_0 ) ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9006:1: ( ( ( rule__AttributeComparison__OpAlternatives_0_0 ) ) )
            // InternalEclParser.g:9007:2: ( ( rule__AttributeComparison__OpAlternatives_0_0 ) )
            {
            // InternalEclParser.g:9007:2: ( ( rule__AttributeComparison__OpAlternatives_0_0 ) )
            // InternalEclParser.g:9008:3: ( rule__AttributeComparison__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAlternatives_0_0()); 
            }
            // InternalEclParser.g:9009:3: ( rule__AttributeComparison__OpAlternatives_0_0 )
            // InternalEclParser.g:9009:4: rule__AttributeComparison__OpAlternatives_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEclParser.g:9017:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleSubExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9021:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEclParser.g:9022:2: ( ruleSubExpressionConstraint )
            {
            // InternalEclParser.g:9022:2: ( ruleSubExpressionConstraint )
            // InternalEclParser.g:9023:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueSubExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueSubExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEclParser.g:9032:1: rule__BooleanValueComparison__OpAssignment_0 : ( ( rule__BooleanValueComparison__OpAlternatives_0_0 ) ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9036:1: ( ( ( rule__BooleanValueComparison__OpAlternatives_0_0 ) ) )
            // InternalEclParser.g:9037:2: ( ( rule__BooleanValueComparison__OpAlternatives_0_0 ) )
            {
            // InternalEclParser.g:9037:2: ( ( rule__BooleanValueComparison__OpAlternatives_0_0 ) )
            // InternalEclParser.g:9038:3: ( rule__BooleanValueComparison__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAlternatives_0_0()); 
            }
            // InternalEclParser.g:9039:3: ( rule__BooleanValueComparison__OpAlternatives_0_0 )
            // InternalEclParser.g:9039:4: rule__BooleanValueComparison__OpAlternatives_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEclParser.g:9047:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9051:1: ( ( ruleBoolean ) )
            // InternalEclParser.g:9052:2: ( ruleBoolean )
            {
            // InternalEclParser.g:9052:2: ( ruleBoolean )
            // InternalEclParser.g:9053:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEclParser.g:9062:1: rule__StringValueComparison__OpAssignment_0 : ( ( rule__StringValueComparison__OpAlternatives_0_0 ) ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9066:1: ( ( ( rule__StringValueComparison__OpAlternatives_0_0 ) ) )
            // InternalEclParser.g:9067:2: ( ( rule__StringValueComparison__OpAlternatives_0_0 ) )
            {
            // InternalEclParser.g:9067:2: ( ( rule__StringValueComparison__OpAlternatives_0_0 ) )
            // InternalEclParser.g:9068:3: ( rule__StringValueComparison__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAlternatives_0_0()); 
            }
            // InternalEclParser.g:9069:3: ( rule__StringValueComparison__OpAlternatives_0_0 )
            // InternalEclParser.g:9069:4: rule__StringValueComparison__OpAlternatives_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEclParser.g:9077:1: rule__StringValueComparison__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9081:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:9082:2: ( RULE_STRING )
            {
            // InternalEclParser.g:9082:2: ( RULE_STRING )
            // InternalEclParser.g:9083:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEclParser.g:9092:1: rule__IntegerValueComparison__OpAssignment_0 : ( ( rule__IntegerValueComparison__OpAlternatives_0_0 ) ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9096:1: ( ( ( rule__IntegerValueComparison__OpAlternatives_0_0 ) ) )
            // InternalEclParser.g:9097:2: ( ( rule__IntegerValueComparison__OpAlternatives_0_0 ) )
            {
            // InternalEclParser.g:9097:2: ( ( rule__IntegerValueComparison__OpAlternatives_0_0 ) )
            // InternalEclParser.g:9098:3: ( rule__IntegerValueComparison__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAlternatives_0_0()); 
            }
            // InternalEclParser.g:9099:3: ( rule__IntegerValueComparison__OpAlternatives_0_0 )
            // InternalEclParser.g:9099:4: rule__IntegerValueComparison__OpAlternatives_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEclParser.g:9107:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9111:1: ( ( ruleInteger ) )
            // InternalEclParser.g:9112:2: ( ruleInteger )
            {
            // InternalEclParser.g:9112:2: ( ruleInteger )
            // InternalEclParser.g:9113:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEclParser.g:9122:1: rule__DecimalValueComparison__OpAssignment_0 : ( ( rule__DecimalValueComparison__OpAlternatives_0_0 ) ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9126:1: ( ( ( rule__DecimalValueComparison__OpAlternatives_0_0 ) ) )
            // InternalEclParser.g:9127:2: ( ( rule__DecimalValueComparison__OpAlternatives_0_0 ) )
            {
            // InternalEclParser.g:9127:2: ( ( rule__DecimalValueComparison__OpAlternatives_0_0 ) )
            // InternalEclParser.g:9128:3: ( rule__DecimalValueComparison__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAlternatives_0_0()); 
            }
            // InternalEclParser.g:9129:3: ( rule__DecimalValueComparison__OpAlternatives_0_0 )
            // InternalEclParser.g:9129:4: rule__DecimalValueComparison__OpAlternatives_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEclParser.g:9137:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9141:1: ( ( ruleDecimal ) )
            // InternalEclParser.g:9142:2: ( ruleDecimal )
            {
            // InternalEclParser.g:9142:2: ( ruleDecimal )
            // InternalEclParser.g:9143:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEclParser.g:9152:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9156:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:9157:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:9157:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:9158:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEclParser.g:9167:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9171:1: ( ( ruleConjunctionFilter ) )
            // InternalEclParser.g:9172:2: ( ruleConjunctionFilter )
            {
            // InternalEclParser.g:9172:2: ( ruleConjunctionFilter )
            // InternalEclParser.g:9173:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEclParser.g:9182:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( ruleExclusionFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9186:1: ( ( ruleExclusionFilter ) )
            // InternalEclParser.g:9187:2: ( ruleExclusionFilter )
            {
            // InternalEclParser.g:9187:2: ( ruleExclusionFilter )
            // InternalEclParser.g:9188:3: ruleExclusionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightExclusionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightExclusionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionFilter__RightAssignment_1_2"
    // InternalEclParser.g:9197:1: rule__ExclusionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ExclusionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9201:1: ( ( rulePropertyFilter ) )
            // InternalEclParser.g:9202:2: ( rulePropertyFilter )
            {
            // InternalEclParser.g:9202:2: ( rulePropertyFilter )
            // InternalEclParser.g:9203:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEclParser.g:9212:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9216:1: ( ( ruleFilter ) )
            // InternalEclParser.g:9217:2: ( ruleFilter )
            {
            // InternalEclParser.g:9217:2: ( ruleFilter )
            // InternalEclParser.g:9218:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__TypedTermFilter__OpAssignment_0"
    // InternalEclParser.g:9227:1: rule__TypedTermFilter__OpAssignment_0 : ( ( rule__TypedTermFilter__OpAlternatives_0_0 ) ) ;
    public final void rule__TypedTermFilter__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9231:1: ( ( ( rule__TypedTermFilter__OpAlternatives_0_0 ) ) )
            // InternalEclParser.g:9232:2: ( ( rule__TypedTermFilter__OpAlternatives_0_0 ) )
            {
            // InternalEclParser.g:9232:2: ( ( rule__TypedTermFilter__OpAlternatives_0_0 ) )
            // InternalEclParser.g:9233:3: ( rule__TypedTermFilter__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpAlternatives_0_0()); 
            }
            // InternalEclParser.g:9234:3: ( rule__TypedTermFilter__OpAlternatives_0_0 )
            // InternalEclParser.g:9234:4: rule__TypedTermFilter__OpAlternatives_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"
    // InternalEclParser.g:9242:1: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 : ( ruleLexicalSearchType ) ;
    public final void rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9246:1: ( ( ruleLexicalSearchType ) )
            // InternalEclParser.g:9247:2: ( ruleLexicalSearchType )
            {
            // InternalEclParser.g:9247:2: ( ruleLexicalSearchType )
            // InternalEclParser.g:9248:3: ruleLexicalSearchType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLexicalSearchTypeEnumRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLexicalSearchType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLexicalSearchTypeEnumRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"


    // $ANTLR start "rule__TypedTermFilter__TermAssignment_2"
    // InternalEclParser.g:9257:1: rule__TypedTermFilter__TermAssignment_2 : ( RULE_STRING ) ;
    public final void rule__TypedTermFilter__TermAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9261:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:9262:2: ( RULE_STRING )
            {
            // InternalEclParser.g:9262:2: ( RULE_STRING )
            // InternalEclParser.g:9263:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__TermAssignment_2"


    // $ANTLR start "rule__TypedTermFilterSet__OpAssignment_0"
    // InternalEclParser.g:9272:1: rule__TypedTermFilterSet__OpAssignment_0 : ( ( rule__TypedTermFilterSet__OpAlternatives_0_0 ) ) ;
    public final void rule__TypedTermFilterSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9276:1: ( ( ( rule__TypedTermFilterSet__OpAlternatives_0_0 ) ) )
            // InternalEclParser.g:9277:2: ( ( rule__TypedTermFilterSet__OpAlternatives_0_0 ) )
            {
            // InternalEclParser.g:9277:2: ( ( rule__TypedTermFilterSet__OpAlternatives_0_0 ) )
            // InternalEclParser.g:9278:3: ( rule__TypedTermFilterSet__OpAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpAlternatives_0_0()); 
            }
            // InternalEclParser.g:9279:3: ( rule__TypedTermFilterSet__OpAlternatives_0_0 )
            // InternalEclParser.g:9279:4: rule__TypedTermFilterSet__OpAlternatives_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__OpAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilterSet__TermsAssignment_2"
    // InternalEclParser.g:9287:1: rule__TypedTermFilterSet__TermsAssignment_2 : ( ruleTypedTermFilter ) ;
    public final void rule__TypedTermFilterSet__TermsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9291:1: ( ( ruleTypedTermFilter ) )
            // InternalEclParser.g:9292:2: ( ruleTypedTermFilter )
            {
            // InternalEclParser.g:9292:2: ( ruleTypedTermFilter )
            // InternalEclParser.g:9293:3: ruleTypedTermFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__TermsAssignment_2"


    // $ANTLR start "rule__TypedTermFilterSet__TermsAssignment_3"
    // InternalEclParser.g:9302:1: rule__TypedTermFilterSet__TermsAssignment_3 : ( ruleTypedTermFilter ) ;
    public final void rule__TypedTermFilterSet__TermsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9306:1: ( ( ruleTypedTermFilter ) )
            // InternalEclParser.g:9307:2: ( ruleTypedTermFilter )
            {
            // InternalEclParser.g:9307:2: ( ruleTypedTermFilter )
            // InternalEclParser.g:9308:3: ruleTypedTermFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__TermsAssignment_3"


    // $ANTLR start "rule__LanguageCodeFilter__OpAssignment_1"
    // InternalEclParser.g:9317:1: rule__LanguageCodeFilter__OpAssignment_1 : ( ( rule__LanguageCodeFilter__OpAlternatives_1_0 ) ) ;
    public final void rule__LanguageCodeFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9321:1: ( ( ( rule__LanguageCodeFilter__OpAlternatives_1_0 ) ) )
            // InternalEclParser.g:9322:2: ( ( rule__LanguageCodeFilter__OpAlternatives_1_0 ) )
            {
            // InternalEclParser.g:9322:2: ( ( rule__LanguageCodeFilter__OpAlternatives_1_0 ) )
            // InternalEclParser.g:9323:3: ( rule__LanguageCodeFilter__OpAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getOpAlternatives_1_0()); 
            }
            // InternalEclParser.g:9324:3: ( rule__LanguageCodeFilter__OpAlternatives_1_0 )
            // InternalEclParser.g:9324:4: rule__LanguageCodeFilter__OpAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageCodeFilter__OpAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getOpAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageCodeFilter__LanguageCodesAssignment_2_0"
    // InternalEclParser.g:9332:1: rule__LanguageCodeFilter__LanguageCodesAssignment_2_0 : ( ruleAlphabetical ) ;
    public final void rule__LanguageCodeFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9336:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9337:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9337:2: ( ruleAlphabetical )
            // InternalEclParser.g:9338:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1"
    // InternalEclParser.g:9347:1: rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1 : ( ruleAlphabetical ) ;
    public final void rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9351:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9352:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9352:2: ( ruleAlphabetical )
            // InternalEclParser.g:9353:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2"
    // InternalEclParser.g:9362:1: rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2 : ( ruleAlphabetical ) ;
    public final void rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9366:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9367:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9367:2: ( ruleAlphabetical )
            // InternalEclParser.g:9368:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageCodeFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageCodeFilter__LanguageCodesAssignment_2_1_2"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEclParser.g:9377:1: rule__TypeIdFilter__OpAssignment_1 : ( ( rule__TypeIdFilter__OpAlternatives_1_0 ) ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9381:1: ( ( ( rule__TypeIdFilter__OpAlternatives_1_0 ) ) )
            // InternalEclParser.g:9382:2: ( ( rule__TypeIdFilter__OpAlternatives_1_0 ) )
            {
            // InternalEclParser.g:9382:2: ( ( rule__TypeIdFilter__OpAlternatives_1_0 ) )
            // InternalEclParser.g:9383:3: ( rule__TypeIdFilter__OpAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAlternatives_1_0()); 
            }
            // InternalEclParser.g:9384:3: ( rule__TypeIdFilter__OpAlternatives_1_0 )
            // InternalEclParser.g:9384:4: rule__TypeIdFilter__OpAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEclParser.g:9392:1: rule__TypeIdFilter__TypeAssignment_2 : ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9396:1: ( ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) )
            // InternalEclParser.g:9397:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            {
            // InternalEclParser.g:9397:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            // InternalEclParser.g:9398:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }
            // InternalEclParser.g:9399:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            // InternalEclParser.g:9399:4: rule__TypeIdFilter__TypeAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEclParser.g:9407:1: rule__TypeTokenFilter__OpAssignment_1 : ( ( rule__TypeTokenFilter__OpAlternatives_1_0 ) ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9411:1: ( ( ( rule__TypeTokenFilter__OpAlternatives_1_0 ) ) )
            // InternalEclParser.g:9412:2: ( ( rule__TypeTokenFilter__OpAlternatives_1_0 ) )
            {
            // InternalEclParser.g:9412:2: ( ( rule__TypeTokenFilter__OpAlternatives_1_0 ) )
            // InternalEclParser.g:9413:3: ( rule__TypeTokenFilter__OpAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAlternatives_1_0()); 
            }
            // InternalEclParser.g:9414:3: ( rule__TypeTokenFilter__OpAlternatives_1_0 )
            // InternalEclParser.g:9414:4: rule__TypeTokenFilter__OpAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEclParser.g:9422:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9426:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9427:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9427:2: ( ruleAlphabetical )
            // InternalEclParser.g:9428:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEclParser.g:9437:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9441:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9442:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9442:2: ( ruleAlphabetical )
            // InternalEclParser.g:9443:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_2"
    // InternalEclParser.g:9452:1: rule__TypeTokenFilter__TokensAssignment_2_1_2 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9456:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9457:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9457:2: ( ruleAlphabetical )
            // InternalEclParser.g:9458:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_2"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEclParser.g:9467:1: rule__DialectIdFilter__OpAssignment_1 : ( ( rule__DialectIdFilter__OpAlternatives_1_0 ) ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9471:1: ( ( ( rule__DialectIdFilter__OpAlternatives_1_0 ) ) )
            // InternalEclParser.g:9472:2: ( ( rule__DialectIdFilter__OpAlternatives_1_0 ) )
            {
            // InternalEclParser.g:9472:2: ( ( rule__DialectIdFilter__OpAlternatives_1_0 ) )
            // InternalEclParser.g:9473:3: ( rule__DialectIdFilter__OpAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAlternatives_1_0()); 
            }
            // InternalEclParser.g:9474:3: ( rule__DialectIdFilter__OpAlternatives_1_0 )
            // InternalEclParser.g:9474:4: rule__DialectIdFilter__OpAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEclParser.g:9482:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9486:1: ( ( ruleDialect ) )
            // InternalEclParser.g:9487:2: ( ruleDialect )
            {
            // InternalEclParser.g:9487:2: ( ruleDialect )
            // InternalEclParser.g:9488:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEclParser.g:9497:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9501:1: ( ( ruleDialect ) )
            // InternalEclParser.g:9502:2: ( ruleDialect )
            {
            // InternalEclParser.g:9502:2: ( ruleDialect )
            // InternalEclParser.g:9503:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_2"
    // InternalEclParser.g:9512:1: rule__DialectIdFilter__DialectsAssignment_2_1_2 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9516:1: ( ( ruleDialect ) )
            // InternalEclParser.g:9517:2: ( ruleDialect )
            {
            // InternalEclParser.g:9517:2: ( ruleDialect )
            // InternalEclParser.g:9518:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_2"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEclParser.g:9527:1: rule__DialectAliasFilter__OpAssignment_1 : ( ( rule__DialectAliasFilter__OpAlternatives_1_0 ) ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9531:1: ( ( ( rule__DialectAliasFilter__OpAlternatives_1_0 ) ) )
            // InternalEclParser.g:9532:2: ( ( rule__DialectAliasFilter__OpAlternatives_1_0 ) )
            {
            // InternalEclParser.g:9532:2: ( ( rule__DialectAliasFilter__OpAlternatives_1_0 ) )
            // InternalEclParser.g:9533:3: ( rule__DialectAliasFilter__OpAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAlternatives_1_0()); 
            }
            // InternalEclParser.g:9534:3: ( rule__DialectAliasFilter__OpAlternatives_1_0 )
            // InternalEclParser.g:9534:4: rule__DialectAliasFilter__OpAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEclParser.g:9542:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9546:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:9547:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:9547:2: ( ruleDialectAlias )
            // InternalEclParser.g:9548:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEclParser.g:9557:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9561:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:9562:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:9562:2: ( ruleDialectAlias )
            // InternalEclParser.g:9563:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_2"
    // InternalEclParser.g:9572:1: rule__DialectAliasFilter__DialectsAssignment_2_1_2 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9576:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:9577:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:9577:2: ( ruleDialectAlias )
            // InternalEclParser.g:9578:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_2"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEclParser.g:9587:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleEclConceptReference ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9591:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:9592:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:9592:2: ( ruleEclConceptReference )
            // InternalEclParser.g:9593:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEclParser.g:9602:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9606:1: ( ( ruleAcceptability ) )
            // InternalEclParser.g:9607:2: ( ruleAcceptability )
            {
            // InternalEclParser.g:9607:2: ( ruleAcceptability )
            // InternalEclParser.g:9608:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEclParser.g:9617:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9621:1: ( ( ruleDialectAliasValue ) )
            // InternalEclParser.g:9622:2: ( ruleDialectAliasValue )
            {
            // InternalEclParser.g:9622:2: ( ruleDialectAliasValue )
            // InternalEclParser.g:9623:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_1"
    // InternalEclParser.g:9632:1: rule__DialectAlias__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9636:1: ( ( ruleAcceptability ) )
            // InternalEclParser.g:9637:2: ( ruleAcceptability )
            {
            // InternalEclParser.g:9637:2: ( ruleAcceptability )
            // InternalEclParser.g:9638:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_1"


    // $ANTLR start "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"
    // InternalEclParser.g:9647:1: rule__AcceptabilityIdSet__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__AcceptabilityIdSet__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9651:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEclParser.g:9652:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEclParser.g:9652:2: ( ruleEclConceptReferenceSet )
            // InternalEclParser.g:9653:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"
    // InternalEclParser.g:9662:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 : ( ruleAlphabetical ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9666:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9667:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9667:2: ( ruleAlphabetical )
            // InternalEclParser.g:9668:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2"
    // InternalEclParser.g:9677:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 : ( ruleAlphabetical ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9681:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:9682:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:9682:2: ( ruleAlphabetical )
            // InternalEclParser.g:9683:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2"

    // $ANTLR start synpred1_InternalEclParser
    public final void synpred1_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:1967:5: ( RULE_ALPHA )
        // InternalEclParser.g:1967:5: RULE_ALPHA
        {
        match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEclParser

    // $ANTLR start synpred18_InternalEclParser
    public final void synpred18_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2169:2: ( ( ruleAttributeConstraint ) )
        // InternalEclParser.g:2169:2: ( ruleAttributeConstraint )
        {
        // InternalEclParser.g:2169:2: ( ruleAttributeConstraint )
        // InternalEclParser.g:2170:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalEclParser

    // $ANTLR start synpred19_InternalEclParser
    public final void synpred19_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2175:2: ( ( ruleEclAttributeGroup ) )
        // InternalEclParser.g:2175:2: ( ruleEclAttributeGroup )
        {
        // InternalEclParser.g:2175:2: ( ruleEclAttributeGroup )
        // InternalEclParser.g:2176:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalEclParser

    // $ANTLR start synpred21_InternalEclParser
    public final void synpred21_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2217:2: ( ( ruleAttributeConstraint ) )
        // InternalEclParser.g:2217:2: ( ruleAttributeConstraint )
        {
        // InternalEclParser.g:2217:2: ( ruleAttributeConstraint )
        // InternalEclParser.g:2218:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalEclParser

    // $ANTLR start synpred86_InternalEclParser
    public final void synpred86_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:4630:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEclParser.g:4630:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_InternalEclParser

    // $ANTLR start synpred87_InternalEclParser
    public final void synpred87_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:4792:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEclParser.g:4792:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_InternalEclParser

    // $ANTLR start synpred105_InternalEclParser
    public final void synpred105_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:8200:4: ( rule__SnomedIdentifier__Alternatives_5 )
        // InternalEclParser.g:8200:4: rule__SnomedIdentifier__Alternatives_5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SnomedIdentifier__Alternatives_5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_InternalEclParser

    // $ANTLR start synpred110_InternalEclParser
    public final void synpred110_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:8498:3: ( rule__DialectAliasValue__Alternatives_1 )
        // InternalEclParser.g:8498:3: rule__DialectAliasValue__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalEclParser

    // Delegated rules

    public final boolean synpred21_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA76 dfa76 = new DFA76(this);
    static final String dfa_1s = "\22\uffff";
    static final String dfa_2s = "\1\13\1\0\14\uffff\1\0\3\uffff";
    static final String dfa_3s = "\1\54\1\0\14\uffff\1\0\3\uffff";
    static final String dfa_4s = "\2\uffff\1\1\15\uffff\1\2\1\3";
    static final String dfa_5s = "\1\uffff\1\0\14\uffff\1\1\3\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\6\uffff\1\2\1\uffff\1\20\1\uffff\1\16\1\uffff\1\1\3\uffff\1\2\1\uffff\1\2\2\uffff\10\2\3\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2164:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_1 = input.LA(1);

                         
                        int index7_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEclParser()) ) {s = 2;}

                        else if ( (synpred19_InternalEclParser()) ) {s = 16;}

                         
                        input.seek(index7_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_14 = input.LA(1);

                         
                        int index7_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalEclParser()) ) {s = 2;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index7_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\21\uffff";
    static final String dfa_8s = "\1\13\15\uffff\1\0\2\uffff";
    static final String dfa_9s = "\1\54\15\uffff\1\0\2\uffff";
    static final String dfa_10s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_11s = "\16\uffff\1\0\2\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\6\uffff\1\1\3\uffff\1\16\1\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\10\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2212:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_14 = input.LA(1);

                         
                        int index9_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalEclParser()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index9_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\14\uffff\2\16\2\uffff\2\16";
    static final String dfa_14s = "\1\37\2\5\4\53\1\21\2\uffff\2\21\2\15\2\uffff\2\15";
    static final String dfa_15s = "\1\52\2\70\4\53\1\33\2\uffff\2\22\2\35\2\uffff\2\35";
    static final String dfa_16s = "\10\uffff\1\1\1\2\4\uffff\1\3\1\4\2\uffff";
    static final String dfa_17s = "\22\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\1\2\1\4\1\3\6\uffff\1\5\1\6",
            "\1\10\2\uffff\1\10\42\uffff\1\7\14\uffff\1\11",
            "\1\10\2\uffff\1\10\42\uffff\1\7\14\uffff\1\11",
            "\1\7",
            "\1\7",
            "\1\7",
            "\1\7",
            "\1\14\1\15\7\uffff\1\12\1\13",
            "",
            "",
            "\1\14\1\15",
            "\1\14\1\15",
            "\4\16\4\uffff\1\16\1\uffff\1\16\5\uffff\1\17",
            "\4\16\1\21\1\20\2\uffff\1\16\1\uffff\1\16\5\uffff\1\17",
            "",
            "",
            "\4\16\1\21\1\20\2\uffff\1\16\1\uffff\1\16\5\uffff\1\17",
            "\4\16\1\21\1\20\2\uffff\1\16\1\uffff\1\16\5\uffff\1\17"
    };
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_1;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "2275:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_19s = "\102\uffff";
    static final String dfa_20s = "\1\1\1\uffff\1\3\1\uffff\36\3\40\uffff";
    static final String dfa_21s = "\1\12\1\uffff\1\12\1\uffff\36\12\40\0";
    static final String dfa_22s = "\1\55\1\uffff\1\55\1\uffff\36\55\40\0";
    static final String dfa_23s = "\1\uffff\1\2\1\uffff\1\1\76\uffff";
    static final String dfa_24s = "\42\uffff\1\33\1\32\1\10\1\4\1\25\1\22\1\34\1\30\1\6\1\7\1\14\1\13\1\36\1\26\1\17\1\35\1\37\1\15\1\21\1\20\1\3\1\2\1\31\1\0\1\24\1\16\1\11\1\23\1\27\1\5\1\12\1\1}>";
    static final String[] dfa_25s = {
            "\1\1\2\uffff\4\1\1\3\1\2\1\1\1\uffff\3\1\5\uffff\1\1\1\uffff\4\1\6\uffff\2\1\2\uffff\1\1",
            "",
            "\1\3\2\uffff\4\3\1\5\1\4\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "",
            "\1\3\2\uffff\4\3\1\7\1\6\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\11\1\10\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\13\1\12\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\15\1\14\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\17\1\16\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\21\1\20\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\23\1\22\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\25\1\24\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\27\1\26\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\31\1\30\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\33\1\32\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\35\1\34\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\37\1\36\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\41\1\40\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\43\1\42\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\45\1\44\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\47\1\46\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\51\1\50\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\53\1\52\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\55\1\54\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\57\1\56\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\61\1\60\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\63\1\62\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\65\1\64\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\67\1\66\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\71\1\70\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\73\1\72\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\75\1\74\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\77\1\76\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\3\2\uffff\4\3\1\101\1\100\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\2\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "()* loopback of 8200:3: ( rule__SnomedIdentifier__Alternatives_5 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_57 = input.LA(1);

                         
                        int index76_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_57);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA76_65 = input.LA(1);

                         
                        int index76_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_65);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA76_55 = input.LA(1);

                         
                        int index76_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_55);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA76_54 = input.LA(1);

                         
                        int index76_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_54);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA76_37 = input.LA(1);

                         
                        int index76_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_37);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA76_63 = input.LA(1);

                         
                        int index76_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_63);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA76_42 = input.LA(1);

                         
                        int index76_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_42);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA76_43 = input.LA(1);

                         
                        int index76_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_43);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA76_36 = input.LA(1);

                         
                        int index76_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_36);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA76_60 = input.LA(1);

                         
                        int index76_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_60);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA76_64 = input.LA(1);

                         
                        int index76_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_64);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA76_45 = input.LA(1);

                         
                        int index76_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_45);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA76_44 = input.LA(1);

                         
                        int index76_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_44);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA76_51 = input.LA(1);

                         
                        int index76_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_51);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA76_59 = input.LA(1);

                         
                        int index76_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_59);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA76_48 = input.LA(1);

                         
                        int index76_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_48);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA76_53 = input.LA(1);

                         
                        int index76_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_53);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA76_52 = input.LA(1);

                         
                        int index76_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_52);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA76_39 = input.LA(1);

                         
                        int index76_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_39);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA76_61 = input.LA(1);

                         
                        int index76_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_61);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA76_58 = input.LA(1);

                         
                        int index76_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_58);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA76_38 = input.LA(1);

                         
                        int index76_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_38);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA76_47 = input.LA(1);

                         
                        int index76_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_47);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA76_62 = input.LA(1);

                         
                        int index76_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_62);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA76_41 = input.LA(1);

                         
                        int index76_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_41);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA76_56 = input.LA(1);

                         
                        int index76_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_56);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA76_35 = input.LA(1);

                         
                        int index76_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_35);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA76_34 = input.LA(1);

                         
                        int index76_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_34);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA76_40 = input.LA(1);

                         
                        int index76_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_40);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA76_49 = input.LA(1);

                         
                        int index76_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_49);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA76_46 = input.LA(1);

                         
                        int index76_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_46);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA76_50 = input.LA(1);

                         
                        int index76_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index76_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0010000000000002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x000011FE50440000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000008000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000008002L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000006000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000006002L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x000011FE51540800L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000020000002L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000050440000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000400L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000840000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000001100000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x000011FE51440800L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000060780000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000060000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000001000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040060000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000120L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x000000000C060000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x000FC00000400000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000180000000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x01000000000002D0L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000180800000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000180000002L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0010000000400000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0010000000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0010000000800000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000440000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000060002L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0010000008060000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0010000008060002L});
    }


}