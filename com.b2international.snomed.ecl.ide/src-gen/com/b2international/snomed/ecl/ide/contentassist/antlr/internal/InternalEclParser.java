package com.b2international.snomed.ecl.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.b2international.snomed.ecl.services.EclGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalEclParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CaseSignificanceId", "LanguageRefSetId", "AcceptableIn", "Description", "PreferredIn", "DialectId", "Language", "ModuleId", "Concept", "Dialect", "Active", "TypeId", "MINUS", "Exact", "False", "Match", "Regex", "Term", "True", "Type", "Wild", "AND", "OR", "RULE_TERM_STRING", "RULE_REVERSED", "RULE_TO", "RULE_COMMA", "RULE_ZERO", "RULE_DIGIT_NONZERO", "RULE_COLON", "RULE_CURLY_OPEN", "RULE_CURLY_CLOSE", "RULE_ROUND_OPEN", "RULE_ROUND_CLOSE", "RULE_SQUARE_OPEN", "RULE_SQUARE_CLOSE", "RULE_PLUS", "RULE_DASH", "RULE_CARET", "RULE_DOT", "RULE_WILDCARD", "RULE_EQUAL", "RULE_NOT_EQUAL", "RULE_LT", "RULE_GT", "RULE_DBL_LT", "RULE_DBL_GT", "RULE_LT_EM", "RULE_DBL_LT_EM", "RULE_GT_EM", "RULE_DBL_GT_EM", "RULE_GTE", "RULE_LTE", "RULE_HASH", "RULE_DOUBLE_CURLY_OPEN", "RULE_DOUBLE_CURLY_CLOSE", "RULE_ALPHA", "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_STRING"
    };
    public static final int RULE_DIGIT_NONZERO=32;
    public static final int RULE_CURLY_OPEN=34;
    public static final int RULE_TO=29;
    public static final int RULE_ROUND_CLOSE=37;
    public static final int RULE_DBL_GT=50;
    public static final int True=22;
    public static final int RULE_GT=48;
    public static final int False=18;
    public static final int DialectId=9;
    public static final int MINUS=16;
    public static final int RULE_GTE=55;
    public static final int ModuleId=11;
    public static final int Regex=20;
    public static final int RULE_ROUND_OPEN=36;
    public static final int RULE_DBL_LT=49;
    public static final int RULE_NOT_EQUAL=46;
    public static final int Concept=12;
    public static final int AcceptableIn=6;
    public static final int TypeId=15;
    public static final int RULE_SQUARE_CLOSE=39;
    public static final int RULE_SQUARE_OPEN=38;
    public static final int RULE_EQUAL=45;
    public static final int RULE_COMMA=30;
    public static final int RULE_LT_EM=51;
    public static final int RULE_CURLY_CLOSE=35;
    public static final int RULE_ZERO=31;
    public static final int RULE_DBL_GT_EM=54;
    public static final int Term=21;
    public static final int RULE_COLON=33;
    public static final int RULE_LT=47;
    public static final int Active=14;
    public static final int RULE_DOUBLE_CURLY_CLOSE=59;
    public static final int AND=25;
    public static final int RULE_ML_COMMENT=62;
    public static final int RULE_LTE=56;
    public static final int RULE_ALPHA=60;
    public static final int Description=7;
    public static final int Wild=24;
    public static final int RULE_STRING=64;
    public static final int RULE_REVERSED=28;
    public static final int Match=19;
    public static final int RULE_SL_COMMENT=63;
    public static final int PreferredIn=8;
    public static final int RULE_HASH=57;
    public static final int Language=10;
    public static final int RULE_DASH=41;
    public static final int Dialect=13;
    public static final int RULE_PLUS=40;
    public static final int Exact=17;
    public static final int RULE_DOT=43;
    public static final int EOF=-1;
    public static final int OR=26;
    public static final int RULE_GT_EM=53;
    public static final int RULE_WS=61;
    public static final int RULE_CARET=42;
    public static final int Type=23;
    public static final int RULE_DOUBLE_CURLY_OPEN=58;
    public static final int RULE_WILDCARD=44;
    public static final int LanguageRefSetId=5;
    public static final int RULE_TERM_STRING=27;
    public static final int RULE_DBL_LT_EM=52;
    public static final int CaseSignificanceId=4;

    // delegates
    // delegators


        public InternalEclParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalEclParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalEclParser.tokenNames; }
    public String getGrammarFileName() { return "InternalEclParser.g"; }


    	private EclGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("Term", "'term'");
    		tokenNameToValue.put("True", "'true'");
    		tokenNameToValue.put("Type", "'type'");
    		tokenNameToValue.put("Wild", "'wild'");
    		tokenNameToValue.put("MINUS", "'MINUS'");
    		tokenNameToValue.put("Exact", "'exact'");
    		tokenNameToValue.put("False", "'false'");
    		tokenNameToValue.put("Match", "'match'");
    		tokenNameToValue.put("Regex", "'regex'");
    		tokenNameToValue.put("Active", "'active'");
    		tokenNameToValue.put("TypeId", "'typeId'");
    		tokenNameToValue.put("Concept", "'Concept'");
    		tokenNameToValue.put("Dialect", "'dialect'");
    		tokenNameToValue.put("Language", "'language'");
    		tokenNameToValue.put("ModuleId", "'moduleId'");
    		tokenNameToValue.put("DialectId", "'dialectId'");
    		tokenNameToValue.put("Description", "'Description'");
    		tokenNameToValue.put("PreferredIn", "'preferredIn'");
    		tokenNameToValue.put("AcceptableIn", "'acceptableIn'");
    		tokenNameToValue.put("LanguageRefSetId", "'languageRefSetId'");
    		tokenNameToValue.put("CaseSignificanceId", "'caseSignificanceId'");
    	}

    	public void setGrammarAccess(EclGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleScript"
    // InternalEclParser.g:91:1: entryRuleScript : ruleScript EOF ;
    public final void entryRuleScript() throws RecognitionException {
        try {
            // InternalEclParser.g:92:1: ( ruleScript EOF )
            // InternalEclParser.g:93:1: ruleScript EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleScript();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleScript"


    // $ANTLR start "ruleScript"
    // InternalEclParser.g:100:1: ruleScript : ( ( rule__Script__Group__0 ) ) ;
    public final void ruleScript() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:104:2: ( ( ( rule__Script__Group__0 ) ) )
            // InternalEclParser.g:105:2: ( ( rule__Script__Group__0 ) )
            {
            // InternalEclParser.g:105:2: ( ( rule__Script__Group__0 ) )
            // InternalEclParser.g:106:3: ( rule__Script__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getGroup()); 
            }
            // InternalEclParser.g:107:3: ( rule__Script__Group__0 )
            // InternalEclParser.g:107:4: rule__Script__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleScript"


    // $ANTLR start "entryRuleExpressionConstraint"
    // InternalEclParser.g:116:1: entryRuleExpressionConstraint : ruleExpressionConstraint EOF ;
    public final void entryRuleExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:117:1: ( ruleExpressionConstraint EOF )
            // InternalEclParser.g:118:1: ruleExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpressionConstraint"


    // $ANTLR start "ruleExpressionConstraint"
    // InternalEclParser.g:125:1: ruleExpressionConstraint : ( ruleOrExpressionConstraint ) ;
    public final void ruleExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:129:2: ( ( ruleOrExpressionConstraint ) )
            // InternalEclParser.g:130:2: ( ruleOrExpressionConstraint )
            {
            // InternalEclParser.g:130:2: ( ruleOrExpressionConstraint )
            // InternalEclParser.g:131:3: ruleOrExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionConstraintAccess().getOrExpressionConstraintParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpressionConstraint"


    // $ANTLR start "entryRuleOrExpressionConstraint"
    // InternalEclParser.g:141:1: entryRuleOrExpressionConstraint : ruleOrExpressionConstraint EOF ;
    public final void entryRuleOrExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:142:1: ( ruleOrExpressionConstraint EOF )
            // InternalEclParser.g:143:1: ruleOrExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrExpressionConstraint"


    // $ANTLR start "ruleOrExpressionConstraint"
    // InternalEclParser.g:150:1: ruleOrExpressionConstraint : ( ( rule__OrExpressionConstraint__Group__0 ) ) ;
    public final void ruleOrExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:154:2: ( ( ( rule__OrExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:155:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:155:2: ( ( rule__OrExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:156:3: ( rule__OrExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:157:3: ( rule__OrExpressionConstraint__Group__0 )
            // InternalEclParser.g:157:4: rule__OrExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrExpressionConstraint"


    // $ANTLR start "entryRuleAndExpressionConstraint"
    // InternalEclParser.g:166:1: entryRuleAndExpressionConstraint : ruleAndExpressionConstraint EOF ;
    public final void entryRuleAndExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:167:1: ( ruleAndExpressionConstraint EOF )
            // InternalEclParser.g:168:1: ruleAndExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndExpressionConstraint"


    // $ANTLR start "ruleAndExpressionConstraint"
    // InternalEclParser.g:175:1: ruleAndExpressionConstraint : ( ( rule__AndExpressionConstraint__Group__0 ) ) ;
    public final void ruleAndExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:179:2: ( ( ( rule__AndExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:180:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:180:2: ( ( rule__AndExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:181:3: ( rule__AndExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:182:3: ( rule__AndExpressionConstraint__Group__0 )
            // InternalEclParser.g:182:4: rule__AndExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndExpressionConstraint"


    // $ANTLR start "entryRuleExclusionExpressionConstraint"
    // InternalEclParser.g:191:1: entryRuleExclusionExpressionConstraint : ruleExclusionExpressionConstraint EOF ;
    public final void entryRuleExclusionExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:192:1: ( ruleExclusionExpressionConstraint EOF )
            // InternalEclParser.g:193:1: ruleExclusionExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExclusionExpressionConstraint"


    // $ANTLR start "ruleExclusionExpressionConstraint"
    // InternalEclParser.g:200:1: ruleExclusionExpressionConstraint : ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) ;
    public final void ruleExclusionExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:204:2: ( ( ( rule__ExclusionExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:205:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:205:2: ( ( rule__ExclusionExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:206:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:207:3: ( rule__ExclusionExpressionConstraint__Group__0 )
            // InternalEclParser.g:207:4: rule__ExclusionExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExclusionExpressionConstraint"


    // $ANTLR start "entryRuleRefinedExpressionConstraint"
    // InternalEclParser.g:216:1: entryRuleRefinedExpressionConstraint : ruleRefinedExpressionConstraint EOF ;
    public final void entryRuleRefinedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:217:1: ( ruleRefinedExpressionConstraint EOF )
            // InternalEclParser.g:218:1: ruleRefinedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRefinedExpressionConstraint"


    // $ANTLR start "ruleRefinedExpressionConstraint"
    // InternalEclParser.g:225:1: ruleRefinedExpressionConstraint : ( ( rule__RefinedExpressionConstraint__Group__0 ) ) ;
    public final void ruleRefinedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:229:2: ( ( ( rule__RefinedExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:230:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:230:2: ( ( rule__RefinedExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:231:3: ( rule__RefinedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:232:3: ( rule__RefinedExpressionConstraint__Group__0 )
            // InternalEclParser.g:232:4: rule__RefinedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRefinedExpressionConstraint"


    // $ANTLR start "entryRuleDottedExpressionConstraint"
    // InternalEclParser.g:241:1: entryRuleDottedExpressionConstraint : ruleDottedExpressionConstraint EOF ;
    public final void entryRuleDottedExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:242:1: ( ruleDottedExpressionConstraint EOF )
            // InternalEclParser.g:243:1: ruleDottedExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDottedExpressionConstraint"


    // $ANTLR start "ruleDottedExpressionConstraint"
    // InternalEclParser.g:250:1: ruleDottedExpressionConstraint : ( ( rule__DottedExpressionConstraint__Group__0 ) ) ;
    public final void ruleDottedExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:254:2: ( ( ( rule__DottedExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:255:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:255:2: ( ( rule__DottedExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:256:3: ( rule__DottedExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:257:3: ( rule__DottedExpressionConstraint__Group__0 )
            // InternalEclParser.g:257:4: rule__DottedExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDottedExpressionConstraint"


    // $ANTLR start "entryRuleFilteredExpressionConstraint"
    // InternalEclParser.g:266:1: entryRuleFilteredExpressionConstraint : ruleFilteredExpressionConstraint EOF ;
    public final void entryRuleFilteredExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:267:1: ( ruleFilteredExpressionConstraint EOF )
            // InternalEclParser.g:268:1: ruleFilteredExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilteredExpressionConstraint"


    // $ANTLR start "ruleFilteredExpressionConstraint"
    // InternalEclParser.g:275:1: ruleFilteredExpressionConstraint : ( ( rule__FilteredExpressionConstraint__Group__0 ) ) ;
    public final void ruleFilteredExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:279:2: ( ( ( rule__FilteredExpressionConstraint__Group__0 ) ) )
            // InternalEclParser.g:280:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            {
            // InternalEclParser.g:280:2: ( ( rule__FilteredExpressionConstraint__Group__0 ) )
            // InternalEclParser.g:281:3: ( rule__FilteredExpressionConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:282:3: ( rule__FilteredExpressionConstraint__Group__0 )
            // InternalEclParser.g:282:4: rule__FilteredExpressionConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilteredExpressionConstraint"


    // $ANTLR start "entryRuleSubExpressionConstraint"
    // InternalEclParser.g:291:1: entryRuleSubExpressionConstraint : ruleSubExpressionConstraint EOF ;
    public final void entryRuleSubExpressionConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:292:1: ( ruleSubExpressionConstraint EOF )
            // InternalEclParser.g:293:1: ruleSubExpressionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubExpressionConstraint"


    // $ANTLR start "ruleSubExpressionConstraint"
    // InternalEclParser.g:300:1: ruleSubExpressionConstraint : ( ( rule__SubExpressionConstraint__Alternatives ) ) ;
    public final void ruleSubExpressionConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:304:2: ( ( ( rule__SubExpressionConstraint__Alternatives ) ) )
            // InternalEclParser.g:305:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            {
            // InternalEclParser.g:305:2: ( ( rule__SubExpressionConstraint__Alternatives ) )
            // InternalEclParser.g:306:3: ( rule__SubExpressionConstraint__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }
            // InternalEclParser.g:307:3: ( rule__SubExpressionConstraint__Alternatives )
            // InternalEclParser.g:307:4: rule__SubExpressionConstraint__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubExpressionConstraint__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubExpressionConstraintAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubExpressionConstraint"


    // $ANTLR start "entryRuleEclFocusConcept"
    // InternalEclParser.g:316:1: entryRuleEclFocusConcept : ruleEclFocusConcept EOF ;
    public final void entryRuleEclFocusConcept() throws RecognitionException {
        try {
            // InternalEclParser.g:317:1: ( ruleEclFocusConcept EOF )
            // InternalEclParser.g:318:1: ruleEclFocusConcept EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclFocusConcept"


    // $ANTLR start "ruleEclFocusConcept"
    // InternalEclParser.g:325:1: ruleEclFocusConcept : ( ( rule__EclFocusConcept__Alternatives ) ) ;
    public final void ruleEclFocusConcept() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:329:2: ( ( ( rule__EclFocusConcept__Alternatives ) ) )
            // InternalEclParser.g:330:2: ( ( rule__EclFocusConcept__Alternatives ) )
            {
            // InternalEclParser.g:330:2: ( ( rule__EclFocusConcept__Alternatives ) )
            // InternalEclParser.g:331:3: ( rule__EclFocusConcept__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }
            // InternalEclParser.g:332:3: ( rule__EclFocusConcept__Alternatives )
            // InternalEclParser.g:332:4: rule__EclFocusConcept__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclFocusConcept__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclFocusConceptAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclFocusConcept"


    // $ANTLR start "entryRuleChildOf"
    // InternalEclParser.g:341:1: entryRuleChildOf : ruleChildOf EOF ;
    public final void entryRuleChildOf() throws RecognitionException {
        try {
            // InternalEclParser.g:342:1: ( ruleChildOf EOF )
            // InternalEclParser.g:343:1: ruleChildOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOf"


    // $ANTLR start "ruleChildOf"
    // InternalEclParser.g:350:1: ruleChildOf : ( ( rule__ChildOf__Group__0 ) ) ;
    public final void ruleChildOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:354:2: ( ( ( rule__ChildOf__Group__0 ) ) )
            // InternalEclParser.g:355:2: ( ( rule__ChildOf__Group__0 ) )
            {
            // InternalEclParser.g:355:2: ( ( rule__ChildOf__Group__0 ) )
            // InternalEclParser.g:356:3: ( rule__ChildOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getGroup()); 
            }
            // InternalEclParser.g:357:3: ( rule__ChildOf__Group__0 )
            // InternalEclParser.g:357:4: rule__ChildOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOf"


    // $ANTLR start "entryRuleChildOrSelfOf"
    // InternalEclParser.g:366:1: entryRuleChildOrSelfOf : ruleChildOrSelfOf EOF ;
    public final void entryRuleChildOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:367:1: ( ruleChildOrSelfOf EOF )
            // InternalEclParser.g:368:1: ruleChildOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleChildOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleChildOrSelfOf"


    // $ANTLR start "ruleChildOrSelfOf"
    // InternalEclParser.g:375:1: ruleChildOrSelfOf : ( ( rule__ChildOrSelfOf__Group__0 ) ) ;
    public final void ruleChildOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:379:2: ( ( ( rule__ChildOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:380:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:380:2: ( ( rule__ChildOrSelfOf__Group__0 ) )
            // InternalEclParser.g:381:3: ( rule__ChildOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:382:3: ( rule__ChildOrSelfOf__Group__0 )
            // InternalEclParser.g:382:4: rule__ChildOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleChildOrSelfOf"


    // $ANTLR start "entryRuleDescendantOf"
    // InternalEclParser.g:391:1: entryRuleDescendantOf : ruleDescendantOf EOF ;
    public final void entryRuleDescendantOf() throws RecognitionException {
        try {
            // InternalEclParser.g:392:1: ( ruleDescendantOf EOF )
            // InternalEclParser.g:393:1: ruleDescendantOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOf"


    // $ANTLR start "ruleDescendantOf"
    // InternalEclParser.g:400:1: ruleDescendantOf : ( ( rule__DescendantOf__Group__0 ) ) ;
    public final void ruleDescendantOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:404:2: ( ( ( rule__DescendantOf__Group__0 ) ) )
            // InternalEclParser.g:405:2: ( ( rule__DescendantOf__Group__0 ) )
            {
            // InternalEclParser.g:405:2: ( ( rule__DescendantOf__Group__0 ) )
            // InternalEclParser.g:406:3: ( rule__DescendantOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getGroup()); 
            }
            // InternalEclParser.g:407:3: ( rule__DescendantOf__Group__0 )
            // InternalEclParser.g:407:4: rule__DescendantOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOf"


    // $ANTLR start "entryRuleDescendantOrSelfOf"
    // InternalEclParser.g:416:1: entryRuleDescendantOrSelfOf : ruleDescendantOrSelfOf EOF ;
    public final void entryRuleDescendantOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:417:1: ( ruleDescendantOrSelfOf EOF )
            // InternalEclParser.g:418:1: ruleDescendantOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDescendantOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDescendantOrSelfOf"


    // $ANTLR start "ruleDescendantOrSelfOf"
    // InternalEclParser.g:425:1: ruleDescendantOrSelfOf : ( ( rule__DescendantOrSelfOf__Group__0 ) ) ;
    public final void ruleDescendantOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:429:2: ( ( ( rule__DescendantOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:430:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:430:2: ( ( rule__DescendantOrSelfOf__Group__0 ) )
            // InternalEclParser.g:431:3: ( rule__DescendantOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:432:3: ( rule__DescendantOrSelfOf__Group__0 )
            // InternalEclParser.g:432:4: rule__DescendantOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDescendantOrSelfOf"


    // $ANTLR start "entryRuleParentOf"
    // InternalEclParser.g:441:1: entryRuleParentOf : ruleParentOf EOF ;
    public final void entryRuleParentOf() throws RecognitionException {
        try {
            // InternalEclParser.g:442:1: ( ruleParentOf EOF )
            // InternalEclParser.g:443:1: ruleParentOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOf"


    // $ANTLR start "ruleParentOf"
    // InternalEclParser.g:450:1: ruleParentOf : ( ( rule__ParentOf__Group__0 ) ) ;
    public final void ruleParentOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:454:2: ( ( ( rule__ParentOf__Group__0 ) ) )
            // InternalEclParser.g:455:2: ( ( rule__ParentOf__Group__0 ) )
            {
            // InternalEclParser.g:455:2: ( ( rule__ParentOf__Group__0 ) )
            // InternalEclParser.g:456:3: ( rule__ParentOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGroup()); 
            }
            // InternalEclParser.g:457:3: ( rule__ParentOf__Group__0 )
            // InternalEclParser.g:457:4: rule__ParentOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOf"


    // $ANTLR start "entryRuleParentOrSelfOf"
    // InternalEclParser.g:466:1: entryRuleParentOrSelfOf : ruleParentOrSelfOf EOF ;
    public final void entryRuleParentOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:467:1: ( ruleParentOrSelfOf EOF )
            // InternalEclParser.g:468:1: ruleParentOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleParentOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParentOrSelfOf"


    // $ANTLR start "ruleParentOrSelfOf"
    // InternalEclParser.g:475:1: ruleParentOrSelfOf : ( ( rule__ParentOrSelfOf__Group__0 ) ) ;
    public final void ruleParentOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:479:2: ( ( ( rule__ParentOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:480:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:480:2: ( ( rule__ParentOrSelfOf__Group__0 ) )
            // InternalEclParser.g:481:3: ( rule__ParentOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:482:3: ( rule__ParentOrSelfOf__Group__0 )
            // InternalEclParser.g:482:4: rule__ParentOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParentOrSelfOf"


    // $ANTLR start "entryRuleAncestorOf"
    // InternalEclParser.g:491:1: entryRuleAncestorOf : ruleAncestorOf EOF ;
    public final void entryRuleAncestorOf() throws RecognitionException {
        try {
            // InternalEclParser.g:492:1: ( ruleAncestorOf EOF )
            // InternalEclParser.g:493:1: ruleAncestorOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOf"


    // $ANTLR start "ruleAncestorOf"
    // InternalEclParser.g:500:1: ruleAncestorOf : ( ( rule__AncestorOf__Group__0 ) ) ;
    public final void ruleAncestorOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:504:2: ( ( ( rule__AncestorOf__Group__0 ) ) )
            // InternalEclParser.g:505:2: ( ( rule__AncestorOf__Group__0 ) )
            {
            // InternalEclParser.g:505:2: ( ( rule__AncestorOf__Group__0 ) )
            // InternalEclParser.g:506:3: ( rule__AncestorOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGroup()); 
            }
            // InternalEclParser.g:507:3: ( rule__AncestorOf__Group__0 )
            // InternalEclParser.g:507:4: rule__AncestorOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOf"


    // $ANTLR start "entryRuleAncestorOrSelfOf"
    // InternalEclParser.g:516:1: entryRuleAncestorOrSelfOf : ruleAncestorOrSelfOf EOF ;
    public final void entryRuleAncestorOrSelfOf() throws RecognitionException {
        try {
            // InternalEclParser.g:517:1: ( ruleAncestorOrSelfOf EOF )
            // InternalEclParser.g:518:1: ruleAncestorOrSelfOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAncestorOrSelfOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAncestorOrSelfOf"


    // $ANTLR start "ruleAncestorOrSelfOf"
    // InternalEclParser.g:525:1: ruleAncestorOrSelfOf : ( ( rule__AncestorOrSelfOf__Group__0 ) ) ;
    public final void ruleAncestorOrSelfOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:529:2: ( ( ( rule__AncestorOrSelfOf__Group__0 ) ) )
            // InternalEclParser.g:530:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            {
            // InternalEclParser.g:530:2: ( ( rule__AncestorOrSelfOf__Group__0 ) )
            // InternalEclParser.g:531:3: ( rule__AncestorOrSelfOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }
            // InternalEclParser.g:532:3: ( rule__AncestorOrSelfOf__Group__0 )
            // InternalEclParser.g:532:4: rule__AncestorOrSelfOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAncestorOrSelfOf"


    // $ANTLR start "entryRuleMemberOf"
    // InternalEclParser.g:541:1: entryRuleMemberOf : ruleMemberOf EOF ;
    public final void entryRuleMemberOf() throws RecognitionException {
        try {
            // InternalEclParser.g:542:1: ( ruleMemberOf EOF )
            // InternalEclParser.g:543:1: ruleMemberOf EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMemberOf();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMemberOf"


    // $ANTLR start "ruleMemberOf"
    // InternalEclParser.g:550:1: ruleMemberOf : ( ( rule__MemberOf__Group__0 ) ) ;
    public final void ruleMemberOf() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:554:2: ( ( ( rule__MemberOf__Group__0 ) ) )
            // InternalEclParser.g:555:2: ( ( rule__MemberOf__Group__0 ) )
            {
            // InternalEclParser.g:555:2: ( ( rule__MemberOf__Group__0 ) )
            // InternalEclParser.g:556:3: ( rule__MemberOf__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getGroup()); 
            }
            // InternalEclParser.g:557:3: ( rule__MemberOf__Group__0 )
            // InternalEclParser.g:557:4: rule__MemberOf__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMemberOf"


    // $ANTLR start "entryRuleEclConceptReference"
    // InternalEclParser.g:566:1: entryRuleEclConceptReference : ruleEclConceptReference EOF ;
    public final void entryRuleEclConceptReference() throws RecognitionException {
        try {
            // InternalEclParser.g:567:1: ( ruleEclConceptReference EOF )
            // InternalEclParser.g:568:1: ruleEclConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReference"


    // $ANTLR start "ruleEclConceptReference"
    // InternalEclParser.g:575:1: ruleEclConceptReference : ( ( rule__EclConceptReference__Group__0 ) ) ;
    public final void ruleEclConceptReference() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:579:2: ( ( ( rule__EclConceptReference__Group__0 ) ) )
            // InternalEclParser.g:580:2: ( ( rule__EclConceptReference__Group__0 ) )
            {
            // InternalEclParser.g:580:2: ( ( rule__EclConceptReference__Group__0 ) )
            // InternalEclParser.g:581:3: ( rule__EclConceptReference__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }
            // InternalEclParser.g:582:3: ( rule__EclConceptReference__Group__0 )
            // InternalEclParser.g:582:4: rule__EclConceptReference__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReference"


    // $ANTLR start "entryRuleEclConceptReferenceSet"
    // InternalEclParser.g:591:1: entryRuleEclConceptReferenceSet : ruleEclConceptReferenceSet EOF ;
    public final void entryRuleEclConceptReferenceSet() throws RecognitionException {
        try {
            // InternalEclParser.g:592:1: ( ruleEclConceptReferenceSet EOF )
            // InternalEclParser.g:593:1: ruleEclConceptReferenceSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclConceptReferenceSet"


    // $ANTLR start "ruleEclConceptReferenceSet"
    // InternalEclParser.g:600:1: ruleEclConceptReferenceSet : ( ( rule__EclConceptReferenceSet__Group__0 ) ) ;
    public final void ruleEclConceptReferenceSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:604:2: ( ( ( rule__EclConceptReferenceSet__Group__0 ) ) )
            // InternalEclParser.g:605:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            {
            // InternalEclParser.g:605:2: ( ( rule__EclConceptReferenceSet__Group__0 ) )
            // InternalEclParser.g:606:3: ( rule__EclConceptReferenceSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }
            // InternalEclParser.g:607:3: ( rule__EclConceptReferenceSet__Group__0 )
            // InternalEclParser.g:607:4: rule__EclConceptReferenceSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclConceptReferenceSet"


    // $ANTLR start "entryRuleAny"
    // InternalEclParser.g:616:1: entryRuleAny : ruleAny EOF ;
    public final void entryRuleAny() throws RecognitionException {
        try {
            // InternalEclParser.g:617:1: ( ruleAny EOF )
            // InternalEclParser.g:618:1: ruleAny EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAny();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAny"


    // $ANTLR start "ruleAny"
    // InternalEclParser.g:625:1: ruleAny : ( ( rule__Any__Group__0 ) ) ;
    public final void ruleAny() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:629:2: ( ( ( rule__Any__Group__0 ) ) )
            // InternalEclParser.g:630:2: ( ( rule__Any__Group__0 ) )
            {
            // InternalEclParser.g:630:2: ( ( rule__Any__Group__0 ) )
            // InternalEclParser.g:631:3: ( rule__Any__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getGroup()); 
            }
            // InternalEclParser.g:632:3: ( rule__Any__Group__0 )
            // InternalEclParser.g:632:4: rule__Any__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAny"


    // $ANTLR start "entryRuleEclRefinement"
    // InternalEclParser.g:641:1: entryRuleEclRefinement : ruleEclRefinement EOF ;
    public final void entryRuleEclRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:642:1: ( ruleEclRefinement EOF )
            // InternalEclParser.g:643:1: ruleEclRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclRefinement"


    // $ANTLR start "ruleEclRefinement"
    // InternalEclParser.g:650:1: ruleEclRefinement : ( ruleOrRefinement ) ;
    public final void ruleEclRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:654:2: ( ( ruleOrRefinement ) )
            // InternalEclParser.g:655:2: ( ruleOrRefinement )
            {
            // InternalEclParser.g:655:2: ( ruleOrRefinement )
            // InternalEclParser.g:656:3: ruleOrRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclRefinementAccess().getOrRefinementParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclRefinement"


    // $ANTLR start "entryRuleOrRefinement"
    // InternalEclParser.g:666:1: entryRuleOrRefinement : ruleOrRefinement EOF ;
    public final void entryRuleOrRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:667:1: ( ruleOrRefinement EOF )
            // InternalEclParser.g:668:1: ruleOrRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrRefinement"


    // $ANTLR start "ruleOrRefinement"
    // InternalEclParser.g:675:1: ruleOrRefinement : ( ( rule__OrRefinement__Group__0 ) ) ;
    public final void ruleOrRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:679:2: ( ( ( rule__OrRefinement__Group__0 ) ) )
            // InternalEclParser.g:680:2: ( ( rule__OrRefinement__Group__0 ) )
            {
            // InternalEclParser.g:680:2: ( ( rule__OrRefinement__Group__0 ) )
            // InternalEclParser.g:681:3: ( rule__OrRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:682:3: ( rule__OrRefinement__Group__0 )
            // InternalEclParser.g:682:4: rule__OrRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrRefinement"


    // $ANTLR start "entryRuleAndRefinement"
    // InternalEclParser.g:691:1: entryRuleAndRefinement : ruleAndRefinement EOF ;
    public final void entryRuleAndRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:692:1: ( ruleAndRefinement EOF )
            // InternalEclParser.g:693:1: ruleAndRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndRefinement"


    // $ANTLR start "ruleAndRefinement"
    // InternalEclParser.g:700:1: ruleAndRefinement : ( ( rule__AndRefinement__Group__0 ) ) ;
    public final void ruleAndRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:704:2: ( ( ( rule__AndRefinement__Group__0 ) ) )
            // InternalEclParser.g:705:2: ( ( rule__AndRefinement__Group__0 ) )
            {
            // InternalEclParser.g:705:2: ( ( rule__AndRefinement__Group__0 ) )
            // InternalEclParser.g:706:3: ( rule__AndRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:707:3: ( rule__AndRefinement__Group__0 )
            // InternalEclParser.g:707:4: rule__AndRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndRefinement"


    // $ANTLR start "entryRuleSubRefinement"
    // InternalEclParser.g:716:1: entryRuleSubRefinement : ruleSubRefinement EOF ;
    public final void entryRuleSubRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:717:1: ( ruleSubRefinement EOF )
            // InternalEclParser.g:718:1: ruleSubRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubRefinement"


    // $ANTLR start "ruleSubRefinement"
    // InternalEclParser.g:725:1: ruleSubRefinement : ( ( rule__SubRefinement__Alternatives ) ) ;
    public final void ruleSubRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:729:2: ( ( ( rule__SubRefinement__Alternatives ) ) )
            // InternalEclParser.g:730:2: ( ( rule__SubRefinement__Alternatives ) )
            {
            // InternalEclParser.g:730:2: ( ( rule__SubRefinement__Alternatives ) )
            // InternalEclParser.g:731:3: ( rule__SubRefinement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }
            // InternalEclParser.g:732:3: ( rule__SubRefinement__Alternatives )
            // InternalEclParser.g:732:4: rule__SubRefinement__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubRefinement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubRefinementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubRefinement"


    // $ANTLR start "entryRuleNestedRefinement"
    // InternalEclParser.g:741:1: entryRuleNestedRefinement : ruleNestedRefinement EOF ;
    public final void entryRuleNestedRefinement() throws RecognitionException {
        try {
            // InternalEclParser.g:742:1: ( ruleNestedRefinement EOF )
            // InternalEclParser.g:743:1: ruleNestedRefinement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedRefinement"


    // $ANTLR start "ruleNestedRefinement"
    // InternalEclParser.g:750:1: ruleNestedRefinement : ( ( rule__NestedRefinement__Group__0 ) ) ;
    public final void ruleNestedRefinement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:754:2: ( ( ( rule__NestedRefinement__Group__0 ) ) )
            // InternalEclParser.g:755:2: ( ( rule__NestedRefinement__Group__0 ) )
            {
            // InternalEclParser.g:755:2: ( ( rule__NestedRefinement__Group__0 ) )
            // InternalEclParser.g:756:3: ( rule__NestedRefinement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }
            // InternalEclParser.g:757:3: ( rule__NestedRefinement__Group__0 )
            // InternalEclParser.g:757:4: rule__NestedRefinement__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedRefinement"


    // $ANTLR start "entryRuleEclAttributeGroup"
    // InternalEclParser.g:766:1: entryRuleEclAttributeGroup : ruleEclAttributeGroup EOF ;
    public final void entryRuleEclAttributeGroup() throws RecognitionException {
        try {
            // InternalEclParser.g:767:1: ( ruleEclAttributeGroup EOF )
            // InternalEclParser.g:768:1: ruleEclAttributeGroup EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeGroup();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeGroup"


    // $ANTLR start "ruleEclAttributeGroup"
    // InternalEclParser.g:775:1: ruleEclAttributeGroup : ( ( rule__EclAttributeGroup__Group__0 ) ) ;
    public final void ruleEclAttributeGroup() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:779:2: ( ( ( rule__EclAttributeGroup__Group__0 ) ) )
            // InternalEclParser.g:780:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            {
            // InternalEclParser.g:780:2: ( ( rule__EclAttributeGroup__Group__0 ) )
            // InternalEclParser.g:781:3: ( rule__EclAttributeGroup__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }
            // InternalEclParser.g:782:3: ( rule__EclAttributeGroup__Group__0 )
            // InternalEclParser.g:782:4: rule__EclAttributeGroup__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeGroup"


    // $ANTLR start "entryRuleEclAttributeSet"
    // InternalEclParser.g:791:1: entryRuleEclAttributeSet : ruleEclAttributeSet EOF ;
    public final void entryRuleEclAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:792:1: ( ruleEclAttributeSet EOF )
            // InternalEclParser.g:793:1: ruleEclAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEclAttributeSet"


    // $ANTLR start "ruleEclAttributeSet"
    // InternalEclParser.g:800:1: ruleEclAttributeSet : ( ruleOrAttributeSet ) ;
    public final void ruleEclAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:804:2: ( ( ruleOrAttributeSet ) )
            // InternalEclParser.g:805:2: ( ruleOrAttributeSet )
            {
            // InternalEclParser.g:805:2: ( ruleOrAttributeSet )
            // InternalEclParser.g:806:3: ruleOrAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeSetAccess().getOrAttributeSetParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEclAttributeSet"


    // $ANTLR start "entryRuleOrAttributeSet"
    // InternalEclParser.g:816:1: entryRuleOrAttributeSet : ruleOrAttributeSet EOF ;
    public final void entryRuleOrAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:817:1: ( ruleOrAttributeSet EOF )
            // InternalEclParser.g:818:1: ruleOrAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleOrAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOrAttributeSet"


    // $ANTLR start "ruleOrAttributeSet"
    // InternalEclParser.g:825:1: ruleOrAttributeSet : ( ( rule__OrAttributeSet__Group__0 ) ) ;
    public final void ruleOrAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:829:2: ( ( ( rule__OrAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:830:2: ( ( rule__OrAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:830:2: ( ( rule__OrAttributeSet__Group__0 ) )
            // InternalEclParser.g:831:3: ( rule__OrAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:832:3: ( rule__OrAttributeSet__Group__0 )
            // InternalEclParser.g:832:4: rule__OrAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrAttributeSet"


    // $ANTLR start "entryRuleAndAttributeSet"
    // InternalEclParser.g:841:1: entryRuleAndAttributeSet : ruleAndAttributeSet EOF ;
    public final void entryRuleAndAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:842:1: ( ruleAndAttributeSet EOF )
            // InternalEclParser.g:843:1: ruleAndAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAndAttributeSet"


    // $ANTLR start "ruleAndAttributeSet"
    // InternalEclParser.g:850:1: ruleAndAttributeSet : ( ( rule__AndAttributeSet__Group__0 ) ) ;
    public final void ruleAndAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:854:2: ( ( ( rule__AndAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:855:2: ( ( rule__AndAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:855:2: ( ( rule__AndAttributeSet__Group__0 ) )
            // InternalEclParser.g:856:3: ( rule__AndAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:857:3: ( rule__AndAttributeSet__Group__0 )
            // InternalEclParser.g:857:4: rule__AndAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndAttributeSet"


    // $ANTLR start "entryRuleSubAttributeSet"
    // InternalEclParser.g:866:1: entryRuleSubAttributeSet : ruleSubAttributeSet EOF ;
    public final void entryRuleSubAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:867:1: ( ruleSubAttributeSet EOF )
            // InternalEclParser.g:868:1: ruleSubAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubAttributeSet"


    // $ANTLR start "ruleSubAttributeSet"
    // InternalEclParser.g:875:1: ruleSubAttributeSet : ( ( rule__SubAttributeSet__Alternatives ) ) ;
    public final void ruleSubAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:879:2: ( ( ( rule__SubAttributeSet__Alternatives ) ) )
            // InternalEclParser.g:880:2: ( ( rule__SubAttributeSet__Alternatives ) )
            {
            // InternalEclParser.g:880:2: ( ( rule__SubAttributeSet__Alternatives ) )
            // InternalEclParser.g:881:3: ( rule__SubAttributeSet__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }
            // InternalEclParser.g:882:3: ( rule__SubAttributeSet__Alternatives )
            // InternalEclParser.g:882:4: rule__SubAttributeSet__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SubAttributeSet__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubAttributeSetAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubAttributeSet"


    // $ANTLR start "entryRuleNestedAttributeSet"
    // InternalEclParser.g:891:1: entryRuleNestedAttributeSet : ruleNestedAttributeSet EOF ;
    public final void entryRuleNestedAttributeSet() throws RecognitionException {
        try {
            // InternalEclParser.g:892:1: ( ruleNestedAttributeSet EOF )
            // InternalEclParser.g:893:1: ruleNestedAttributeSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedAttributeSet"


    // $ANTLR start "ruleNestedAttributeSet"
    // InternalEclParser.g:900:1: ruleNestedAttributeSet : ( ( rule__NestedAttributeSet__Group__0 ) ) ;
    public final void ruleNestedAttributeSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:904:2: ( ( ( rule__NestedAttributeSet__Group__0 ) ) )
            // InternalEclParser.g:905:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            {
            // InternalEclParser.g:905:2: ( ( rule__NestedAttributeSet__Group__0 ) )
            // InternalEclParser.g:906:3: ( rule__NestedAttributeSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }
            // InternalEclParser.g:907:3: ( rule__NestedAttributeSet__Group__0 )
            // InternalEclParser.g:907:4: rule__NestedAttributeSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedAttributeSet"


    // $ANTLR start "entryRuleAttributeConstraint"
    // InternalEclParser.g:916:1: entryRuleAttributeConstraint : ruleAttributeConstraint EOF ;
    public final void entryRuleAttributeConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:917:1: ( ruleAttributeConstraint EOF )
            // InternalEclParser.g:918:1: ruleAttributeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeConstraint"


    // $ANTLR start "ruleAttributeConstraint"
    // InternalEclParser.g:925:1: ruleAttributeConstraint : ( ( rule__AttributeConstraint__Group__0 ) ) ;
    public final void ruleAttributeConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:929:2: ( ( ( rule__AttributeConstraint__Group__0 ) ) )
            // InternalEclParser.g:930:2: ( ( rule__AttributeConstraint__Group__0 ) )
            {
            // InternalEclParser.g:930:2: ( ( rule__AttributeConstraint__Group__0 ) )
            // InternalEclParser.g:931:3: ( rule__AttributeConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:932:3: ( rule__AttributeConstraint__Group__0 )
            // InternalEclParser.g:932:4: rule__AttributeConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeConstraint"


    // $ANTLR start "entryRuleCardinality"
    // InternalEclParser.g:941:1: entryRuleCardinality : ruleCardinality EOF ;
    public final void entryRuleCardinality() throws RecognitionException {
        try {
            // InternalEclParser.g:942:1: ( ruleCardinality EOF )
            // InternalEclParser.g:943:1: ruleCardinality EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCardinality"


    // $ANTLR start "ruleCardinality"
    // InternalEclParser.g:950:1: ruleCardinality : ( ( rule__Cardinality__Group__0 ) ) ;
    public final void ruleCardinality() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:954:2: ( ( ( rule__Cardinality__Group__0 ) ) )
            // InternalEclParser.g:955:2: ( ( rule__Cardinality__Group__0 ) )
            {
            // InternalEclParser.g:955:2: ( ( rule__Cardinality__Group__0 ) )
            // InternalEclParser.g:956:3: ( rule__Cardinality__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getGroup()); 
            }
            // InternalEclParser.g:957:3: ( rule__Cardinality__Group__0 )
            // InternalEclParser.g:957:4: rule__Cardinality__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCardinality"


    // $ANTLR start "entryRuleComparison"
    // InternalEclParser.g:966:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:967:1: ( ruleComparison EOF )
            // InternalEclParser.g:968:1: ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalEclParser.g:975:1: ruleComparison : ( ( rule__Comparison__Alternatives ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:979:2: ( ( ( rule__Comparison__Alternatives ) ) )
            // InternalEclParser.g:980:2: ( ( rule__Comparison__Alternatives ) )
            {
            // InternalEclParser.g:980:2: ( ( rule__Comparison__Alternatives ) )
            // InternalEclParser.g:981:3: ( rule__Comparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparisonAccess().getAlternatives()); 
            }
            // InternalEclParser.g:982:3: ( rule__Comparison__Alternatives )
            // InternalEclParser.g:982:4: rule__Comparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Comparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAttributeComparison"
    // InternalEclParser.g:991:1: entryRuleAttributeComparison : ruleAttributeComparison EOF ;
    public final void entryRuleAttributeComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:992:1: ( ruleAttributeComparison EOF )
            // InternalEclParser.g:993:1: ruleAttributeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAttributeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAttributeComparison"


    // $ANTLR start "ruleAttributeComparison"
    // InternalEclParser.g:1000:1: ruleAttributeComparison : ( ( rule__AttributeComparison__Group__0 ) ) ;
    public final void ruleAttributeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1004:2: ( ( ( rule__AttributeComparison__Group__0 ) ) )
            // InternalEclParser.g:1005:2: ( ( rule__AttributeComparison__Group__0 ) )
            {
            // InternalEclParser.g:1005:2: ( ( rule__AttributeComparison__Group__0 ) )
            // InternalEclParser.g:1006:3: ( rule__AttributeComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1007:3: ( rule__AttributeComparison__Group__0 )
            // InternalEclParser.g:1007:4: rule__AttributeComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAttributeComparison"


    // $ANTLR start "entryRuleDataTypeComparison"
    // InternalEclParser.g:1016:1: entryRuleDataTypeComparison : ruleDataTypeComparison EOF ;
    public final void entryRuleDataTypeComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1017:1: ( ruleDataTypeComparison EOF )
            // InternalEclParser.g:1018:1: ruleDataTypeComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDataTypeComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDataTypeComparison"


    // $ANTLR start "ruleDataTypeComparison"
    // InternalEclParser.g:1025:1: ruleDataTypeComparison : ( ( rule__DataTypeComparison__Alternatives ) ) ;
    public final void ruleDataTypeComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1029:2: ( ( ( rule__DataTypeComparison__Alternatives ) ) )
            // InternalEclParser.g:1030:2: ( ( rule__DataTypeComparison__Alternatives ) )
            {
            // InternalEclParser.g:1030:2: ( ( rule__DataTypeComparison__Alternatives ) )
            // InternalEclParser.g:1031:3: ( rule__DataTypeComparison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1032:3: ( rule__DataTypeComparison__Alternatives )
            // InternalEclParser.g:1032:4: rule__DataTypeComparison__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DataTypeComparison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDataTypeComparisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDataTypeComparison"


    // $ANTLR start "entryRuleBooleanValueComparison"
    // InternalEclParser.g:1041:1: entryRuleBooleanValueComparison : ruleBooleanValueComparison EOF ;
    public final void entryRuleBooleanValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1042:1: ( ruleBooleanValueComparison EOF )
            // InternalEclParser.g:1043:1: ruleBooleanValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBooleanValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanValueComparison"


    // $ANTLR start "ruleBooleanValueComparison"
    // InternalEclParser.g:1050:1: ruleBooleanValueComparison : ( ( rule__BooleanValueComparison__Group__0 ) ) ;
    public final void ruleBooleanValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1054:2: ( ( ( rule__BooleanValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1055:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1055:2: ( ( rule__BooleanValueComparison__Group__0 ) )
            // InternalEclParser.g:1056:3: ( rule__BooleanValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1057:3: ( rule__BooleanValueComparison__Group__0 )
            // InternalEclParser.g:1057:4: rule__BooleanValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanValueComparison"


    // $ANTLR start "entryRuleStringValueComparison"
    // InternalEclParser.g:1066:1: entryRuleStringValueComparison : ruleStringValueComparison EOF ;
    public final void entryRuleStringValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1067:1: ( ruleStringValueComparison EOF )
            // InternalEclParser.g:1068:1: ruleStringValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleStringValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStringValueComparison"


    // $ANTLR start "ruleStringValueComparison"
    // InternalEclParser.g:1075:1: ruleStringValueComparison : ( ( rule__StringValueComparison__Group__0 ) ) ;
    public final void ruleStringValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1079:2: ( ( ( rule__StringValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1080:2: ( ( rule__StringValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1080:2: ( ( rule__StringValueComparison__Group__0 ) )
            // InternalEclParser.g:1081:3: ( rule__StringValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1082:3: ( rule__StringValueComparison__Group__0 )
            // InternalEclParser.g:1082:4: rule__StringValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStringValueComparison"


    // $ANTLR start "entryRuleIntegerValueComparison"
    // InternalEclParser.g:1091:1: entryRuleIntegerValueComparison : ruleIntegerValueComparison EOF ;
    public final void entryRuleIntegerValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1092:1: ( ruleIntegerValueComparison EOF )
            // InternalEclParser.g:1093:1: ruleIntegerValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleIntegerValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntegerValueComparison"


    // $ANTLR start "ruleIntegerValueComparison"
    // InternalEclParser.g:1100:1: ruleIntegerValueComparison : ( ( rule__IntegerValueComparison__Group__0 ) ) ;
    public final void ruleIntegerValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1104:2: ( ( ( rule__IntegerValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1105:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1105:2: ( ( rule__IntegerValueComparison__Group__0 ) )
            // InternalEclParser.g:1106:3: ( rule__IntegerValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1107:3: ( rule__IntegerValueComparison__Group__0 )
            // InternalEclParser.g:1107:4: rule__IntegerValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntegerValueComparison"


    // $ANTLR start "entryRuleDecimalValueComparison"
    // InternalEclParser.g:1116:1: entryRuleDecimalValueComparison : ruleDecimalValueComparison EOF ;
    public final void entryRuleDecimalValueComparison() throws RecognitionException {
        try {
            // InternalEclParser.g:1117:1: ( ruleDecimalValueComparison EOF )
            // InternalEclParser.g:1118:1: ruleDecimalValueComparison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimalValueComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDecimalValueComparison"


    // $ANTLR start "ruleDecimalValueComparison"
    // InternalEclParser.g:1125:1: ruleDecimalValueComparison : ( ( rule__DecimalValueComparison__Group__0 ) ) ;
    public final void ruleDecimalValueComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1129:2: ( ( ( rule__DecimalValueComparison__Group__0 ) ) )
            // InternalEclParser.g:1130:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            {
            // InternalEclParser.g:1130:2: ( ( rule__DecimalValueComparison__Group__0 ) )
            // InternalEclParser.g:1131:3: ( rule__DecimalValueComparison__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }
            // InternalEclParser.g:1132:3: ( rule__DecimalValueComparison__Group__0 )
            // InternalEclParser.g:1132:4: rule__DecimalValueComparison__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDecimalValueComparison"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalEclParser.g:1141:1: entryRuleNestedExpression : ruleNestedExpression EOF ;
    public final void entryRuleNestedExpression() throws RecognitionException {
        try {
            // InternalEclParser.g:1142:1: ( ruleNestedExpression EOF )
            // InternalEclParser.g:1143:1: ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalEclParser.g:1150:1: ruleNestedExpression : ( ( rule__NestedExpression__Group__0 ) ) ;
    public final void ruleNestedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1154:2: ( ( ( rule__NestedExpression__Group__0 ) ) )
            // InternalEclParser.g:1155:2: ( ( rule__NestedExpression__Group__0 ) )
            {
            // InternalEclParser.g:1155:2: ( ( rule__NestedExpression__Group__0 ) )
            // InternalEclParser.g:1156:3: ( rule__NestedExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }
            // InternalEclParser.g:1157:3: ( rule__NestedExpression__Group__0 )
            // InternalEclParser.g:1157:4: rule__NestedExpression__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleFilterConstraint"
    // InternalEclParser.g:1166:1: entryRuleFilterConstraint : ruleFilterConstraint EOF ;
    public final void entryRuleFilterConstraint() throws RecognitionException {
        try {
            // InternalEclParser.g:1167:1: ( ruleFilterConstraint EOF )
            // InternalEclParser.g:1168:1: ruleFilterConstraint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilterConstraint"


    // $ANTLR start "ruleFilterConstraint"
    // InternalEclParser.g:1175:1: ruleFilterConstraint : ( ( rule__FilterConstraint__Group__0 ) ) ;
    public final void ruleFilterConstraint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1179:2: ( ( ( rule__FilterConstraint__Group__0 ) ) )
            // InternalEclParser.g:1180:2: ( ( rule__FilterConstraint__Group__0 ) )
            {
            // InternalEclParser.g:1180:2: ( ( rule__FilterConstraint__Group__0 ) )
            // InternalEclParser.g:1181:3: ( rule__FilterConstraint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }
            // InternalEclParser.g:1182:3: ( rule__FilterConstraint__Group__0 )
            // InternalEclParser.g:1182:4: rule__FilterConstraint__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilterConstraint"


    // $ANTLR start "entryRuleFilter"
    // InternalEclParser.g:1191:1: entryRuleFilter : ruleFilter EOF ;
    public final void entryRuleFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1192:1: ( ruleFilter EOF )
            // InternalEclParser.g:1193:1: ruleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFilter"


    // $ANTLR start "ruleFilter"
    // InternalEclParser.g:1200:1: ruleFilter : ( ruleDisjunctionFilter ) ;
    public final void ruleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1204:2: ( ( ruleDisjunctionFilter ) )
            // InternalEclParser.g:1205:2: ( ruleDisjunctionFilter )
            {
            // InternalEclParser.g:1205:2: ( ruleDisjunctionFilter )
            // InternalEclParser.g:1206:3: ruleDisjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterAccess().getDisjunctionFilterParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFilter"


    // $ANTLR start "entryRuleDisjunctionFilter"
    // InternalEclParser.g:1216:1: entryRuleDisjunctionFilter : ruleDisjunctionFilter EOF ;
    public final void entryRuleDisjunctionFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1217:1: ( ruleDisjunctionFilter EOF )
            // InternalEclParser.g:1218:1: ruleDisjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDisjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDisjunctionFilter"


    // $ANTLR start "ruleDisjunctionFilter"
    // InternalEclParser.g:1225:1: ruleDisjunctionFilter : ( ( rule__DisjunctionFilter__Group__0 ) ) ;
    public final void ruleDisjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1229:2: ( ( ( rule__DisjunctionFilter__Group__0 ) ) )
            // InternalEclParser.g:1230:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            {
            // InternalEclParser.g:1230:2: ( ( rule__DisjunctionFilter__Group__0 ) )
            // InternalEclParser.g:1231:3: ( rule__DisjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1232:3: ( rule__DisjunctionFilter__Group__0 )
            // InternalEclParser.g:1232:4: rule__DisjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDisjunctionFilter"


    // $ANTLR start "entryRuleConjunctionFilter"
    // InternalEclParser.g:1241:1: entryRuleConjunctionFilter : ruleConjunctionFilter EOF ;
    public final void entryRuleConjunctionFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1242:1: ( ruleConjunctionFilter EOF )
            // InternalEclParser.g:1243:1: ruleConjunctionFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConjunctionFilter"


    // $ANTLR start "ruleConjunctionFilter"
    // InternalEclParser.g:1250:1: ruleConjunctionFilter : ( ( rule__ConjunctionFilter__Group__0 ) ) ;
    public final void ruleConjunctionFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1254:2: ( ( ( rule__ConjunctionFilter__Group__0 ) ) )
            // InternalEclParser.g:1255:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            {
            // InternalEclParser.g:1255:2: ( ( rule__ConjunctionFilter__Group__0 ) )
            // InternalEclParser.g:1256:3: ( rule__ConjunctionFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1257:3: ( rule__ConjunctionFilter__Group__0 )
            // InternalEclParser.g:1257:4: rule__ConjunctionFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConjunctionFilter"


    // $ANTLR start "entryRuleNestedFilter"
    // InternalEclParser.g:1266:1: entryRuleNestedFilter : ruleNestedFilter EOF ;
    public final void entryRuleNestedFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1267:1: ( ruleNestedFilter EOF )
            // InternalEclParser.g:1268:1: ruleNestedFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNestedFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNestedFilter"


    // $ANTLR start "ruleNestedFilter"
    // InternalEclParser.g:1275:1: ruleNestedFilter : ( ( rule__NestedFilter__Group__0 ) ) ;
    public final void ruleNestedFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1279:2: ( ( ( rule__NestedFilter__Group__0 ) ) )
            // InternalEclParser.g:1280:2: ( ( rule__NestedFilter__Group__0 ) )
            {
            // InternalEclParser.g:1280:2: ( ( rule__NestedFilter__Group__0 ) )
            // InternalEclParser.g:1281:3: ( rule__NestedFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1282:3: ( rule__NestedFilter__Group__0 )
            // InternalEclParser.g:1282:4: rule__NestedFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNestedFilter"


    // $ANTLR start "entryRulePropertyFilter"
    // InternalEclParser.g:1291:1: entryRulePropertyFilter : rulePropertyFilter EOF ;
    public final void entryRulePropertyFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1292:1: ( rulePropertyFilter EOF )
            // InternalEclParser.g:1293:1: rulePropertyFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePropertyFilter"


    // $ANTLR start "rulePropertyFilter"
    // InternalEclParser.g:1300:1: rulePropertyFilter : ( ( rule__PropertyFilter__Alternatives ) ) ;
    public final void rulePropertyFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1304:2: ( ( ( rule__PropertyFilter__Alternatives ) ) )
            // InternalEclParser.g:1305:2: ( ( rule__PropertyFilter__Alternatives ) )
            {
            // InternalEclParser.g:1305:2: ( ( rule__PropertyFilter__Alternatives ) )
            // InternalEclParser.g:1306:3: ( rule__PropertyFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1307:3: ( rule__PropertyFilter__Alternatives )
            // InternalEclParser.g:1307:4: rule__PropertyFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PropertyFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPropertyFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePropertyFilter"


    // $ANTLR start "entryRuleTermFilter"
    // InternalEclParser.g:1316:1: entryRuleTermFilter : ruleTermFilter EOF ;
    public final void entryRuleTermFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1317:1: ( ruleTermFilter EOF )
            // InternalEclParser.g:1318:1: ruleTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTermFilter"


    // $ANTLR start "ruleTermFilter"
    // InternalEclParser.g:1325:1: ruleTermFilter : ( ( rule__TermFilter__Group__0 ) ) ;
    public final void ruleTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1329:2: ( ( ( rule__TermFilter__Group__0 ) ) )
            // InternalEclParser.g:1330:2: ( ( rule__TermFilter__Group__0 ) )
            {
            // InternalEclParser.g:1330:2: ( ( rule__TermFilter__Group__0 ) )
            // InternalEclParser.g:1331:3: ( rule__TermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1332:3: ( rule__TermFilter__Group__0 )
            // InternalEclParser.g:1332:4: rule__TermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTermFilter"


    // $ANTLR start "entryRuleTypedTermFilter"
    // InternalEclParser.g:1341:1: entryRuleTypedTermFilter : ruleTypedTermFilter EOF ;
    public final void entryRuleTypedTermFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1342:1: ( ruleTypedTermFilter EOF )
            // InternalEclParser.g:1343:1: ruleTypedTermFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilter"


    // $ANTLR start "ruleTypedTermFilter"
    // InternalEclParser.g:1350:1: ruleTypedTermFilter : ( ( rule__TypedTermFilter__Group__0 ) ) ;
    public final void ruleTypedTermFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1354:2: ( ( ( rule__TypedTermFilter__Group__0 ) ) )
            // InternalEclParser.g:1355:2: ( ( rule__TypedTermFilter__Group__0 ) )
            {
            // InternalEclParser.g:1355:2: ( ( rule__TypedTermFilter__Group__0 ) )
            // InternalEclParser.g:1356:3: ( rule__TypedTermFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1357:3: ( rule__TypedTermFilter__Group__0 )
            // InternalEclParser.g:1357:4: rule__TypedTermFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilter"


    // $ANTLR start "entryRuleTypedTermFilterSet"
    // InternalEclParser.g:1366:1: entryRuleTypedTermFilterSet : ruleTypedTermFilterSet EOF ;
    public final void entryRuleTypedTermFilterSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1367:1: ( ruleTypedTermFilterSet EOF )
            // InternalEclParser.g:1368:1: ruleTypedTermFilterSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypedTermFilterSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypedTermFilterSet"


    // $ANTLR start "ruleTypedTermFilterSet"
    // InternalEclParser.g:1375:1: ruleTypedTermFilterSet : ( ( rule__TypedTermFilterSet__Group__0 ) ) ;
    public final void ruleTypedTermFilterSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1379:2: ( ( ( rule__TypedTermFilterSet__Group__0 ) ) )
            // InternalEclParser.g:1380:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            {
            // InternalEclParser.g:1380:2: ( ( rule__TypedTermFilterSet__Group__0 ) )
            // InternalEclParser.g:1381:3: ( rule__TypedTermFilterSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }
            // InternalEclParser.g:1382:3: ( rule__TypedTermFilterSet__Group__0 )
            // InternalEclParser.g:1382:4: rule__TypedTermFilterSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypedTermFilterSet"


    // $ANTLR start "entryRuleLanguageFilter"
    // InternalEclParser.g:1391:1: entryRuleLanguageFilter : ruleLanguageFilter EOF ;
    public final void entryRuleLanguageFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1392:1: ( ruleLanguageFilter EOF )
            // InternalEclParser.g:1393:1: ruleLanguageFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageFilter"


    // $ANTLR start "ruleLanguageFilter"
    // InternalEclParser.g:1400:1: ruleLanguageFilter : ( ( rule__LanguageFilter__Group__0 ) ) ;
    public final void ruleLanguageFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1404:2: ( ( ( rule__LanguageFilter__Group__0 ) ) )
            // InternalEclParser.g:1405:2: ( ( rule__LanguageFilter__Group__0 ) )
            {
            // InternalEclParser.g:1405:2: ( ( rule__LanguageFilter__Group__0 ) )
            // InternalEclParser.g:1406:3: ( rule__LanguageFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1407:3: ( rule__LanguageFilter__Group__0 )
            // InternalEclParser.g:1407:4: rule__LanguageFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageFilter"


    // $ANTLR start "entryRuleTypeFilter"
    // InternalEclParser.g:1416:1: entryRuleTypeFilter : ruleTypeFilter EOF ;
    public final void entryRuleTypeFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1417:1: ( ruleTypeFilter EOF )
            // InternalEclParser.g:1418:1: ruleTypeFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeFilter"


    // $ANTLR start "ruleTypeFilter"
    // InternalEclParser.g:1425:1: ruleTypeFilter : ( ( rule__TypeFilter__Alternatives ) ) ;
    public final void ruleTypeFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1429:2: ( ( ( rule__TypeFilter__Alternatives ) ) )
            // InternalEclParser.g:1430:2: ( ( rule__TypeFilter__Alternatives ) )
            {
            // InternalEclParser.g:1430:2: ( ( rule__TypeFilter__Alternatives ) )
            // InternalEclParser.g:1431:3: ( rule__TypeFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1432:3: ( rule__TypeFilter__Alternatives )
            // InternalEclParser.g:1432:4: rule__TypeFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeFilter"


    // $ANTLR start "entryRuleTypeIdFilter"
    // InternalEclParser.g:1441:1: entryRuleTypeIdFilter : ruleTypeIdFilter EOF ;
    public final void entryRuleTypeIdFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1442:1: ( ruleTypeIdFilter EOF )
            // InternalEclParser.g:1443:1: ruleTypeIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeIdFilter"


    // $ANTLR start "ruleTypeIdFilter"
    // InternalEclParser.g:1450:1: ruleTypeIdFilter : ( ( rule__TypeIdFilter__Group__0 ) ) ;
    public final void ruleTypeIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1454:2: ( ( ( rule__TypeIdFilter__Group__0 ) ) )
            // InternalEclParser.g:1455:2: ( ( rule__TypeIdFilter__Group__0 ) )
            {
            // InternalEclParser.g:1455:2: ( ( rule__TypeIdFilter__Group__0 ) )
            // InternalEclParser.g:1456:3: ( rule__TypeIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1457:3: ( rule__TypeIdFilter__Group__0 )
            // InternalEclParser.g:1457:4: rule__TypeIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeIdFilter"


    // $ANTLR start "entryRuleTypeTokenFilter"
    // InternalEclParser.g:1466:1: entryRuleTypeTokenFilter : ruleTypeTokenFilter EOF ;
    public final void entryRuleTypeTokenFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1467:1: ( ruleTypeTokenFilter EOF )
            // InternalEclParser.g:1468:1: ruleTypeTokenFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTypeTokenFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTypeTokenFilter"


    // $ANTLR start "ruleTypeTokenFilter"
    // InternalEclParser.g:1475:1: ruleTypeTokenFilter : ( ( rule__TypeTokenFilter__Group__0 ) ) ;
    public final void ruleTypeTokenFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1479:2: ( ( ( rule__TypeTokenFilter__Group__0 ) ) )
            // InternalEclParser.g:1480:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            {
            // InternalEclParser.g:1480:2: ( ( rule__TypeTokenFilter__Group__0 ) )
            // InternalEclParser.g:1481:3: ( rule__TypeTokenFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1482:3: ( rule__TypeTokenFilter__Group__0 )
            // InternalEclParser.g:1482:4: rule__TypeTokenFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTypeTokenFilter"


    // $ANTLR start "entryRuleDialectFilter"
    // InternalEclParser.g:1491:1: entryRuleDialectFilter : ruleDialectFilter EOF ;
    public final void entryRuleDialectFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1492:1: ( ruleDialectFilter EOF )
            // InternalEclParser.g:1493:1: ruleDialectFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectFilter"


    // $ANTLR start "ruleDialectFilter"
    // InternalEclParser.g:1500:1: ruleDialectFilter : ( ( rule__DialectFilter__Alternatives ) ) ;
    public final void ruleDialectFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1504:2: ( ( ( rule__DialectFilter__Alternatives ) ) )
            // InternalEclParser.g:1505:2: ( ( rule__DialectFilter__Alternatives ) )
            {
            // InternalEclParser.g:1505:2: ( ( rule__DialectFilter__Alternatives ) )
            // InternalEclParser.g:1506:3: ( rule__DialectFilter__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1507:3: ( rule__DialectFilter__Alternatives )
            // InternalEclParser.g:1507:4: rule__DialectFilter__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectFilter__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectFilterAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectFilter"


    // $ANTLR start "entryRuleDialectIdFilter"
    // InternalEclParser.g:1516:1: entryRuleDialectIdFilter : ruleDialectIdFilter EOF ;
    public final void entryRuleDialectIdFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1517:1: ( ruleDialectIdFilter EOF )
            // InternalEclParser.g:1518:1: ruleDialectIdFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectIdFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectIdFilter"


    // $ANTLR start "ruleDialectIdFilter"
    // InternalEclParser.g:1525:1: ruleDialectIdFilter : ( ( rule__DialectIdFilter__Group__0 ) ) ;
    public final void ruleDialectIdFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1529:2: ( ( ( rule__DialectIdFilter__Group__0 ) ) )
            // InternalEclParser.g:1530:2: ( ( rule__DialectIdFilter__Group__0 ) )
            {
            // InternalEclParser.g:1530:2: ( ( rule__DialectIdFilter__Group__0 ) )
            // InternalEclParser.g:1531:3: ( rule__DialectIdFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1532:3: ( rule__DialectIdFilter__Group__0 )
            // InternalEclParser.g:1532:4: rule__DialectIdFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectIdFilter"


    // $ANTLR start "entryRuleDialectAliasFilter"
    // InternalEclParser.g:1541:1: entryRuleDialectAliasFilter : ruleDialectAliasFilter EOF ;
    public final void entryRuleDialectAliasFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1542:1: ( ruleDialectAliasFilter EOF )
            // InternalEclParser.g:1543:1: ruleDialectAliasFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasFilter"


    // $ANTLR start "ruleDialectAliasFilter"
    // InternalEclParser.g:1550:1: ruleDialectAliasFilter : ( ( rule__DialectAliasFilter__Group__0 ) ) ;
    public final void ruleDialectAliasFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1554:2: ( ( ( rule__DialectAliasFilter__Group__0 ) ) )
            // InternalEclParser.g:1555:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            {
            // InternalEclParser.g:1555:2: ( ( rule__DialectAliasFilter__Group__0 ) )
            // InternalEclParser.g:1556:3: ( rule__DialectAliasFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1557:3: ( rule__DialectAliasFilter__Group__0 )
            // InternalEclParser.g:1557:4: rule__DialectAliasFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasFilter"


    // $ANTLR start "entryRuleDialect"
    // InternalEclParser.g:1566:1: entryRuleDialect : ruleDialect EOF ;
    public final void entryRuleDialect() throws RecognitionException {
        try {
            // InternalEclParser.g:1567:1: ( ruleDialect EOF )
            // InternalEclParser.g:1568:1: ruleDialect EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialect"


    // $ANTLR start "ruleDialect"
    // InternalEclParser.g:1575:1: ruleDialect : ( ( rule__Dialect__Group__0 ) ) ;
    public final void ruleDialect() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1579:2: ( ( ( rule__Dialect__Group__0 ) ) )
            // InternalEclParser.g:1580:2: ( ( rule__Dialect__Group__0 ) )
            {
            // InternalEclParser.g:1580:2: ( ( rule__Dialect__Group__0 ) )
            // InternalEclParser.g:1581:3: ( rule__Dialect__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getGroup()); 
            }
            // InternalEclParser.g:1582:3: ( rule__Dialect__Group__0 )
            // InternalEclParser.g:1582:4: rule__Dialect__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialect"


    // $ANTLR start "entryRuleDialectAlias"
    // InternalEclParser.g:1591:1: entryRuleDialectAlias : ruleDialectAlias EOF ;
    public final void entryRuleDialectAlias() throws RecognitionException {
        try {
            // InternalEclParser.g:1592:1: ( ruleDialectAlias EOF )
            // InternalEclParser.g:1593:1: ruleDialectAlias EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAlias"


    // $ANTLR start "ruleDialectAlias"
    // InternalEclParser.g:1600:1: ruleDialectAlias : ( ( rule__DialectAlias__Group__0 ) ) ;
    public final void ruleDialectAlias() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1604:2: ( ( ( rule__DialectAlias__Group__0 ) ) )
            // InternalEclParser.g:1605:2: ( ( rule__DialectAlias__Group__0 ) )
            {
            // InternalEclParser.g:1605:2: ( ( rule__DialectAlias__Group__0 ) )
            // InternalEclParser.g:1606:3: ( rule__DialectAlias__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getGroup()); 
            }
            // InternalEclParser.g:1607:3: ( rule__DialectAlias__Group__0 )
            // InternalEclParser.g:1607:4: rule__DialectAlias__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDialectAlias"


    // $ANTLR start "entryRuleAcceptability"
    // InternalEclParser.g:1616:1: entryRuleAcceptability : ruleAcceptability EOF ;
    public final void entryRuleAcceptability() throws RecognitionException {
        try {
            // InternalEclParser.g:1617:1: ( ruleAcceptability EOF )
            // InternalEclParser.g:1618:1: ruleAcceptability EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptability"


    // $ANTLR start "ruleAcceptability"
    // InternalEclParser.g:1625:1: ruleAcceptability : ( ( rule__Acceptability__Alternatives ) ) ;
    public final void ruleAcceptability() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1629:2: ( ( ( rule__Acceptability__Alternatives ) ) )
            // InternalEclParser.g:1630:2: ( ( rule__Acceptability__Alternatives ) )
            {
            // InternalEclParser.g:1630:2: ( ( rule__Acceptability__Alternatives ) )
            // InternalEclParser.g:1631:3: ( rule__Acceptability__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1632:3: ( rule__Acceptability__Alternatives )
            // InternalEclParser.g:1632:4: rule__Acceptability__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Acceptability__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptability"


    // $ANTLR start "entryRuleAcceptabilityIdSet"
    // InternalEclParser.g:1641:1: entryRuleAcceptabilityIdSet : ruleAcceptabilityIdSet EOF ;
    public final void entryRuleAcceptabilityIdSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1642:1: ( ruleAcceptabilityIdSet EOF )
            // InternalEclParser.g:1643:1: ruleAcceptabilityIdSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityIdSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityIdSet"


    // $ANTLR start "ruleAcceptabilityIdSet"
    // InternalEclParser.g:1650:1: ruleAcceptabilityIdSet : ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) ;
    public final void ruleAcceptabilityIdSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1654:2: ( ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) ) )
            // InternalEclParser.g:1655:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            {
            // InternalEclParser.g:1655:2: ( ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment ) )
            // InternalEclParser.g:1656:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }
            // InternalEclParser.g:1657:3: ( rule__AcceptabilityIdSet__AcceptabilitiesAssignment )
            // InternalEclParser.g:1657:4: rule__AcceptabilityIdSet__AcceptabilitiesAssignment
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityIdSet__AcceptabilitiesAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityIdSet"


    // $ANTLR start "entryRuleAcceptabilityTokenSet"
    // InternalEclParser.g:1666:1: entryRuleAcceptabilityTokenSet : ruleAcceptabilityTokenSet EOF ;
    public final void entryRuleAcceptabilityTokenSet() throws RecognitionException {
        try {
            // InternalEclParser.g:1667:1: ( ruleAcceptabilityTokenSet EOF )
            // InternalEclParser.g:1668:1: ruleAcceptabilityTokenSet EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptabilityTokenSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptabilityTokenSet"


    // $ANTLR start "ruleAcceptabilityTokenSet"
    // InternalEclParser.g:1675:1: ruleAcceptabilityTokenSet : ( ( rule__AcceptabilityTokenSet__Group__0 ) ) ;
    public final void ruleAcceptabilityTokenSet() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1679:2: ( ( ( rule__AcceptabilityTokenSet__Group__0 ) ) )
            // InternalEclParser.g:1680:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            {
            // InternalEclParser.g:1680:2: ( ( rule__AcceptabilityTokenSet__Group__0 ) )
            // InternalEclParser.g:1681:3: ( rule__AcceptabilityTokenSet__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }
            // InternalEclParser.g:1682:3: ( rule__AcceptabilityTokenSet__Group__0 )
            // InternalEclParser.g:1682:4: rule__AcceptabilityTokenSet__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptabilityTokenSet"


    // $ANTLR start "entryRuleActiveFilter"
    // InternalEclParser.g:1691:1: entryRuleActiveFilter : ruleActiveFilter EOF ;
    public final void entryRuleActiveFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1692:1: ( ruleActiveFilter EOF )
            // InternalEclParser.g:1693:1: ruleActiveFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleActiveFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleActiveFilter"


    // $ANTLR start "ruleActiveFilter"
    // InternalEclParser.g:1700:1: ruleActiveFilter : ( ( rule__ActiveFilter__Group__0 ) ) ;
    public final void ruleActiveFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1704:2: ( ( ( rule__ActiveFilter__Group__0 ) ) )
            // InternalEclParser.g:1705:2: ( ( rule__ActiveFilter__Group__0 ) )
            {
            // InternalEclParser.g:1705:2: ( ( rule__ActiveFilter__Group__0 ) )
            // InternalEclParser.g:1706:3: ( rule__ActiveFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1707:3: ( rule__ActiveFilter__Group__0 )
            // InternalEclParser.g:1707:4: rule__ActiveFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleActiveFilter"


    // $ANTLR start "entryRuleModuleFilter"
    // InternalEclParser.g:1716:1: entryRuleModuleFilter : ruleModuleFilter EOF ;
    public final void entryRuleModuleFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1717:1: ( ruleModuleFilter EOF )
            // InternalEclParser.g:1718:1: ruleModuleFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleModuleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleModuleFilter"


    // $ANTLR start "ruleModuleFilter"
    // InternalEclParser.g:1725:1: ruleModuleFilter : ( ( rule__ModuleFilter__Group__0 ) ) ;
    public final void ruleModuleFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1729:2: ( ( ( rule__ModuleFilter__Group__0 ) ) )
            // InternalEclParser.g:1730:2: ( ( rule__ModuleFilter__Group__0 ) )
            {
            // InternalEclParser.g:1730:2: ( ( rule__ModuleFilter__Group__0 ) )
            // InternalEclParser.g:1731:3: ( rule__ModuleFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1732:3: ( rule__ModuleFilter__Group__0 )
            // InternalEclParser.g:1732:4: rule__ModuleFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleModuleFilter"


    // $ANTLR start "entryRulePreferredInFilter"
    // InternalEclParser.g:1741:1: entryRulePreferredInFilter : rulePreferredInFilter EOF ;
    public final void entryRulePreferredInFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1742:1: ( rulePreferredInFilter EOF )
            // InternalEclParser.g:1743:1: rulePreferredInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePreferredInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePreferredInFilter"


    // $ANTLR start "rulePreferredInFilter"
    // InternalEclParser.g:1750:1: rulePreferredInFilter : ( ( rule__PreferredInFilter__Group__0 ) ) ;
    public final void rulePreferredInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1754:2: ( ( ( rule__PreferredInFilter__Group__0 ) ) )
            // InternalEclParser.g:1755:2: ( ( rule__PreferredInFilter__Group__0 ) )
            {
            // InternalEclParser.g:1755:2: ( ( rule__PreferredInFilter__Group__0 ) )
            // InternalEclParser.g:1756:3: ( rule__PreferredInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1757:3: ( rule__PreferredInFilter__Group__0 )
            // InternalEclParser.g:1757:4: rule__PreferredInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePreferredInFilter"


    // $ANTLR start "entryRuleAcceptableInFilter"
    // InternalEclParser.g:1766:1: entryRuleAcceptableInFilter : ruleAcceptableInFilter EOF ;
    public final void entryRuleAcceptableInFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1767:1: ( ruleAcceptableInFilter EOF )
            // InternalEclParser.g:1768:1: ruleAcceptableInFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAcceptableInFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAcceptableInFilter"


    // $ANTLR start "ruleAcceptableInFilter"
    // InternalEclParser.g:1775:1: ruleAcceptableInFilter : ( ( rule__AcceptableInFilter__Group__0 ) ) ;
    public final void ruleAcceptableInFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1779:2: ( ( ( rule__AcceptableInFilter__Group__0 ) ) )
            // InternalEclParser.g:1780:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            {
            // InternalEclParser.g:1780:2: ( ( rule__AcceptableInFilter__Group__0 ) )
            // InternalEclParser.g:1781:3: ( rule__AcceptableInFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1782:3: ( rule__AcceptableInFilter__Group__0 )
            // InternalEclParser.g:1782:4: rule__AcceptableInFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAcceptableInFilter"


    // $ANTLR start "entryRuleLanguageRefSetFilter"
    // InternalEclParser.g:1791:1: entryRuleLanguageRefSetFilter : ruleLanguageRefSetFilter EOF ;
    public final void entryRuleLanguageRefSetFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1792:1: ( ruleLanguageRefSetFilter EOF )
            // InternalEclParser.g:1793:1: ruleLanguageRefSetFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLanguageRefSetFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLanguageRefSetFilter"


    // $ANTLR start "ruleLanguageRefSetFilter"
    // InternalEclParser.g:1800:1: ruleLanguageRefSetFilter : ( ( rule__LanguageRefSetFilter__Group__0 ) ) ;
    public final void ruleLanguageRefSetFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1804:2: ( ( ( rule__LanguageRefSetFilter__Group__0 ) ) )
            // InternalEclParser.g:1805:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            {
            // InternalEclParser.g:1805:2: ( ( rule__LanguageRefSetFilter__Group__0 ) )
            // InternalEclParser.g:1806:3: ( rule__LanguageRefSetFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1807:3: ( rule__LanguageRefSetFilter__Group__0 )
            // InternalEclParser.g:1807:4: rule__LanguageRefSetFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLanguageRefSetFilter"


    // $ANTLR start "entryRuleCaseSignificanceFilter"
    // InternalEclParser.g:1816:1: entryRuleCaseSignificanceFilter : ruleCaseSignificanceFilter EOF ;
    public final void entryRuleCaseSignificanceFilter() throws RecognitionException {
        try {
            // InternalEclParser.g:1817:1: ( ruleCaseSignificanceFilter EOF )
            // InternalEclParser.g:1818:1: ruleCaseSignificanceFilter EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCaseSignificanceFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCaseSignificanceFilter"


    // $ANTLR start "ruleCaseSignificanceFilter"
    // InternalEclParser.g:1825:1: ruleCaseSignificanceFilter : ( ( rule__CaseSignificanceFilter__Group__0 ) ) ;
    public final void ruleCaseSignificanceFilter() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1829:2: ( ( ( rule__CaseSignificanceFilter__Group__0 ) ) )
            // InternalEclParser.g:1830:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            {
            // InternalEclParser.g:1830:2: ( ( rule__CaseSignificanceFilter__Group__0 ) )
            // InternalEclParser.g:1831:3: ( rule__CaseSignificanceFilter__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }
            // InternalEclParser.g:1832:3: ( rule__CaseSignificanceFilter__Group__0 )
            // InternalEclParser.g:1832:4: rule__CaseSignificanceFilter__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCaseSignificanceFilter"


    // $ANTLR start "entryRuleSnomedIdentifier"
    // InternalEclParser.g:1841:1: entryRuleSnomedIdentifier : ruleSnomedIdentifier EOF ;
    public final void entryRuleSnomedIdentifier() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1845:1: ( ruleSnomedIdentifier EOF )
            // InternalEclParser.g:1846:1: ruleSnomedIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleSnomedIdentifier"


    // $ANTLR start "ruleSnomedIdentifier"
    // InternalEclParser.g:1856:1: ruleSnomedIdentifier : ( ( rule__SnomedIdentifier__Group__0 ) ) ;
    public final void ruleSnomedIdentifier() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1861:2: ( ( ( rule__SnomedIdentifier__Group__0 ) ) )
            // InternalEclParser.g:1862:2: ( ( rule__SnomedIdentifier__Group__0 ) )
            {
            // InternalEclParser.g:1862:2: ( ( rule__SnomedIdentifier__Group__0 ) )
            // InternalEclParser.g:1863:3: ( rule__SnomedIdentifier__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getGroup()); 
            }
            // InternalEclParser.g:1864:3: ( rule__SnomedIdentifier__Group__0 )
            // InternalEclParser.g:1864:4: rule__SnomedIdentifier__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleSnomedIdentifier"


    // $ANTLR start "entryRuleNonNegativeInteger"
    // InternalEclParser.g:1874:1: entryRuleNonNegativeInteger : ruleNonNegativeInteger EOF ;
    public final void entryRuleNonNegativeInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1878:1: ( ruleNonNegativeInteger EOF )
            // InternalEclParser.g:1879:1: ruleNonNegativeInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeInteger"


    // $ANTLR start "ruleNonNegativeInteger"
    // InternalEclParser.g:1889:1: ruleNonNegativeInteger : ( ( rule__NonNegativeInteger__Alternatives ) ) ;
    public final void ruleNonNegativeInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1894:2: ( ( ( rule__NonNegativeInteger__Alternatives ) ) )
            // InternalEclParser.g:1895:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            {
            // InternalEclParser.g:1895:2: ( ( rule__NonNegativeInteger__Alternatives ) )
            // InternalEclParser.g:1896:3: ( rule__NonNegativeInteger__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1897:3: ( rule__NonNegativeInteger__Alternatives )
            // InternalEclParser.g:1897:4: rule__NonNegativeInteger__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeInteger"


    // $ANTLR start "entryRuleMaxValue"
    // InternalEclParser.g:1907:1: entryRuleMaxValue : ruleMaxValue EOF ;
    public final void entryRuleMaxValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1911:1: ( ruleMaxValue EOF )
            // InternalEclParser.g:1912:1: ruleMaxValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleMaxValue"


    // $ANTLR start "ruleMaxValue"
    // InternalEclParser.g:1922:1: ruleMaxValue : ( ( rule__MaxValue__Alternatives ) ) ;
    public final void ruleMaxValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1927:2: ( ( ( rule__MaxValue__Alternatives ) ) )
            // InternalEclParser.g:1928:2: ( ( rule__MaxValue__Alternatives ) )
            {
            // InternalEclParser.g:1928:2: ( ( rule__MaxValue__Alternatives ) )
            // InternalEclParser.g:1929:3: ( rule__MaxValue__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }
            // InternalEclParser.g:1930:3: ( rule__MaxValue__Alternatives )
            // InternalEclParser.g:1930:4: rule__MaxValue__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MaxValue__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMaxValueAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleMaxValue"


    // $ANTLR start "entryRuleInteger"
    // InternalEclParser.g:1940:1: entryRuleInteger : ruleInteger EOF ;
    public final void entryRuleInteger() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1944:1: ( ruleInteger EOF )
            // InternalEclParser.g:1945:1: ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalEclParser.g:1955:1: ruleInteger : ( ( rule__Integer__Group__0 ) ) ;
    public final void ruleInteger() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1960:2: ( ( ( rule__Integer__Group__0 ) ) )
            // InternalEclParser.g:1961:2: ( ( rule__Integer__Group__0 ) )
            {
            // InternalEclParser.g:1961:2: ( ( rule__Integer__Group__0 ) )
            // InternalEclParser.g:1962:3: ( rule__Integer__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getGroup()); 
            }
            // InternalEclParser.g:1963:3: ( rule__Integer__Group__0 )
            // InternalEclParser.g:1963:4: rule__Integer__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleDecimal"
    // InternalEclParser.g:1973:1: entryRuleDecimal : ruleDecimal EOF ;
    public final void entryRuleDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:1977:1: ( ruleDecimal EOF )
            // InternalEclParser.g:1978:1: ruleDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDecimal"


    // $ANTLR start "ruleDecimal"
    // InternalEclParser.g:1988:1: ruleDecimal : ( ( rule__Decimal__Group__0 ) ) ;
    public final void ruleDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:1993:2: ( ( ( rule__Decimal__Group__0 ) ) )
            // InternalEclParser.g:1994:2: ( ( rule__Decimal__Group__0 ) )
            {
            // InternalEclParser.g:1994:2: ( ( rule__Decimal__Group__0 ) )
            // InternalEclParser.g:1995:3: ( rule__Decimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getGroup()); 
            }
            // InternalEclParser.g:1996:3: ( rule__Decimal__Group__0 )
            // InternalEclParser.g:1996:4: rule__Decimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDecimal"


    // $ANTLR start "entryRuleNonNegativeDecimal"
    // InternalEclParser.g:2006:1: entryRuleNonNegativeDecimal : ruleNonNegativeDecimal EOF ;
    public final void entryRuleNonNegativeDecimal() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2010:1: ( ruleNonNegativeDecimal EOF )
            // InternalEclParser.g:2011:1: ruleNonNegativeDecimal EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleNonNegativeDecimal"


    // $ANTLR start "ruleNonNegativeDecimal"
    // InternalEclParser.g:2021:1: ruleNonNegativeDecimal : ( ( rule__NonNegativeDecimal__Group__0 ) ) ;
    public final void ruleNonNegativeDecimal() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2026:2: ( ( ( rule__NonNegativeDecimal__Group__0 ) ) )
            // InternalEclParser.g:2027:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            {
            // InternalEclParser.g:2027:2: ( ( rule__NonNegativeDecimal__Group__0 ) )
            // InternalEclParser.g:2028:3: ( rule__NonNegativeDecimal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }
            // InternalEclParser.g:2029:3: ( rule__NonNegativeDecimal__Group__0 )
            // InternalEclParser.g:2029:4: rule__NonNegativeDecimal__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleNonNegativeDecimal"


    // $ANTLR start "entryRuleBoolean"
    // InternalEclParser.g:2039:1: entryRuleBoolean : ruleBoolean EOF ;
    public final void entryRuleBoolean() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2043:1: ( ruleBoolean EOF )
            // InternalEclParser.g:2044:1: ruleBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleBoolean"


    // $ANTLR start "ruleBoolean"
    // InternalEclParser.g:2054:1: ruleBoolean : ( ( rule__Boolean__Alternatives ) ) ;
    public final void ruleBoolean() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2059:2: ( ( ( rule__Boolean__Alternatives ) ) )
            // InternalEclParser.g:2060:2: ( ( rule__Boolean__Alternatives ) )
            {
            // InternalEclParser.g:2060:2: ( ( rule__Boolean__Alternatives ) )
            // InternalEclParser.g:2061:3: ( rule__Boolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2062:3: ( rule__Boolean__Alternatives )
            // InternalEclParser.g:2062:4: rule__Boolean__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Boolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleBoolean"


    // $ANTLR start "entryRuleDialectAliasValue"
    // InternalEclParser.g:2072:1: entryRuleDialectAliasValue : ruleDialectAliasValue EOF ;
    public final void entryRuleDialectAliasValue() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2076:1: ( ruleDialectAliasValue EOF )
            // InternalEclParser.g:2077:1: ruleDialectAliasValue EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleDialectAliasValue"


    // $ANTLR start "ruleDialectAliasValue"
    // InternalEclParser.g:2087:1: ruleDialectAliasValue : ( ( rule__DialectAliasValue__Group__0 ) ) ;
    public final void ruleDialectAliasValue() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2092:2: ( ( ( rule__DialectAliasValue__Group__0 ) ) )
            // InternalEclParser.g:2093:2: ( ( rule__DialectAliasValue__Group__0 ) )
            {
            // InternalEclParser.g:2093:2: ( ( rule__DialectAliasValue__Group__0 ) )
            // InternalEclParser.g:2094:3: ( rule__DialectAliasValue__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getGroup()); 
            }
            // InternalEclParser.g:2095:3: ( rule__DialectAliasValue__Group__0 )
            // InternalEclParser.g:2095:4: rule__DialectAliasValue__Group__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleDialectAliasValue"


    // $ANTLR start "entryRuleAlphabetical"
    // InternalEclParser.g:2105:1: entryRuleAlphabetical : ruleAlphabetical EOF ;
    public final void entryRuleAlphabetical() throws RecognitionException {
         
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalEclParser.g:2109:1: ( ruleAlphabetical EOF )
            // InternalEclParser.g:2110:1: ruleAlphabetical EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "entryRuleAlphabetical"


    // $ANTLR start "ruleAlphabetical"
    // InternalEclParser.g:2120:1: ruleAlphabetical : ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) ) ;
    public final void ruleAlphabetical() throws RecognitionException {

        		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2125:2: ( ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) ) )
            // InternalEclParser.g:2126:2: ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) )
            {
            // InternalEclParser.g:2126:2: ( ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* ) )
            // InternalEclParser.g:2127:3: ( ( RULE_ALPHA ) ) ( ( RULE_ALPHA )* )
            {
            // InternalEclParser.g:2127:3: ( ( RULE_ALPHA ) )
            // InternalEclParser.g:2128:4: ( RULE_ALPHA )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }
            // InternalEclParser.g:2129:4: ( RULE_ALPHA )
            // InternalEclParser.g:2129:5: RULE_ALPHA
            {
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_3); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }

            }

            // InternalEclParser.g:2132:3: ( ( RULE_ALPHA )* )
            // InternalEclParser.g:2133:4: ( RULE_ALPHA )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }
            // InternalEclParser.g:2134:4: ( RULE_ALPHA )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==RULE_ALPHA) ) {
                    int LA1_2 = input.LA(2);

                    if ( (synpred1_InternalEclParser()) ) {
                        alt1=1;
                    }


                }


                switch (alt1) {
            	case 1 :
            	    // InternalEclParser.g:2134:5: RULE_ALPHA
            	    {
            	    match(input,RULE_ALPHA,FollowSets000.FOLLOW_3); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAlphabeticalAccess().getALPHATerminalRuleCall()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);
            	myHiddenTokenState.restore();

        }
        return ;
    }
    // $ANTLR end "ruleAlphabetical"


    // $ANTLR start "entryRuleCONJUNCTION"
    // InternalEclParser.g:2145:1: entryRuleCONJUNCTION : ruleCONJUNCTION EOF ;
    public final void entryRuleCONJUNCTION() throws RecognitionException {
        try {
            // InternalEclParser.g:2146:1: ( ruleCONJUNCTION EOF )
            // InternalEclParser.g:2147:1: ruleCONJUNCTION EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCONJUNCTIONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCONJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCONJUNCTIONRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCONJUNCTION"


    // $ANTLR start "ruleCONJUNCTION"
    // InternalEclParser.g:2154:1: ruleCONJUNCTION : ( AND ) ;
    public final void ruleCONJUNCTION() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2158:2: ( ( AND ) )
            // InternalEclParser.g:2159:2: ( AND )
            {
            // InternalEclParser.g:2159:2: ( AND )
            // InternalEclParser.g:2160:3: AND
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCONJUNCTIONAccess().getANDKeyword()); 
            }
            match(input,AND,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCONJUNCTIONAccess().getANDKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCONJUNCTION"


    // $ANTLR start "entryRuleDISJUNCTION"
    // InternalEclParser.g:2170:1: entryRuleDISJUNCTION : ruleDISJUNCTION EOF ;
    public final void entryRuleDISJUNCTION() throws RecognitionException {
        try {
            // InternalEclParser.g:2171:1: ( ruleDISJUNCTION EOF )
            // InternalEclParser.g:2172:1: ruleDISJUNCTION EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDISJUNCTIONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDISJUNCTIONRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDISJUNCTION"


    // $ANTLR start "ruleDISJUNCTION"
    // InternalEclParser.g:2179:1: ruleDISJUNCTION : ( OR ) ;
    public final void ruleDISJUNCTION() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2183:2: ( ( OR ) )
            // InternalEclParser.g:2184:2: ( OR )
            {
            // InternalEclParser.g:2184:2: ( OR )
            // InternalEclParser.g:2185:3: OR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDISJUNCTIONAccess().getORKeyword()); 
            }
            match(input,OR,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDISJUNCTIONAccess().getORKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDISJUNCTION"


    // $ANTLR start "entryRuleEXCLUSION"
    // InternalEclParser.g:2195:1: entryRuleEXCLUSION : ruleEXCLUSION EOF ;
    public final void entryRuleEXCLUSION() throws RecognitionException {
        try {
            // InternalEclParser.g:2196:1: ( ruleEXCLUSION EOF )
            // InternalEclParser.g:2197:1: ruleEXCLUSION EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXCLUSIONRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleEXCLUSION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXCLUSIONRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEXCLUSION"


    // $ANTLR start "ruleEXCLUSION"
    // InternalEclParser.g:2204:1: ruleEXCLUSION : ( MINUS ) ;
    public final void ruleEXCLUSION() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2208:2: ( ( MINUS ) )
            // InternalEclParser.g:2209:2: ( MINUS )
            {
            // InternalEclParser.g:2209:2: ( MINUS )
            // InternalEclParser.g:2210:3: MINUS
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEXCLUSIONAccess().getMINUSKeyword()); 
            }
            match(input,MINUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEXCLUSIONAccess().getMINUSKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEXCLUSION"


    // $ANTLR start "entryRuleTERM_KEYWORD"
    // InternalEclParser.g:2220:1: entryRuleTERM_KEYWORD : ruleTERM_KEYWORD EOF ;
    public final void entryRuleTERM_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2221:1: ( ruleTERM_KEYWORD EOF )
            // InternalEclParser.g:2222:1: ruleTERM_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTERM_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTERM_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTERM_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTERM_KEYWORD"


    // $ANTLR start "ruleTERM_KEYWORD"
    // InternalEclParser.g:2229:1: ruleTERM_KEYWORD : ( Term ) ;
    public final void ruleTERM_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2233:2: ( ( Term ) )
            // InternalEclParser.g:2234:2: ( Term )
            {
            // InternalEclParser.g:2234:2: ( Term )
            // InternalEclParser.g:2235:3: Term
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTERM_KEYWORDAccess().getTermKeyword()); 
            }
            match(input,Term,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTERM_KEYWORDAccess().getTermKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTERM_KEYWORD"


    // $ANTLR start "entryRuleLANGUAGE_KEYWORD"
    // InternalEclParser.g:2245:1: entryRuleLANGUAGE_KEYWORD : ruleLANGUAGE_KEYWORD EOF ;
    public final void entryRuleLANGUAGE_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2246:1: ( ruleLANGUAGE_KEYWORD EOF )
            // InternalEclParser.g:2247:1: ruleLANGUAGE_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLANGUAGE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLANGUAGE_KEYWORD"


    // $ANTLR start "ruleLANGUAGE_KEYWORD"
    // InternalEclParser.g:2254:1: ruleLANGUAGE_KEYWORD : ( Language ) ;
    public final void ruleLANGUAGE_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2258:2: ( ( Language ) )
            // InternalEclParser.g:2259:2: ( Language )
            {
            // InternalEclParser.g:2259:2: ( Language )
            // InternalEclParser.g:2260:3: Language
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_KEYWORDAccess().getLanguageKeyword()); 
            }
            match(input,Language,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_KEYWORDAccess().getLanguageKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLANGUAGE_KEYWORD"


    // $ANTLR start "entryRuleTYPEID_KEYWORD"
    // InternalEclParser.g:2270:1: entryRuleTYPEID_KEYWORD : ruleTYPEID_KEYWORD EOF ;
    public final void entryRuleTYPEID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2271:1: ( ruleTYPEID_KEYWORD EOF )
            // InternalEclParser.g:2272:1: ruleTYPEID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPEID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTYPEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPEID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTYPEID_KEYWORD"


    // $ANTLR start "ruleTYPEID_KEYWORD"
    // InternalEclParser.g:2279:1: ruleTYPEID_KEYWORD : ( TypeId ) ;
    public final void ruleTYPEID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2283:2: ( ( TypeId ) )
            // InternalEclParser.g:2284:2: ( TypeId )
            {
            // InternalEclParser.g:2284:2: ( TypeId )
            // InternalEclParser.g:2285:3: TypeId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPEID_KEYWORDAccess().getTypeIdKeyword()); 
            }
            match(input,TypeId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPEID_KEYWORDAccess().getTypeIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTYPEID_KEYWORD"


    // $ANTLR start "entryRuleTYPE_KEYWORD"
    // InternalEclParser.g:2295:1: entryRuleTYPE_KEYWORD : ruleTYPE_KEYWORD EOF ;
    public final void entryRuleTYPE_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2296:1: ( ruleTYPE_KEYWORD EOF )
            // InternalEclParser.g:2297:1: ruleTYPE_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPE_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleTYPE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPE_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTYPE_KEYWORD"


    // $ANTLR start "ruleTYPE_KEYWORD"
    // InternalEclParser.g:2304:1: ruleTYPE_KEYWORD : ( Type ) ;
    public final void ruleTYPE_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2308:2: ( ( Type ) )
            // InternalEclParser.g:2309:2: ( Type )
            {
            // InternalEclParser.g:2309:2: ( Type )
            // InternalEclParser.g:2310:3: Type
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTYPE_KEYWORDAccess().getTypeKeyword()); 
            }
            match(input,Type,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTYPE_KEYWORDAccess().getTypeKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTYPE_KEYWORD"


    // $ANTLR start "entryRuleDIALECTID_KEYWORD"
    // InternalEclParser.g:2320:1: entryRuleDIALECTID_KEYWORD : ruleDIALECTID_KEYWORD EOF ;
    public final void entryRuleDIALECTID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2321:1: ( ruleDIALECTID_KEYWORD EOF )
            // InternalEclParser.g:2322:1: ruleDIALECTID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECTID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDIALECTID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECTID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDIALECTID_KEYWORD"


    // $ANTLR start "ruleDIALECTID_KEYWORD"
    // InternalEclParser.g:2329:1: ruleDIALECTID_KEYWORD : ( DialectId ) ;
    public final void ruleDIALECTID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2333:2: ( ( DialectId ) )
            // InternalEclParser.g:2334:2: ( DialectId )
            {
            // InternalEclParser.g:2334:2: ( DialectId )
            // InternalEclParser.g:2335:3: DialectId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECTID_KEYWORDAccess().getDialectIdKeyword()); 
            }
            match(input,DialectId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECTID_KEYWORDAccess().getDialectIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDIALECTID_KEYWORD"


    // $ANTLR start "entryRuleDIALECT_KEYWORD"
    // InternalEclParser.g:2345:1: entryRuleDIALECT_KEYWORD : ruleDIALECT_KEYWORD EOF ;
    public final void entryRuleDIALECT_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2346:1: ( ruleDIALECT_KEYWORD EOF )
            // InternalEclParser.g:2347:1: ruleDIALECT_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECT_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDIALECT_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECT_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDIALECT_KEYWORD"


    // $ANTLR start "ruleDIALECT_KEYWORD"
    // InternalEclParser.g:2354:1: ruleDIALECT_KEYWORD : ( Dialect ) ;
    public final void ruleDIALECT_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2358:2: ( ( Dialect ) )
            // InternalEclParser.g:2359:2: ( Dialect )
            {
            // InternalEclParser.g:2359:2: ( Dialect )
            // InternalEclParser.g:2360:3: Dialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDIALECT_KEYWORDAccess().getDialectKeyword()); 
            }
            match(input,Dialect,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDIALECT_KEYWORDAccess().getDialectKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDIALECT_KEYWORD"


    // $ANTLR start "entryRuleACTIVE_KEYWORD"
    // InternalEclParser.g:2370:1: entryRuleACTIVE_KEYWORD : ruleACTIVE_KEYWORD EOF ;
    public final void entryRuleACTIVE_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2371:1: ( ruleACTIVE_KEYWORD EOF )
            // InternalEclParser.g:2372:1: ruleACTIVE_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACTIVE_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleACTIVE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACTIVE_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleACTIVE_KEYWORD"


    // $ANTLR start "ruleACTIVE_KEYWORD"
    // InternalEclParser.g:2379:1: ruleACTIVE_KEYWORD : ( Active ) ;
    public final void ruleACTIVE_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2383:2: ( ( Active ) )
            // InternalEclParser.g:2384:2: ( Active )
            {
            // InternalEclParser.g:2384:2: ( Active )
            // InternalEclParser.g:2385:3: Active
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACTIVE_KEYWORDAccess().getActiveKeyword()); 
            }
            match(input,Active,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACTIVE_KEYWORDAccess().getActiveKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleACTIVE_KEYWORD"


    // $ANTLR start "entryRuleMODULEID_KEYWORD"
    // InternalEclParser.g:2395:1: entryRuleMODULEID_KEYWORD : ruleMODULEID_KEYWORD EOF ;
    public final void entryRuleMODULEID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2396:1: ( ruleMODULEID_KEYWORD EOF )
            // InternalEclParser.g:2397:1: ruleMODULEID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMODULEID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleMODULEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMODULEID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMODULEID_KEYWORD"


    // $ANTLR start "ruleMODULEID_KEYWORD"
    // InternalEclParser.g:2404:1: ruleMODULEID_KEYWORD : ( ModuleId ) ;
    public final void ruleMODULEID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2408:2: ( ( ModuleId ) )
            // InternalEclParser.g:2409:2: ( ModuleId )
            {
            // InternalEclParser.g:2409:2: ( ModuleId )
            // InternalEclParser.g:2410:3: ModuleId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMODULEID_KEYWORDAccess().getModuleIdKeyword()); 
            }
            match(input,ModuleId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMODULEID_KEYWORDAccess().getModuleIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMODULEID_KEYWORD"


    // $ANTLR start "entryRulePREFERRED_IN_KEYWORD"
    // InternalEclParser.g:2420:1: entryRulePREFERRED_IN_KEYWORD : rulePREFERRED_IN_KEYWORD EOF ;
    public final void entryRulePREFERRED_IN_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2421:1: ( rulePREFERRED_IN_KEYWORD EOF )
            // InternalEclParser.g:2422:1: rulePREFERRED_IN_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPREFERRED_IN_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            rulePREFERRED_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPREFERRED_IN_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePREFERRED_IN_KEYWORD"


    // $ANTLR start "rulePREFERRED_IN_KEYWORD"
    // InternalEclParser.g:2429:1: rulePREFERRED_IN_KEYWORD : ( PreferredIn ) ;
    public final void rulePREFERRED_IN_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2433:2: ( ( PreferredIn ) )
            // InternalEclParser.g:2434:2: ( PreferredIn )
            {
            // InternalEclParser.g:2434:2: ( PreferredIn )
            // InternalEclParser.g:2435:3: PreferredIn
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPREFERRED_IN_KEYWORDAccess().getPreferredInKeyword()); 
            }
            match(input,PreferredIn,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPREFERRED_IN_KEYWORDAccess().getPreferredInKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePREFERRED_IN_KEYWORD"


    // $ANTLR start "entryRuleACCEPTABLE_IN_KEYWORD"
    // InternalEclParser.g:2445:1: entryRuleACCEPTABLE_IN_KEYWORD : ruleACCEPTABLE_IN_KEYWORD EOF ;
    public final void entryRuleACCEPTABLE_IN_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2446:1: ( ruleACCEPTABLE_IN_KEYWORD EOF )
            // InternalEclParser.g:2447:1: ruleACCEPTABLE_IN_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACCEPTABLE_IN_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleACCEPTABLE_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACCEPTABLE_IN_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleACCEPTABLE_IN_KEYWORD"


    // $ANTLR start "ruleACCEPTABLE_IN_KEYWORD"
    // InternalEclParser.g:2454:1: ruleACCEPTABLE_IN_KEYWORD : ( AcceptableIn ) ;
    public final void ruleACCEPTABLE_IN_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2458:2: ( ( AcceptableIn ) )
            // InternalEclParser.g:2459:2: ( AcceptableIn )
            {
            // InternalEclParser.g:2459:2: ( AcceptableIn )
            // InternalEclParser.g:2460:3: AcceptableIn
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getACCEPTABLE_IN_KEYWORDAccess().getAcceptableInKeyword()); 
            }
            match(input,AcceptableIn,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getACCEPTABLE_IN_KEYWORDAccess().getAcceptableInKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleACCEPTABLE_IN_KEYWORD"


    // $ANTLR start "entryRuleLANGUAGE_REFSET_ID_KEYWORD"
    // InternalEclParser.g:2470:1: entryRuleLANGUAGE_REFSET_ID_KEYWORD : ruleLANGUAGE_REFSET_ID_KEYWORD EOF ;
    public final void entryRuleLANGUAGE_REFSET_ID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2471:1: ( ruleLANGUAGE_REFSET_ID_KEYWORD EOF )
            // InternalEclParser.g:2472:1: ruleLANGUAGE_REFSET_ID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLANGUAGE_REFSET_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLANGUAGE_REFSET_ID_KEYWORD"


    // $ANTLR start "ruleLANGUAGE_REFSET_ID_KEYWORD"
    // InternalEclParser.g:2479:1: ruleLANGUAGE_REFSET_ID_KEYWORD : ( LanguageRefSetId ) ;
    public final void ruleLANGUAGE_REFSET_ID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2483:2: ( ( LanguageRefSetId ) )
            // InternalEclParser.g:2484:2: ( LanguageRefSetId )
            {
            // InternalEclParser.g:2484:2: ( LanguageRefSetId )
            // InternalEclParser.g:2485:3: LanguageRefSetId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDAccess().getLanguageRefSetIdKeyword()); 
            }
            match(input,LanguageRefSetId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLANGUAGE_REFSET_ID_KEYWORDAccess().getLanguageRefSetIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLANGUAGE_REFSET_ID_KEYWORD"


    // $ANTLR start "entryRuleCASE_SIGNIFICANCE_ID_KEYWORD"
    // InternalEclParser.g:2495:1: entryRuleCASE_SIGNIFICANCE_ID_KEYWORD : ruleCASE_SIGNIFICANCE_ID_KEYWORD EOF ;
    public final void entryRuleCASE_SIGNIFICANCE_ID_KEYWORD() throws RecognitionException {
        try {
            // InternalEclParser.g:2496:1: ( ruleCASE_SIGNIFICANCE_ID_KEYWORD EOF )
            // InternalEclParser.g:2497:1: ruleCASE_SIGNIFICANCE_ID_KEYWORD EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleCASE_SIGNIFICANCE_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCASE_SIGNIFICANCE_ID_KEYWORD"


    // $ANTLR start "ruleCASE_SIGNIFICANCE_ID_KEYWORD"
    // InternalEclParser.g:2504:1: ruleCASE_SIGNIFICANCE_ID_KEYWORD : ( CaseSignificanceId ) ;
    public final void ruleCASE_SIGNIFICANCE_ID_KEYWORD() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2508:2: ( ( CaseSignificanceId ) )
            // InternalEclParser.g:2509:2: ( CaseSignificanceId )
            {
            // InternalEclParser.g:2509:2: ( CaseSignificanceId )
            // InternalEclParser.g:2510:3: CaseSignificanceId
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDAccess().getCaseSignificanceIdKeyword()); 
            }
            match(input,CaseSignificanceId,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCASE_SIGNIFICANCE_ID_KEYWORDAccess().getCaseSignificanceIdKeyword()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCASE_SIGNIFICANCE_ID_KEYWORD"


    // $ANTLR start "entryRuleLEXICAL_SEARCH_TYPE"
    // InternalEclParser.g:2520:1: entryRuleLEXICAL_SEARCH_TYPE : ruleLEXICAL_SEARCH_TYPE EOF ;
    public final void entryRuleLEXICAL_SEARCH_TYPE() throws RecognitionException {
        try {
            // InternalEclParser.g:2521:1: ( ruleLEXICAL_SEARCH_TYPE EOF )
            // InternalEclParser.g:2522:1: ruleLEXICAL_SEARCH_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPERule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "ruleLEXICAL_SEARCH_TYPE"
    // InternalEclParser.g:2529:1: ruleLEXICAL_SEARCH_TYPE : ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) ;
    public final void ruleLEXICAL_SEARCH_TYPE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2533:2: ( ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) ) )
            // InternalEclParser.g:2534:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            {
            // InternalEclParser.g:2534:2: ( ( rule__LEXICAL_SEARCH_TYPE__Alternatives ) )
            // InternalEclParser.g:2535:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2536:3: ( rule__LEXICAL_SEARCH_TYPE__Alternatives )
            // InternalEclParser.g:2536:4: rule__LEXICAL_SEARCH_TYPE__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LEXICAL_SEARCH_TYPE__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLEXICAL_SEARCH_TYPE"


    // $ANTLR start "entryRuleDOMAIN"
    // InternalEclParser.g:2545:1: entryRuleDOMAIN : ruleDOMAIN EOF ;
    public final void entryRuleDOMAIN() throws RecognitionException {
        try {
            // InternalEclParser.g:2546:1: ( ruleDOMAIN EOF )
            // InternalEclParser.g:2547:1: ruleDOMAIN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDOMAIN"


    // $ANTLR start "ruleDOMAIN"
    // InternalEclParser.g:2554:1: ruleDOMAIN : ( ( rule__DOMAIN__Alternatives ) ) ;
    public final void ruleDOMAIN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2558:2: ( ( ( rule__DOMAIN__Alternatives ) ) )
            // InternalEclParser.g:2559:2: ( ( rule__DOMAIN__Alternatives ) )
            {
            // InternalEclParser.g:2559:2: ( ( rule__DOMAIN__Alternatives ) )
            // InternalEclParser.g:2560:3: ( rule__DOMAIN__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2561:3: ( rule__DOMAIN__Alternatives )
            // InternalEclParser.g:2561:4: rule__DOMAIN__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DOMAIN__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDOMAINAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDOMAIN"


    // $ANTLR start "entryRuleNON_NUMERIC_OPERATOR"
    // InternalEclParser.g:2570:1: entryRuleNON_NUMERIC_OPERATOR : ruleNON_NUMERIC_OPERATOR EOF ;
    public final void entryRuleNON_NUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEclParser.g:2571:1: ( ruleNON_NUMERIC_OPERATOR EOF )
            // InternalEclParser.g:2572:1: ruleNON_NUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNON_NUMERIC_OPERATOR"


    // $ANTLR start "ruleNON_NUMERIC_OPERATOR"
    // InternalEclParser.g:2579:1: ruleNON_NUMERIC_OPERATOR : ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNON_NUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2583:2: ( ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEclParser.g:2584:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEclParser.g:2584:2: ( ( rule__NON_NUMERIC_OPERATOR__Alternatives ) )
            // InternalEclParser.g:2585:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2586:3: ( rule__NON_NUMERIC_OPERATOR__Alternatives )
            // InternalEclParser.g:2586:4: rule__NON_NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NON_NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNON_NUMERIC_OPERATOR"


    // $ANTLR start "entryRuleNUMERIC_OPERATOR"
    // InternalEclParser.g:2595:1: entryRuleNUMERIC_OPERATOR : ruleNUMERIC_OPERATOR EOF ;
    public final void entryRuleNUMERIC_OPERATOR() throws RecognitionException {
        try {
            // InternalEclParser.g:2596:1: ( ruleNUMERIC_OPERATOR EOF )
            // InternalEclParser.g:2597:1: ruleNUMERIC_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORRule()); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_OPERATOR"


    // $ANTLR start "ruleNUMERIC_OPERATOR"
    // InternalEclParser.g:2604:1: ruleNUMERIC_OPERATOR : ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) ;
    public final void ruleNUMERIC_OPERATOR() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2608:2: ( ( ( rule__NUMERIC_OPERATOR__Alternatives ) ) )
            // InternalEclParser.g:2609:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            {
            // InternalEclParser.g:2609:2: ( ( rule__NUMERIC_OPERATOR__Alternatives ) )
            // InternalEclParser.g:2610:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }
            // InternalEclParser.g:2611:3: ( rule__NUMERIC_OPERATOR__Alternatives )
            // InternalEclParser.g:2611:4: rule__NUMERIC_OPERATOR__Alternatives
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NUMERIC_OPERATOR__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_OPERATORAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_OPERATOR"


    // $ANTLR start "rule__AndExpressionConstraint__Alternatives_1_1"
    // InternalEclParser.g:2619:1: rule__AndExpressionConstraint__Alternatives_1_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndExpressionConstraint__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2623:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==AND) ) {
                alt2=1;
            }
            else if ( (LA2_0==RULE_COMMA) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalEclParser.g:2624:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:2624:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:2625:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2630:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2630:2: ( RULE_COMMA )
                    // InternalEclParser.g:2631:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndExpressionConstraintAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Alternatives_1_1"


    // $ANTLR start "rule__SubExpressionConstraint__Alternatives"
    // InternalEclParser.g:2640:1: rule__SubExpressionConstraint__Alternatives : ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) );
    public final void rule__SubExpressionConstraint__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2644:1: ( ( ruleChildOf ) | ( ruleChildOrSelfOf ) | ( ruleDescendantOf ) | ( ruleDescendantOrSelfOf ) | ( ruleParentOf ) | ( ruleParentOrSelfOf ) | ( ruleAncestorOf ) | ( ruleAncestorOrSelfOf ) | ( ruleEclFocusConcept ) )
            int alt3=9;
            switch ( input.LA(1) ) {
            case RULE_LT_EM:
                {
                alt3=1;
                }
                break;
            case RULE_DBL_LT_EM:
                {
                alt3=2;
                }
                break;
            case RULE_LT:
                {
                alt3=3;
                }
                break;
            case RULE_DBL_LT:
                {
                alt3=4;
                }
                break;
            case RULE_GT_EM:
                {
                alt3=5;
                }
                break;
            case RULE_DBL_GT_EM:
                {
                alt3=6;
                }
                break;
            case RULE_GT:
                {
                alt3=7;
                }
                break;
            case RULE_DBL_GT:
                {
                alt3=8;
                }
                break;
            case RULE_DIGIT_NONZERO:
            case RULE_ROUND_OPEN:
            case RULE_CARET:
            case RULE_WILDCARD:
                {
                alt3=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalEclParser.g:2645:2: ( ruleChildOf )
                    {
                    // InternalEclParser.g:2645:2: ( ruleChildOf )
                    // InternalEclParser.g:2646:3: ruleChildOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2651:2: ( ruleChildOrSelfOf )
                    {
                    // InternalEclParser.g:2651:2: ( ruleChildOrSelfOf )
                    // InternalEclParser.g:2652:3: ruleChildOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleChildOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getChildOrSelfOfParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2657:2: ( ruleDescendantOf )
                    {
                    // InternalEclParser.g:2657:2: ( ruleDescendantOf )
                    // InternalEclParser.g:2658:3: ruleDescendantOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOfParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2663:2: ( ruleDescendantOrSelfOf )
                    {
                    // InternalEclParser.g:2663:2: ( ruleDescendantOrSelfOf )
                    // InternalEclParser.g:2664:3: ruleDescendantOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDescendantOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getDescendantOrSelfOfParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:2669:2: ( ruleParentOf )
                    {
                    // InternalEclParser.g:2669:2: ( ruleParentOf )
                    // InternalEclParser.g:2670:3: ruleParentOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOfParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:2675:2: ( ruleParentOrSelfOf )
                    {
                    // InternalEclParser.g:2675:2: ( ruleParentOrSelfOf )
                    // InternalEclParser.g:2676:3: ruleParentOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleParentOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getParentOrSelfOfParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEclParser.g:2681:2: ( ruleAncestorOf )
                    {
                    // InternalEclParser.g:2681:2: ( ruleAncestorOf )
                    // InternalEclParser.g:2682:3: ruleAncestorOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOfParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEclParser.g:2687:2: ( ruleAncestorOrSelfOf )
                    {
                    // InternalEclParser.g:2687:2: ( ruleAncestorOrSelfOf )
                    // InternalEclParser.g:2688:3: ruleAncestorOrSelfOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAncestorOrSelfOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getAncestorOrSelfOfParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEclParser.g:2693:2: ( ruleEclFocusConcept )
                    {
                    // InternalEclParser.g:2693:2: ( ruleEclFocusConcept )
                    // InternalEclParser.g:2694:3: ruleEclFocusConcept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclFocusConcept();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubExpressionConstraintAccess().getEclFocusConceptParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubExpressionConstraint__Alternatives"


    // $ANTLR start "rule__EclFocusConcept__Alternatives"
    // InternalEclParser.g:2703:1: rule__EclFocusConcept__Alternatives : ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__EclFocusConcept__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2707:1: ( ( ruleMemberOf ) | ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt4=4;
            switch ( input.LA(1) ) {
            case RULE_CARET:
                {
                alt4=1;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt4=2;
                }
                break;
            case RULE_WILDCARD:
                {
                alt4=3;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt4=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalEclParser.g:2708:2: ( ruleMemberOf )
                    {
                    // InternalEclParser.g:2708:2: ( ruleMemberOf )
                    // InternalEclParser.g:2709:3: ruleMemberOf
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleMemberOf();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getMemberOfParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2714:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:2714:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:2715:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getEclConceptReferenceParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2720:2: ( ruleAny )
                    {
                    // InternalEclParser.g:2720:2: ( ruleAny )
                    // InternalEclParser.g:2721:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getAnyParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2726:2: ( ruleNestedExpression )
                    {
                    // InternalEclParser.g:2726:2: ( ruleNestedExpression )
                    // InternalEclParser.g:2727:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEclFocusConceptAccess().getNestedExpressionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclFocusConcept__Alternatives"


    // $ANTLR start "rule__MemberOf__ConstraintAlternatives_1_0"
    // InternalEclParser.g:2736:1: rule__MemberOf__ConstraintAlternatives_1_0 : ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) );
    public final void rule__MemberOf__ConstraintAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2740:1: ( ( ruleEclConceptReference ) | ( ruleAny ) | ( ruleNestedExpression ) )
            int alt5=3;
            switch ( input.LA(1) ) {
            case RULE_DIGIT_NONZERO:
                {
                alt5=1;
                }
                break;
            case RULE_WILDCARD:
                {
                alt5=2;
                }
                break;
            case RULE_ROUND_OPEN:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalEclParser.g:2741:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:2741:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:2742:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintEclConceptReferenceParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2747:2: ( ruleAny )
                    {
                    // InternalEclParser.g:2747:2: ( ruleAny )
                    // InternalEclParser.g:2748:3: ruleAny
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAny();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintAnyParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2753:2: ( ruleNestedExpression )
                    {
                    // InternalEclParser.g:2753:2: ( ruleNestedExpression )
                    // InternalEclParser.g:2754:3: ruleNestedExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMemberOfAccess().getConstraintNestedExpressionParserRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAlternatives_1_0"


    // $ANTLR start "rule__AndRefinement__Alternatives_1_0_1"
    // InternalEclParser.g:2763:1: rule__AndRefinement__Alternatives_1_0_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndRefinement__Alternatives_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2767:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==AND) ) {
                alt6=1;
            }
            else if ( (LA6_0==RULE_COMMA) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalEclParser.g:2768:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:2768:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:2769:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCONJUNCTIONParserRuleCall_1_0_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCONJUNCTIONParserRuleCall_1_0_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2774:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2774:2: ( RULE_COMMA )
                    // InternalEclParser.g:2775:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndRefinementAccess().getCOMMATerminalRuleCall_1_0_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Alternatives_1_0_1"


    // $ANTLR start "rule__SubRefinement__Alternatives"
    // InternalEclParser.g:2784:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );
    public final void rule__SubRefinement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2788:1: ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) )
            int alt7=3;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalEclParser.g:2789:2: ( ruleAttributeConstraint )
                    {
                    // InternalEclParser.g:2789:2: ( ruleAttributeConstraint )
                    // InternalEclParser.g:2790:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2795:2: ( ruleEclAttributeGroup )
                    {
                    // InternalEclParser.g:2795:2: ( ruleEclAttributeGroup )
                    // InternalEclParser.g:2796:3: ruleEclAttributeGroup
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclAttributeGroup();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2801:2: ( ruleNestedRefinement )
                    {
                    // InternalEclParser.g:2801:2: ( ruleNestedRefinement )
                    // InternalEclParser.g:2802:3: ruleNestedRefinement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedRefinement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubRefinementAccess().getNestedRefinementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubRefinement__Alternatives"


    // $ANTLR start "rule__AndAttributeSet__Alternatives_1_1"
    // InternalEclParser.g:2811:1: rule__AndAttributeSet__Alternatives_1_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__AndAttributeSet__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2815:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==AND) ) {
                alt8=1;
            }
            else if ( (LA8_0==RULE_COMMA) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalEclParser.g:2816:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:2816:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:2817:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2822:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2822:2: ( RULE_COMMA )
                    // InternalEclParser.g:2823:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndAttributeSetAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Alternatives_1_1"


    // $ANTLR start "rule__SubAttributeSet__Alternatives"
    // InternalEclParser.g:2832:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );
    public final void rule__SubAttributeSet__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2836:1: ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) )
            int alt9=2;
            alt9 = dfa9.predict(input);
            switch (alt9) {
                case 1 :
                    // InternalEclParser.g:2837:2: ( ruleAttributeConstraint )
                    {
                    // InternalEclParser.g:2837:2: ( ruleAttributeConstraint )
                    // InternalEclParser.g:2838:3: ruleAttributeConstraint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeConstraint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2843:2: ( ruleNestedAttributeSet )
                    {
                    // InternalEclParser.g:2843:2: ( ruleNestedAttributeSet )
                    // InternalEclParser.g:2844:3: ruleNestedAttributeSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedAttributeSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSubAttributeSetAccess().getNestedAttributeSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SubAttributeSet__Alternatives"


    // $ANTLR start "rule__Comparison__Alternatives"
    // InternalEclParser.g:2853:1: rule__Comparison__Alternatives : ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) );
    public final void rule__Comparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2857:1: ( ( ruleAttributeComparison ) | ( ruleDataTypeComparison ) )
            int alt10=2;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                int LA10_1 = input.LA(2);

                if ( (LA10_1==RULE_DIGIT_NONZERO||LA10_1==RULE_ROUND_OPEN||LA10_1==RULE_CARET||LA10_1==RULE_WILDCARD||(LA10_1>=RULE_LT && LA10_1<=RULE_DBL_GT_EM)) ) {
                    alt10=1;
                }
                else if ( (LA10_1==False||LA10_1==True||LA10_1==RULE_HASH||LA10_1==RULE_STRING) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NOT_EQUAL:
                {
                int LA10_2 = input.LA(2);

                if ( (LA10_2==False||LA10_2==True||LA10_2==RULE_HASH||LA10_2==RULE_STRING) ) {
                    alt10=2;
                }
                else if ( (LA10_2==RULE_DIGIT_NONZERO||LA10_2==RULE_ROUND_OPEN||LA10_2==RULE_CARET||LA10_2==RULE_WILDCARD||(LA10_2>=RULE_LT && LA10_2<=RULE_DBL_GT_EM)) ) {
                    alt10=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LT:
            case RULE_GT:
            case RULE_GTE:
            case RULE_LTE:
                {
                alt10=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalEclParser.g:2858:2: ( ruleAttributeComparison )
                    {
                    // InternalEclParser.g:2858:2: ( ruleAttributeComparison )
                    // InternalEclParser.g:2859:3: ruleAttributeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAttributeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getAttributeComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2864:2: ( ruleDataTypeComparison )
                    {
                    // InternalEclParser.g:2864:2: ( ruleDataTypeComparison )
                    // InternalEclParser.g:2865:3: ruleDataTypeComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDataTypeComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparisonAccess().getDataTypeComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives"


    // $ANTLR start "rule__DataTypeComparison__Alternatives"
    // InternalEclParser.g:2874:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );
    public final void rule__DataTypeComparison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2878:1: ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) )
            int alt11=4;
            alt11 = dfa11.predict(input);
            switch (alt11) {
                case 1 :
                    // InternalEclParser.g:2879:2: ( ruleBooleanValueComparison )
                    {
                    // InternalEclParser.g:2879:2: ( ruleBooleanValueComparison )
                    // InternalEclParser.g:2880:3: ruleBooleanValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleBooleanValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getBooleanValueComparisonParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2885:2: ( ruleStringValueComparison )
                    {
                    // InternalEclParser.g:2885:2: ( ruleStringValueComparison )
                    // InternalEclParser.g:2886:3: ruleStringValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleStringValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getStringValueComparisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2891:2: ( ruleIntegerValueComparison )
                    {
                    // InternalEclParser.g:2891:2: ( ruleIntegerValueComparison )
                    // InternalEclParser.g:2892:3: ruleIntegerValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleIntegerValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getIntegerValueComparisonParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2897:2: ( ruleDecimalValueComparison )
                    {
                    // InternalEclParser.g:2897:2: ( ruleDecimalValueComparison )
                    // InternalEclParser.g:2898:3: ruleDecimalValueComparison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDecimalValueComparison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDataTypeComparisonAccess().getDecimalValueComparisonParserRuleCall_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DataTypeComparison__Alternatives"


    // $ANTLR start "rule__ConjunctionFilter__Alternatives_1_1"
    // InternalEclParser.g:2907:1: rule__ConjunctionFilter__Alternatives_1_1 : ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) );
    public final void rule__ConjunctionFilter__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2911:1: ( ( ruleCONJUNCTION ) | ( RULE_COMMA ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==AND) ) {
                alt12=1;
            }
            else if ( (LA12_0==RULE_COMMA) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalEclParser.g:2912:2: ( ruleCONJUNCTION )
                    {
                    // InternalEclParser.g:2912:2: ( ruleCONJUNCTION )
                    // InternalEclParser.g:2913:3: ruleCONJUNCTION
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCONJUNCTION();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCONJUNCTIONParserRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2918:2: ( RULE_COMMA )
                    {
                    // InternalEclParser.g:2918:2: ( RULE_COMMA )
                    // InternalEclParser.g:2919:3: RULE_COMMA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_COMMA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getConjunctionFilterAccess().getCOMMATerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Alternatives_1_1"


    // $ANTLR start "rule__PropertyFilter__Alternatives"
    // InternalEclParser.g:2928:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );
    public final void rule__PropertyFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:2932:1: ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) )
            int alt13=11;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalEclParser.g:2933:2: ( ruleTermFilter )
                    {
                    // InternalEclParser.g:2933:2: ( ruleTermFilter )
                    // InternalEclParser.g:2934:3: ruleTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTermFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:2939:2: ( ruleLanguageFilter )
                    {
                    // InternalEclParser.g:2939:2: ( ruleLanguageFilter )
                    // InternalEclParser.g:2940:3: ruleLanguageFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:2945:2: ( ruleTypeFilter )
                    {
                    // InternalEclParser.g:2945:2: ( ruleTypeFilter )
                    // InternalEclParser.g:2946:3: ruleTypeFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getTypeFilterParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:2951:2: ( ruleDialectFilter )
                    {
                    // InternalEclParser.g:2951:2: ( ruleDialectFilter )
                    // InternalEclParser.g:2952:3: ruleDialectFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getDialectFilterParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:2957:2: ( ruleActiveFilter )
                    {
                    // InternalEclParser.g:2957:2: ( ruleActiveFilter )
                    // InternalEclParser.g:2958:3: ruleActiveFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleActiveFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getActiveFilterParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:2963:2: ( rulePreferredInFilter )
                    {
                    // InternalEclParser.g:2963:2: ( rulePreferredInFilter )
                    // InternalEclParser.g:2964:3: rulePreferredInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    rulePreferredInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getPreferredInFilterParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalEclParser.g:2969:2: ( ruleAcceptableInFilter )
                    {
                    // InternalEclParser.g:2969:2: ( ruleAcceptableInFilter )
                    // InternalEclParser.g:2970:3: ruleAcceptableInFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptableInFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getAcceptableInFilterParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalEclParser.g:2975:2: ( ruleLanguageRefSetFilter )
                    {
                    // InternalEclParser.g:2975:2: ( ruleLanguageRefSetFilter )
                    // InternalEclParser.g:2976:3: ruleLanguageRefSetFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleLanguageRefSetFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getLanguageRefSetFilterParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalEclParser.g:2981:2: ( ruleModuleFilter )
                    {
                    // InternalEclParser.g:2981:2: ( ruleModuleFilter )
                    // InternalEclParser.g:2982:3: ruleModuleFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleModuleFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getModuleFilterParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalEclParser.g:2987:2: ( ruleCaseSignificanceFilter )
                    {
                    // InternalEclParser.g:2987:2: ( ruleCaseSignificanceFilter )
                    // InternalEclParser.g:2988:3: ruleCaseSignificanceFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_9()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleCaseSignificanceFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getCaseSignificanceFilterParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalEclParser.g:2993:2: ( ruleNestedFilter )
                    {
                    // InternalEclParser.g:2993:2: ( ruleNestedFilter )
                    // InternalEclParser.g:2994:3: ruleNestedFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_10()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNestedFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getPropertyFilterAccess().getNestedFilterParserRuleCall_10()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PropertyFilter__Alternatives"


    // $ANTLR start "rule__TermFilter__Alternatives_1"
    // InternalEclParser.g:3003:1: rule__TermFilter__Alternatives_1 : ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) );
    public final void rule__TermFilter__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3007:1: ( ( ruleTypedTermFilter ) | ( ruleTypedTermFilterSet ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_EQUAL) ) {
                int LA14_1 = input.LA(2);

                if ( (LA14_1==RULE_ROUND_OPEN) ) {
                    alt14=2;
                }
                else if ( (LA14_1==Exact||(LA14_1>=Match && LA14_1<=Regex)||LA14_1==Wild||LA14_1==RULE_STRING) ) {
                    alt14=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA14_0==RULE_NOT_EQUAL) ) {
                int LA14_2 = input.LA(2);

                if ( (LA14_2==RULE_ROUND_OPEN) ) {
                    alt14=2;
                }
                else if ( (LA14_2==Exact||(LA14_2>=Match && LA14_2<=Regex)||LA14_2==Wild||LA14_2==RULE_STRING) ) {
                    alt14=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalEclParser.g:3008:2: ( ruleTypedTermFilter )
                    {
                    // InternalEclParser.g:3008:2: ( ruleTypedTermFilter )
                    // InternalEclParser.g:3009:3: ruleTypedTermFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterParserRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3014:2: ( ruleTypedTermFilterSet )
                    {
                    // InternalEclParser.g:3014:2: ( ruleTypedTermFilterSet )
                    // InternalEclParser.g:3015:3: ruleTypedTermFilterSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypedTermFilterSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTermFilterAccess().getTypedTermFilterSetParserRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Alternatives_1"


    // $ANTLR start "rule__LanguageFilter__Alternatives_2"
    // InternalEclParser.g:3024:1: rule__LanguageFilter__Alternatives_2 : ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) );
    public final void rule__LanguageFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3028:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) ) | ( ( rule__LanguageFilter__Group_2_1__0 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_ALPHA) ) {
                alt15=1;
            }
            else if ( (LA15_0==RULE_ROUND_OPEN) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalEclParser.g:3029:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3029:2: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_0 ) )
                    // InternalEclParser.g:3030:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3031:3: ( rule__LanguageFilter__LanguageCodesAssignment_2_0 )
                    // InternalEclParser.g:3031:4: rule__LanguageFilter__LanguageCodesAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__LanguageCodesAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3035:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3035:2: ( ( rule__LanguageFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3036:3: ( rule__LanguageFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3037:3: ( rule__LanguageFilter__Group_2_1__0 )
                    // InternalEclParser.g:3037:4: rule__LanguageFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__LanguageFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLanguageFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Alternatives_2"


    // $ANTLR start "rule__TypeFilter__Alternatives"
    // InternalEclParser.g:3045:1: rule__TypeFilter__Alternatives : ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) );
    public final void rule__TypeFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3049:1: ( ( ruleTypeIdFilter ) | ( ruleTypeTokenFilter ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==TypeId) ) {
                alt16=1;
            }
            else if ( (LA16_0==Type) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalEclParser.g:3050:2: ( ruleTypeIdFilter )
                    {
                    // InternalEclParser.g:3050:2: ( ruleTypeIdFilter )
                    // InternalEclParser.g:3051:3: ruleTypeIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3056:2: ( ruleTypeTokenFilter )
                    {
                    // InternalEclParser.g:3056:2: ( ruleTypeTokenFilter )
                    // InternalEclParser.g:3057:3: ruleTypeTokenFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleTypeTokenFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeFilterAccess().getTypeTokenFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeFilter__Alternatives"


    // $ANTLR start "rule__TypeIdFilter__TypeAlternatives_2_0"
    // InternalEclParser.g:3066:1: rule__TypeIdFilter__TypeAlternatives_2_0 : ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) );
    public final void rule__TypeIdFilter__TypeAlternatives_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3070:1: ( ( ruleEclConceptReference ) | ( ruleEclConceptReferenceSet ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==RULE_DIGIT_NONZERO) ) {
                alt17=1;
            }
            else if ( (LA17_0==RULE_ROUND_OPEN) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalEclParser.g:3071:2: ( ruleEclConceptReference )
                    {
                    // InternalEclParser.g:3071:2: ( ruleEclConceptReference )
                    // InternalEclParser.g:3072:3: ruleEclConceptReference
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceParserRuleCall_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3077:2: ( ruleEclConceptReferenceSet )
                    {
                    // InternalEclParser.g:3077:2: ( ruleEclConceptReferenceSet )
                    // InternalEclParser.g:3078:3: ruleEclConceptReferenceSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleEclConceptReferenceSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeIdFilterAccess().getTypeEclConceptReferenceSetParserRuleCall_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAlternatives_2_0"


    // $ANTLR start "rule__TypeTokenFilter__Alternatives_2"
    // InternalEclParser.g:3087:1: rule__TypeTokenFilter__Alternatives_2 : ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) );
    public final void rule__TypeTokenFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3091:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) ) | ( ( rule__TypeTokenFilter__Group_2_1__0 ) ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_ALPHA) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_ROUND_OPEN) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalEclParser.g:3092:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3092:2: ( ( rule__TypeTokenFilter__TokensAssignment_2_0 ) )
                    // InternalEclParser.g:3093:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3094:3: ( rule__TypeTokenFilter__TokensAssignment_2_0 )
                    // InternalEclParser.g:3094:4: rule__TypeTokenFilter__TokensAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__TokensAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3098:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3098:2: ( ( rule__TypeTokenFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3099:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3100:3: ( rule__TypeTokenFilter__Group_2_1__0 )
                    // InternalEclParser.g:3100:4: rule__TypeTokenFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypeTokenFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTypeTokenFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Alternatives_2"


    // $ANTLR start "rule__DialectFilter__Alternatives"
    // InternalEclParser.g:3108:1: rule__DialectFilter__Alternatives : ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) );
    public final void rule__DialectFilter__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3112:1: ( ( ruleDialectIdFilter ) | ( ruleDialectAliasFilter ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==DialectId) ) {
                alt19=1;
            }
            else if ( (LA19_0==Dialect) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalEclParser.g:3113:2: ( ruleDialectIdFilter )
                    {
                    // InternalEclParser.g:3113:2: ( ruleDialectIdFilter )
                    // InternalEclParser.g:3114:3: ruleDialectIdFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectIdFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectIdFilterParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3119:2: ( ruleDialectAliasFilter )
                    {
                    // InternalEclParser.g:3119:2: ( ruleDialectAliasFilter )
                    // InternalEclParser.g:3120:3: ruleDialectAliasFilter
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleDialectAliasFilter();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectFilterAccess().getDialectAliasFilterParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectFilter__Alternatives"


    // $ANTLR start "rule__DialectIdFilter__Alternatives_2"
    // InternalEclParser.g:3129:1: rule__DialectIdFilter__Alternatives_2 : ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) );
    public final void rule__DialectIdFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3133:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectIdFilter__Group_2_1__0 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_DIGIT_NONZERO) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_ROUND_OPEN) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalEclParser.g:3134:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3134:2: ( ( rule__DialectIdFilter__DialectsAssignment_2_0 ) )
                    // InternalEclParser.g:3135:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3136:3: ( rule__DialectIdFilter__DialectsAssignment_2_0 )
                    // InternalEclParser.g:3136:4: rule__DialectIdFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3140:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3140:2: ( ( rule__DialectIdFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3141:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3142:3: ( rule__DialectIdFilter__Group_2_1__0 )
                    // InternalEclParser.g:3142:4: rule__DialectIdFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectIdFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectIdFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Alternatives_2"


    // $ANTLR start "rule__DialectAliasFilter__Alternatives_2"
    // InternalEclParser.g:3150:1: rule__DialectAliasFilter__Alternatives_2 : ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) );
    public final void rule__DialectAliasFilter__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3154:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) ) | ( ( rule__DialectAliasFilter__Group_2_1__0 ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ALPHA) ) {
                alt21=1;
            }
            else if ( (LA21_0==RULE_ROUND_OPEN) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalEclParser.g:3155:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    {
                    // InternalEclParser.g:3155:2: ( ( rule__DialectAliasFilter__DialectsAssignment_2_0 ) )
                    // InternalEclParser.g:3156:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }
                    // InternalEclParser.g:3157:3: ( rule__DialectAliasFilter__DialectsAssignment_2_0 )
                    // InternalEclParser.g:3157:4: rule__DialectAliasFilter__DialectsAssignment_2_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__DialectsAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3161:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    {
                    // InternalEclParser.g:3161:2: ( ( rule__DialectAliasFilter__Group_2_1__0 ) )
                    // InternalEclParser.g:3162:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }
                    // InternalEclParser.g:3163:3: ( rule__DialectAliasFilter__Group_2_1__0 )
                    // InternalEclParser.g:3163:4: rule__DialectAliasFilter__Group_2_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAliasFilter__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasFilterAccess().getGroup_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Alternatives_2"


    // $ANTLR start "rule__Acceptability__Alternatives"
    // InternalEclParser.g:3171:1: rule__Acceptability__Alternatives : ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) );
    public final void rule__Acceptability__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3175:1: ( ( ruleAcceptabilityIdSet ) | ( ruleAcceptabilityTokenSet ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ROUND_OPEN) ) {
                int LA22_1 = input.LA(2);

                if ( (LA22_1==RULE_DIGIT_NONZERO) ) {
                    alt22=1;
                }
                else if ( (LA22_1==RULE_ALPHA) ) {
                    alt22=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalEclParser.g:3176:2: ( ruleAcceptabilityIdSet )
                    {
                    // InternalEclParser.g:3176:2: ( ruleAcceptabilityIdSet )
                    // InternalEclParser.g:3177:3: ruleAcceptabilityIdSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityIdSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityIdSetParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3182:2: ( ruleAcceptabilityTokenSet )
                    {
                    // InternalEclParser.g:3182:2: ( ruleAcceptabilityTokenSet )
                    // InternalEclParser.g:3183:3: ruleAcceptabilityTokenSet
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAcceptabilityTokenSet();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAcceptabilityAccess().getAcceptabilityTokenSetParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Acceptability__Alternatives"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_1"
    // InternalEclParser.g:3192:1: rule__SnomedIdentifier__Alternatives_1 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3196:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_DIGIT_NONZERO) ) {
                alt23=1;
            }
            else if ( (LA23_0==RULE_ZERO) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalEclParser.g:3197:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3197:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3198:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3203:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3203:2: ( RULE_ZERO )
                    // InternalEclParser.g:3204:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_1"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_2"
    // InternalEclParser.g:3213:1: rule__SnomedIdentifier__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3217:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_DIGIT_NONZERO) ) {
                alt24=1;
            }
            else if ( (LA24_0==RULE_ZERO) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalEclParser.g:3218:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3218:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3219:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3224:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3224:2: ( RULE_ZERO )
                    // InternalEclParser.g:3225:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_2"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_3"
    // InternalEclParser.g:3234:1: rule__SnomedIdentifier__Alternatives_3 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3238:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==RULE_DIGIT_NONZERO) ) {
                alt25=1;
            }
            else if ( (LA25_0==RULE_ZERO) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalEclParser.g:3239:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3239:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3240:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_3_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3245:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3245:2: ( RULE_ZERO )
                    // InternalEclParser.g:3246:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_3_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_3_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_3"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_4"
    // InternalEclParser.g:3255:1: rule__SnomedIdentifier__Alternatives_4 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3259:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_DIGIT_NONZERO) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_ZERO) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalEclParser.g:3260:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3260:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3261:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_4_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_4_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3266:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3266:2: ( RULE_ZERO )
                    // InternalEclParser.g:3267:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_4_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_4_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_4"


    // $ANTLR start "rule__SnomedIdentifier__Alternatives_5"
    // InternalEclParser.g:3276:1: rule__SnomedIdentifier__Alternatives_5 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__SnomedIdentifier__Alternatives_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3280:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==RULE_DIGIT_NONZERO) ) {
                alt27=1;
            }
            else if ( (LA27_0==RULE_ZERO) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalEclParser.g:3281:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3281:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3282:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_5_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_5_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3287:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3287:2: ( RULE_ZERO )
                    // InternalEclParser.g:3288:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_5_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSnomedIdentifierAccess().getZEROTerminalRuleCall_5_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Alternatives_5"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives"
    // InternalEclParser.g:3297:1: rule__NonNegativeInteger__Alternatives : ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) );
    public final void rule__NonNegativeInteger__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3301:1: ( ( RULE_ZERO ) | ( ( rule__NonNegativeInteger__Group_1__0 ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==RULE_ZERO) ) {
                alt28=1;
            }
            else if ( (LA28_0==RULE_DIGIT_NONZERO) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalEclParser.g:3302:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3302:2: ( RULE_ZERO )
                    // InternalEclParser.g:3303:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3308:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    {
                    // InternalEclParser.g:3308:2: ( ( rule__NonNegativeInteger__Group_1__0 ) )
                    // InternalEclParser.g:3309:3: ( rule__NonNegativeInteger__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }
                    // InternalEclParser.g:3310:3: ( rule__NonNegativeInteger__Group_1__0 )
                    // InternalEclParser.g:3310:4: rule__NonNegativeInteger__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__NonNegativeInteger__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives"


    // $ANTLR start "rule__NonNegativeInteger__Alternatives_1_1"
    // InternalEclParser.g:3318:1: rule__NonNegativeInteger__Alternatives_1_1 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeInteger__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3322:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==RULE_DIGIT_NONZERO) ) {
                alt29=1;
            }
            else if ( (LA29_0==RULE_ZERO) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalEclParser.g:3323:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3323:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3324:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3329:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3329:2: ( RULE_ZERO )
                    // InternalEclParser.g:3330:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeIntegerAccess().getZEROTerminalRuleCall_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Alternatives_1_1"


    // $ANTLR start "rule__MaxValue__Alternatives"
    // InternalEclParser.g:3339:1: rule__MaxValue__Alternatives : ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) );
    public final void rule__MaxValue__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3343:1: ( ( ruleNonNegativeInteger ) | ( RULE_WILDCARD ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=RULE_ZERO && LA30_0<=RULE_DIGIT_NONZERO)) ) {
                alt30=1;
            }
            else if ( (LA30_0==RULE_WILDCARD) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalEclParser.g:3344:2: ( ruleNonNegativeInteger )
                    {
                    // InternalEclParser.g:3344:2: ( ruleNonNegativeInteger )
                    // InternalEclParser.g:3345:3: ruleNonNegativeInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleNonNegativeInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getNonNegativeIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3350:2: ( RULE_WILDCARD )
                    {
                    // InternalEclParser.g:3350:2: ( RULE_WILDCARD )
                    // InternalEclParser.g:3351:3: RULE_WILDCARD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMaxValueAccess().getWILDCARDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MaxValue__Alternatives"


    // $ANTLR start "rule__Integer__Alternatives_0"
    // InternalEclParser.g:3360:1: rule__Integer__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Integer__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3364:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_PLUS) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_DASH) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalEclParser.g:3365:2: ( RULE_PLUS )
                    {
                    // InternalEclParser.g:3365:2: ( RULE_PLUS )
                    // InternalEclParser.g:3366:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3371:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3371:2: ( RULE_DASH )
                    // InternalEclParser.g:3372:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getIntegerAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Alternatives_0"


    // $ANTLR start "rule__Decimal__Alternatives_0"
    // InternalEclParser.g:3381:1: rule__Decimal__Alternatives_0 : ( ( RULE_PLUS ) | ( RULE_DASH ) );
    public final void rule__Decimal__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3385:1: ( ( RULE_PLUS ) | ( RULE_DASH ) )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_PLUS) ) {
                alt32=1;
            }
            else if ( (LA32_0==RULE_DASH) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalEclParser.g:3386:2: ( RULE_PLUS )
                    {
                    // InternalEclParser.g:3386:2: ( RULE_PLUS )
                    // InternalEclParser.g:3387:3: RULE_PLUS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }
                    match(input,RULE_PLUS,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getPLUSTerminalRuleCall_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3392:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3392:2: ( RULE_DASH )
                    // InternalEclParser.g:3393:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDecimalAccess().getDASHTerminalRuleCall_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Alternatives_0"


    // $ANTLR start "rule__NonNegativeDecimal__Alternatives_2"
    // InternalEclParser.g:3402:1: rule__NonNegativeDecimal__Alternatives_2 : ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) );
    public final void rule__NonNegativeDecimal__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3406:1: ( ( RULE_DIGIT_NONZERO ) | ( RULE_ZERO ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==RULE_DIGIT_NONZERO) ) {
                alt33=1;
            }
            else if ( (LA33_0==RULE_ZERO) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalEclParser.g:3407:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3407:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3408:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getDIGIT_NONZEROTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3413:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3413:2: ( RULE_ZERO )
                    // InternalEclParser.g:3414:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNonNegativeDecimalAccess().getZEROTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Alternatives_2"


    // $ANTLR start "rule__Boolean__Alternatives"
    // InternalEclParser.g:3423:1: rule__Boolean__Alternatives : ( ( True ) | ( False ) );
    public final void rule__Boolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3427:1: ( ( True ) | ( False ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==True) ) {
                alt34=1;
            }
            else if ( (LA34_0==False) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalEclParser.g:3428:2: ( True )
                    {
                    // InternalEclParser.g:3428:2: ( True )
                    // InternalEclParser.g:3429:3: True
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }
                    match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getTrueKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3434:2: ( False )
                    {
                    // InternalEclParser.g:3434:2: ( False )
                    // InternalEclParser.g:3435:3: False
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }
                    match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanAccess().getFalseKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Boolean__Alternatives"


    // $ANTLR start "rule__DialectAliasValue__Alternatives_1"
    // InternalEclParser.g:3444:1: rule__DialectAliasValue__Alternatives_1 : ( ( RULE_DASH ) | ( RULE_ALPHA ) | ( RULE_ZERO ) | ( RULE_DIGIT_NONZERO ) );
    public final void rule__DialectAliasValue__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3448:1: ( ( RULE_DASH ) | ( RULE_ALPHA ) | ( RULE_ZERO ) | ( RULE_DIGIT_NONZERO ) )
            int alt35=4;
            switch ( input.LA(1) ) {
            case RULE_DASH:
                {
                alt35=1;
                }
                break;
            case RULE_ALPHA:
                {
                alt35=2;
                }
                break;
            case RULE_ZERO:
                {
                alt35=3;
                }
                break;
            case RULE_DIGIT_NONZERO:
                {
                alt35=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalEclParser.g:3449:2: ( RULE_DASH )
                    {
                    // InternalEclParser.g:3449:2: ( RULE_DASH )
                    // InternalEclParser.g:3450:3: RULE_DASH
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_1_0()); 
                    }
                    match(input,RULE_DASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDASHTerminalRuleCall_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3455:2: ( RULE_ALPHA )
                    {
                    // InternalEclParser.g:3455:2: ( RULE_ALPHA )
                    // InternalEclParser.g:3456:3: RULE_ALPHA
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_1_1()); 
                    }
                    match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3461:2: ( RULE_ZERO )
                    {
                    // InternalEclParser.g:3461:2: ( RULE_ZERO )
                    // InternalEclParser.g:3462:3: RULE_ZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getZEROTerminalRuleCall_1_2()); 
                    }
                    match(input,RULE_ZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getZEROTerminalRuleCall_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3467:2: ( RULE_DIGIT_NONZERO )
                    {
                    // InternalEclParser.g:3467:2: ( RULE_DIGIT_NONZERO )
                    // InternalEclParser.g:3468:3: RULE_DIGIT_NONZERO
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_1_3()); 
                    }
                    match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDialectAliasValueAccess().getDIGIT_NONZEROTerminalRuleCall_1_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Alternatives_1"


    // $ANTLR start "rule__LEXICAL_SEARCH_TYPE__Alternatives"
    // InternalEclParser.g:3477:1: rule__LEXICAL_SEARCH_TYPE__Alternatives : ( ( Match ) | ( Wild ) | ( Regex ) | ( Exact ) );
    public final void rule__LEXICAL_SEARCH_TYPE__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3481:1: ( ( Match ) | ( Wild ) | ( Regex ) | ( Exact ) )
            int alt36=4;
            switch ( input.LA(1) ) {
            case Match:
                {
                alt36=1;
                }
                break;
            case Wild:
                {
                alt36=2;
                }
                break;
            case Regex:
                {
                alt36=3;
                }
                break;
            case Exact:
                {
                alt36=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalEclParser.g:3482:2: ( Match )
                    {
                    // InternalEclParser.g:3482:2: ( Match )
                    // InternalEclParser.g:3483:3: Match
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMatchKeyword_0()); 
                    }
                    match(input,Match,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getMatchKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3488:2: ( Wild )
                    {
                    // InternalEclParser.g:3488:2: ( Wild )
                    // InternalEclParser.g:3489:3: Wild
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWildKeyword_1()); 
                    }
                    match(input,Wild,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getWildKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3494:2: ( Regex )
                    {
                    // InternalEclParser.g:3494:2: ( Regex )
                    // InternalEclParser.g:3495:3: Regex
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getRegexKeyword_2()); 
                    }
                    match(input,Regex,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getRegexKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3500:2: ( Exact )
                    {
                    // InternalEclParser.g:3500:2: ( Exact )
                    // InternalEclParser.g:3501:3: Exact
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getExactKeyword_3()); 
                    }
                    match(input,Exact,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getLEXICAL_SEARCH_TYPEAccess().getExactKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LEXICAL_SEARCH_TYPE__Alternatives"


    // $ANTLR start "rule__DOMAIN__Alternatives"
    // InternalEclParser.g:3510:1: rule__DOMAIN__Alternatives : ( ( Concept ) | ( Description ) );
    public final void rule__DOMAIN__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3514:1: ( ( Concept ) | ( Description ) )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==Concept) ) {
                alt37=1;
            }
            else if ( (LA37_0==Description) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // InternalEclParser.g:3515:2: ( Concept )
                    {
                    // InternalEclParser.g:3515:2: ( Concept )
                    // InternalEclParser.g:3516:3: Concept
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getConceptKeyword_0()); 
                    }
                    match(input,Concept,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getConceptKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3521:2: ( Description )
                    {
                    // InternalEclParser.g:3521:2: ( Description )
                    // InternalEclParser.g:3522:3: Description
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDOMAINAccess().getDescriptionKeyword_1()); 
                    }
                    match(input,Description,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDOMAINAccess().getDescriptionKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DOMAIN__Alternatives"


    // $ANTLR start "rule__NON_NUMERIC_OPERATOR__Alternatives"
    // InternalEclParser.g:3531:1: rule__NON_NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) );
    public final void rule__NON_NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3535:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_EQUAL) ) {
                alt38=1;
            }
            else if ( (LA38_0==RULE_NOT_EQUAL) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalEclParser.g:3536:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:3536:2: ( RULE_EQUAL )
                    // InternalEclParser.g:3537:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3542:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:3542:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:3543:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNON_NUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NON_NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__NUMERIC_OPERATOR__Alternatives"
    // InternalEclParser.g:3552:1: rule__NUMERIC_OPERATOR__Alternatives : ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) );
    public final void rule__NUMERIC_OPERATOR__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3556:1: ( ( RULE_EQUAL ) | ( RULE_NOT_EQUAL ) | ( RULE_GT ) | ( RULE_LT ) | ( RULE_GTE ) | ( RULE_LTE ) )
            int alt39=6;
            switch ( input.LA(1) ) {
            case RULE_EQUAL:
                {
                alt39=1;
                }
                break;
            case RULE_NOT_EQUAL:
                {
                alt39=2;
                }
                break;
            case RULE_GT:
                {
                alt39=3;
                }
                break;
            case RULE_LT:
                {
                alt39=4;
                }
                break;
            case RULE_GTE:
                {
                alt39=5;
                }
                break;
            case RULE_LTE:
                {
                alt39=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalEclParser.g:3557:2: ( RULE_EQUAL )
                    {
                    // InternalEclParser.g:3557:2: ( RULE_EQUAL )
                    // InternalEclParser.g:3558:3: RULE_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }
                    match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getEQUALTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalEclParser.g:3563:2: ( RULE_NOT_EQUAL )
                    {
                    // InternalEclParser.g:3563:2: ( RULE_NOT_EQUAL )
                    // InternalEclParser.g:3564:3: RULE_NOT_EQUAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }
                    match(input,RULE_NOT_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getNOT_EQUALTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalEclParser.g:3569:2: ( RULE_GT )
                    {
                    // InternalEclParser.g:3569:2: ( RULE_GT )
                    // InternalEclParser.g:3570:3: RULE_GT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }
                    match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTTerminalRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalEclParser.g:3575:2: ( RULE_LT )
                    {
                    // InternalEclParser.g:3575:2: ( RULE_LT )
                    // InternalEclParser.g:3576:3: RULE_LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }
                    match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTTerminalRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalEclParser.g:3581:2: ( RULE_GTE )
                    {
                    // InternalEclParser.g:3581:2: ( RULE_GTE )
                    // InternalEclParser.g:3582:3: RULE_GTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }
                    match(input,RULE_GTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getGTETerminalRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalEclParser.g:3587:2: ( RULE_LTE )
                    {
                    // InternalEclParser.g:3587:2: ( RULE_LTE )
                    // InternalEclParser.g:3588:3: RULE_LTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }
                    match(input,RULE_LTE,FollowSets000.FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_OPERATORAccess().getLTETerminalRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_OPERATOR__Alternatives"


    // $ANTLR start "rule__Script__Group__0"
    // InternalEclParser.g:3597:1: rule__Script__Group__0 : rule__Script__Group__0__Impl rule__Script__Group__1 ;
    public final void rule__Script__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3601:1: ( rule__Script__Group__0__Impl rule__Script__Group__1 )
            // InternalEclParser.g:3602:2: rule__Script__Group__0__Impl rule__Script__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__Script__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0"


    // $ANTLR start "rule__Script__Group__0__Impl"
    // InternalEclParser.g:3609:1: rule__Script__Group__0__Impl : ( () ) ;
    public final void rule__Script__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3613:1: ( ( () ) )
            // InternalEclParser.g:3614:1: ( () )
            {
            // InternalEclParser.g:3614:1: ( () )
            // InternalEclParser.g:3615:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }
            // InternalEclParser.g:3616:2: ()
            // InternalEclParser.g:3616:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getScriptAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__0__Impl"


    // $ANTLR start "rule__Script__Group__1"
    // InternalEclParser.g:3624:1: rule__Script__Group__1 : rule__Script__Group__1__Impl ;
    public final void rule__Script__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3628:1: ( rule__Script__Group__1__Impl )
            // InternalEclParser.g:3629:2: rule__Script__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Script__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1"


    // $ANTLR start "rule__Script__Group__1__Impl"
    // InternalEclParser.g:3635:1: rule__Script__Group__1__Impl : ( ( rule__Script__ConstraintAssignment_1 )? ) ;
    public final void rule__Script__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3639:1: ( ( ( rule__Script__ConstraintAssignment_1 )? ) )
            // InternalEclParser.g:3640:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            {
            // InternalEclParser.g:3640:1: ( ( rule__Script__ConstraintAssignment_1 )? )
            // InternalEclParser.g:3641:2: ( rule__Script__ConstraintAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:3642:2: ( rule__Script__ConstraintAssignment_1 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==RULE_DIGIT_NONZERO||LA40_0==RULE_ROUND_OPEN||LA40_0==RULE_CARET||LA40_0==RULE_WILDCARD||(LA40_0>=RULE_LT && LA40_0<=RULE_DBL_GT_EM)) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalEclParser.g:3642:3: rule__Script__ConstraintAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Script__ConstraintAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0"
    // InternalEclParser.g:3651:1: rule__OrExpressionConstraint__Group__0 : rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 ;
    public final void rule__OrExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3655:1: ( rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1 )
            // InternalEclParser.g:3656:2: rule__OrExpressionConstraint__Group__0__Impl rule__OrExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3663:1: rule__OrExpressionConstraint__Group__0__Impl : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3667:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEclParser.g:3668:1: ( ruleAndExpressionConstraint )
            {
            // InternalEclParser.g:3668:1: ( ruleAndExpressionConstraint )
            // InternalEclParser.g:3669:2: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getAndExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1"
    // InternalEclParser.g:3678:1: rule__OrExpressionConstraint__Group__1 : rule__OrExpressionConstraint__Group__1__Impl ;
    public final void rule__OrExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3682:1: ( rule__OrExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3683:2: rule__OrExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3689:1: rule__OrExpressionConstraint__Group__1__Impl : ( ( rule__OrExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__OrExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3693:1: ( ( ( rule__OrExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:3694:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:3694:1: ( ( rule__OrExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:3695:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3696:2: ( rule__OrExpressionConstraint__Group_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==OR) ) {
                    int LA41_5 = input.LA(2);

                    if ( (synpred71_InternalEclParser()) ) {
                        alt41=1;
                    }


                }


                switch (alt41) {
            	case 1 :
            	    // InternalEclParser.g:3696:3: rule__OrExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__OrExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3705:1: rule__OrExpressionConstraint__Group_1__0 : rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 ;
    public final void rule__OrExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3709:1: ( rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3710:2: rule__OrExpressionConstraint__Group_1__0__Impl rule__OrExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3717:1: rule__OrExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__OrExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3721:1: ( ( () ) )
            // InternalEclParser.g:3722:1: ( () )
            {
            // InternalEclParser.g:3722:1: ( () )
            // InternalEclParser.g:3723:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3724:2: ()
            // InternalEclParser.g:3724:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getOrExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3732:1: rule__OrExpressionConstraint__Group_1__1 : rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 ;
    public final void rule__OrExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3736:1: ( rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3737:2: rule__OrExpressionConstraint__Group_1__1__Impl rule__OrExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__OrExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3744:1: rule__OrExpressionConstraint__Group_1__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__OrExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3748:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:3749:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:3749:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:3750:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3759:1: rule__OrExpressionConstraint__Group_1__2 : rule__OrExpressionConstraint__Group_1__2__Impl ;
    public final void rule__OrExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3763:1: ( rule__OrExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3764:2: rule__OrExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__OrExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3770:1: rule__OrExpressionConstraint__Group_1__2__Impl : ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__OrExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3774:1: ( ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:3775:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:3775:1: ( ( rule__OrExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:3776:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:3777:2: ( rule__OrExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:3777:3: rule__OrExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0"
    // InternalEclParser.g:3786:1: rule__AndExpressionConstraint__Group__0 : rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 ;
    public final void rule__AndExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3790:1: ( rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1 )
            // InternalEclParser.g:3791:2: rule__AndExpressionConstraint__Group__0__Impl rule__AndExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3798:1: rule__AndExpressionConstraint__Group__0__Impl : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3802:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEclParser.g:3803:1: ( ruleExclusionExpressionConstraint )
            {
            // InternalEclParser.g:3803:1: ( ruleExclusionExpressionConstraint )
            // InternalEclParser.g:3804:2: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getExclusionExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1"
    // InternalEclParser.g:3813:1: rule__AndExpressionConstraint__Group__1 : rule__AndExpressionConstraint__Group__1__Impl ;
    public final void rule__AndExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3817:1: ( rule__AndExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3818:2: rule__AndExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3824:1: rule__AndExpressionConstraint__Group__1__Impl : ( ( rule__AndExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__AndExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3828:1: ( ( ( rule__AndExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:3829:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:3829:1: ( ( rule__AndExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:3830:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3831:2: ( rule__AndExpressionConstraint__Group_1__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==AND) ) {
                    int LA42_4 = input.LA(2);

                    if ( (synpred72_InternalEclParser()) ) {
                        alt42=1;
                    }


                }
                else if ( (LA42_0==RULE_COMMA) ) {
                    int LA42_5 = input.LA(2);

                    if ( (synpred72_InternalEclParser()) ) {
                        alt42=1;
                    }


                }


                switch (alt42) {
            	case 1 :
            	    // InternalEclParser.g:3831:3: rule__AndExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__AndExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3840:1: rule__AndExpressionConstraint__Group_1__0 : rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 ;
    public final void rule__AndExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3844:1: ( rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3845:2: rule__AndExpressionConstraint__Group_1__0__Impl rule__AndExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3852:1: rule__AndExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__AndExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3856:1: ( ( () ) )
            // InternalEclParser.g:3857:1: ( () )
            {
            // InternalEclParser.g:3857:1: ( () )
            // InternalEclParser.g:3858:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3859:2: ()
            // InternalEclParser.g:3859:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAndExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1"
    // InternalEclParser.g:3867:1: rule__AndExpressionConstraint__Group_1__1 : rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 ;
    public final void rule__AndExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3871:1: ( rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:3872:2: rule__AndExpressionConstraint__Group_1__1__Impl rule__AndExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__AndExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:3879:1: rule__AndExpressionConstraint__Group_1__1__Impl : ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3883:1: ( ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) ) )
            // InternalEclParser.g:3884:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:3884:1: ( ( rule__AndExpressionConstraint__Alternatives_1_1 ) )
            // InternalEclParser.g:3885:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:3886:2: ( rule__AndExpressionConstraint__Alternatives_1_1 )
            // InternalEclParser.g:3886:3: rule__AndExpressionConstraint__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2"
    // InternalEclParser.g:3894:1: rule__AndExpressionConstraint__Group_1__2 : rule__AndExpressionConstraint__Group_1__2__Impl ;
    public final void rule__AndExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3898:1: ( rule__AndExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:3899:2: rule__AndExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__AndExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:3905:1: rule__AndExpressionConstraint__Group_1__2__Impl : ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__AndExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3909:1: ( ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:3910:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:3910:1: ( ( rule__AndExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:3911:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:3912:2: ( rule__AndExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:3912:3: rule__AndExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0"
    // InternalEclParser.g:3921:1: rule__ExclusionExpressionConstraint__Group__0 : rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 ;
    public final void rule__ExclusionExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3925:1: ( rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1 )
            // InternalEclParser.g:3926:2: rule__ExclusionExpressionConstraint__Group__0__Impl rule__ExclusionExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ExclusionExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:3933:1: rule__ExclusionExpressionConstraint__Group__0__Impl : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3937:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEclParser.g:3938:1: ( ruleRefinedExpressionConstraint )
            {
            // InternalEclParser.g:3938:1: ( ruleRefinedExpressionConstraint )
            // InternalEclParser.g:3939:2: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRefinedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1"
    // InternalEclParser.g:3948:1: rule__ExclusionExpressionConstraint__Group__1 : rule__ExclusionExpressionConstraint__Group__1__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3952:1: ( rule__ExclusionExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:3953:2: rule__ExclusionExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:3959:1: rule__ExclusionExpressionConstraint__Group__1__Impl : ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__ExclusionExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3963:1: ( ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? ) )
            // InternalEclParser.g:3964:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            {
            // InternalEclParser.g:3964:1: ( ( rule__ExclusionExpressionConstraint__Group_1__0 )? )
            // InternalEclParser.g:3965:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:3966:2: ( rule__ExclusionExpressionConstraint__Group_1__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==MINUS) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalEclParser.g:3966:3: rule__ExclusionExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ExclusionExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0"
    // InternalEclParser.g:3975:1: rule__ExclusionExpressionConstraint__Group_1__0 : rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3979:1: ( rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:3980:2: rule__ExclusionExpressionConstraint__Group_1__0__Impl rule__ExclusionExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_9);
            rule__ExclusionExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:3987:1: rule__ExclusionExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:3991:1: ( ( () ) )
            // InternalEclParser.g:3992:1: ( () )
            {
            // InternalEclParser.g:3992:1: ( () )
            // InternalEclParser.g:3993:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }
            // InternalEclParser.g:3994:2: ()
            // InternalEclParser.g:3994:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getExclusionExpressionConstraintLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1"
    // InternalEclParser.g:4002:1: rule__ExclusionExpressionConstraint__Group_1__1 : rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4006:1: ( rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:4007:2: rule__ExclusionExpressionConstraint__Group_1__1__Impl rule__ExclusionExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ExclusionExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:4014:1: rule__ExclusionExpressionConstraint__Group_1__1__Impl : ( ruleEXCLUSION ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4018:1: ( ( ruleEXCLUSION ) )
            // InternalEclParser.g:4019:1: ( ruleEXCLUSION )
            {
            // InternalEclParser.g:4019:1: ( ruleEXCLUSION )
            // InternalEclParser.g:4020:2: ruleEXCLUSION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEXCLUSION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getEXCLUSIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2"
    // InternalEclParser.g:4029:1: rule__ExclusionExpressionConstraint__Group_1__2 : rule__ExclusionExpressionConstraint__Group_1__2__Impl ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4033:1: ( rule__ExclusionExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:4034:2: rule__ExclusionExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:4040:1: rule__ExclusionExpressionConstraint__Group_1__2__Impl : ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) ;
    public final void rule__ExclusionExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4044:1: ( ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:4045:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:4045:1: ( ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 ) )
            // InternalEclParser.g:4046:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:4047:2: ( rule__ExclusionExpressionConstraint__RightAssignment_1_2 )
            // InternalEclParser.g:4047:3: rule__ExclusionExpressionConstraint__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ExclusionExpressionConstraint__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0"
    // InternalEclParser.g:4056:1: rule__RefinedExpressionConstraint__Group__0 : rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 ;
    public final void rule__RefinedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4060:1: ( rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1 )
            // InternalEclParser.g:4061:2: rule__RefinedExpressionConstraint__Group__0__Impl rule__RefinedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__RefinedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:4068:1: rule__RefinedExpressionConstraint__Group__0__Impl : ( ruleDottedExpressionConstraint ) ;
    public final void rule__RefinedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4072:1: ( ( ruleDottedExpressionConstraint ) )
            // InternalEclParser.g:4073:1: ( ruleDottedExpressionConstraint )
            {
            // InternalEclParser.g:4073:1: ( ruleDottedExpressionConstraint )
            // InternalEclParser.g:4074:2: ruleDottedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDottedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getDottedExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1"
    // InternalEclParser.g:4083:1: rule__RefinedExpressionConstraint__Group__1 : rule__RefinedExpressionConstraint__Group__1__Impl ;
    public final void rule__RefinedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4087:1: ( rule__RefinedExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:4088:2: rule__RefinedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:4094:1: rule__RefinedExpressionConstraint__Group__1__Impl : ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) ;
    public final void rule__RefinedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4098:1: ( ( ( rule__RefinedExpressionConstraint__Group_1__0 )? ) )
            // InternalEclParser.g:4099:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            {
            // InternalEclParser.g:4099:1: ( ( rule__RefinedExpressionConstraint__Group_1__0 )? )
            // InternalEclParser.g:4100:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4101:2: ( rule__RefinedExpressionConstraint__Group_1__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_COLON) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalEclParser.g:4101:3: rule__RefinedExpressionConstraint__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__RefinedExpressionConstraint__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0"
    // InternalEclParser.g:4110:1: rule__RefinedExpressionConstraint__Group_1__0 : rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 ;
    public final void rule__RefinedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4114:1: ( rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:4115:2: rule__RefinedExpressionConstraint__Group_1__0__Impl rule__RefinedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__RefinedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:4122:1: rule__RefinedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4126:1: ( ( () ) )
            // InternalEclParser.g:4127:1: ( () )
            {
            // InternalEclParser.g:4127:1: ( () )
            // InternalEclParser.g:4128:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEclParser.g:4129:2: ()
            // InternalEclParser.g:4129:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1"
    // InternalEclParser.g:4137:1: rule__RefinedExpressionConstraint__Group_1__1 : rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 ;
    public final void rule__RefinedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4141:1: ( rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:4142:2: rule__RefinedExpressionConstraint__Group_1__1__Impl rule__RefinedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__RefinedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:4149:1: rule__RefinedExpressionConstraint__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4153:1: ( ( RULE_COLON ) )
            // InternalEclParser.g:4154:1: ( RULE_COLON )
            {
            // InternalEclParser.g:4154:1: ( RULE_COLON )
            // InternalEclParser.g:4155:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2"
    // InternalEclParser.g:4164:1: rule__RefinedExpressionConstraint__Group_1__2 : rule__RefinedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__RefinedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4168:1: ( rule__RefinedExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:4169:2: rule__RefinedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__RefinedExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:4175:1: rule__RefinedExpressionConstraint__Group_1__2__Impl : ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) ;
    public final void rule__RefinedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4179:1: ( ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) ) )
            // InternalEclParser.g:4180:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            {
            // InternalEclParser.g:4180:1: ( ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 ) )
            // InternalEclParser.g:4181:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }
            // InternalEclParser.g:4182:2: ( rule__RefinedExpressionConstraint__RefinementAssignment_1_2 )
            // InternalEclParser.g:4182:3: rule__RefinedExpressionConstraint__RefinementAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__RefinedExpressionConstraint__RefinementAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0"
    // InternalEclParser.g:4191:1: rule__DottedExpressionConstraint__Group__0 : rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 ;
    public final void rule__DottedExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4195:1: ( rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1 )
            // InternalEclParser.g:4196:2: rule__DottedExpressionConstraint__Group__0__Impl rule__DottedExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__DottedExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:4203:1: rule__DottedExpressionConstraint__Group__0__Impl : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4207:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:4208:1: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:4208:1: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:4209:2: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getFilteredExpressionConstraintParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1"
    // InternalEclParser.g:4218:1: rule__DottedExpressionConstraint__Group__1 : rule__DottedExpressionConstraint__Group__1__Impl ;
    public final void rule__DottedExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4222:1: ( rule__DottedExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:4223:2: rule__DottedExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:4229:1: rule__DottedExpressionConstraint__Group__1__Impl : ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) ;
    public final void rule__DottedExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4233:1: ( ( ( rule__DottedExpressionConstraint__Group_1__0 )* ) )
            // InternalEclParser.g:4234:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            {
            // InternalEclParser.g:4234:1: ( ( rule__DottedExpressionConstraint__Group_1__0 )* )
            // InternalEclParser.g:4235:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }
            // InternalEclParser.g:4236:2: ( rule__DottedExpressionConstraint__Group_1__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==RULE_DOT) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalEclParser.g:4236:3: rule__DottedExpressionConstraint__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_13);
            	    rule__DottedExpressionConstraint__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0"
    // InternalEclParser.g:4245:1: rule__DottedExpressionConstraint__Group_1__0 : rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 ;
    public final void rule__DottedExpressionConstraint__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4249:1: ( rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1 )
            // InternalEclParser.g:4250:2: rule__DottedExpressionConstraint__Group_1__0__Impl rule__DottedExpressionConstraint__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__DottedExpressionConstraint__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__0__Impl"
    // InternalEclParser.g:4257:1: rule__DottedExpressionConstraint__Group_1__0__Impl : ( () ) ;
    public final void rule__DottedExpressionConstraint__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4261:1: ( ( () ) )
            // InternalEclParser.g:4262:1: ( () )
            {
            // InternalEclParser.g:4262:1: ( () )
            // InternalEclParser.g:4263:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }
            // InternalEclParser.g:4264:2: ()
            // InternalEclParser.g:4264:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDottedExpressionConstraintConstraintAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__0__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1"
    // InternalEclParser.g:4272:1: rule__DottedExpressionConstraint__Group_1__1 : rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 ;
    public final void rule__DottedExpressionConstraint__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4276:1: ( rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2 )
            // InternalEclParser.g:4277:2: rule__DottedExpressionConstraint__Group_1__1__Impl rule__DottedExpressionConstraint__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DottedExpressionConstraint__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__1__Impl"
    // InternalEclParser.g:4284:1: rule__DottedExpressionConstraint__Group_1__1__Impl : ( RULE_DOT ) ;
    public final void rule__DottedExpressionConstraint__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4288:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:4289:1: ( RULE_DOT )
            {
            // InternalEclParser.g:4289:1: ( RULE_DOT )
            // InternalEclParser.g:4290:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getDOTTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__1__Impl"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2"
    // InternalEclParser.g:4299:1: rule__DottedExpressionConstraint__Group_1__2 : rule__DottedExpressionConstraint__Group_1__2__Impl ;
    public final void rule__DottedExpressionConstraint__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4303:1: ( rule__DottedExpressionConstraint__Group_1__2__Impl )
            // InternalEclParser.g:4304:2: rule__DottedExpressionConstraint__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2"


    // $ANTLR start "rule__DottedExpressionConstraint__Group_1__2__Impl"
    // InternalEclParser.g:4310:1: rule__DottedExpressionConstraint__Group_1__2__Impl : ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) ;
    public final void rule__DottedExpressionConstraint__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4314:1: ( ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) ) )
            // InternalEclParser.g:4315:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            {
            // InternalEclParser.g:4315:1: ( ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 ) )
            // InternalEclParser.g:4316:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }
            // InternalEclParser.g:4317:2: ( rule__DottedExpressionConstraint__AttributeAssignment_1_2 )
            // InternalEclParser.g:4317:3: rule__DottedExpressionConstraint__AttributeAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DottedExpressionConstraint__AttributeAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__Group_1__2__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0"
    // InternalEclParser.g:4326:1: rule__FilteredExpressionConstraint__Group__0 : rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 ;
    public final void rule__FilteredExpressionConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4330:1: ( rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1 )
            // InternalEclParser.g:4331:2: rule__FilteredExpressionConstraint__Group__0__Impl rule__FilteredExpressionConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_14);
            rule__FilteredExpressionConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__0__Impl"
    // InternalEclParser.g:4338:1: rule__FilteredExpressionConstraint__Group__0__Impl : ( ( rule__FilteredExpressionConstraint__ExpressionAssignment_0 ) ) ;
    public final void rule__FilteredExpressionConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4342:1: ( ( ( rule__FilteredExpressionConstraint__ExpressionAssignment_0 ) ) )
            // InternalEclParser.g:4343:1: ( ( rule__FilteredExpressionConstraint__ExpressionAssignment_0 ) )
            {
            // InternalEclParser.g:4343:1: ( ( rule__FilteredExpressionConstraint__ExpressionAssignment_0 ) )
            // InternalEclParser.g:4344:2: ( rule__FilteredExpressionConstraint__ExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getExpressionAssignment_0()); 
            }
            // InternalEclParser.g:4345:2: ( rule__FilteredExpressionConstraint__ExpressionAssignment_0 )
            // InternalEclParser.g:4345:3: rule__FilteredExpressionConstraint__ExpressionAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__ExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1"
    // InternalEclParser.g:4353:1: rule__FilteredExpressionConstraint__Group__1 : rule__FilteredExpressionConstraint__Group__1__Impl ;
    public final void rule__FilteredExpressionConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4357:1: ( rule__FilteredExpressionConstraint__Group__1__Impl )
            // InternalEclParser.g:4358:2: rule__FilteredExpressionConstraint__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilteredExpressionConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1"


    // $ANTLR start "rule__FilteredExpressionConstraint__Group__1__Impl"
    // InternalEclParser.g:4364:1: rule__FilteredExpressionConstraint__Group__1__Impl : ( ( rule__FilteredExpressionConstraint__FiltersAssignment_1 )* ) ;
    public final void rule__FilteredExpressionConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4368:1: ( ( ( rule__FilteredExpressionConstraint__FiltersAssignment_1 )* ) )
            // InternalEclParser.g:4369:1: ( ( rule__FilteredExpressionConstraint__FiltersAssignment_1 )* )
            {
            // InternalEclParser.g:4369:1: ( ( rule__FilteredExpressionConstraint__FiltersAssignment_1 )* )
            // InternalEclParser.g:4370:2: ( rule__FilteredExpressionConstraint__FiltersAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFiltersAssignment_1()); 
            }
            // InternalEclParser.g:4371:2: ( rule__FilteredExpressionConstraint__FiltersAssignment_1 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==RULE_DOUBLE_CURLY_OPEN) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalEclParser.g:4371:3: rule__FilteredExpressionConstraint__FiltersAssignment_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_15);
            	    rule__FilteredExpressionConstraint__FiltersAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFiltersAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__Group__1__Impl"


    // $ANTLR start "rule__ChildOf__Group__0"
    // InternalEclParser.g:4380:1: rule__ChildOf__Group__0 : rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 ;
    public final void rule__ChildOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4384:1: ( rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1 )
            // InternalEclParser.g:4385:2: rule__ChildOf__Group__0__Impl rule__ChildOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ChildOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0"


    // $ANTLR start "rule__ChildOf__Group__0__Impl"
    // InternalEclParser.g:4392:1: rule__ChildOf__Group__0__Impl : ( RULE_LT_EM ) ;
    public final void rule__ChildOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4396:1: ( ( RULE_LT_EM ) )
            // InternalEclParser.g:4397:1: ( RULE_LT_EM )
            {
            // InternalEclParser.g:4397:1: ( RULE_LT_EM )
            // InternalEclParser.g:4398:2: RULE_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getLT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOf__Group__1"
    // InternalEclParser.g:4407:1: rule__ChildOf__Group__1 : rule__ChildOf__Group__1__Impl ;
    public final void rule__ChildOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4411:1: ( rule__ChildOf__Group__1__Impl )
            // InternalEclParser.g:4412:2: rule__ChildOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1"


    // $ANTLR start "rule__ChildOf__Group__1__Impl"
    // InternalEclParser.g:4418:1: rule__ChildOf__Group__1__Impl : ( ( rule__ChildOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4422:1: ( ( ( rule__ChildOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4423:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4423:1: ( ( rule__ChildOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4424:2: ( rule__ChildOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4425:2: ( rule__ChildOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4425:3: rule__ChildOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__Group__1__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0"
    // InternalEclParser.g:4434:1: rule__ChildOrSelfOf__Group__0 : rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 ;
    public final void rule__ChildOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4438:1: ( rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1 )
            // InternalEclParser.g:4439:2: rule__ChildOrSelfOf__Group__0__Impl rule__ChildOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ChildOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0"


    // $ANTLR start "rule__ChildOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4446:1: rule__ChildOrSelfOf__Group__0__Impl : ( RULE_DBL_LT_EM ) ;
    public final void rule__ChildOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4450:1: ( ( RULE_DBL_LT_EM ) )
            // InternalEclParser.g:4451:1: ( RULE_DBL_LT_EM )
            {
            // InternalEclParser.g:4451:1: ( RULE_DBL_LT_EM )
            // InternalEclParser.g:4452:2: RULE_DBL_LT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getDBL_LT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1"
    // InternalEclParser.g:4461:1: rule__ChildOrSelfOf__Group__1 : rule__ChildOrSelfOf__Group__1__Impl ;
    public final void rule__ChildOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4465:1: ( rule__ChildOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4466:2: rule__ChildOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1"


    // $ANTLR start "rule__ChildOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4472:1: rule__ChildOrSelfOf__Group__1__Impl : ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ChildOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4476:1: ( ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4477:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4477:1: ( ( rule__ChildOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4478:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4479:2: ( rule__ChildOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4479:3: rule__ChildOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ChildOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOf__Group__0"
    // InternalEclParser.g:4488:1: rule__DescendantOf__Group__0 : rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 ;
    public final void rule__DescendantOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4492:1: ( rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1 )
            // InternalEclParser.g:4493:2: rule__DescendantOf__Group__0__Impl rule__DescendantOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DescendantOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0"


    // $ANTLR start "rule__DescendantOf__Group__0__Impl"
    // InternalEclParser.g:4500:1: rule__DescendantOf__Group__0__Impl : ( RULE_LT ) ;
    public final void rule__DescendantOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4504:1: ( ( RULE_LT ) )
            // InternalEclParser.g:4505:1: ( RULE_LT )
            {
            // InternalEclParser.g:4505:1: ( RULE_LT )
            // InternalEclParser.g:4506:2: RULE_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }
            match(input,RULE_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getLTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOf__Group__1"
    // InternalEclParser.g:4515:1: rule__DescendantOf__Group__1 : rule__DescendantOf__Group__1__Impl ;
    public final void rule__DescendantOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4519:1: ( rule__DescendantOf__Group__1__Impl )
            // InternalEclParser.g:4520:2: rule__DescendantOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1"


    // $ANTLR start "rule__DescendantOf__Group__1__Impl"
    // InternalEclParser.g:4526:1: rule__DescendantOf__Group__1__Impl : ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4530:1: ( ( ( rule__DescendantOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4531:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4531:1: ( ( rule__DescendantOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4532:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4533:2: ( rule__DescendantOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4533:3: rule__DescendantOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__Group__1__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0"
    // InternalEclParser.g:4542:1: rule__DescendantOrSelfOf__Group__0 : rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 ;
    public final void rule__DescendantOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4546:1: ( rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1 )
            // InternalEclParser.g:4547:2: rule__DescendantOrSelfOf__Group__0__Impl rule__DescendantOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__DescendantOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4554:1: rule__DescendantOrSelfOf__Group__0__Impl : ( RULE_DBL_LT ) ;
    public final void rule__DescendantOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4558:1: ( ( RULE_DBL_LT ) )
            // InternalEclParser.g:4559:1: ( RULE_DBL_LT )
            {
            // InternalEclParser.g:4559:1: ( RULE_DBL_LT )
            // InternalEclParser.g:4560:2: RULE_DBL_LT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_LT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getDBL_LTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1"
    // InternalEclParser.g:4569:1: rule__DescendantOrSelfOf__Group__1 : rule__DescendantOrSelfOf__Group__1__Impl ;
    public final void rule__DescendantOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4573:1: ( rule__DescendantOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4574:2: rule__DescendantOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1"


    // $ANTLR start "rule__DescendantOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4580:1: rule__DescendantOrSelfOf__Group__1__Impl : ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__DescendantOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4584:1: ( ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4585:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4585:1: ( ( rule__DescendantOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4586:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4587:2: ( rule__DescendantOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4587:3: rule__DescendantOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DescendantOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOf__Group__0"
    // InternalEclParser.g:4596:1: rule__ParentOf__Group__0 : rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 ;
    public final void rule__ParentOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4600:1: ( rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1 )
            // InternalEclParser.g:4601:2: rule__ParentOf__Group__0__Impl rule__ParentOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ParentOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0"


    // $ANTLR start "rule__ParentOf__Group__0__Impl"
    // InternalEclParser.g:4608:1: rule__ParentOf__Group__0__Impl : ( RULE_GT_EM ) ;
    public final void rule__ParentOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4612:1: ( ( RULE_GT_EM ) )
            // InternalEclParser.g:4613:1: ( RULE_GT_EM )
            {
            // InternalEclParser.g:4613:1: ( RULE_GT_EM )
            // InternalEclParser.g:4614:2: RULE_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getGT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOf__Group__1"
    // InternalEclParser.g:4623:1: rule__ParentOf__Group__1 : rule__ParentOf__Group__1__Impl ;
    public final void rule__ParentOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4627:1: ( rule__ParentOf__Group__1__Impl )
            // InternalEclParser.g:4628:2: rule__ParentOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1"


    // $ANTLR start "rule__ParentOf__Group__1__Impl"
    // InternalEclParser.g:4634:1: rule__ParentOf__Group__1__Impl : ( ( rule__ParentOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4638:1: ( ( ( rule__ParentOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4639:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4639:1: ( ( rule__ParentOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4640:2: ( rule__ParentOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4641:2: ( rule__ParentOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4641:3: rule__ParentOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__Group__1__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0"
    // InternalEclParser.g:4650:1: rule__ParentOrSelfOf__Group__0 : rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 ;
    public final void rule__ParentOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4654:1: ( rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1 )
            // InternalEclParser.g:4655:2: rule__ParentOrSelfOf__Group__0__Impl rule__ParentOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ParentOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0"


    // $ANTLR start "rule__ParentOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4662:1: rule__ParentOrSelfOf__Group__0__Impl : ( RULE_DBL_GT_EM ) ;
    public final void rule__ParentOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4666:1: ( ( RULE_DBL_GT_EM ) )
            // InternalEclParser.g:4667:1: ( RULE_DBL_GT_EM )
            {
            // InternalEclParser.g:4667:1: ( RULE_DBL_GT_EM )
            // InternalEclParser.g:4668:2: RULE_DBL_GT_EM
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT_EM,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getDBL_GT_EMTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1"
    // InternalEclParser.g:4677:1: rule__ParentOrSelfOf__Group__1 : rule__ParentOrSelfOf__Group__1__Impl ;
    public final void rule__ParentOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4681:1: ( rule__ParentOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4682:2: rule__ParentOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1"


    // $ANTLR start "rule__ParentOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4688:1: rule__ParentOrSelfOf__Group__1__Impl : ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__ParentOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4692:1: ( ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4693:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4693:1: ( ( rule__ParentOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4694:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4695:2: ( rule__ParentOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4695:3: rule__ParentOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ParentOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOf__Group__0"
    // InternalEclParser.g:4704:1: rule__AncestorOf__Group__0 : rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 ;
    public final void rule__AncestorOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4708:1: ( rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1 )
            // InternalEclParser.g:4709:2: rule__AncestorOf__Group__0__Impl rule__AncestorOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__AncestorOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0"


    // $ANTLR start "rule__AncestorOf__Group__0__Impl"
    // InternalEclParser.g:4716:1: rule__AncestorOf__Group__0__Impl : ( RULE_GT ) ;
    public final void rule__AncestorOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4720:1: ( ( RULE_GT ) )
            // InternalEclParser.g:4721:1: ( RULE_GT )
            {
            // InternalEclParser.g:4721:1: ( RULE_GT )
            // InternalEclParser.g:4722:2: RULE_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }
            match(input,RULE_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getGTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOf__Group__1"
    // InternalEclParser.g:4731:1: rule__AncestorOf__Group__1 : rule__AncestorOf__Group__1__Impl ;
    public final void rule__AncestorOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4735:1: ( rule__AncestorOf__Group__1__Impl )
            // InternalEclParser.g:4736:2: rule__AncestorOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1"


    // $ANTLR start "rule__AncestorOf__Group__1__Impl"
    // InternalEclParser.g:4742:1: rule__AncestorOf__Group__1__Impl : ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4746:1: ( ( ( rule__AncestorOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4747:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4747:1: ( ( rule__AncestorOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4748:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4749:2: ( rule__AncestorOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4749:3: rule__AncestorOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__Group__1__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0"
    // InternalEclParser.g:4758:1: rule__AncestorOrSelfOf__Group__0 : rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 ;
    public final void rule__AncestorOrSelfOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4762:1: ( rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1 )
            // InternalEclParser.g:4763:2: rule__AncestorOrSelfOf__Group__0__Impl rule__AncestorOrSelfOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__AncestorOrSelfOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__0__Impl"
    // InternalEclParser.g:4770:1: rule__AncestorOrSelfOf__Group__0__Impl : ( RULE_DBL_GT ) ;
    public final void rule__AncestorOrSelfOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4774:1: ( ( RULE_DBL_GT ) )
            // InternalEclParser.g:4775:1: ( RULE_DBL_GT )
            {
            // InternalEclParser.g:4775:1: ( RULE_DBL_GT )
            // InternalEclParser.g:4776:2: RULE_DBL_GT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }
            match(input,RULE_DBL_GT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getDBL_GTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__0__Impl"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1"
    // InternalEclParser.g:4785:1: rule__AncestorOrSelfOf__Group__1 : rule__AncestorOrSelfOf__Group__1__Impl ;
    public final void rule__AncestorOrSelfOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4789:1: ( rule__AncestorOrSelfOf__Group__1__Impl )
            // InternalEclParser.g:4790:2: rule__AncestorOrSelfOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1"


    // $ANTLR start "rule__AncestorOrSelfOf__Group__1__Impl"
    // InternalEclParser.g:4796:1: rule__AncestorOrSelfOf__Group__1__Impl : ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) ;
    public final void rule__AncestorOrSelfOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4800:1: ( ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4801:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4801:1: ( ( rule__AncestorOrSelfOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4802:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4803:2: ( rule__AncestorOrSelfOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4803:3: rule__AncestorOrSelfOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AncestorOrSelfOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__Group__1__Impl"


    // $ANTLR start "rule__MemberOf__Group__0"
    // InternalEclParser.g:4812:1: rule__MemberOf__Group__0 : rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 ;
    public final void rule__MemberOf__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4816:1: ( rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1 )
            // InternalEclParser.g:4817:2: rule__MemberOf__Group__0__Impl rule__MemberOf__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__MemberOf__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0"


    // $ANTLR start "rule__MemberOf__Group__0__Impl"
    // InternalEclParser.g:4824:1: rule__MemberOf__Group__0__Impl : ( RULE_CARET ) ;
    public final void rule__MemberOf__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4828:1: ( ( RULE_CARET ) )
            // InternalEclParser.g:4829:1: ( RULE_CARET )
            {
            // InternalEclParser.g:4829:1: ( RULE_CARET )
            // InternalEclParser.g:4830:2: RULE_CARET
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }
            match(input,RULE_CARET,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getCARETTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__0__Impl"


    // $ANTLR start "rule__MemberOf__Group__1"
    // InternalEclParser.g:4839:1: rule__MemberOf__Group__1 : rule__MemberOf__Group__1__Impl ;
    public final void rule__MemberOf__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4843:1: ( rule__MemberOf__Group__1__Impl )
            // InternalEclParser.g:4844:2: rule__MemberOf__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1"


    // $ANTLR start "rule__MemberOf__Group__1__Impl"
    // InternalEclParser.g:4850:1: rule__MemberOf__Group__1__Impl : ( ( rule__MemberOf__ConstraintAssignment_1 ) ) ;
    public final void rule__MemberOf__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4854:1: ( ( ( rule__MemberOf__ConstraintAssignment_1 ) ) )
            // InternalEclParser.g:4855:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            {
            // InternalEclParser.g:4855:1: ( ( rule__MemberOf__ConstraintAssignment_1 ) )
            // InternalEclParser.g:4856:2: ( rule__MemberOf__ConstraintAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }
            // InternalEclParser.g:4857:2: ( rule__MemberOf__ConstraintAssignment_1 )
            // InternalEclParser.g:4857:3: rule__MemberOf__ConstraintAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__0"
    // InternalEclParser.g:4866:1: rule__EclConceptReference__Group__0 : rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 ;
    public final void rule__EclConceptReference__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4870:1: ( rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1 )
            // InternalEclParser.g:4871:2: rule__EclConceptReference__Group__0__Impl rule__EclConceptReference__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_16);
            rule__EclConceptReference__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0"


    // $ANTLR start "rule__EclConceptReference__Group__0__Impl"
    // InternalEclParser.g:4878:1: rule__EclConceptReference__Group__0__Impl : ( ( rule__EclConceptReference__IdAssignment_0 ) ) ;
    public final void rule__EclConceptReference__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4882:1: ( ( ( rule__EclConceptReference__IdAssignment_0 ) ) )
            // InternalEclParser.g:4883:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            {
            // InternalEclParser.g:4883:1: ( ( rule__EclConceptReference__IdAssignment_0 ) )
            // InternalEclParser.g:4884:2: ( rule__EclConceptReference__IdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }
            // InternalEclParser.g:4885:2: ( rule__EclConceptReference__IdAssignment_0 )
            // InternalEclParser.g:4885:3: rule__EclConceptReference__IdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__IdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReference__Group__1"
    // InternalEclParser.g:4893:1: rule__EclConceptReference__Group__1 : rule__EclConceptReference__Group__1__Impl ;
    public final void rule__EclConceptReference__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4897:1: ( rule__EclConceptReference__Group__1__Impl )
            // InternalEclParser.g:4898:2: rule__EclConceptReference__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReference__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1"


    // $ANTLR start "rule__EclConceptReference__Group__1__Impl"
    // InternalEclParser.g:4904:1: rule__EclConceptReference__Group__1__Impl : ( ( rule__EclConceptReference__TermAssignment_1 )? ) ;
    public final void rule__EclConceptReference__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4908:1: ( ( ( rule__EclConceptReference__TermAssignment_1 )? ) )
            // InternalEclParser.g:4909:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            {
            // InternalEclParser.g:4909:1: ( ( rule__EclConceptReference__TermAssignment_1 )? )
            // InternalEclParser.g:4910:2: ( rule__EclConceptReference__TermAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }
            // InternalEclParser.g:4911:2: ( rule__EclConceptReference__TermAssignment_1 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_TERM_STRING) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalEclParser.g:4911:3: rule__EclConceptReference__TermAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclConceptReference__TermAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0"
    // InternalEclParser.g:4920:1: rule__EclConceptReferenceSet__Group__0 : rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 ;
    public final void rule__EclConceptReferenceSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4924:1: ( rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1 )
            // InternalEclParser.g:4925:2: rule__EclConceptReferenceSet__Group__0__Impl rule__EclConceptReferenceSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__EclConceptReferenceSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__0__Impl"
    // InternalEclParser.g:4932:1: rule__EclConceptReferenceSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__EclConceptReferenceSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4936:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:4937:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:4937:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:4938:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__0__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1"
    // InternalEclParser.g:4947:1: rule__EclConceptReferenceSet__Group__1 : rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 ;
    public final void rule__EclConceptReferenceSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4951:1: ( rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2 )
            // InternalEclParser.g:4952:2: rule__EclConceptReferenceSet__Group__1__Impl rule__EclConceptReferenceSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__EclConceptReferenceSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__1__Impl"
    // InternalEclParser.g:4959:1: rule__EclConceptReferenceSet__Group__1__Impl : ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) ;
    public final void rule__EclConceptReferenceSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4963:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) ) )
            // InternalEclParser.g:4964:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            {
            // InternalEclParser.g:4964:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_1 ) )
            // InternalEclParser.g:4965:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }
            // InternalEclParser.g:4966:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_1 )
            // InternalEclParser.g:4966:3: rule__EclConceptReferenceSet__ConceptsAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__ConceptsAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__1__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2"
    // InternalEclParser.g:4974:1: rule__EclConceptReferenceSet__Group__2 : rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3 ;
    public final void rule__EclConceptReferenceSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4978:1: ( rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3 )
            // InternalEclParser.g:4979:2: rule__EclConceptReferenceSet__Group__2__Impl rule__EclConceptReferenceSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__EclConceptReferenceSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__2__Impl"
    // InternalEclParser.g:4986:1: rule__EclConceptReferenceSet__Group__2__Impl : ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* ) ;
    public final void rule__EclConceptReferenceSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:4990:1: ( ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* ) )
            // InternalEclParser.g:4991:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* )
            {
            // InternalEclParser.g:4991:1: ( ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )* )
            // InternalEclParser.g:4992:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_2()); 
            }
            // InternalEclParser.g:4993:2: ( rule__EclConceptReferenceSet__ConceptsAssignment_2 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==RULE_DIGIT_NONZERO) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalEclParser.g:4993:3: rule__EclConceptReferenceSet__ConceptsAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    rule__EclConceptReferenceSet__ConceptsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__2__Impl"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__3"
    // InternalEclParser.g:5001:1: rule__EclConceptReferenceSet__Group__3 : rule__EclConceptReferenceSet__Group__3__Impl ;
    public final void rule__EclConceptReferenceSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5005:1: ( rule__EclConceptReferenceSet__Group__3__Impl )
            // InternalEclParser.g:5006:2: rule__EclConceptReferenceSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclConceptReferenceSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__3"


    // $ANTLR start "rule__EclConceptReferenceSet__Group__3__Impl"
    // InternalEclParser.g:5012:1: rule__EclConceptReferenceSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__EclConceptReferenceSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5016:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:5017:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:5017:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:5018:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__Group__3__Impl"


    // $ANTLR start "rule__Any__Group__0"
    // InternalEclParser.g:5028:1: rule__Any__Group__0 : rule__Any__Group__0__Impl rule__Any__Group__1 ;
    public final void rule__Any__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5032:1: ( rule__Any__Group__0__Impl rule__Any__Group__1 )
            // InternalEclParser.g:5033:2: rule__Any__Group__0__Impl rule__Any__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_1);
            rule__Any__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0"


    // $ANTLR start "rule__Any__Group__0__Impl"
    // InternalEclParser.g:5040:1: rule__Any__Group__0__Impl : ( RULE_WILDCARD ) ;
    public final void rule__Any__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5044:1: ( ( RULE_WILDCARD ) )
            // InternalEclParser.g:5045:1: ( RULE_WILDCARD )
            {
            // InternalEclParser.g:5045:1: ( RULE_WILDCARD )
            // InternalEclParser.g:5046:2: RULE_WILDCARD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }
            match(input,RULE_WILDCARD,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getWILDCARDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__0__Impl"


    // $ANTLR start "rule__Any__Group__1"
    // InternalEclParser.g:5055:1: rule__Any__Group__1 : rule__Any__Group__1__Impl ;
    public final void rule__Any__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5059:1: ( rule__Any__Group__1__Impl )
            // InternalEclParser.g:5060:2: rule__Any__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Any__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1"


    // $ANTLR start "rule__Any__Group__1__Impl"
    // InternalEclParser.g:5066:1: rule__Any__Group__1__Impl : ( () ) ;
    public final void rule__Any__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5070:1: ( ( () ) )
            // InternalEclParser.g:5071:1: ( () )
            {
            // InternalEclParser.g:5071:1: ( () )
            // InternalEclParser.g:5072:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }
            // InternalEclParser.g:5073:2: ()
            // InternalEclParser.g:5073:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAnyAccess().getAnyAction_1()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Any__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group__0"
    // InternalEclParser.g:5082:1: rule__OrRefinement__Group__0 : rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 ;
    public final void rule__OrRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5086:1: ( rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1 )
            // InternalEclParser.g:5087:2: rule__OrRefinement__Group__0__Impl rule__OrRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0"


    // $ANTLR start "rule__OrRefinement__Group__0__Impl"
    // InternalEclParser.g:5094:1: rule__OrRefinement__Group__0__Impl : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5098:1: ( ( ruleAndRefinement ) )
            // InternalEclParser.g:5099:1: ( ruleAndRefinement )
            {
            // InternalEclParser.g:5099:1: ( ruleAndRefinement )
            // InternalEclParser.g:5100:2: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getAndRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group__1"
    // InternalEclParser.g:5109:1: rule__OrRefinement__Group__1 : rule__OrRefinement__Group__1__Impl ;
    public final void rule__OrRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5113:1: ( rule__OrRefinement__Group__1__Impl )
            // InternalEclParser.g:5114:2: rule__OrRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1"


    // $ANTLR start "rule__OrRefinement__Group__1__Impl"
    // InternalEclParser.g:5120:1: rule__OrRefinement__Group__1__Impl : ( ( rule__OrRefinement__Group_1__0 )* ) ;
    public final void rule__OrRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5124:1: ( ( ( rule__OrRefinement__Group_1__0 )* ) )
            // InternalEclParser.g:5125:1: ( ( rule__OrRefinement__Group_1__0 )* )
            {
            // InternalEclParser.g:5125:1: ( ( rule__OrRefinement__Group_1__0 )* )
            // InternalEclParser.g:5126:2: ( rule__OrRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5127:2: ( rule__OrRefinement__Group_1__0 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==OR) ) {
                    int LA49_5 = input.LA(2);

                    if ( (synpred79_InternalEclParser()) ) {
                        alt49=1;
                    }


                }


                switch (alt49) {
            	case 1 :
            	    // InternalEclParser.g:5127:3: rule__OrRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__OrRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1__0"
    // InternalEclParser.g:5136:1: rule__OrRefinement__Group_1__0 : rule__OrRefinement__Group_1__0__Impl ;
    public final void rule__OrRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5140:1: ( rule__OrRefinement__Group_1__0__Impl )
            // InternalEclParser.g:5141:2: rule__OrRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0"


    // $ANTLR start "rule__OrRefinement__Group_1__0__Impl"
    // InternalEclParser.g:5147:1: rule__OrRefinement__Group_1__0__Impl : ( ( rule__OrRefinement__Group_1_0__0 ) ) ;
    public final void rule__OrRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5151:1: ( ( ( rule__OrRefinement__Group_1_0__0 ) ) )
            // InternalEclParser.g:5152:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            {
            // InternalEclParser.g:5152:1: ( ( rule__OrRefinement__Group_1_0__0 ) )
            // InternalEclParser.g:5153:2: ( rule__OrRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }
            // InternalEclParser.g:5154:2: ( rule__OrRefinement__Group_1_0__0 )
            // InternalEclParser.g:5154:3: rule__OrRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0"
    // InternalEclParser.g:5163:1: rule__OrRefinement__Group_1_0__0 : rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 ;
    public final void rule__OrRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5167:1: ( rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1 )
            // InternalEclParser.g:5168:2: rule__OrRefinement__Group_1_0__0__Impl rule__OrRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0"


    // $ANTLR start "rule__OrRefinement__Group_1_0__0__Impl"
    // InternalEclParser.g:5175:1: rule__OrRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__OrRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5179:1: ( ( () ) )
            // InternalEclParser.g:5180:1: ( () )
            {
            // InternalEclParser.g:5180:1: ( () )
            // InternalEclParser.g:5181:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }
            // InternalEclParser.g:5182:2: ()
            // InternalEclParser.g:5182:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getOrRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1"
    // InternalEclParser.g:5190:1: rule__OrRefinement__Group_1_0__1 : rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 ;
    public final void rule__OrRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5194:1: ( rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2 )
            // InternalEclParser.g:5195:2: rule__OrRefinement__Group_1_0__1__Impl rule__OrRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__OrRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1"


    // $ANTLR start "rule__OrRefinement__Group_1_0__1__Impl"
    // InternalEclParser.g:5202:1: rule__OrRefinement__Group_1_0__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__OrRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5206:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:5207:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:5207:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:5208:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getDISJUNCTIONParserRuleCall_1_0_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getDISJUNCTIONParserRuleCall_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2"
    // InternalEclParser.g:5217:1: rule__OrRefinement__Group_1_0__2 : rule__OrRefinement__Group_1_0__2__Impl ;
    public final void rule__OrRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5221:1: ( rule__OrRefinement__Group_1_0__2__Impl )
            // InternalEclParser.g:5222:2: rule__OrRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2"


    // $ANTLR start "rule__OrRefinement__Group_1_0__2__Impl"
    // InternalEclParser.g:5228:1: rule__OrRefinement__Group_1_0__2__Impl : ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__OrRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5232:1: ( ( ( rule__OrRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEclParser.g:5233:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEclParser.g:5233:1: ( ( rule__OrRefinement__RightAssignment_1_0_2 ) )
            // InternalEclParser.g:5234:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEclParser.g:5235:2: ( rule__OrRefinement__RightAssignment_1_0_2 )
            // InternalEclParser.g:5235:3: rule__OrRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__AndRefinement__Group__0"
    // InternalEclParser.g:5244:1: rule__AndRefinement__Group__0 : rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 ;
    public final void rule__AndRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5248:1: ( rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1 )
            // InternalEclParser.g:5249:2: rule__AndRefinement__Group__0__Impl rule__AndRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0"


    // $ANTLR start "rule__AndRefinement__Group__0__Impl"
    // InternalEclParser.g:5256:1: rule__AndRefinement__Group__0__Impl : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5260:1: ( ( ruleSubRefinement ) )
            // InternalEclParser.g:5261:1: ( ruleSubRefinement )
            {
            // InternalEclParser.g:5261:1: ( ruleSubRefinement )
            // InternalEclParser.g:5262:2: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getSubRefinementParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group__1"
    // InternalEclParser.g:5271:1: rule__AndRefinement__Group__1 : rule__AndRefinement__Group__1__Impl ;
    public final void rule__AndRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5275:1: ( rule__AndRefinement__Group__1__Impl )
            // InternalEclParser.g:5276:2: rule__AndRefinement__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1"


    // $ANTLR start "rule__AndRefinement__Group__1__Impl"
    // InternalEclParser.g:5282:1: rule__AndRefinement__Group__1__Impl : ( ( rule__AndRefinement__Group_1__0 )* ) ;
    public final void rule__AndRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5286:1: ( ( ( rule__AndRefinement__Group_1__0 )* ) )
            // InternalEclParser.g:5287:1: ( ( rule__AndRefinement__Group_1__0 )* )
            {
            // InternalEclParser.g:5287:1: ( ( rule__AndRefinement__Group_1__0 )* )
            // InternalEclParser.g:5288:2: ( rule__AndRefinement__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5289:2: ( rule__AndRefinement__Group_1__0 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==AND) ) {
                    int LA50_4 = input.LA(2);

                    if ( (synpred80_InternalEclParser()) ) {
                        alt50=1;
                    }


                }
                else if ( (LA50_0==RULE_COMMA) ) {
                    int LA50_5 = input.LA(2);

                    if ( (synpred80_InternalEclParser()) ) {
                        alt50=1;
                    }


                }


                switch (alt50) {
            	case 1 :
            	    // InternalEclParser.g:5289:3: rule__AndRefinement__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__AndRefinement__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1__0"
    // InternalEclParser.g:5298:1: rule__AndRefinement__Group_1__0 : rule__AndRefinement__Group_1__0__Impl ;
    public final void rule__AndRefinement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5302:1: ( rule__AndRefinement__Group_1__0__Impl )
            // InternalEclParser.g:5303:2: rule__AndRefinement__Group_1__0__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0"


    // $ANTLR start "rule__AndRefinement__Group_1__0__Impl"
    // InternalEclParser.g:5309:1: rule__AndRefinement__Group_1__0__Impl : ( ( rule__AndRefinement__Group_1_0__0 ) ) ;
    public final void rule__AndRefinement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5313:1: ( ( ( rule__AndRefinement__Group_1_0__0 ) ) )
            // InternalEclParser.g:5314:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            {
            // InternalEclParser.g:5314:1: ( ( rule__AndRefinement__Group_1_0__0 ) )
            // InternalEclParser.g:5315:2: ( rule__AndRefinement__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }
            // InternalEclParser.g:5316:2: ( rule__AndRefinement__Group_1_0__0 )
            // InternalEclParser.g:5316:3: rule__AndRefinement__Group_1_0__0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0"
    // InternalEclParser.g:5325:1: rule__AndRefinement__Group_1_0__0 : rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 ;
    public final void rule__AndRefinement__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5329:1: ( rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1 )
            // InternalEclParser.g:5330:2: rule__AndRefinement__Group_1_0__0__Impl rule__AndRefinement__Group_1_0__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndRefinement__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0"


    // $ANTLR start "rule__AndRefinement__Group_1_0__0__Impl"
    // InternalEclParser.g:5337:1: rule__AndRefinement__Group_1_0__0__Impl : ( () ) ;
    public final void rule__AndRefinement__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5341:1: ( ( () ) )
            // InternalEclParser.g:5342:1: ( () )
            {
            // InternalEclParser.g:5342:1: ( () )
            // InternalEclParser.g:5343:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }
            // InternalEclParser.g:5344:2: ()
            // InternalEclParser.g:5344:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAndRefinementLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__0__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1"
    // InternalEclParser.g:5352:1: rule__AndRefinement__Group_1_0__1 : rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 ;
    public final void rule__AndRefinement__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5356:1: ( rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2 )
            // InternalEclParser.g:5357:2: rule__AndRefinement__Group_1_0__1__Impl rule__AndRefinement__Group_1_0__2
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__AndRefinement__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1"


    // $ANTLR start "rule__AndRefinement__Group_1_0__1__Impl"
    // InternalEclParser.g:5364:1: rule__AndRefinement__Group_1_0__1__Impl : ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) ;
    public final void rule__AndRefinement__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5368:1: ( ( ( rule__AndRefinement__Alternatives_1_0_1 ) ) )
            // InternalEclParser.g:5369:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            {
            // InternalEclParser.g:5369:1: ( ( rule__AndRefinement__Alternatives_1_0_1 ) )
            // InternalEclParser.g:5370:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }
            // InternalEclParser.g:5371:2: ( rule__AndRefinement__Alternatives_1_0_1 )
            // InternalEclParser.g:5371:3: rule__AndRefinement__Alternatives_1_0_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Alternatives_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getAlternatives_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__1__Impl"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2"
    // InternalEclParser.g:5379:1: rule__AndRefinement__Group_1_0__2 : rule__AndRefinement__Group_1_0__2__Impl ;
    public final void rule__AndRefinement__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5383:1: ( rule__AndRefinement__Group_1_0__2__Impl )
            // InternalEclParser.g:5384:2: rule__AndRefinement__Group_1_0__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2"


    // $ANTLR start "rule__AndRefinement__Group_1_0__2__Impl"
    // InternalEclParser.g:5390:1: rule__AndRefinement__Group_1_0__2__Impl : ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) ;
    public final void rule__AndRefinement__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5394:1: ( ( ( rule__AndRefinement__RightAssignment_1_0_2 ) ) )
            // InternalEclParser.g:5395:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            {
            // InternalEclParser.g:5395:1: ( ( rule__AndRefinement__RightAssignment_1_0_2 ) )
            // InternalEclParser.g:5396:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }
            // InternalEclParser.g:5397:2: ( rule__AndRefinement__RightAssignment_1_0_2 )
            // InternalEclParser.g:5397:3: rule__AndRefinement__RightAssignment_1_0_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndRefinement__RightAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__Group_1_0__2__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__0"
    // InternalEclParser.g:5406:1: rule__NestedRefinement__Group__0 : rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 ;
    public final void rule__NestedRefinement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5410:1: ( rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1 )
            // InternalEclParser.g:5411:2: rule__NestedRefinement__Group__0__Impl rule__NestedRefinement__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_11);
            rule__NestedRefinement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0"


    // $ANTLR start "rule__NestedRefinement__Group__0__Impl"
    // InternalEclParser.g:5418:1: rule__NestedRefinement__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedRefinement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5422:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:5423:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:5423:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:5424:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__0__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__1"
    // InternalEclParser.g:5433:1: rule__NestedRefinement__Group__1 : rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 ;
    public final void rule__NestedRefinement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5437:1: ( rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2 )
            // InternalEclParser.g:5438:2: rule__NestedRefinement__Group__1__Impl rule__NestedRefinement__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedRefinement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1"


    // $ANTLR start "rule__NestedRefinement__Group__1__Impl"
    // InternalEclParser.g:5445:1: rule__NestedRefinement__Group__1__Impl : ( ( rule__NestedRefinement__NestedAssignment_1 ) ) ;
    public final void rule__NestedRefinement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5449:1: ( ( ( rule__NestedRefinement__NestedAssignment_1 ) ) )
            // InternalEclParser.g:5450:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:5450:1: ( ( rule__NestedRefinement__NestedAssignment_1 ) )
            // InternalEclParser.g:5451:2: ( rule__NestedRefinement__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:5452:2: ( rule__NestedRefinement__NestedAssignment_1 )
            // InternalEclParser.g:5452:3: rule__NestedRefinement__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__1__Impl"


    // $ANTLR start "rule__NestedRefinement__Group__2"
    // InternalEclParser.g:5460:1: rule__NestedRefinement__Group__2 : rule__NestedRefinement__Group__2__Impl ;
    public final void rule__NestedRefinement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5464:1: ( rule__NestedRefinement__Group__2__Impl )
            // InternalEclParser.g:5465:2: rule__NestedRefinement__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedRefinement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2"


    // $ANTLR start "rule__NestedRefinement__Group__2__Impl"
    // InternalEclParser.g:5471:1: rule__NestedRefinement__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedRefinement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5475:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:5476:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:5476:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:5477:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__0"
    // InternalEclParser.g:5487:1: rule__EclAttributeGroup__Group__0 : rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 ;
    public final void rule__EclAttributeGroup__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5491:1: ( rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1 )
            // InternalEclParser.g:5492:2: rule__EclAttributeGroup__Group__0__Impl rule__EclAttributeGroup__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_21);
            rule__EclAttributeGroup__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0"


    // $ANTLR start "rule__EclAttributeGroup__Group__0__Impl"
    // InternalEclParser.g:5499:1: rule__EclAttributeGroup__Group__0__Impl : ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) ;
    public final void rule__EclAttributeGroup__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5503:1: ( ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? ) )
            // InternalEclParser.g:5504:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            {
            // InternalEclParser.g:5504:1: ( ( rule__EclAttributeGroup__CardinalityAssignment_0 )? )
            // InternalEclParser.g:5505:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }
            // InternalEclParser.g:5506:2: ( rule__EclAttributeGroup__CardinalityAssignment_0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_SQUARE_OPEN) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalEclParser.g:5506:3: rule__EclAttributeGroup__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__EclAttributeGroup__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__0__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__1"
    // InternalEclParser.g:5514:1: rule__EclAttributeGroup__Group__1 : rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 ;
    public final void rule__EclAttributeGroup__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5518:1: ( rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2 )
            // InternalEclParser.g:5519:2: rule__EclAttributeGroup__Group__1__Impl rule__EclAttributeGroup__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__EclAttributeGroup__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1"


    // $ANTLR start "rule__EclAttributeGroup__Group__1__Impl"
    // InternalEclParser.g:5526:1: rule__EclAttributeGroup__Group__1__Impl : ( RULE_CURLY_OPEN ) ;
    public final void rule__EclAttributeGroup__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5530:1: ( ( RULE_CURLY_OPEN ) )
            // InternalEclParser.g:5531:1: ( RULE_CURLY_OPEN )
            {
            // InternalEclParser.g:5531:1: ( RULE_CURLY_OPEN )
            // InternalEclParser.g:5532:2: RULE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__1__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__2"
    // InternalEclParser.g:5541:1: rule__EclAttributeGroup__Group__2 : rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 ;
    public final void rule__EclAttributeGroup__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5545:1: ( rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3 )
            // InternalEclParser.g:5546:2: rule__EclAttributeGroup__Group__2__Impl rule__EclAttributeGroup__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_23);
            rule__EclAttributeGroup__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2"


    // $ANTLR start "rule__EclAttributeGroup__Group__2__Impl"
    // InternalEclParser.g:5553:1: rule__EclAttributeGroup__Group__2__Impl : ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) ;
    public final void rule__EclAttributeGroup__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5557:1: ( ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) ) )
            // InternalEclParser.g:5558:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            {
            // InternalEclParser.g:5558:1: ( ( rule__EclAttributeGroup__RefinementAssignment_2 ) )
            // InternalEclParser.g:5559:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }
            // InternalEclParser.g:5560:2: ( rule__EclAttributeGroup__RefinementAssignment_2 )
            // InternalEclParser.g:5560:3: rule__EclAttributeGroup__RefinementAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__RefinementAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__2__Impl"


    // $ANTLR start "rule__EclAttributeGroup__Group__3"
    // InternalEclParser.g:5568:1: rule__EclAttributeGroup__Group__3 : rule__EclAttributeGroup__Group__3__Impl ;
    public final void rule__EclAttributeGroup__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5572:1: ( rule__EclAttributeGroup__Group__3__Impl )
            // InternalEclParser.g:5573:2: rule__EclAttributeGroup__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__EclAttributeGroup__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3"


    // $ANTLR start "rule__EclAttributeGroup__Group__3__Impl"
    // InternalEclParser.g:5579:1: rule__EclAttributeGroup__Group__3__Impl : ( RULE_CURLY_CLOSE ) ;
    public final void rule__EclAttributeGroup__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5583:1: ( ( RULE_CURLY_CLOSE ) )
            // InternalEclParser.g:5584:1: ( RULE_CURLY_CLOSE )
            {
            // InternalEclParser.g:5584:1: ( RULE_CURLY_CLOSE )
            // InternalEclParser.g:5585:2: RULE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCURLY_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__Group__3__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__0"
    // InternalEclParser.g:5595:1: rule__OrAttributeSet__Group__0 : rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 ;
    public final void rule__OrAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5599:1: ( rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1 )
            // InternalEclParser.g:5600:2: rule__OrAttributeSet__Group__0__Impl rule__OrAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0"


    // $ANTLR start "rule__OrAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5607:1: rule__OrAttributeSet__Group__0__Impl : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5611:1: ( ( ruleAndAttributeSet ) )
            // InternalEclParser.g:5612:1: ( ruleAndAttributeSet )
            {
            // InternalEclParser.g:5612:1: ( ruleAndAttributeSet )
            // InternalEclParser.g:5613:2: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getAndAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group__1"
    // InternalEclParser.g:5622:1: rule__OrAttributeSet__Group__1 : rule__OrAttributeSet__Group__1__Impl ;
    public final void rule__OrAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5626:1: ( rule__OrAttributeSet__Group__1__Impl )
            // InternalEclParser.g:5627:2: rule__OrAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1"


    // $ANTLR start "rule__OrAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5633:1: rule__OrAttributeSet__Group__1__Impl : ( ( rule__OrAttributeSet__Group_1__0 )* ) ;
    public final void rule__OrAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5637:1: ( ( ( rule__OrAttributeSet__Group_1__0 )* ) )
            // InternalEclParser.g:5638:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            {
            // InternalEclParser.g:5638:1: ( ( rule__OrAttributeSet__Group_1__0 )* )
            // InternalEclParser.g:5639:2: ( rule__OrAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5640:2: ( rule__OrAttributeSet__Group_1__0 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==OR) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalEclParser.g:5640:3: rule__OrAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__OrAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0"
    // InternalEclParser.g:5649:1: rule__OrAttributeSet__Group_1__0 : rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 ;
    public final void rule__OrAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5653:1: ( rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1 )
            // InternalEclParser.g:5654:2: rule__OrAttributeSet__Group_1__0__Impl rule__OrAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__OrAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0"


    // $ANTLR start "rule__OrAttributeSet__Group_1__0__Impl"
    // InternalEclParser.g:5661:1: rule__OrAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__OrAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5665:1: ( ( () ) )
            // InternalEclParser.g:5666:1: ( () )
            {
            // InternalEclParser.g:5666:1: ( () )
            // InternalEclParser.g:5667:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }
            // InternalEclParser.g:5668:2: ()
            // InternalEclParser.g:5668:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getOrRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1"
    // InternalEclParser.g:5676:1: rule__OrAttributeSet__Group_1__1 : rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 ;
    public final void rule__OrAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5680:1: ( rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2 )
            // InternalEclParser.g:5681:2: rule__OrAttributeSet__Group_1__1__Impl rule__OrAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__OrAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1"


    // $ANTLR start "rule__OrAttributeSet__Group_1__1__Impl"
    // InternalEclParser.g:5688:1: rule__OrAttributeSet__Group_1__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__OrAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5692:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:5693:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:5693:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:5694:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2"
    // InternalEclParser.g:5703:1: rule__OrAttributeSet__Group_1__2 : rule__OrAttributeSet__Group_1__2__Impl ;
    public final void rule__OrAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5707:1: ( rule__OrAttributeSet__Group_1__2__Impl )
            // InternalEclParser.g:5708:2: rule__OrAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2"


    // $ANTLR start "rule__OrAttributeSet__Group_1__2__Impl"
    // InternalEclParser.g:5714:1: rule__OrAttributeSet__Group_1__2__Impl : ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__OrAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5718:1: ( ( ( rule__OrAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:5719:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:5719:1: ( ( rule__OrAttributeSet__RightAssignment_1_2 ) )
            // InternalEclParser.g:5720:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:5721:2: ( rule__OrAttributeSet__RightAssignment_1_2 )
            // InternalEclParser.g:5721:3: rule__OrAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__OrAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__0"
    // InternalEclParser.g:5730:1: rule__AndAttributeSet__Group__0 : rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 ;
    public final void rule__AndAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5734:1: ( rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1 )
            // InternalEclParser.g:5735:2: rule__AndAttributeSet__Group__0__Impl rule__AndAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0"


    // $ANTLR start "rule__AndAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5742:1: rule__AndAttributeSet__Group__0__Impl : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5746:1: ( ( ruleSubAttributeSet ) )
            // InternalEclParser.g:5747:1: ( ruleSubAttributeSet )
            {
            // InternalEclParser.g:5747:1: ( ruleSubAttributeSet )
            // InternalEclParser.g:5748:2: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getSubAttributeSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group__1"
    // InternalEclParser.g:5757:1: rule__AndAttributeSet__Group__1 : rule__AndAttributeSet__Group__1__Impl ;
    public final void rule__AndAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5761:1: ( rule__AndAttributeSet__Group__1__Impl )
            // InternalEclParser.g:5762:2: rule__AndAttributeSet__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1"


    // $ANTLR start "rule__AndAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5768:1: rule__AndAttributeSet__Group__1__Impl : ( ( rule__AndAttributeSet__Group_1__0 )* ) ;
    public final void rule__AndAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5772:1: ( ( ( rule__AndAttributeSet__Group_1__0 )* ) )
            // InternalEclParser.g:5773:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            {
            // InternalEclParser.g:5773:1: ( ( rule__AndAttributeSet__Group_1__0 )* )
            // InternalEclParser.g:5774:2: ( rule__AndAttributeSet__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }
            // InternalEclParser.g:5775:2: ( rule__AndAttributeSet__Group_1__0 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==AND||LA53_0==RULE_COMMA) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalEclParser.g:5775:3: rule__AndAttributeSet__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__AndAttributeSet__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0"
    // InternalEclParser.g:5784:1: rule__AndAttributeSet__Group_1__0 : rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 ;
    public final void rule__AndAttributeSet__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5788:1: ( rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1 )
            // InternalEclParser.g:5789:2: rule__AndAttributeSet__Group_1__0__Impl rule__AndAttributeSet__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__AndAttributeSet__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0"


    // $ANTLR start "rule__AndAttributeSet__Group_1__0__Impl"
    // InternalEclParser.g:5796:1: rule__AndAttributeSet__Group_1__0__Impl : ( () ) ;
    public final void rule__AndAttributeSet__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5800:1: ( ( () ) )
            // InternalEclParser.g:5801:1: ( () )
            {
            // InternalEclParser.g:5801:1: ( () )
            // InternalEclParser.g:5802:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }
            // InternalEclParser.g:5803:2: ()
            // InternalEclParser.g:5803:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAndRefinementLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__0__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1"
    // InternalEclParser.g:5811:1: rule__AndAttributeSet__Group_1__1 : rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 ;
    public final void rule__AndAttributeSet__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5815:1: ( rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2 )
            // InternalEclParser.g:5816:2: rule__AndAttributeSet__Group_1__1__Impl rule__AndAttributeSet__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AndAttributeSet__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1"


    // $ANTLR start "rule__AndAttributeSet__Group_1__1__Impl"
    // InternalEclParser.g:5823:1: rule__AndAttributeSet__Group_1__1__Impl : ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) ;
    public final void rule__AndAttributeSet__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5827:1: ( ( ( rule__AndAttributeSet__Alternatives_1_1 ) ) )
            // InternalEclParser.g:5828:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:5828:1: ( ( rule__AndAttributeSet__Alternatives_1_1 ) )
            // InternalEclParser.g:5829:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:5830:2: ( rule__AndAttributeSet__Alternatives_1_1 )
            // InternalEclParser.g:5830:3: rule__AndAttributeSet__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__1__Impl"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2"
    // InternalEclParser.g:5838:1: rule__AndAttributeSet__Group_1__2 : rule__AndAttributeSet__Group_1__2__Impl ;
    public final void rule__AndAttributeSet__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5842:1: ( rule__AndAttributeSet__Group_1__2__Impl )
            // InternalEclParser.g:5843:2: rule__AndAttributeSet__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2"


    // $ANTLR start "rule__AndAttributeSet__Group_1__2__Impl"
    // InternalEclParser.g:5849:1: rule__AndAttributeSet__Group_1__2__Impl : ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) ;
    public final void rule__AndAttributeSet__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5853:1: ( ( ( rule__AndAttributeSet__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:5854:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:5854:1: ( ( rule__AndAttributeSet__RightAssignment_1_2 ) )
            // InternalEclParser.g:5855:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:5856:2: ( rule__AndAttributeSet__RightAssignment_1_2 )
            // InternalEclParser.g:5856:3: rule__AndAttributeSet__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AndAttributeSet__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__Group_1__2__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__0"
    // InternalEclParser.g:5865:1: rule__NestedAttributeSet__Group__0 : rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 ;
    public final void rule__NestedAttributeSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5869:1: ( rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1 )
            // InternalEclParser.g:5870:2: rule__NestedAttributeSet__Group__0__Impl rule__NestedAttributeSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__NestedAttributeSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0"


    // $ANTLR start "rule__NestedAttributeSet__Group__0__Impl"
    // InternalEclParser.g:5877:1: rule__NestedAttributeSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedAttributeSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5881:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:5882:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:5882:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:5883:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__0__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__1"
    // InternalEclParser.g:5892:1: rule__NestedAttributeSet__Group__1 : rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 ;
    public final void rule__NestedAttributeSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5896:1: ( rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2 )
            // InternalEclParser.g:5897:2: rule__NestedAttributeSet__Group__1__Impl rule__NestedAttributeSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedAttributeSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1"


    // $ANTLR start "rule__NestedAttributeSet__Group__1__Impl"
    // InternalEclParser.g:5904:1: rule__NestedAttributeSet__Group__1__Impl : ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) ;
    public final void rule__NestedAttributeSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5908:1: ( ( ( rule__NestedAttributeSet__NestedAssignment_1 ) ) )
            // InternalEclParser.g:5909:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:5909:1: ( ( rule__NestedAttributeSet__NestedAssignment_1 ) )
            // InternalEclParser.g:5910:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:5911:2: ( rule__NestedAttributeSet__NestedAssignment_1 )
            // InternalEclParser.g:5911:3: rule__NestedAttributeSet__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__1__Impl"


    // $ANTLR start "rule__NestedAttributeSet__Group__2"
    // InternalEclParser.g:5919:1: rule__NestedAttributeSet__Group__2 : rule__NestedAttributeSet__Group__2__Impl ;
    public final void rule__NestedAttributeSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5923:1: ( rule__NestedAttributeSet__Group__2__Impl )
            // InternalEclParser.g:5924:2: rule__NestedAttributeSet__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedAttributeSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2"


    // $ANTLR start "rule__NestedAttributeSet__Group__2__Impl"
    // InternalEclParser.g:5930:1: rule__NestedAttributeSet__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedAttributeSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5934:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:5935:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:5935:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:5936:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__0"
    // InternalEclParser.g:5946:1: rule__AttributeConstraint__Group__0 : rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 ;
    public final void rule__AttributeConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5950:1: ( rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1 )
            // InternalEclParser.g:5951:2: rule__AttributeConstraint__Group__0__Impl rule__AttributeConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AttributeConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0"


    // $ANTLR start "rule__AttributeConstraint__Group__0__Impl"
    // InternalEclParser.g:5958:1: rule__AttributeConstraint__Group__0__Impl : ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) ;
    public final void rule__AttributeConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5962:1: ( ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? ) )
            // InternalEclParser.g:5963:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            {
            // InternalEclParser.g:5963:1: ( ( rule__AttributeConstraint__CardinalityAssignment_0 )? )
            // InternalEclParser.g:5964:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }
            // InternalEclParser.g:5965:2: ( rule__AttributeConstraint__CardinalityAssignment_0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_SQUARE_OPEN) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalEclParser.g:5965:3: rule__AttributeConstraint__CardinalityAssignment_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__CardinalityAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__0__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__1"
    // InternalEclParser.g:5973:1: rule__AttributeConstraint__Group__1 : rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 ;
    public final void rule__AttributeConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5977:1: ( rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2 )
            // InternalEclParser.g:5978:2: rule__AttributeConstraint__Group__1__Impl rule__AttributeConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_22);
            rule__AttributeConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1"


    // $ANTLR start "rule__AttributeConstraint__Group__1__Impl"
    // InternalEclParser.g:5985:1: rule__AttributeConstraint__Group__1__Impl : ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) ;
    public final void rule__AttributeConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:5989:1: ( ( ( rule__AttributeConstraint__ReversedAssignment_1 )? ) )
            // InternalEclParser.g:5990:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            {
            // InternalEclParser.g:5990:1: ( ( rule__AttributeConstraint__ReversedAssignment_1 )? )
            // InternalEclParser.g:5991:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }
            // InternalEclParser.g:5992:2: ( rule__AttributeConstraint__ReversedAssignment_1 )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_REVERSED) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalEclParser.g:5992:3: rule__AttributeConstraint__ReversedAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__AttributeConstraint__ReversedAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__1__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__2"
    // InternalEclParser.g:6000:1: rule__AttributeConstraint__Group__2 : rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 ;
    public final void rule__AttributeConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6004:1: ( rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3 )
            // InternalEclParser.g:6005:2: rule__AttributeConstraint__Group__2__Impl rule__AttributeConstraint__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_24);
            rule__AttributeConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2"


    // $ANTLR start "rule__AttributeConstraint__Group__2__Impl"
    // InternalEclParser.g:6012:1: rule__AttributeConstraint__Group__2__Impl : ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) ;
    public final void rule__AttributeConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6016:1: ( ( ( rule__AttributeConstraint__AttributeAssignment_2 ) ) )
            // InternalEclParser.g:6017:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            {
            // InternalEclParser.g:6017:1: ( ( rule__AttributeConstraint__AttributeAssignment_2 ) )
            // InternalEclParser.g:6018:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }
            // InternalEclParser.g:6019:2: ( rule__AttributeConstraint__AttributeAssignment_2 )
            // InternalEclParser.g:6019:3: rule__AttributeConstraint__AttributeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__AttributeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__2__Impl"


    // $ANTLR start "rule__AttributeConstraint__Group__3"
    // InternalEclParser.g:6027:1: rule__AttributeConstraint__Group__3 : rule__AttributeConstraint__Group__3__Impl ;
    public final void rule__AttributeConstraint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6031:1: ( rule__AttributeConstraint__Group__3__Impl )
            // InternalEclParser.g:6032:2: rule__AttributeConstraint__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3"


    // $ANTLR start "rule__AttributeConstraint__Group__3__Impl"
    // InternalEclParser.g:6038:1: rule__AttributeConstraint__Group__3__Impl : ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) ) ;
    public final void rule__AttributeConstraint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6042:1: ( ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) ) )
            // InternalEclParser.g:6043:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) )
            {
            // InternalEclParser.g:6043:1: ( ( rule__AttributeConstraint__ComparisonAssignment_3 ) )
            // InternalEclParser.g:6044:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }
            // InternalEclParser.g:6045:2: ( rule__AttributeConstraint__ComparisonAssignment_3 )
            // InternalEclParser.g:6045:3: rule__AttributeConstraint__ComparisonAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeConstraint__ComparisonAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__0"
    // InternalEclParser.g:6054:1: rule__Cardinality__Group__0 : rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 ;
    public final void rule__Cardinality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6058:1: ( rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1 )
            // InternalEclParser.g:6059:2: rule__Cardinality__Group__0__Impl rule__Cardinality__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__Cardinality__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0"


    // $ANTLR start "rule__Cardinality__Group__0__Impl"
    // InternalEclParser.g:6066:1: rule__Cardinality__Group__0__Impl : ( RULE_SQUARE_OPEN ) ;
    public final void rule__Cardinality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6070:1: ( ( RULE_SQUARE_OPEN ) )
            // InternalEclParser.g:6071:1: ( RULE_SQUARE_OPEN )
            {
            // InternalEclParser.g:6071:1: ( RULE_SQUARE_OPEN )
            // InternalEclParser.g:6072:2: RULE_SQUARE_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_SQUARE_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__0__Impl"


    // $ANTLR start "rule__Cardinality__Group__1"
    // InternalEclParser.g:6081:1: rule__Cardinality__Group__1 : rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 ;
    public final void rule__Cardinality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6085:1: ( rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2 )
            // InternalEclParser.g:6086:2: rule__Cardinality__Group__1__Impl rule__Cardinality__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_26);
            rule__Cardinality__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1"


    // $ANTLR start "rule__Cardinality__Group__1__Impl"
    // InternalEclParser.g:6093:1: rule__Cardinality__Group__1__Impl : ( ( rule__Cardinality__MinAssignment_1 ) ) ;
    public final void rule__Cardinality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6097:1: ( ( ( rule__Cardinality__MinAssignment_1 ) ) )
            // InternalEclParser.g:6098:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            {
            // InternalEclParser.g:6098:1: ( ( rule__Cardinality__MinAssignment_1 ) )
            // InternalEclParser.g:6099:2: ( rule__Cardinality__MinAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }
            // InternalEclParser.g:6100:2: ( rule__Cardinality__MinAssignment_1 )
            // InternalEclParser.g:6100:3: rule__Cardinality__MinAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MinAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__1__Impl"


    // $ANTLR start "rule__Cardinality__Group__2"
    // InternalEclParser.g:6108:1: rule__Cardinality__Group__2 : rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 ;
    public final void rule__Cardinality__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6112:1: ( rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3 )
            // InternalEclParser.g:6113:2: rule__Cardinality__Group__2__Impl rule__Cardinality__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_27);
            rule__Cardinality__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2"


    // $ANTLR start "rule__Cardinality__Group__2__Impl"
    // InternalEclParser.g:6120:1: rule__Cardinality__Group__2__Impl : ( RULE_TO ) ;
    public final void rule__Cardinality__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6124:1: ( ( RULE_TO ) )
            // InternalEclParser.g:6125:1: ( RULE_TO )
            {
            // InternalEclParser.g:6125:1: ( RULE_TO )
            // InternalEclParser.g:6126:2: RULE_TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }
            match(input,RULE_TO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getTOTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__2__Impl"


    // $ANTLR start "rule__Cardinality__Group__3"
    // InternalEclParser.g:6135:1: rule__Cardinality__Group__3 : rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 ;
    public final void rule__Cardinality__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6139:1: ( rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4 )
            // InternalEclParser.g:6140:2: rule__Cardinality__Group__3__Impl rule__Cardinality__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_28);
            rule__Cardinality__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3"


    // $ANTLR start "rule__Cardinality__Group__3__Impl"
    // InternalEclParser.g:6147:1: rule__Cardinality__Group__3__Impl : ( ( rule__Cardinality__MaxAssignment_3 ) ) ;
    public final void rule__Cardinality__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6151:1: ( ( ( rule__Cardinality__MaxAssignment_3 ) ) )
            // InternalEclParser.g:6152:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            {
            // InternalEclParser.g:6152:1: ( ( rule__Cardinality__MaxAssignment_3 ) )
            // InternalEclParser.g:6153:2: ( rule__Cardinality__MaxAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }
            // InternalEclParser.g:6154:2: ( rule__Cardinality__MaxAssignment_3 )
            // InternalEclParser.g:6154:3: rule__Cardinality__MaxAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__MaxAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__3__Impl"


    // $ANTLR start "rule__Cardinality__Group__4"
    // InternalEclParser.g:6162:1: rule__Cardinality__Group__4 : rule__Cardinality__Group__4__Impl ;
    public final void rule__Cardinality__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6166:1: ( rule__Cardinality__Group__4__Impl )
            // InternalEclParser.g:6167:2: rule__Cardinality__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Cardinality__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4"


    // $ANTLR start "rule__Cardinality__Group__4__Impl"
    // InternalEclParser.g:6173:1: rule__Cardinality__Group__4__Impl : ( RULE_SQUARE_CLOSE ) ;
    public final void rule__Cardinality__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6177:1: ( ( RULE_SQUARE_CLOSE ) )
            // InternalEclParser.g:6178:1: ( RULE_SQUARE_CLOSE )
            {
            // InternalEclParser.g:6178:1: ( RULE_SQUARE_CLOSE )
            // InternalEclParser.g:6179:2: RULE_SQUARE_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_SQUARE_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getSQUARE_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__Group__4__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__0"
    // InternalEclParser.g:6189:1: rule__AttributeComparison__Group__0 : rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 ;
    public final void rule__AttributeComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6193:1: ( rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1 )
            // InternalEclParser.g:6194:2: rule__AttributeComparison__Group__0__Impl rule__AttributeComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__AttributeComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0"


    // $ANTLR start "rule__AttributeComparison__Group__0__Impl"
    // InternalEclParser.g:6201:1: rule__AttributeComparison__Group__0__Impl : ( ( rule__AttributeComparison__OpAssignment_0 ) ) ;
    public final void rule__AttributeComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6205:1: ( ( ( rule__AttributeComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6206:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6206:1: ( ( rule__AttributeComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6207:2: ( rule__AttributeComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6208:2: ( rule__AttributeComparison__OpAssignment_0 )
            // InternalEclParser.g:6208:3: rule__AttributeComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__0__Impl"


    // $ANTLR start "rule__AttributeComparison__Group__1"
    // InternalEclParser.g:6216:1: rule__AttributeComparison__Group__1 : rule__AttributeComparison__Group__1__Impl ;
    public final void rule__AttributeComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6220:1: ( rule__AttributeComparison__Group__1__Impl )
            // InternalEclParser.g:6221:2: rule__AttributeComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1"


    // $ANTLR start "rule__AttributeComparison__Group__1__Impl"
    // InternalEclParser.g:6227:1: rule__AttributeComparison__Group__1__Impl : ( ( rule__AttributeComparison__ValueAssignment_1 ) ) ;
    public final void rule__AttributeComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6231:1: ( ( ( rule__AttributeComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:6232:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:6232:1: ( ( rule__AttributeComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:6233:2: ( rule__AttributeComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:6234:2: ( rule__AttributeComparison__ValueAssignment_1 )
            // InternalEclParser.g:6234:3: rule__AttributeComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AttributeComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__Group__1__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__0"
    // InternalEclParser.g:6243:1: rule__BooleanValueComparison__Group__0 : rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 ;
    public final void rule__BooleanValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6247:1: ( rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1 )
            // InternalEclParser.g:6248:2: rule__BooleanValueComparison__Group__0__Impl rule__BooleanValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__BooleanValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0"


    // $ANTLR start "rule__BooleanValueComparison__Group__0__Impl"
    // InternalEclParser.g:6255:1: rule__BooleanValueComparison__Group__0__Impl : ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) ;
    public final void rule__BooleanValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6259:1: ( ( ( rule__BooleanValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6260:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6260:1: ( ( rule__BooleanValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6261:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6262:2: ( rule__BooleanValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6262:3: rule__BooleanValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__0__Impl"


    // $ANTLR start "rule__BooleanValueComparison__Group__1"
    // InternalEclParser.g:6270:1: rule__BooleanValueComparison__Group__1 : rule__BooleanValueComparison__Group__1__Impl ;
    public final void rule__BooleanValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6274:1: ( rule__BooleanValueComparison__Group__1__Impl )
            // InternalEclParser.g:6275:2: rule__BooleanValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1"


    // $ANTLR start "rule__BooleanValueComparison__Group__1__Impl"
    // InternalEclParser.g:6281:1: rule__BooleanValueComparison__Group__1__Impl : ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__BooleanValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6285:1: ( ( ( rule__BooleanValueComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:6286:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:6286:1: ( ( rule__BooleanValueComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:6287:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:6288:2: ( rule__BooleanValueComparison__ValueAssignment_1 )
            // InternalEclParser.g:6288:3: rule__BooleanValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__BooleanValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__Group__1__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__0"
    // InternalEclParser.g:6297:1: rule__StringValueComparison__Group__0 : rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 ;
    public final void rule__StringValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6301:1: ( rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1 )
            // InternalEclParser.g:6302:2: rule__StringValueComparison__Group__0__Impl rule__StringValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_30);
            rule__StringValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0"


    // $ANTLR start "rule__StringValueComparison__Group__0__Impl"
    // InternalEclParser.g:6309:1: rule__StringValueComparison__Group__0__Impl : ( ( rule__StringValueComparison__OpAssignment_0 ) ) ;
    public final void rule__StringValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6313:1: ( ( ( rule__StringValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6314:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6314:1: ( ( rule__StringValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6315:2: ( rule__StringValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6316:2: ( rule__StringValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6316:3: rule__StringValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__0__Impl"


    // $ANTLR start "rule__StringValueComparison__Group__1"
    // InternalEclParser.g:6324:1: rule__StringValueComparison__Group__1 : rule__StringValueComparison__Group__1__Impl ;
    public final void rule__StringValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6328:1: ( rule__StringValueComparison__Group__1__Impl )
            // InternalEclParser.g:6329:2: rule__StringValueComparison__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1"


    // $ANTLR start "rule__StringValueComparison__Group__1__Impl"
    // InternalEclParser.g:6335:1: rule__StringValueComparison__Group__1__Impl : ( ( rule__StringValueComparison__ValueAssignment_1 ) ) ;
    public final void rule__StringValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6339:1: ( ( ( rule__StringValueComparison__ValueAssignment_1 ) ) )
            // InternalEclParser.g:6340:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            {
            // InternalEclParser.g:6340:1: ( ( rule__StringValueComparison__ValueAssignment_1 ) )
            // InternalEclParser.g:6341:2: ( rule__StringValueComparison__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }
            // InternalEclParser.g:6342:2: ( rule__StringValueComparison__ValueAssignment_1 )
            // InternalEclParser.g:6342:3: rule__StringValueComparison__ValueAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__StringValueComparison__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__0"
    // InternalEclParser.g:6351:1: rule__IntegerValueComparison__Group__0 : rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 ;
    public final void rule__IntegerValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6355:1: ( rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1 )
            // InternalEclParser.g:6356:2: rule__IntegerValueComparison__Group__0__Impl rule__IntegerValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__IntegerValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0"


    // $ANTLR start "rule__IntegerValueComparison__Group__0__Impl"
    // InternalEclParser.g:6363:1: rule__IntegerValueComparison__Group__0__Impl : ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) ;
    public final void rule__IntegerValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6367:1: ( ( ( rule__IntegerValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6368:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6368:1: ( ( rule__IntegerValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6369:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6370:2: ( rule__IntegerValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6370:3: rule__IntegerValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__0__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__1"
    // InternalEclParser.g:6378:1: rule__IntegerValueComparison__Group__1 : rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 ;
    public final void rule__IntegerValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6382:1: ( rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2 )
            // InternalEclParser.g:6383:2: rule__IntegerValueComparison__Group__1__Impl rule__IntegerValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__IntegerValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1"


    // $ANTLR start "rule__IntegerValueComparison__Group__1__Impl"
    // InternalEclParser.g:6390:1: rule__IntegerValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__IntegerValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6394:1: ( ( RULE_HASH ) )
            // InternalEclParser.g:6395:1: ( RULE_HASH )
            {
            // InternalEclParser.g:6395:1: ( RULE_HASH )
            // InternalEclParser.g:6396:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__1__Impl"


    // $ANTLR start "rule__IntegerValueComparison__Group__2"
    // InternalEclParser.g:6405:1: rule__IntegerValueComparison__Group__2 : rule__IntegerValueComparison__Group__2__Impl ;
    public final void rule__IntegerValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6409:1: ( rule__IntegerValueComparison__Group__2__Impl )
            // InternalEclParser.g:6410:2: rule__IntegerValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2"


    // $ANTLR start "rule__IntegerValueComparison__Group__2__Impl"
    // InternalEclParser.g:6416:1: rule__IntegerValueComparison__Group__2__Impl : ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__IntegerValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6420:1: ( ( ( rule__IntegerValueComparison__ValueAssignment_2 ) ) )
            // InternalEclParser.g:6421:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            {
            // InternalEclParser.g:6421:1: ( ( rule__IntegerValueComparison__ValueAssignment_2 ) )
            // InternalEclParser.g:6422:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEclParser.g:6423:2: ( rule__IntegerValueComparison__ValueAssignment_2 )
            // InternalEclParser.g:6423:3: rule__IntegerValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__IntegerValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__Group__2__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__0"
    // InternalEclParser.g:6432:1: rule__DecimalValueComparison__Group__0 : rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 ;
    public final void rule__DecimalValueComparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6436:1: ( rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1 )
            // InternalEclParser.g:6437:2: rule__DecimalValueComparison__Group__0__Impl rule__DecimalValueComparison__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_31);
            rule__DecimalValueComparison__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0"


    // $ANTLR start "rule__DecimalValueComparison__Group__0__Impl"
    // InternalEclParser.g:6444:1: rule__DecimalValueComparison__Group__0__Impl : ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) ;
    public final void rule__DecimalValueComparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6448:1: ( ( ( rule__DecimalValueComparison__OpAssignment_0 ) ) )
            // InternalEclParser.g:6449:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            {
            // InternalEclParser.g:6449:1: ( ( rule__DecimalValueComparison__OpAssignment_0 ) )
            // InternalEclParser.g:6450:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:6451:2: ( rule__DecimalValueComparison__OpAssignment_0 )
            // InternalEclParser.g:6451:3: rule__DecimalValueComparison__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__0__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__1"
    // InternalEclParser.g:6459:1: rule__DecimalValueComparison__Group__1 : rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 ;
    public final void rule__DecimalValueComparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6463:1: ( rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2 )
            // InternalEclParser.g:6464:2: rule__DecimalValueComparison__Group__1__Impl rule__DecimalValueComparison__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__DecimalValueComparison__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1"


    // $ANTLR start "rule__DecimalValueComparison__Group__1__Impl"
    // InternalEclParser.g:6471:1: rule__DecimalValueComparison__Group__1__Impl : ( RULE_HASH ) ;
    public final void rule__DecimalValueComparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6475:1: ( ( RULE_HASH ) )
            // InternalEclParser.g:6476:1: ( RULE_HASH )
            {
            // InternalEclParser.g:6476:1: ( RULE_HASH )
            // InternalEclParser.g:6477:2: RULE_HASH
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }
            match(input,RULE_HASH,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getHASHTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__1__Impl"


    // $ANTLR start "rule__DecimalValueComparison__Group__2"
    // InternalEclParser.g:6486:1: rule__DecimalValueComparison__Group__2 : rule__DecimalValueComparison__Group__2__Impl ;
    public final void rule__DecimalValueComparison__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6490:1: ( rule__DecimalValueComparison__Group__2__Impl )
            // InternalEclParser.g:6491:2: rule__DecimalValueComparison__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2"


    // $ANTLR start "rule__DecimalValueComparison__Group__2__Impl"
    // InternalEclParser.g:6497:1: rule__DecimalValueComparison__Group__2__Impl : ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) ;
    public final void rule__DecimalValueComparison__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6501:1: ( ( ( rule__DecimalValueComparison__ValueAssignment_2 ) ) )
            // InternalEclParser.g:6502:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            {
            // InternalEclParser.g:6502:1: ( ( rule__DecimalValueComparison__ValueAssignment_2 ) )
            // InternalEclParser.g:6503:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }
            // InternalEclParser.g:6504:2: ( rule__DecimalValueComparison__ValueAssignment_2 )
            // InternalEclParser.g:6504:3: rule__DecimalValueComparison__ValueAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DecimalValueComparison__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__Group__2__Impl"


    // $ANTLR start "rule__NestedExpression__Group__0"
    // InternalEclParser.g:6513:1: rule__NestedExpression__Group__0 : rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 ;
    public final void rule__NestedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6517:1: ( rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1 )
            // InternalEclParser.g:6518:2: rule__NestedExpression__Group__0__Impl rule__NestedExpression__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__NestedExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0"


    // $ANTLR start "rule__NestedExpression__Group__0__Impl"
    // InternalEclParser.g:6525:1: rule__NestedExpression__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6529:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:6530:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:6530:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:6531:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__0__Impl"


    // $ANTLR start "rule__NestedExpression__Group__1"
    // InternalEclParser.g:6540:1: rule__NestedExpression__Group__1 : rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 ;
    public final void rule__NestedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6544:1: ( rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2 )
            // InternalEclParser.g:6545:2: rule__NestedExpression__Group__1__Impl rule__NestedExpression__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1"


    // $ANTLR start "rule__NestedExpression__Group__1__Impl"
    // InternalEclParser.g:6552:1: rule__NestedExpression__Group__1__Impl : ( ( rule__NestedExpression__NestedAssignment_1 ) ) ;
    public final void rule__NestedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6556:1: ( ( ( rule__NestedExpression__NestedAssignment_1 ) ) )
            // InternalEclParser.g:6557:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:6557:1: ( ( rule__NestedExpression__NestedAssignment_1 ) )
            // InternalEclParser.g:6558:2: ( rule__NestedExpression__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:6559:2: ( rule__NestedExpression__NestedAssignment_1 )
            // InternalEclParser.g:6559:3: rule__NestedExpression__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__1__Impl"


    // $ANTLR start "rule__NestedExpression__Group__2"
    // InternalEclParser.g:6567:1: rule__NestedExpression__Group__2 : rule__NestedExpression__Group__2__Impl ;
    public final void rule__NestedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6571:1: ( rule__NestedExpression__Group__2__Impl )
            // InternalEclParser.g:6572:2: rule__NestedExpression__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2"


    // $ANTLR start "rule__NestedExpression__Group__2__Impl"
    // InternalEclParser.g:6578:1: rule__NestedExpression__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6582:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:6583:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:6583:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:6584:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__Group__2__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__0"
    // InternalEclParser.g:6594:1: rule__FilterConstraint__Group__0 : rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 ;
    public final void rule__FilterConstraint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6598:1: ( rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1 )
            // InternalEclParser.g:6599:2: rule__FilterConstraint__Group__0__Impl rule__FilterConstraint__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__FilterConstraint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0"


    // $ANTLR start "rule__FilterConstraint__Group__0__Impl"
    // InternalEclParser.g:6606:1: rule__FilterConstraint__Group__0__Impl : ( RULE_DOUBLE_CURLY_OPEN ) ;
    public final void rule__FilterConstraint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6610:1: ( ( RULE_DOUBLE_CURLY_OPEN ) )
            // InternalEclParser.g:6611:1: ( RULE_DOUBLE_CURLY_OPEN )
            {
            // InternalEclParser.g:6611:1: ( RULE_DOUBLE_CURLY_OPEN )
            // InternalEclParser.g:6612:2: RULE_DOUBLE_CURLY_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_DOUBLE_CURLY_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__0__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__1"
    // InternalEclParser.g:6621:1: rule__FilterConstraint__Group__1 : rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 ;
    public final void rule__FilterConstraint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6625:1: ( rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2 )
            // InternalEclParser.g:6626:2: rule__FilterConstraint__Group__1__Impl rule__FilterConstraint__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_34);
            rule__FilterConstraint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1"


    // $ANTLR start "rule__FilterConstraint__Group__1__Impl"
    // InternalEclParser.g:6633:1: rule__FilterConstraint__Group__1__Impl : ( ruleFilter ) ;
    public final void rule__FilterConstraint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6637:1: ( ( ruleFilter ) )
            // InternalEclParser.g:6638:1: ( ruleFilter )
            {
            // InternalEclParser.g:6638:1: ( ruleFilter )
            // InternalEclParser.g:6639:2: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getFilterParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__1__Impl"


    // $ANTLR start "rule__FilterConstraint__Group__2"
    // InternalEclParser.g:6648:1: rule__FilterConstraint__Group__2 : rule__FilterConstraint__Group__2__Impl ;
    public final void rule__FilterConstraint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6652:1: ( rule__FilterConstraint__Group__2__Impl )
            // InternalEclParser.g:6653:2: rule__FilterConstraint__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__FilterConstraint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2"


    // $ANTLR start "rule__FilterConstraint__Group__2__Impl"
    // InternalEclParser.g:6659:1: rule__FilterConstraint__Group__2__Impl : ( RULE_DOUBLE_CURLY_CLOSE ) ;
    public final void rule__FilterConstraint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6663:1: ( ( RULE_DOUBLE_CURLY_CLOSE ) )
            // InternalEclParser.g:6664:1: ( RULE_DOUBLE_CURLY_CLOSE )
            {
            // InternalEclParser.g:6664:1: ( RULE_DOUBLE_CURLY_CLOSE )
            // InternalEclParser.g:6665:2: RULE_DOUBLE_CURLY_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_DOUBLE_CURLY_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilterConstraintAccess().getDOUBLE_CURLY_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilterConstraint__Group__2__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__0"
    // InternalEclParser.g:6675:1: rule__DisjunctionFilter__Group__0 : rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 ;
    public final void rule__DisjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6679:1: ( rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1 )
            // InternalEclParser.g:6680:2: rule__DisjunctionFilter__Group__0__Impl rule__DisjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DisjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0"


    // $ANTLR start "rule__DisjunctionFilter__Group__0__Impl"
    // InternalEclParser.g:6687:1: rule__DisjunctionFilter__Group__0__Impl : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6691:1: ( ( ruleConjunctionFilter ) )
            // InternalEclParser.g:6692:1: ( ruleConjunctionFilter )
            {
            // InternalEclParser.g:6692:1: ( ruleConjunctionFilter )
            // InternalEclParser.g:6693:2: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getConjunctionFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group__1"
    // InternalEclParser.g:6702:1: rule__DisjunctionFilter__Group__1 : rule__DisjunctionFilter__Group__1__Impl ;
    public final void rule__DisjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6706:1: ( rule__DisjunctionFilter__Group__1__Impl )
            // InternalEclParser.g:6707:2: rule__DisjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1"


    // $ANTLR start "rule__DisjunctionFilter__Group__1__Impl"
    // InternalEclParser.g:6713:1: rule__DisjunctionFilter__Group__1__Impl : ( ( rule__DisjunctionFilter__Group_1__0 )* ) ;
    public final void rule__DisjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6717:1: ( ( ( rule__DisjunctionFilter__Group_1__0 )* ) )
            // InternalEclParser.g:6718:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            {
            // InternalEclParser.g:6718:1: ( ( rule__DisjunctionFilter__Group_1__0 )* )
            // InternalEclParser.g:6719:2: ( rule__DisjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6720:2: ( rule__DisjunctionFilter__Group_1__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==OR) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalEclParser.g:6720:3: rule__DisjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    rule__DisjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0"
    // InternalEclParser.g:6729:1: rule__DisjunctionFilter__Group_1__0 : rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 ;
    public final void rule__DisjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6733:1: ( rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1 )
            // InternalEclParser.g:6734:2: rule__DisjunctionFilter__Group_1__0__Impl rule__DisjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_5);
            rule__DisjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__0__Impl"
    // InternalEclParser.g:6741:1: rule__DisjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__DisjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6745:1: ( ( () ) )
            // InternalEclParser.g:6746:1: ( () )
            {
            // InternalEclParser.g:6746:1: ( () )
            // InternalEclParser.g:6747:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }
            // InternalEclParser.g:6748:2: ()
            // InternalEclParser.g:6748:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDisjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1"
    // InternalEclParser.g:6756:1: rule__DisjunctionFilter__Group_1__1 : rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 ;
    public final void rule__DisjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6760:1: ( rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2 )
            // InternalEclParser.g:6761:2: rule__DisjunctionFilter__Group_1__1__Impl rule__DisjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__DisjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__1__Impl"
    // InternalEclParser.g:6768:1: rule__DisjunctionFilter__Group_1__1__Impl : ( ruleDISJUNCTION ) ;
    public final void rule__DisjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6772:1: ( ( ruleDISJUNCTION ) )
            // InternalEclParser.g:6773:1: ( ruleDISJUNCTION )
            {
            // InternalEclParser.g:6773:1: ( ruleDISJUNCTION )
            // InternalEclParser.g:6774:2: ruleDISJUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDISJUNCTION();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getDISJUNCTIONParserRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2"
    // InternalEclParser.g:6783:1: rule__DisjunctionFilter__Group_1__2 : rule__DisjunctionFilter__Group_1__2__Impl ;
    public final void rule__DisjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6787:1: ( rule__DisjunctionFilter__Group_1__2__Impl )
            // InternalEclParser.g:6788:2: rule__DisjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2"


    // $ANTLR start "rule__DisjunctionFilter__Group_1__2__Impl"
    // InternalEclParser.g:6794:1: rule__DisjunctionFilter__Group_1__2__Impl : ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__DisjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6798:1: ( ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:6799:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:6799:1: ( ( rule__DisjunctionFilter__RightAssignment_1_2 ) )
            // InternalEclParser.g:6800:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:6801:2: ( rule__DisjunctionFilter__RightAssignment_1_2 )
            // InternalEclParser.g:6801:3: rule__DisjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DisjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__0"
    // InternalEclParser.g:6810:1: rule__ConjunctionFilter__Group__0 : rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 ;
    public final void rule__ConjunctionFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6814:1: ( rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1 )
            // InternalEclParser.g:6815:2: rule__ConjunctionFilter__Group__0__Impl rule__ConjunctionFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__ConjunctionFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0"


    // $ANTLR start "rule__ConjunctionFilter__Group__0__Impl"
    // InternalEclParser.g:6822:1: rule__ConjunctionFilter__Group__0__Impl : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6826:1: ( ( rulePropertyFilter ) )
            // InternalEclParser.g:6827:1: ( rulePropertyFilter )
            {
            // InternalEclParser.g:6827:1: ( rulePropertyFilter )
            // InternalEclParser.g:6828:2: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getPropertyFilterParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group__1"
    // InternalEclParser.g:6837:1: rule__ConjunctionFilter__Group__1 : rule__ConjunctionFilter__Group__1__Impl ;
    public final void rule__ConjunctionFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6841:1: ( rule__ConjunctionFilter__Group__1__Impl )
            // InternalEclParser.g:6842:2: rule__ConjunctionFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1"


    // $ANTLR start "rule__ConjunctionFilter__Group__1__Impl"
    // InternalEclParser.g:6848:1: rule__ConjunctionFilter__Group__1__Impl : ( ( rule__ConjunctionFilter__Group_1__0 )* ) ;
    public final void rule__ConjunctionFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6852:1: ( ( ( rule__ConjunctionFilter__Group_1__0 )* ) )
            // InternalEclParser.g:6853:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            {
            // InternalEclParser.g:6853:1: ( ( rule__ConjunctionFilter__Group_1__0 )* )
            // InternalEclParser.g:6854:2: ( rule__ConjunctionFilter__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:6855:2: ( rule__ConjunctionFilter__Group_1__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==AND||LA57_0==RULE_COMMA) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalEclParser.g:6855:3: rule__ConjunctionFilter__Group_1__0
            	    {
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    rule__ConjunctionFilter__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0"
    // InternalEclParser.g:6864:1: rule__ConjunctionFilter__Group_1__0 : rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 ;
    public final void rule__ConjunctionFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6868:1: ( rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1 )
            // InternalEclParser.g:6869:2: rule__ConjunctionFilter__Group_1__0__Impl rule__ConjunctionFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_7);
            rule__ConjunctionFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__0__Impl"
    // InternalEclParser.g:6876:1: rule__ConjunctionFilter__Group_1__0__Impl : ( () ) ;
    public final void rule__ConjunctionFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6880:1: ( ( () ) )
            // InternalEclParser.g:6881:1: ( () )
            {
            // InternalEclParser.g:6881:1: ( () )
            // InternalEclParser.g:6882:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }
            // InternalEclParser.g:6883:2: ()
            // InternalEclParser.g:6883:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getConjunctionFilterLeftAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__0__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1"
    // InternalEclParser.g:6891:1: rule__ConjunctionFilter__Group_1__1 : rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 ;
    public final void rule__ConjunctionFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6895:1: ( rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2 )
            // InternalEclParser.g:6896:2: rule__ConjunctionFilter__Group_1__1__Impl rule__ConjunctionFilter__Group_1__2
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__ConjunctionFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__1__Impl"
    // InternalEclParser.g:6903:1: rule__ConjunctionFilter__Group_1__1__Impl : ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6907:1: ( ( ( rule__ConjunctionFilter__Alternatives_1_1 ) ) )
            // InternalEclParser.g:6908:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            {
            // InternalEclParser.g:6908:1: ( ( rule__ConjunctionFilter__Alternatives_1_1 ) )
            // InternalEclParser.g:6909:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:6910:2: ( rule__ConjunctionFilter__Alternatives_1_1 )
            // InternalEclParser.g:6910:3: rule__ConjunctionFilter__Alternatives_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__1__Impl"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2"
    // InternalEclParser.g:6918:1: rule__ConjunctionFilter__Group_1__2 : rule__ConjunctionFilter__Group_1__2__Impl ;
    public final void rule__ConjunctionFilter__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6922:1: ( rule__ConjunctionFilter__Group_1__2__Impl )
            // InternalEclParser.g:6923:2: rule__ConjunctionFilter__Group_1__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2"


    // $ANTLR start "rule__ConjunctionFilter__Group_1__2__Impl"
    // InternalEclParser.g:6929:1: rule__ConjunctionFilter__Group_1__2__Impl : ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) ;
    public final void rule__ConjunctionFilter__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6933:1: ( ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) ) )
            // InternalEclParser.g:6934:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            {
            // InternalEclParser.g:6934:1: ( ( rule__ConjunctionFilter__RightAssignment_1_2 ) )
            // InternalEclParser.g:6935:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }
            // InternalEclParser.g:6936:2: ( rule__ConjunctionFilter__RightAssignment_1_2 )
            // InternalEclParser.g:6936:3: rule__ConjunctionFilter__RightAssignment_1_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ConjunctionFilter__RightAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__Group_1__2__Impl"


    // $ANTLR start "rule__NestedFilter__Group__0"
    // InternalEclParser.g:6945:1: rule__NestedFilter__Group__0 : rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 ;
    public final void rule__NestedFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6949:1: ( rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1 )
            // InternalEclParser.g:6950:2: rule__NestedFilter__Group__0__Impl rule__NestedFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_33);
            rule__NestedFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0"


    // $ANTLR start "rule__NestedFilter__Group__0__Impl"
    // InternalEclParser.g:6957:1: rule__NestedFilter__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__NestedFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6961:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:6962:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:6962:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:6963:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__0__Impl"


    // $ANTLR start "rule__NestedFilter__Group__1"
    // InternalEclParser.g:6972:1: rule__NestedFilter__Group__1 : rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 ;
    public final void rule__NestedFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6976:1: ( rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2 )
            // InternalEclParser.g:6977:2: rule__NestedFilter__Group__1__Impl rule__NestedFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_20);
            rule__NestedFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1"


    // $ANTLR start "rule__NestedFilter__Group__1__Impl"
    // InternalEclParser.g:6984:1: rule__NestedFilter__Group__1__Impl : ( ( rule__NestedFilter__NestedAssignment_1 ) ) ;
    public final void rule__NestedFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:6988:1: ( ( ( rule__NestedFilter__NestedAssignment_1 ) ) )
            // InternalEclParser.g:6989:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            {
            // InternalEclParser.g:6989:1: ( ( rule__NestedFilter__NestedAssignment_1 ) )
            // InternalEclParser.g:6990:2: ( rule__NestedFilter__NestedAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }
            // InternalEclParser.g:6991:2: ( rule__NestedFilter__NestedAssignment_1 )
            // InternalEclParser.g:6991:3: rule__NestedFilter__NestedAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__NestedAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__1__Impl"


    // $ANTLR start "rule__NestedFilter__Group__2"
    // InternalEclParser.g:6999:1: rule__NestedFilter__Group__2 : rule__NestedFilter__Group__2__Impl ;
    public final void rule__NestedFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7003:1: ( rule__NestedFilter__Group__2__Impl )
            // InternalEclParser.g:7004:2: rule__NestedFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NestedFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2"


    // $ANTLR start "rule__NestedFilter__Group__2__Impl"
    // InternalEclParser.g:7010:1: rule__NestedFilter__Group__2__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__NestedFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7014:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7015:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7015:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7016:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getROUND_CLOSETerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__Group__2__Impl"


    // $ANTLR start "rule__TermFilter__Group__0"
    // InternalEclParser.g:7026:1: rule__TermFilter__Group__0 : rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 ;
    public final void rule__TermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7030:1: ( rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1 )
            // InternalEclParser.g:7031:2: rule__TermFilter__Group__0__Impl rule__TermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0"


    // $ANTLR start "rule__TermFilter__Group__0__Impl"
    // InternalEclParser.g:7038:1: rule__TermFilter__Group__0__Impl : ( ruleTERM_KEYWORD ) ;
    public final void rule__TermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7042:1: ( ( ruleTERM_KEYWORD ) )
            // InternalEclParser.g:7043:1: ( ruleTERM_KEYWORD )
            {
            // InternalEclParser.g:7043:1: ( ruleTERM_KEYWORD )
            // InternalEclParser.g:7044:2: ruleTERM_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getTERM_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTERM_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getTERM_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__0__Impl"


    // $ANTLR start "rule__TermFilter__Group__1"
    // InternalEclParser.g:7053:1: rule__TermFilter__Group__1 : rule__TermFilter__Group__1__Impl ;
    public final void rule__TermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7057:1: ( rule__TermFilter__Group__1__Impl )
            // InternalEclParser.g:7058:2: rule__TermFilter__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1"


    // $ANTLR start "rule__TermFilter__Group__1__Impl"
    // InternalEclParser.g:7064:1: rule__TermFilter__Group__1__Impl : ( ( rule__TermFilter__Alternatives_1 ) ) ;
    public final void rule__TermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7068:1: ( ( ( rule__TermFilter__Alternatives_1 ) ) )
            // InternalEclParser.g:7069:1: ( ( rule__TermFilter__Alternatives_1 ) )
            {
            // InternalEclParser.g:7069:1: ( ( rule__TermFilter__Alternatives_1 ) )
            // InternalEclParser.g:7070:2: ( rule__TermFilter__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:7071:2: ( rule__TermFilter__Alternatives_1 )
            // InternalEclParser.g:7071:3: rule__TermFilter__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TermFilter__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTermFilterAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__0"
    // InternalEclParser.g:7080:1: rule__TypedTermFilter__Group__0 : rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 ;
    public final void rule__TypedTermFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7084:1: ( rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1 )
            // InternalEclParser.g:7085:2: rule__TypedTermFilter__Group__0__Impl rule__TypedTermFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__TypedTermFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0"


    // $ANTLR start "rule__TypedTermFilter__Group__0__Impl"
    // InternalEclParser.g:7092:1: rule__TypedTermFilter__Group__0__Impl : ( ( rule__TypedTermFilter__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7096:1: ( ( ( rule__TypedTermFilter__OpAssignment_0 ) ) )
            // InternalEclParser.g:7097:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            {
            // InternalEclParser.g:7097:1: ( ( rule__TypedTermFilter__OpAssignment_0 ) )
            // InternalEclParser.g:7098:2: ( rule__TypedTermFilter__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:7099:2: ( rule__TypedTermFilter__OpAssignment_0 )
            // InternalEclParser.g:7099:3: rule__TypedTermFilter__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__1"
    // InternalEclParser.g:7107:1: rule__TypedTermFilter__Group__1 : rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 ;
    public final void rule__TypedTermFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7111:1: ( rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2 )
            // InternalEclParser.g:7112:2: rule__TypedTermFilter__Group__1__Impl rule__TypedTermFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_36);
            rule__TypedTermFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1"


    // $ANTLR start "rule__TypedTermFilter__Group__1__Impl"
    // InternalEclParser.g:7119:1: rule__TypedTermFilter__Group__1__Impl : ( ( rule__TypedTermFilter__Group_1__0 )? ) ;
    public final void rule__TypedTermFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7123:1: ( ( ( rule__TypedTermFilter__Group_1__0 )? ) )
            // InternalEclParser.g:7124:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            {
            // InternalEclParser.g:7124:1: ( ( rule__TypedTermFilter__Group_1__0 )? )
            // InternalEclParser.g:7125:2: ( rule__TypedTermFilter__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }
            // InternalEclParser.g:7126:2: ( rule__TypedTermFilter__Group_1__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==Exact||(LA58_0>=Match && LA58_0<=Regex)||LA58_0==Wild) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalEclParser.g:7126:3: rule__TypedTermFilter__Group_1__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__TypedTermFilter__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group__2"
    // InternalEclParser.g:7134:1: rule__TypedTermFilter__Group__2 : rule__TypedTermFilter__Group__2__Impl ;
    public final void rule__TypedTermFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7138:1: ( rule__TypedTermFilter__Group__2__Impl )
            // InternalEclParser.g:7139:2: rule__TypedTermFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2"


    // $ANTLR start "rule__TypedTermFilter__Group__2__Impl"
    // InternalEclParser.g:7145:1: rule__TypedTermFilter__Group__2__Impl : ( ( rule__TypedTermFilter__TermAssignment_2 ) ) ;
    public final void rule__TypedTermFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7149:1: ( ( ( rule__TypedTermFilter__TermAssignment_2 ) ) )
            // InternalEclParser.g:7150:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            {
            // InternalEclParser.g:7150:1: ( ( rule__TypedTermFilter__TermAssignment_2 ) )
            // InternalEclParser.g:7151:2: ( rule__TypedTermFilter__TermAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }
            // InternalEclParser.g:7152:2: ( rule__TypedTermFilter__TermAssignment_2 )
            // InternalEclParser.g:7152:3: rule__TypedTermFilter__TermAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__TermAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0"
    // InternalEclParser.g:7161:1: rule__TypedTermFilter__Group_1__0 : rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 ;
    public final void rule__TypedTermFilter__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7165:1: ( rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1 )
            // InternalEclParser.g:7166:2: rule__TypedTermFilter__Group_1__0__Impl rule__TypedTermFilter__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_10);
            rule__TypedTermFilter__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0"


    // $ANTLR start "rule__TypedTermFilter__Group_1__0__Impl"
    // InternalEclParser.g:7173:1: rule__TypedTermFilter__Group_1__0__Impl : ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) ;
    public final void rule__TypedTermFilter__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7177:1: ( ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) ) )
            // InternalEclParser.g:7178:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            {
            // InternalEclParser.g:7178:1: ( ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 ) )
            // InternalEclParser.g:7179:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }
            // InternalEclParser.g:7180:2: ( rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 )
            // InternalEclParser.g:7180:3: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeAssignment_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__0__Impl"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1"
    // InternalEclParser.g:7188:1: rule__TypedTermFilter__Group_1__1 : rule__TypedTermFilter__Group_1__1__Impl ;
    public final void rule__TypedTermFilter__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7192:1: ( rule__TypedTermFilter__Group_1__1__Impl )
            // InternalEclParser.g:7193:2: rule__TypedTermFilter__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilter__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1"


    // $ANTLR start "rule__TypedTermFilter__Group_1__1__Impl"
    // InternalEclParser.g:7199:1: rule__TypedTermFilter__Group_1__1__Impl : ( RULE_COLON ) ;
    public final void rule__TypedTermFilter__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7203:1: ( ( RULE_COLON ) )
            // InternalEclParser.g:7204:1: ( RULE_COLON )
            {
            // InternalEclParser.g:7204:1: ( RULE_COLON )
            // InternalEclParser.g:7205:2: RULE_COLON
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }
            match(input,RULE_COLON,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getCOLONTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__Group_1__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0"
    // InternalEclParser.g:7215:1: rule__TypedTermFilterSet__Group__0 : rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 ;
    public final void rule__TypedTermFilterSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7219:1: ( rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1 )
            // InternalEclParser.g:7220:2: rule__TypedTermFilterSet__Group__0__Impl rule__TypedTermFilterSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_37);
            rule__TypedTermFilterSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0"


    // $ANTLR start "rule__TypedTermFilterSet__Group__0__Impl"
    // InternalEclParser.g:7227:1: rule__TypedTermFilterSet__Group__0__Impl : ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) ;
    public final void rule__TypedTermFilterSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7231:1: ( ( ( rule__TypedTermFilterSet__OpAssignment_0 ) ) )
            // InternalEclParser.g:7232:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            {
            // InternalEclParser.g:7232:1: ( ( rule__TypedTermFilterSet__OpAssignment_0 ) )
            // InternalEclParser.g:7233:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }
            // InternalEclParser.g:7234:2: ( rule__TypedTermFilterSet__OpAssignment_0 )
            // InternalEclParser.g:7234:3: rule__TypedTermFilterSet__OpAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__OpAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__0__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1"
    // InternalEclParser.g:7242:1: rule__TypedTermFilterSet__Group__1 : rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 ;
    public final void rule__TypedTermFilterSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7246:1: ( rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2 )
            // InternalEclParser.g:7247:2: rule__TypedTermFilterSet__Group__1__Impl rule__TypedTermFilterSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypedTermFilterSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1"


    // $ANTLR start "rule__TypedTermFilterSet__Group__1__Impl"
    // InternalEclParser.g:7254:1: rule__TypedTermFilterSet__Group__1__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypedTermFilterSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7258:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7259:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7259:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7260:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_OPENTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__1__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2"
    // InternalEclParser.g:7269:1: rule__TypedTermFilterSet__Group__2 : rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 ;
    public final void rule__TypedTermFilterSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7273:1: ( rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3 )
            // InternalEclParser.g:7274:2: rule__TypedTermFilterSet__Group__2__Impl rule__TypedTermFilterSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__TypedTermFilterSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2"


    // $ANTLR start "rule__TypedTermFilterSet__Group__2__Impl"
    // InternalEclParser.g:7281:1: rule__TypedTermFilterSet__Group__2__Impl : ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) ;
    public final void rule__TypedTermFilterSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7285:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) ) )
            // InternalEclParser.g:7286:1: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) )
            {
            // InternalEclParser.g:7286:1: ( ( rule__TypedTermFilterSet__TermsAssignment_2 ) )
            // InternalEclParser.g:7287:2: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }
            // InternalEclParser.g:7288:2: ( rule__TypedTermFilterSet__TermsAssignment_2 )
            // InternalEclParser.g:7288:3: rule__TypedTermFilterSet__TermsAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__TermsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__2__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3"
    // InternalEclParser.g:7296:1: rule__TypedTermFilterSet__Group__3 : rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4 ;
    public final void rule__TypedTermFilterSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7300:1: ( rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4 )
            // InternalEclParser.g:7301:2: rule__TypedTermFilterSet__Group__3__Impl rule__TypedTermFilterSet__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_38);
            rule__TypedTermFilterSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3"


    // $ANTLR start "rule__TypedTermFilterSet__Group__3__Impl"
    // InternalEclParser.g:7308:1: rule__TypedTermFilterSet__Group__3__Impl : ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* ) ;
    public final void rule__TypedTermFilterSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7312:1: ( ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* ) )
            // InternalEclParser.g:7313:1: ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* )
            {
            // InternalEclParser.g:7313:1: ( ( rule__TypedTermFilterSet__TermsAssignment_3 )* )
            // InternalEclParser.g:7314:2: ( rule__TypedTermFilterSet__TermsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_3()); 
            }
            // InternalEclParser.g:7315:2: ( rule__TypedTermFilterSet__TermsAssignment_3 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( ((LA59_0>=RULE_EQUAL && LA59_0<=RULE_NOT_EQUAL)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalEclParser.g:7315:3: rule__TypedTermFilterSet__TermsAssignment_3
            	    {
            	    pushFollow(FollowSets000.FOLLOW_39);
            	    rule__TypedTermFilterSet__TermsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__3__Impl"


    // $ANTLR start "rule__TypedTermFilterSet__Group__4"
    // InternalEclParser.g:7323:1: rule__TypedTermFilterSet__Group__4 : rule__TypedTermFilterSet__Group__4__Impl ;
    public final void rule__TypedTermFilterSet__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7327:1: ( rule__TypedTermFilterSet__Group__4__Impl )
            // InternalEclParser.g:7328:2: rule__TypedTermFilterSet__Group__4__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypedTermFilterSet__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__4"


    // $ANTLR start "rule__TypedTermFilterSet__Group__4__Impl"
    // InternalEclParser.g:7334:1: rule__TypedTermFilterSet__Group__4__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypedTermFilterSet__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7338:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7339:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7339:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7340:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_4()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getROUND_CLOSETerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__Group__4__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__0"
    // InternalEclParser.g:7350:1: rule__LanguageFilter__Group__0 : rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 ;
    public final void rule__LanguageFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7354:1: ( rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1 )
            // InternalEclParser.g:7355:2: rule__LanguageFilter__Group__0__Impl rule__LanguageFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__LanguageFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0"


    // $ANTLR start "rule__LanguageFilter__Group__0__Impl"
    // InternalEclParser.g:7362:1: rule__LanguageFilter__Group__0__Impl : ( ruleLANGUAGE_KEYWORD ) ;
    public final void rule__LanguageFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7366:1: ( ( ruleLANGUAGE_KEYWORD ) )
            // InternalEclParser.g:7367:1: ( ruleLANGUAGE_KEYWORD )
            {
            // InternalEclParser.g:7367:1: ( ruleLANGUAGE_KEYWORD )
            // InternalEclParser.g:7368:2: ruleLANGUAGE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLANGUAGE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLANGUAGE_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__1"
    // InternalEclParser.g:7377:1: rule__LanguageFilter__Group__1 : rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 ;
    public final void rule__LanguageFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7381:1: ( rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2 )
            // InternalEclParser.g:7382:2: rule__LanguageFilter__Group__1__Impl rule__LanguageFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__LanguageFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1"


    // $ANTLR start "rule__LanguageFilter__Group__1__Impl"
    // InternalEclParser.g:7389:1: rule__LanguageFilter__Group__1__Impl : ( ( rule__LanguageFilter__OpAssignment_1 ) ) ;
    public final void rule__LanguageFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7393:1: ( ( ( rule__LanguageFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7394:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7394:1: ( ( rule__LanguageFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7395:2: ( rule__LanguageFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7396:2: ( rule__LanguageFilter__OpAssignment_1 )
            // InternalEclParser.g:7396:3: rule__LanguageFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group__2"
    // InternalEclParser.g:7404:1: rule__LanguageFilter__Group__2 : rule__LanguageFilter__Group__2__Impl ;
    public final void rule__LanguageFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7408:1: ( rule__LanguageFilter__Group__2__Impl )
            // InternalEclParser.g:7409:2: rule__LanguageFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2"


    // $ANTLR start "rule__LanguageFilter__Group__2__Impl"
    // InternalEclParser.g:7415:1: rule__LanguageFilter__Group__2__Impl : ( ( rule__LanguageFilter__Alternatives_2 ) ) ;
    public final void rule__LanguageFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7419:1: ( ( ( rule__LanguageFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7420:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7420:1: ( ( rule__LanguageFilter__Alternatives_2 ) )
            // InternalEclParser.g:7421:2: ( rule__LanguageFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7422:2: ( rule__LanguageFilter__Alternatives_2 )
            // InternalEclParser.g:7422:3: rule__LanguageFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0"
    // InternalEclParser.g:7431:1: rule__LanguageFilter__Group_2_1__0 : rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 ;
    public final void rule__LanguageFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7435:1: ( rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1 )
            // InternalEclParser.g:7436:2: rule__LanguageFilter__Group_2_1__0__Impl rule__LanguageFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__LanguageFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7443:1: rule__LanguageFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__LanguageFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7447:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7448:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7448:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7449:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1"
    // InternalEclParser.g:7458:1: rule__LanguageFilter__Group_2_1__1 : rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 ;
    public final void rule__LanguageFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7462:1: ( rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2 )
            // InternalEclParser.g:7463:2: rule__LanguageFilter__Group_2_1__1__Impl rule__LanguageFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__LanguageFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7470:1: rule__LanguageFilter__Group_2_1__1__Impl : ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) ;
    public final void rule__LanguageFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7474:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7475:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7475:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 ) )
            // InternalEclParser.g:7476:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7477:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_1 )
            // InternalEclParser.g:7477:3: rule__LanguageFilter__LanguageCodesAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__LanguageCodesAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2"
    // InternalEclParser.g:7485:1: rule__LanguageFilter__Group_2_1__2 : rule__LanguageFilter__Group_2_1__2__Impl rule__LanguageFilter__Group_2_1__3 ;
    public final void rule__LanguageFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7489:1: ( rule__LanguageFilter__Group_2_1__2__Impl rule__LanguageFilter__Group_2_1__3 )
            // InternalEclParser.g:7490:2: rule__LanguageFilter__Group_2_1__2__Impl rule__LanguageFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__LanguageFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7497:1: rule__LanguageFilter__Group_2_1__2__Impl : ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* ) ;
    public final void rule__LanguageFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7501:1: ( ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7502:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7502:1: ( ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )* )
            // InternalEclParser.g:7503:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7504:2: ( rule__LanguageFilter__LanguageCodesAssignment_2_1_2 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_ALPHA) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalEclParser.g:7504:3: rule__LanguageFilter__LanguageCodesAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__LanguageFilter__LanguageCodesAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__3"
    // InternalEclParser.g:7512:1: rule__LanguageFilter__Group_2_1__3 : rule__LanguageFilter__Group_2_1__3__Impl ;
    public final void rule__LanguageFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7516:1: ( rule__LanguageFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7517:2: rule__LanguageFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__3"


    // $ANTLR start "rule__LanguageFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7523:1: rule__LanguageFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__LanguageFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7527:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7528:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7528:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7529:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__0"
    // InternalEclParser.g:7539:1: rule__TypeIdFilter__Group__0 : rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 ;
    public final void rule__TypeIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7543:1: ( rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1 )
            // InternalEclParser.g:7544:2: rule__TypeIdFilter__Group__0__Impl rule__TypeIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypeIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0"


    // $ANTLR start "rule__TypeIdFilter__Group__0__Impl"
    // InternalEclParser.g:7551:1: rule__TypeIdFilter__Group__0__Impl : ( ruleTYPEID_KEYWORD ) ;
    public final void rule__TypeIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7555:1: ( ( ruleTYPEID_KEYWORD ) )
            // InternalEclParser.g:7556:1: ( ruleTYPEID_KEYWORD )
            {
            // InternalEclParser.g:7556:1: ( ruleTYPEID_KEYWORD )
            // InternalEclParser.g:7557:2: ruleTYPEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTYPEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTYPEID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__1"
    // InternalEclParser.g:7566:1: rule__TypeIdFilter__Group__1 : rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 ;
    public final void rule__TypeIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7570:1: ( rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2 )
            // InternalEclParser.g:7571:2: rule__TypeIdFilter__Group__1__Impl rule__TypeIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__TypeIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1"


    // $ANTLR start "rule__TypeIdFilter__Group__1__Impl"
    // InternalEclParser.g:7578:1: rule__TypeIdFilter__Group__1__Impl : ( ( rule__TypeIdFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7582:1: ( ( ( rule__TypeIdFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7583:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7583:1: ( ( rule__TypeIdFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7584:2: ( rule__TypeIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7585:2: ( rule__TypeIdFilter__OpAssignment_1 )
            // InternalEclParser.g:7585:3: rule__TypeIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeIdFilter__Group__2"
    // InternalEclParser.g:7593:1: rule__TypeIdFilter__Group__2 : rule__TypeIdFilter__Group__2__Impl ;
    public final void rule__TypeIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7597:1: ( rule__TypeIdFilter__Group__2__Impl )
            // InternalEclParser.g:7598:2: rule__TypeIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2"


    // $ANTLR start "rule__TypeIdFilter__Group__2__Impl"
    // InternalEclParser.g:7604:1: rule__TypeIdFilter__Group__2__Impl : ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) ;
    public final void rule__TypeIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7608:1: ( ( ( rule__TypeIdFilter__TypeAssignment_2 ) ) )
            // InternalEclParser.g:7609:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            {
            // InternalEclParser.g:7609:1: ( ( rule__TypeIdFilter__TypeAssignment_2 ) )
            // InternalEclParser.g:7610:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }
            // InternalEclParser.g:7611:2: ( rule__TypeIdFilter__TypeAssignment_2 )
            // InternalEclParser.g:7611:3: rule__TypeIdFilter__TypeAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__0"
    // InternalEclParser.g:7620:1: rule__TypeTokenFilter__Group__0 : rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 ;
    public final void rule__TypeTokenFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7624:1: ( rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1 )
            // InternalEclParser.g:7625:2: rule__TypeTokenFilter__Group__0__Impl rule__TypeTokenFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__TypeTokenFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0"


    // $ANTLR start "rule__TypeTokenFilter__Group__0__Impl"
    // InternalEclParser.g:7632:1: rule__TypeTokenFilter__Group__0__Impl : ( ruleTYPE_KEYWORD ) ;
    public final void rule__TypeTokenFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7636:1: ( ( ruleTYPE_KEYWORD ) )
            // InternalEclParser.g:7637:1: ( ruleTYPE_KEYWORD )
            {
            // InternalEclParser.g:7637:1: ( ruleTYPE_KEYWORD )
            // InternalEclParser.g:7638:2: ruleTYPE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTYPE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTYPE_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__1"
    // InternalEclParser.g:7647:1: rule__TypeTokenFilter__Group__1 : rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 ;
    public final void rule__TypeTokenFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7651:1: ( rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2 )
            // InternalEclParser.g:7652:2: rule__TypeTokenFilter__Group__1__Impl rule__TypeTokenFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__TypeTokenFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1"


    // $ANTLR start "rule__TypeTokenFilter__Group__1__Impl"
    // InternalEclParser.g:7659:1: rule__TypeTokenFilter__Group__1__Impl : ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) ;
    public final void rule__TypeTokenFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7663:1: ( ( ( rule__TypeTokenFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7664:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7664:1: ( ( rule__TypeTokenFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7665:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7666:2: ( rule__TypeTokenFilter__OpAssignment_1 )
            // InternalEclParser.g:7666:3: rule__TypeTokenFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group__2"
    // InternalEclParser.g:7674:1: rule__TypeTokenFilter__Group__2 : rule__TypeTokenFilter__Group__2__Impl ;
    public final void rule__TypeTokenFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7678:1: ( rule__TypeTokenFilter__Group__2__Impl )
            // InternalEclParser.g:7679:2: rule__TypeTokenFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2"


    // $ANTLR start "rule__TypeTokenFilter__Group__2__Impl"
    // InternalEclParser.g:7685:1: rule__TypeTokenFilter__Group__2__Impl : ( ( rule__TypeTokenFilter__Alternatives_2 ) ) ;
    public final void rule__TypeTokenFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7689:1: ( ( ( rule__TypeTokenFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7690:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7690:1: ( ( rule__TypeTokenFilter__Alternatives_2 ) )
            // InternalEclParser.g:7691:2: ( rule__TypeTokenFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7692:2: ( rule__TypeTokenFilter__Alternatives_2 )
            // InternalEclParser.g:7692:3: rule__TypeTokenFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0"
    // InternalEclParser.g:7701:1: rule__TypeTokenFilter__Group_2_1__0 : rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 ;
    public final void rule__TypeTokenFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7705:1: ( rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1 )
            // InternalEclParser.g:7706:2: rule__TypeTokenFilter__Group_2_1__0__Impl rule__TypeTokenFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__TypeTokenFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7713:1: rule__TypeTokenFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__TypeTokenFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7717:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7718:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7718:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7719:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1"
    // InternalEclParser.g:7728:1: rule__TypeTokenFilter__Group_2_1__1 : rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 ;
    public final void rule__TypeTokenFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7732:1: ( rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2 )
            // InternalEclParser.g:7733:2: rule__TypeTokenFilter__Group_2_1__1__Impl rule__TypeTokenFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__TypeTokenFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7740:1: rule__TypeTokenFilter__Group_2_1__1__Impl : ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) ;
    public final void rule__TypeTokenFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7744:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7745:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7745:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_1 ) )
            // InternalEclParser.g:7746:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7747:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_1 )
            // InternalEclParser.g:7747:3: rule__TypeTokenFilter__TokensAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__TokensAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2"
    // InternalEclParser.g:7755:1: rule__TypeTokenFilter__Group_2_1__2 : rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3 ;
    public final void rule__TypeTokenFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7759:1: ( rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3 )
            // InternalEclParser.g:7760:2: rule__TypeTokenFilter__Group_2_1__2__Impl rule__TypeTokenFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__TypeTokenFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7767:1: rule__TypeTokenFilter__Group_2_1__2__Impl : ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* ) ;
    public final void rule__TypeTokenFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7771:1: ( ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7772:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7772:1: ( ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )* )
            // InternalEclParser.g:7773:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7774:2: ( rule__TypeTokenFilter__TokensAssignment_2_1_2 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==RULE_ALPHA) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalEclParser.g:7774:3: rule__TypeTokenFilter__TokensAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__TypeTokenFilter__TokensAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__3"
    // InternalEclParser.g:7782:1: rule__TypeTokenFilter__Group_2_1__3 : rule__TypeTokenFilter__Group_2_1__3__Impl ;
    public final void rule__TypeTokenFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7786:1: ( rule__TypeTokenFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7787:2: rule__TypeTokenFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeTokenFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__3"


    // $ANTLR start "rule__TypeTokenFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7793:1: rule__TypeTokenFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__TypeTokenFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7797:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7798:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7798:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7799:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__0"
    // InternalEclParser.g:7809:1: rule__DialectIdFilter__Group__0 : rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 ;
    public final void rule__DialectIdFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7813:1: ( rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1 )
            // InternalEclParser.g:7814:2: rule__DialectIdFilter__Group__0__Impl rule__DialectIdFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DialectIdFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0"


    // $ANTLR start "rule__DialectIdFilter__Group__0__Impl"
    // InternalEclParser.g:7821:1: rule__DialectIdFilter__Group__0__Impl : ( ruleDIALECTID_KEYWORD ) ;
    public final void rule__DialectIdFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7825:1: ( ( ruleDIALECTID_KEYWORD ) )
            // InternalEclParser.g:7826:1: ( ruleDIALECTID_KEYWORD )
            {
            // InternalEclParser.g:7826:1: ( ruleDIALECTID_KEYWORD )
            // InternalEclParser.g:7827:2: ruleDIALECTID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDIALECTID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDIALECTID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__1"
    // InternalEclParser.g:7836:1: rule__DialectIdFilter__Group__1 : rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 ;
    public final void rule__DialectIdFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7840:1: ( rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2 )
            // InternalEclParser.g:7841:2: rule__DialectIdFilter__Group__1__Impl rule__DialectIdFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__DialectIdFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1"


    // $ANTLR start "rule__DialectIdFilter__Group__1__Impl"
    // InternalEclParser.g:7848:1: rule__DialectIdFilter__Group__1__Impl : ( ( rule__DialectIdFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectIdFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7852:1: ( ( ( rule__DialectIdFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:7853:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:7853:1: ( ( rule__DialectIdFilter__OpAssignment_1 ) )
            // InternalEclParser.g:7854:2: ( rule__DialectIdFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:7855:2: ( rule__DialectIdFilter__OpAssignment_1 )
            // InternalEclParser.g:7855:3: rule__DialectIdFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group__2"
    // InternalEclParser.g:7863:1: rule__DialectIdFilter__Group__2 : rule__DialectIdFilter__Group__2__Impl ;
    public final void rule__DialectIdFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7867:1: ( rule__DialectIdFilter__Group__2__Impl )
            // InternalEclParser.g:7868:2: rule__DialectIdFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2"


    // $ANTLR start "rule__DialectIdFilter__Group__2__Impl"
    // InternalEclParser.g:7874:1: rule__DialectIdFilter__Group__2__Impl : ( ( rule__DialectIdFilter__Alternatives_2 ) ) ;
    public final void rule__DialectIdFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7878:1: ( ( ( rule__DialectIdFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:7879:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:7879:1: ( ( rule__DialectIdFilter__Alternatives_2 ) )
            // InternalEclParser.g:7880:2: ( rule__DialectIdFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:7881:2: ( rule__DialectIdFilter__Alternatives_2 )
            // InternalEclParser.g:7881:3: rule__DialectIdFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0"
    // InternalEclParser.g:7890:1: rule__DialectIdFilter__Group_2_1__0 : rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 ;
    public final void rule__DialectIdFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7894:1: ( rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1 )
            // InternalEclParser.g:7895:2: rule__DialectIdFilter__Group_2_1__0__Impl rule__DialectIdFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_17);
            rule__DialectIdFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:7902:1: rule__DialectIdFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectIdFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7906:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:7907:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:7907:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:7908:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1"
    // InternalEclParser.g:7917:1: rule__DialectIdFilter__Group_2_1__1 : rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 ;
    public final void rule__DialectIdFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7921:1: ( rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2 )
            // InternalEclParser.g:7922:2: rule__DialectIdFilter__Group_2_1__1__Impl rule__DialectIdFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DialectIdFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:7929:1: rule__DialectIdFilter__Group_2_1__1__Impl : ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) ;
    public final void rule__DialectIdFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7933:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) ) )
            // InternalEclParser.g:7934:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:7934:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_1 ) )
            // InternalEclParser.g:7935:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEclParser.g:7936:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_1 )
            // InternalEclParser.g:7936:3: rule__DialectIdFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2"
    // InternalEclParser.g:7944:1: rule__DialectIdFilter__Group_2_1__2 : rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3 ;
    public final void rule__DialectIdFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7948:1: ( rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3 )
            // InternalEclParser.g:7949:2: rule__DialectIdFilter__Group_2_1__2__Impl rule__DialectIdFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_18);
            rule__DialectIdFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:7956:1: rule__DialectIdFilter__Group_2_1__2__Impl : ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* ) ;
    public final void rule__DialectIdFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7960:1: ( ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* ) )
            // InternalEclParser.g:7961:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:7961:1: ( ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )* )
            // InternalEclParser.g:7962:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_2()); 
            }
            // InternalEclParser.g:7963:2: ( rule__DialectIdFilter__DialectsAssignment_2_1_2 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==RULE_DIGIT_NONZERO) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalEclParser.g:7963:3: rule__DialectIdFilter__DialectsAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_19);
            	    rule__DialectIdFilter__DialectsAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__3"
    // InternalEclParser.g:7971:1: rule__DialectIdFilter__Group_2_1__3 : rule__DialectIdFilter__Group_2_1__3__Impl ;
    public final void rule__DialectIdFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7975:1: ( rule__DialectIdFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:7976:2: rule__DialectIdFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectIdFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__3"


    // $ANTLR start "rule__DialectIdFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:7982:1: rule__DialectIdFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectIdFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:7986:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:7987:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:7987:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:7988:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__0"
    // InternalEclParser.g:7998:1: rule__DialectAliasFilter__Group__0 : rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 ;
    public final void rule__DialectAliasFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8002:1: ( rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1 )
            // InternalEclParser.g:8003:2: rule__DialectAliasFilter__Group__0__Impl rule__DialectAliasFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_35);
            rule__DialectAliasFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0"


    // $ANTLR start "rule__DialectAliasFilter__Group__0__Impl"
    // InternalEclParser.g:8010:1: rule__DialectAliasFilter__Group__0__Impl : ( ruleDIALECT_KEYWORD ) ;
    public final void rule__DialectAliasFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8014:1: ( ( ruleDIALECT_KEYWORD ) )
            // InternalEclParser.g:8015:1: ( ruleDIALECT_KEYWORD )
            {
            // InternalEclParser.g:8015:1: ( ruleDIALECT_KEYWORD )
            // InternalEclParser.g:8016:2: ruleDIALECT_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDIALECT_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDIALECT_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__1"
    // InternalEclParser.g:8025:1: rule__DialectAliasFilter__Group__1 : rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 ;
    public final void rule__DialectAliasFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8029:1: ( rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2 )
            // InternalEclParser.g:8030:2: rule__DialectAliasFilter__Group__1__Impl rule__DialectAliasFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_40);
            rule__DialectAliasFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1"


    // $ANTLR start "rule__DialectAliasFilter__Group__1__Impl"
    // InternalEclParser.g:8037:1: rule__DialectAliasFilter__Group__1__Impl : ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) ;
    public final void rule__DialectAliasFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8041:1: ( ( ( rule__DialectAliasFilter__OpAssignment_1 ) ) )
            // InternalEclParser.g:8042:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            {
            // InternalEclParser.g:8042:1: ( ( rule__DialectAliasFilter__OpAssignment_1 ) )
            // InternalEclParser.g:8043:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }
            // InternalEclParser.g:8044:2: ( rule__DialectAliasFilter__OpAssignment_1 )
            // InternalEclParser.g:8044:3: rule__DialectAliasFilter__OpAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__OpAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group__2"
    // InternalEclParser.g:8052:1: rule__DialectAliasFilter__Group__2 : rule__DialectAliasFilter__Group__2__Impl ;
    public final void rule__DialectAliasFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8056:1: ( rule__DialectAliasFilter__Group__2__Impl )
            // InternalEclParser.g:8057:2: rule__DialectAliasFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2"


    // $ANTLR start "rule__DialectAliasFilter__Group__2__Impl"
    // InternalEclParser.g:8063:1: rule__DialectAliasFilter__Group__2__Impl : ( ( rule__DialectAliasFilter__Alternatives_2 ) ) ;
    public final void rule__DialectAliasFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8067:1: ( ( ( rule__DialectAliasFilter__Alternatives_2 ) ) )
            // InternalEclParser.g:8068:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            {
            // InternalEclParser.g:8068:1: ( ( rule__DialectAliasFilter__Alternatives_2 ) )
            // InternalEclParser.g:8069:2: ( rule__DialectAliasFilter__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:8070:2: ( rule__DialectAliasFilter__Alternatives_2 )
            // InternalEclParser.g:8070:3: rule__DialectAliasFilter__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0"
    // InternalEclParser.g:8079:1: rule__DialectAliasFilter__Group_2_1__0 : rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 ;
    public final void rule__DialectAliasFilter__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8083:1: ( rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1 )
            // InternalEclParser.g:8084:2: rule__DialectAliasFilter__Group_2_1__0__Impl rule__DialectAliasFilter__Group_2_1__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__DialectAliasFilter__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__0__Impl"
    // InternalEclParser.g:8091:1: rule__DialectAliasFilter__Group_2_1__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__DialectAliasFilter__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8095:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:8096:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:8096:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:8097:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_OPENTerminalRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__0__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1"
    // InternalEclParser.g:8106:1: rule__DialectAliasFilter__Group_2_1__1 : rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 ;
    public final void rule__DialectAliasFilter__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8110:1: ( rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2 )
            // InternalEclParser.g:8111:2: rule__DialectAliasFilter__Group_2_1__1__Impl rule__DialectAliasFilter__Group_2_1__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DialectAliasFilter__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__1__Impl"
    // InternalEclParser.g:8118:1: rule__DialectAliasFilter__Group_2_1__1__Impl : ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) ;
    public final void rule__DialectAliasFilter__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8122:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) ) )
            // InternalEclParser.g:8123:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            {
            // InternalEclParser.g:8123:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 ) )
            // InternalEclParser.g:8124:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }
            // InternalEclParser.g:8125:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_1 )
            // InternalEclParser.g:8125:3: rule__DialectAliasFilter__DialectsAssignment_2_1_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__DialectsAssignment_2_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__1__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2"
    // InternalEclParser.g:8133:1: rule__DialectAliasFilter__Group_2_1__2 : rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3 ;
    public final void rule__DialectAliasFilter__Group_2_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8137:1: ( rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3 )
            // InternalEclParser.g:8138:2: rule__DialectAliasFilter__Group_2_1__2__Impl rule__DialectAliasFilter__Group_2_1__3
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__DialectAliasFilter__Group_2_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__2__Impl"
    // InternalEclParser.g:8145:1: rule__DialectAliasFilter__Group_2_1__2__Impl : ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* ) ;
    public final void rule__DialectAliasFilter__Group_2_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8149:1: ( ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* ) )
            // InternalEclParser.g:8150:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* )
            {
            // InternalEclParser.g:8150:1: ( ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )* )
            // InternalEclParser.g:8151:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_2()); 
            }
            // InternalEclParser.g:8152:2: ( rule__DialectAliasFilter__DialectsAssignment_2_1_2 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==RULE_ALPHA) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalEclParser.g:8152:3: rule__DialectAliasFilter__DialectsAssignment_2_1_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__DialectAliasFilter__DialectsAssignment_2_1_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsAssignment_2_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__2__Impl"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__3"
    // InternalEclParser.g:8160:1: rule__DialectAliasFilter__Group_2_1__3 : rule__DialectAliasFilter__Group_2_1__3__Impl ;
    public final void rule__DialectAliasFilter__Group_2_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8164:1: ( rule__DialectAliasFilter__Group_2_1__3__Impl )
            // InternalEclParser.g:8165:2: rule__DialectAliasFilter__Group_2_1__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasFilter__Group_2_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__3"


    // $ANTLR start "rule__DialectAliasFilter__Group_2_1__3__Impl"
    // InternalEclParser.g:8171:1: rule__DialectAliasFilter__Group_2_1__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__DialectAliasFilter__Group_2_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8175:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:8176:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:8176:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:8177:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getROUND_CLOSETerminalRuleCall_2_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__Group_2_1__3__Impl"


    // $ANTLR start "rule__Dialect__Group__0"
    // InternalEclParser.g:8187:1: rule__Dialect__Group__0 : rule__Dialect__Group__0__Impl rule__Dialect__Group__1 ;
    public final void rule__Dialect__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8191:1: ( rule__Dialect__Group__0__Impl rule__Dialect__Group__1 )
            // InternalEclParser.g:8192:2: rule__Dialect__Group__0__Impl rule__Dialect__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__Dialect__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0"


    // $ANTLR start "rule__Dialect__Group__0__Impl"
    // InternalEclParser.g:8199:1: rule__Dialect__Group__0__Impl : ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) ;
    public final void rule__Dialect__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8203:1: ( ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) ) )
            // InternalEclParser.g:8204:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            {
            // InternalEclParser.g:8204:1: ( ( rule__Dialect__LanguageRefSetIdAssignment_0 ) )
            // InternalEclParser.g:8205:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }
            // InternalEclParser.g:8206:2: ( rule__Dialect__LanguageRefSetIdAssignment_0 )
            // InternalEclParser.g:8206:3: rule__Dialect__LanguageRefSetIdAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__LanguageRefSetIdAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__0__Impl"


    // $ANTLR start "rule__Dialect__Group__1"
    // InternalEclParser.g:8214:1: rule__Dialect__Group__1 : rule__Dialect__Group__1__Impl ;
    public final void rule__Dialect__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8218:1: ( rule__Dialect__Group__1__Impl )
            // InternalEclParser.g:8219:2: rule__Dialect__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Dialect__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1"


    // $ANTLR start "rule__Dialect__Group__1__Impl"
    // InternalEclParser.g:8225:1: rule__Dialect__Group__1__Impl : ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) ;
    public final void rule__Dialect__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8229:1: ( ( ( rule__Dialect__AcceptabilityAssignment_1 )? ) )
            // InternalEclParser.g:8230:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            {
            // InternalEclParser.g:8230:1: ( ( rule__Dialect__AcceptabilityAssignment_1 )? )
            // InternalEclParser.g:8231:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEclParser.g:8232:2: ( rule__Dialect__AcceptabilityAssignment_1 )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==RULE_ROUND_OPEN) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalEclParser.g:8232:3: rule__Dialect__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Dialect__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__Group__1__Impl"


    // $ANTLR start "rule__DialectAlias__Group__0"
    // InternalEclParser.g:8241:1: rule__DialectAlias__Group__0 : rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 ;
    public final void rule__DialectAlias__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8245:1: ( rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1 )
            // InternalEclParser.g:8246:2: rule__DialectAlias__Group__0__Impl rule__DialectAlias__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_43);
            rule__DialectAlias__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0"


    // $ANTLR start "rule__DialectAlias__Group__0__Impl"
    // InternalEclParser.g:8253:1: rule__DialectAlias__Group__0__Impl : ( ( rule__DialectAlias__AliasAssignment_0 ) ) ;
    public final void rule__DialectAlias__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8257:1: ( ( ( rule__DialectAlias__AliasAssignment_0 ) ) )
            // InternalEclParser.g:8258:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            {
            // InternalEclParser.g:8258:1: ( ( rule__DialectAlias__AliasAssignment_0 ) )
            // InternalEclParser.g:8259:2: ( rule__DialectAlias__AliasAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }
            // InternalEclParser.g:8260:2: ( rule__DialectAlias__AliasAssignment_0 )
            // InternalEclParser.g:8260:3: rule__DialectAlias__AliasAssignment_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__AliasAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__0__Impl"


    // $ANTLR start "rule__DialectAlias__Group__1"
    // InternalEclParser.g:8268:1: rule__DialectAlias__Group__1 : rule__DialectAlias__Group__1__Impl ;
    public final void rule__DialectAlias__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8272:1: ( rule__DialectAlias__Group__1__Impl )
            // InternalEclParser.g:8273:2: rule__DialectAlias__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAlias__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1"


    // $ANTLR start "rule__DialectAlias__Group__1__Impl"
    // InternalEclParser.g:8279:1: rule__DialectAlias__Group__1__Impl : ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) ;
    public final void rule__DialectAlias__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8283:1: ( ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? ) )
            // InternalEclParser.g:8284:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            {
            // InternalEclParser.g:8284:1: ( ( rule__DialectAlias__AcceptabilityAssignment_1 )? )
            // InternalEclParser.g:8285:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }
            // InternalEclParser.g:8286:2: ( rule__DialectAlias__AcceptabilityAssignment_1 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_ROUND_OPEN) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalEclParser.g:8286:3: rule__DialectAlias__AcceptabilityAssignment_1
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__DialectAlias__AcceptabilityAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0"
    // InternalEclParser.g:8295:1: rule__AcceptabilityTokenSet__Group__0 : rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 ;
    public final void rule__AcceptabilityTokenSet__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8299:1: ( rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1 )
            // InternalEclParser.g:8300:2: rule__AcceptabilityTokenSet__Group__0__Impl rule__AcceptabilityTokenSet__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_41);
            rule__AcceptabilityTokenSet__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__0__Impl"
    // InternalEclParser.g:8307:1: rule__AcceptabilityTokenSet__Group__0__Impl : ( RULE_ROUND_OPEN ) ;
    public final void rule__AcceptabilityTokenSet__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8311:1: ( ( RULE_ROUND_OPEN ) )
            // InternalEclParser.g:8312:1: ( RULE_ROUND_OPEN )
            {
            // InternalEclParser.g:8312:1: ( RULE_ROUND_OPEN )
            // InternalEclParser.g:8313:2: RULE_ROUND_OPEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }
            match(input,RULE_ROUND_OPEN,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_OPENTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__0__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1"
    // InternalEclParser.g:8322:1: rule__AcceptabilityTokenSet__Group__1 : rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 ;
    public final void rule__AcceptabilityTokenSet__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8326:1: ( rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2 )
            // InternalEclParser.g:8327:2: rule__AcceptabilityTokenSet__Group__1__Impl rule__AcceptabilityTokenSet__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__AcceptabilityTokenSet__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__1__Impl"
    // InternalEclParser.g:8334:1: rule__AcceptabilityTokenSet__Group__1__Impl : ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) ;
    public final void rule__AcceptabilityTokenSet__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8338:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) ) )
            // InternalEclParser.g:8339:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            {
            // InternalEclParser.g:8339:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 ) )
            // InternalEclParser.g:8340:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }
            // InternalEclParser.g:8341:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 )
            // InternalEclParser.g:8341:3: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__1__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2"
    // InternalEclParser.g:8349:1: rule__AcceptabilityTokenSet__Group__2 : rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3 ;
    public final void rule__AcceptabilityTokenSet__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8353:1: ( rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3 )
            // InternalEclParser.g:8354:2: rule__AcceptabilityTokenSet__Group__2__Impl rule__AcceptabilityTokenSet__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_42);
            rule__AcceptabilityTokenSet__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__2__Impl"
    // InternalEclParser.g:8361:1: rule__AcceptabilityTokenSet__Group__2__Impl : ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* ) ;
    public final void rule__AcceptabilityTokenSet__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8365:1: ( ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* ) )
            // InternalEclParser.g:8366:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* )
            {
            // InternalEclParser.g:8366:1: ( ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )* )
            // InternalEclParser.g:8367:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_2()); 
            }
            // InternalEclParser.g:8368:2: ( rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==RULE_ALPHA) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalEclParser.g:8368:3: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__2__Impl"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__3"
    // InternalEclParser.g:8376:1: rule__AcceptabilityTokenSet__Group__3 : rule__AcceptabilityTokenSet__Group__3__Impl ;
    public final void rule__AcceptabilityTokenSet__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8380:1: ( rule__AcceptabilityTokenSet__Group__3__Impl )
            // InternalEclParser.g:8381:2: rule__AcceptabilityTokenSet__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptabilityTokenSet__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__3"


    // $ANTLR start "rule__AcceptabilityTokenSet__Group__3__Impl"
    // InternalEclParser.g:8387:1: rule__AcceptabilityTokenSet__Group__3__Impl : ( RULE_ROUND_CLOSE ) ;
    public final void rule__AcceptabilityTokenSet__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8391:1: ( ( RULE_ROUND_CLOSE ) )
            // InternalEclParser.g:8392:1: ( RULE_ROUND_CLOSE )
            {
            // InternalEclParser.g:8392:1: ( RULE_ROUND_CLOSE )
            // InternalEclParser.g:8393:2: RULE_ROUND_CLOSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }
            match(input,RULE_ROUND_CLOSE,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getROUND_CLOSETerminalRuleCall_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__Group__3__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__0"
    // InternalEclParser.g:8403:1: rule__ActiveFilter__Group__0 : rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 ;
    public final void rule__ActiveFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8407:1: ( rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1 )
            // InternalEclParser.g:8408:2: rule__ActiveFilter__Group__0__Impl rule__ActiveFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_44);
            rule__ActiveFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0"


    // $ANTLR start "rule__ActiveFilter__Group__0__Impl"
    // InternalEclParser.g:8415:1: rule__ActiveFilter__Group__0__Impl : ( ( rule__ActiveFilter__Group_0__0 )? ) ;
    public final void rule__ActiveFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8419:1: ( ( ( rule__ActiveFilter__Group_0__0 )? ) )
            // InternalEclParser.g:8420:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            {
            // InternalEclParser.g:8420:1: ( ( rule__ActiveFilter__Group_0__0 )? )
            // InternalEclParser.g:8421:2: ( rule__ActiveFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }
            // InternalEclParser.g:8422:2: ( rule__ActiveFilter__Group_0__0 )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Description||LA67_0==Concept) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalEclParser.g:8422:3: rule__ActiveFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ActiveFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__1"
    // InternalEclParser.g:8430:1: rule__ActiveFilter__Group__1 : rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 ;
    public final void rule__ActiveFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8434:1: ( rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2 )
            // InternalEclParser.g:8435:2: rule__ActiveFilter__Group__1__Impl rule__ActiveFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ActiveFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1"


    // $ANTLR start "rule__ActiveFilter__Group__1__Impl"
    // InternalEclParser.g:8442:1: rule__ActiveFilter__Group__1__Impl : ( ruleACTIVE_KEYWORD ) ;
    public final void rule__ActiveFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8446:1: ( ( ruleACTIVE_KEYWORD ) )
            // InternalEclParser.g:8447:1: ( ruleACTIVE_KEYWORD )
            {
            // InternalEclParser.g:8447:1: ( ruleACTIVE_KEYWORD )
            // InternalEclParser.g:8448:2: ruleACTIVE_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleACTIVE_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getACTIVE_KEYWORDParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__1__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__2"
    // InternalEclParser.g:8457:1: rule__ActiveFilter__Group__2 : rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 ;
    public final void rule__ActiveFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8461:1: ( rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3 )
            // InternalEclParser.g:8462:2: rule__ActiveFilter__Group__2__Impl rule__ActiveFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_29);
            rule__ActiveFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2"


    // $ANTLR start "rule__ActiveFilter__Group__2__Impl"
    // InternalEclParser.g:8469:1: rule__ActiveFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ActiveFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8473:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:8474:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:8474:1: ( RULE_EQUAL )
            // InternalEclParser.g:8475:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__2__Impl"


    // $ANTLR start "rule__ActiveFilter__Group__3"
    // InternalEclParser.g:8484:1: rule__ActiveFilter__Group__3 : rule__ActiveFilter__Group__3__Impl ;
    public final void rule__ActiveFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8488:1: ( rule__ActiveFilter__Group__3__Impl )
            // InternalEclParser.g:8489:2: rule__ActiveFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3"


    // $ANTLR start "rule__ActiveFilter__Group__3__Impl"
    // InternalEclParser.g:8495:1: rule__ActiveFilter__Group__3__Impl : ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) ;
    public final void rule__ActiveFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8499:1: ( ( ( rule__ActiveFilter__ActiveAssignment_3 ) ) )
            // InternalEclParser.g:8500:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            {
            // InternalEclParser.g:8500:1: ( ( rule__ActiveFilter__ActiveAssignment_3 ) )
            // InternalEclParser.g:8501:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }
            // InternalEclParser.g:8502:2: ( rule__ActiveFilter__ActiveAssignment_3 )
            // InternalEclParser.g:8502:3: rule__ActiveFilter__ActiveAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__ActiveAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group__3__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__0"
    // InternalEclParser.g:8511:1: rule__ActiveFilter__Group_0__0 : rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 ;
    public final void rule__ActiveFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8515:1: ( rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1 )
            // InternalEclParser.g:8516:2: rule__ActiveFilter__Group_0__0__Impl rule__ActiveFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ActiveFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0"


    // $ANTLR start "rule__ActiveFilter__Group_0__0__Impl"
    // InternalEclParser.g:8523:1: rule__ActiveFilter__Group_0__0__Impl : ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ActiveFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8527:1: ( ( ( rule__ActiveFilter__DomainAssignment_0_0 ) ) )
            // InternalEclParser.g:8528:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            {
            // InternalEclParser.g:8528:1: ( ( rule__ActiveFilter__DomainAssignment_0_0 ) )
            // InternalEclParser.g:8529:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEclParser.g:8530:2: ( rule__ActiveFilter__DomainAssignment_0_0 )
            // InternalEclParser.g:8530:3: rule__ActiveFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ActiveFilter__Group_0__1"
    // InternalEclParser.g:8538:1: rule__ActiveFilter__Group_0__1 : rule__ActiveFilter__Group_0__1__Impl ;
    public final void rule__ActiveFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8542:1: ( rule__ActiveFilter__Group_0__1__Impl )
            // InternalEclParser.g:8543:2: rule__ActiveFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ActiveFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1"


    // $ANTLR start "rule__ActiveFilter__Group_0__1__Impl"
    // InternalEclParser.g:8549:1: rule__ActiveFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ActiveFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8553:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:8554:1: ( RULE_DOT )
            {
            // InternalEclParser.g:8554:1: ( RULE_DOT )
            // InternalEclParser.g:8555:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__Group_0__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__0"
    // InternalEclParser.g:8565:1: rule__ModuleFilter__Group__0 : rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 ;
    public final void rule__ModuleFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8569:1: ( rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1 )
            // InternalEclParser.g:8570:2: rule__ModuleFilter__Group__0__Impl rule__ModuleFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_46);
            rule__ModuleFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0"


    // $ANTLR start "rule__ModuleFilter__Group__0__Impl"
    // InternalEclParser.g:8577:1: rule__ModuleFilter__Group__0__Impl : ( ( rule__ModuleFilter__Group_0__0 )? ) ;
    public final void rule__ModuleFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8581:1: ( ( ( rule__ModuleFilter__Group_0__0 )? ) )
            // InternalEclParser.g:8582:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            {
            // InternalEclParser.g:8582:1: ( ( rule__ModuleFilter__Group_0__0 )? )
            // InternalEclParser.g:8583:2: ( rule__ModuleFilter__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }
            // InternalEclParser.g:8584:2: ( rule__ModuleFilter__Group_0__0 )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==Description||LA68_0==Concept) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalEclParser.g:8584:3: rule__ModuleFilter__Group_0__0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__ModuleFilter__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__1"
    // InternalEclParser.g:8592:1: rule__ModuleFilter__Group__1 : rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 ;
    public final void rule__ModuleFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8596:1: ( rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2 )
            // InternalEclParser.g:8597:2: rule__ModuleFilter__Group__1__Impl rule__ModuleFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__ModuleFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1"


    // $ANTLR start "rule__ModuleFilter__Group__1__Impl"
    // InternalEclParser.g:8604:1: rule__ModuleFilter__Group__1__Impl : ( ruleMODULEID_KEYWORD ) ;
    public final void rule__ModuleFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8608:1: ( ( ruleMODULEID_KEYWORD ) )
            // InternalEclParser.g:8609:1: ( ruleMODULEID_KEYWORD )
            {
            // InternalEclParser.g:8609:1: ( ruleMODULEID_KEYWORD )
            // InternalEclParser.g:8610:2: ruleMODULEID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMODULEID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getMODULEID_KEYWORDParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__1__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__2"
    // InternalEclParser.g:8619:1: rule__ModuleFilter__Group__2 : rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 ;
    public final void rule__ModuleFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8623:1: ( rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3 )
            // InternalEclParser.g:8624:2: rule__ModuleFilter__Group__2__Impl rule__ModuleFilter__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__ModuleFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2"


    // $ANTLR start "rule__ModuleFilter__Group__2__Impl"
    // InternalEclParser.g:8631:1: rule__ModuleFilter__Group__2__Impl : ( RULE_EQUAL ) ;
    public final void rule__ModuleFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8635:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:8636:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:8636:1: ( RULE_EQUAL )
            // InternalEclParser.g:8637:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getEQUALTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__2__Impl"


    // $ANTLR start "rule__ModuleFilter__Group__3"
    // InternalEclParser.g:8646:1: rule__ModuleFilter__Group__3 : rule__ModuleFilter__Group__3__Impl ;
    public final void rule__ModuleFilter__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8650:1: ( rule__ModuleFilter__Group__3__Impl )
            // InternalEclParser.g:8651:2: rule__ModuleFilter__Group__3__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3"


    // $ANTLR start "rule__ModuleFilter__Group__3__Impl"
    // InternalEclParser.g:8657:1: rule__ModuleFilter__Group__3__Impl : ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) ;
    public final void rule__ModuleFilter__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8661:1: ( ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) ) )
            // InternalEclParser.g:8662:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            {
            // InternalEclParser.g:8662:1: ( ( rule__ModuleFilter__ModuleIdAssignment_3 ) )
            // InternalEclParser.g:8663:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }
            // InternalEclParser.g:8664:2: ( rule__ModuleFilter__ModuleIdAssignment_3 )
            // InternalEclParser.g:8664:3: rule__ModuleFilter__ModuleIdAssignment_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__ModuleIdAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group__3__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__0"
    // InternalEclParser.g:8673:1: rule__ModuleFilter__Group_0__0 : rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 ;
    public final void rule__ModuleFilter__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8677:1: ( rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1 )
            // InternalEclParser.g:8678:2: rule__ModuleFilter__Group_0__0__Impl rule__ModuleFilter__Group_0__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__ModuleFilter__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0"


    // $ANTLR start "rule__ModuleFilter__Group_0__0__Impl"
    // InternalEclParser.g:8685:1: rule__ModuleFilter__Group_0__0__Impl : ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) ;
    public final void rule__ModuleFilter__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8689:1: ( ( ( rule__ModuleFilter__DomainAssignment_0_0 ) ) )
            // InternalEclParser.g:8690:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            {
            // InternalEclParser.g:8690:1: ( ( rule__ModuleFilter__DomainAssignment_0_0 ) )
            // InternalEclParser.g:8691:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }
            // InternalEclParser.g:8692:2: ( rule__ModuleFilter__DomainAssignment_0_0 )
            // InternalEclParser.g:8692:3: rule__ModuleFilter__DomainAssignment_0_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__DomainAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__0__Impl"


    // $ANTLR start "rule__ModuleFilter__Group_0__1"
    // InternalEclParser.g:8700:1: rule__ModuleFilter__Group_0__1 : rule__ModuleFilter__Group_0__1__Impl ;
    public final void rule__ModuleFilter__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8704:1: ( rule__ModuleFilter__Group_0__1__Impl )
            // InternalEclParser.g:8705:2: rule__ModuleFilter__Group_0__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__ModuleFilter__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1"


    // $ANTLR start "rule__ModuleFilter__Group_0__1__Impl"
    // InternalEclParser.g:8711:1: rule__ModuleFilter__Group_0__1__Impl : ( RULE_DOT ) ;
    public final void rule__ModuleFilter__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8715:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:8716:1: ( RULE_DOT )
            {
            // InternalEclParser.g:8716:1: ( RULE_DOT )
            // InternalEclParser.g:8717:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDOTTerminalRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__Group_0__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__0"
    // InternalEclParser.g:8727:1: rule__PreferredInFilter__Group__0 : rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 ;
    public final void rule__PreferredInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8731:1: ( rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1 )
            // InternalEclParser.g:8732:2: rule__PreferredInFilter__Group__0__Impl rule__PreferredInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__PreferredInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0"


    // $ANTLR start "rule__PreferredInFilter__Group__0__Impl"
    // InternalEclParser.g:8739:1: rule__PreferredInFilter__Group__0__Impl : ( rulePREFERRED_IN_KEYWORD ) ;
    public final void rule__PreferredInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8743:1: ( ( rulePREFERRED_IN_KEYWORD ) )
            // InternalEclParser.g:8744:1: ( rulePREFERRED_IN_KEYWORD )
            {
            // InternalEclParser.g:8744:1: ( rulePREFERRED_IN_KEYWORD )
            // InternalEclParser.g:8745:2: rulePREFERRED_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePREFERRED_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getPREFERRED_IN_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__0__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__1"
    // InternalEclParser.g:8754:1: rule__PreferredInFilter__Group__1 : rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 ;
    public final void rule__PreferredInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8758:1: ( rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2 )
            // InternalEclParser.g:8759:2: rule__PreferredInFilter__Group__1__Impl rule__PreferredInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__PreferredInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1"


    // $ANTLR start "rule__PreferredInFilter__Group__1__Impl"
    // InternalEclParser.g:8766:1: rule__PreferredInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__PreferredInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8770:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:8771:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:8771:1: ( RULE_EQUAL )
            // InternalEclParser.g:8772:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__1__Impl"


    // $ANTLR start "rule__PreferredInFilter__Group__2"
    // InternalEclParser.g:8781:1: rule__PreferredInFilter__Group__2 : rule__PreferredInFilter__Group__2__Impl ;
    public final void rule__PreferredInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8785:1: ( rule__PreferredInFilter__Group__2__Impl )
            // InternalEclParser.g:8786:2: rule__PreferredInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2"


    // $ANTLR start "rule__PreferredInFilter__Group__2__Impl"
    // InternalEclParser.g:8792:1: rule__PreferredInFilter__Group__2__Impl : ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__PreferredInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8796:1: ( ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEclParser.g:8797:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEclParser.g:8797:1: ( ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEclParser.g:8798:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEclParser.g:8799:2: ( rule__PreferredInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEclParser.g:8799:3: rule__PreferredInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__PreferredInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__Group__2__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__0"
    // InternalEclParser.g:8808:1: rule__AcceptableInFilter__Group__0 : rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 ;
    public final void rule__AcceptableInFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8812:1: ( rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1 )
            // InternalEclParser.g:8813:2: rule__AcceptableInFilter__Group__0__Impl rule__AcceptableInFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__AcceptableInFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0"


    // $ANTLR start "rule__AcceptableInFilter__Group__0__Impl"
    // InternalEclParser.g:8820:1: rule__AcceptableInFilter__Group__0__Impl : ( ruleACCEPTABLE_IN_KEYWORD ) ;
    public final void rule__AcceptableInFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8824:1: ( ( ruleACCEPTABLE_IN_KEYWORD ) )
            // InternalEclParser.g:8825:1: ( ruleACCEPTABLE_IN_KEYWORD )
            {
            // InternalEclParser.g:8825:1: ( ruleACCEPTABLE_IN_KEYWORD )
            // InternalEclParser.g:8826:2: ruleACCEPTABLE_IN_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleACCEPTABLE_IN_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getACCEPTABLE_IN_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__0__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__1"
    // InternalEclParser.g:8835:1: rule__AcceptableInFilter__Group__1 : rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 ;
    public final void rule__AcceptableInFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8839:1: ( rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2 )
            // InternalEclParser.g:8840:2: rule__AcceptableInFilter__Group__1__Impl rule__AcceptableInFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__AcceptableInFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1"


    // $ANTLR start "rule__AcceptableInFilter__Group__1__Impl"
    // InternalEclParser.g:8847:1: rule__AcceptableInFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__AcceptableInFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8851:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:8852:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:8852:1: ( RULE_EQUAL )
            // InternalEclParser.g:8853:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__1__Impl"


    // $ANTLR start "rule__AcceptableInFilter__Group__2"
    // InternalEclParser.g:8862:1: rule__AcceptableInFilter__Group__2 : rule__AcceptableInFilter__Group__2__Impl ;
    public final void rule__AcceptableInFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8866:1: ( rule__AcceptableInFilter__Group__2__Impl )
            // InternalEclParser.g:8867:2: rule__AcceptableInFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2"


    // $ANTLR start "rule__AcceptableInFilter__Group__2__Impl"
    // InternalEclParser.g:8873:1: rule__AcceptableInFilter__Group__2__Impl : ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__AcceptableInFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8877:1: ( ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEclParser.g:8878:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEclParser.g:8878:1: ( ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEclParser.g:8879:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEclParser.g:8880:2: ( rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 )
            // InternalEclParser.g:8880:3: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__AcceptableInFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__Group__2__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0"
    // InternalEclParser.g:8889:1: rule__LanguageRefSetFilter__Group__0 : rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 ;
    public final void rule__LanguageRefSetFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8893:1: ( rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1 )
            // InternalEclParser.g:8894:2: rule__LanguageRefSetFilter__Group__0__Impl rule__LanguageRefSetFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__LanguageRefSetFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__0__Impl"
    // InternalEclParser.g:8901:1: rule__LanguageRefSetFilter__Group__0__Impl : ( ruleLANGUAGE_REFSET_ID_KEYWORD ) ;
    public final void rule__LanguageRefSetFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8905:1: ( ( ruleLANGUAGE_REFSET_ID_KEYWORD ) )
            // InternalEclParser.g:8906:1: ( ruleLANGUAGE_REFSET_ID_KEYWORD )
            {
            // InternalEclParser.g:8906:1: ( ruleLANGUAGE_REFSET_ID_KEYWORD )
            // InternalEclParser.g:8907:2: ruleLANGUAGE_REFSET_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLANGUAGE_REFSET_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLANGUAGE_REFSET_ID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__0__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1"
    // InternalEclParser.g:8916:1: rule__LanguageRefSetFilter__Group__1 : rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 ;
    public final void rule__LanguageRefSetFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8920:1: ( rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2 )
            // InternalEclParser.g:8921:2: rule__LanguageRefSetFilter__Group__1__Impl rule__LanguageRefSetFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__LanguageRefSetFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__1__Impl"
    // InternalEclParser.g:8928:1: rule__LanguageRefSetFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__LanguageRefSetFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8932:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:8933:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:8933:1: ( RULE_EQUAL )
            // InternalEclParser.g:8934:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__1__Impl"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2"
    // InternalEclParser.g:8943:1: rule__LanguageRefSetFilter__Group__2 : rule__LanguageRefSetFilter__Group__2__Impl ;
    public final void rule__LanguageRefSetFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8947:1: ( rule__LanguageRefSetFilter__Group__2__Impl )
            // InternalEclParser.g:8948:2: rule__LanguageRefSetFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2"


    // $ANTLR start "rule__LanguageRefSetFilter__Group__2__Impl"
    // InternalEclParser.g:8954:1: rule__LanguageRefSetFilter__Group__2__Impl : ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) ;
    public final void rule__LanguageRefSetFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8958:1: ( ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) ) )
            // InternalEclParser.g:8959:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            {
            // InternalEclParser.g:8959:1: ( ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 ) )
            // InternalEclParser.g:8960:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }
            // InternalEclParser.g:8961:2: ( rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 )
            // InternalEclParser.g:8961:3: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__Group__2__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0"
    // InternalEclParser.g:8970:1: rule__CaseSignificanceFilter__Group__0 : rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 ;
    public final void rule__CaseSignificanceFilter__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8974:1: ( rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1 )
            // InternalEclParser.g:8975:2: rule__CaseSignificanceFilter__Group__0__Impl rule__CaseSignificanceFilter__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_45);
            rule__CaseSignificanceFilter__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__0__Impl"
    // InternalEclParser.g:8982:1: rule__CaseSignificanceFilter__Group__0__Impl : ( ruleCASE_SIGNIFICANCE_ID_KEYWORD ) ;
    public final void rule__CaseSignificanceFilter__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:8986:1: ( ( ruleCASE_SIGNIFICANCE_ID_KEYWORD ) )
            // InternalEclParser.g:8987:1: ( ruleCASE_SIGNIFICANCE_ID_KEYWORD )
            {
            // InternalEclParser.g:8987:1: ( ruleCASE_SIGNIFICANCE_ID_KEYWORD )
            // InternalEclParser.g:8988:2: ruleCASE_SIGNIFICANCE_ID_KEYWORD
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCASE_SIGNIFICANCE_ID_KEYWORD();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCASE_SIGNIFICANCE_ID_KEYWORDParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__0__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1"
    // InternalEclParser.g:8997:1: rule__CaseSignificanceFilter__Group__1 : rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 ;
    public final void rule__CaseSignificanceFilter__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9001:1: ( rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2 )
            // InternalEclParser.g:9002:2: rule__CaseSignificanceFilter__Group__1__Impl rule__CaseSignificanceFilter__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_4);
            rule__CaseSignificanceFilter__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__1__Impl"
    // InternalEclParser.g:9009:1: rule__CaseSignificanceFilter__Group__1__Impl : ( RULE_EQUAL ) ;
    public final void rule__CaseSignificanceFilter__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9013:1: ( ( RULE_EQUAL ) )
            // InternalEclParser.g:9014:1: ( RULE_EQUAL )
            {
            // InternalEclParser.g:9014:1: ( RULE_EQUAL )
            // InternalEclParser.g:9015:2: RULE_EQUAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }
            match(input,RULE_EQUAL,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getEQUALTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__1__Impl"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2"
    // InternalEclParser.g:9024:1: rule__CaseSignificanceFilter__Group__2 : rule__CaseSignificanceFilter__Group__2__Impl ;
    public final void rule__CaseSignificanceFilter__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9028:1: ( rule__CaseSignificanceFilter__Group__2__Impl )
            // InternalEclParser.g:9029:2: rule__CaseSignificanceFilter__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2"


    // $ANTLR start "rule__CaseSignificanceFilter__Group__2__Impl"
    // InternalEclParser.g:9035:1: rule__CaseSignificanceFilter__Group__2__Impl : ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) ;
    public final void rule__CaseSignificanceFilter__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9039:1: ( ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) ) )
            // InternalEclParser.g:9040:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            {
            // InternalEclParser.g:9040:1: ( ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 ) )
            // InternalEclParser.g:9041:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }
            // InternalEclParser.g:9042:2: ( rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 )
            // InternalEclParser.g:9042:3: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__Group__2__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__0"
    // InternalEclParser.g:9051:1: rule__SnomedIdentifier__Group__0 : rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1 ;
    public final void rule__SnomedIdentifier__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9055:1: ( rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1 )
            // InternalEclParser.g:9056:2: rule__SnomedIdentifier__Group__0__Impl rule__SnomedIdentifier__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SnomedIdentifier__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__0"


    // $ANTLR start "rule__SnomedIdentifier__Group__0__Impl"
    // InternalEclParser.g:9063:1: rule__SnomedIdentifier__Group__0__Impl : ( RULE_DIGIT_NONZERO ) ;
    public final void rule__SnomedIdentifier__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9067:1: ( ( RULE_DIGIT_NONZERO ) )
            // InternalEclParser.g:9068:1: ( RULE_DIGIT_NONZERO )
            {
            // InternalEclParser.g:9068:1: ( RULE_DIGIT_NONZERO )
            // InternalEclParser.g:9069:2: RULE_DIGIT_NONZERO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
            }
            match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getDIGIT_NONZEROTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__0__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__1"
    // InternalEclParser.g:9078:1: rule__SnomedIdentifier__Group__1 : rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2 ;
    public final void rule__SnomedIdentifier__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9082:1: ( rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2 )
            // InternalEclParser.g:9083:2: rule__SnomedIdentifier__Group__1__Impl rule__SnomedIdentifier__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SnomedIdentifier__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__1"


    // $ANTLR start "rule__SnomedIdentifier__Group__1__Impl"
    // InternalEclParser.g:9090:1: rule__SnomedIdentifier__Group__1__Impl : ( ( rule__SnomedIdentifier__Alternatives_1 ) ) ;
    public final void rule__SnomedIdentifier__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9094:1: ( ( ( rule__SnomedIdentifier__Alternatives_1 ) ) )
            // InternalEclParser.g:9095:1: ( ( rule__SnomedIdentifier__Alternatives_1 ) )
            {
            // InternalEclParser.g:9095:1: ( ( rule__SnomedIdentifier__Alternatives_1 ) )
            // InternalEclParser.g:9096:2: ( rule__SnomedIdentifier__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:9097:2: ( rule__SnomedIdentifier__Alternatives_1 )
            // InternalEclParser.g:9097:3: rule__SnomedIdentifier__Alternatives_1
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__1__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__2"
    // InternalEclParser.g:9105:1: rule__SnomedIdentifier__Group__2 : rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3 ;
    public final void rule__SnomedIdentifier__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9109:1: ( rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3 )
            // InternalEclParser.g:9110:2: rule__SnomedIdentifier__Group__2__Impl rule__SnomedIdentifier__Group__3
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SnomedIdentifier__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__2"


    // $ANTLR start "rule__SnomedIdentifier__Group__2__Impl"
    // InternalEclParser.g:9117:1: rule__SnomedIdentifier__Group__2__Impl : ( ( rule__SnomedIdentifier__Alternatives_2 ) ) ;
    public final void rule__SnomedIdentifier__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9121:1: ( ( ( rule__SnomedIdentifier__Alternatives_2 ) ) )
            // InternalEclParser.g:9122:1: ( ( rule__SnomedIdentifier__Alternatives_2 ) )
            {
            // InternalEclParser.g:9122:1: ( ( rule__SnomedIdentifier__Alternatives_2 ) )
            // InternalEclParser.g:9123:2: ( rule__SnomedIdentifier__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:9124:2: ( rule__SnomedIdentifier__Alternatives_2 )
            // InternalEclParser.g:9124:3: rule__SnomedIdentifier__Alternatives_2
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__2__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__3"
    // InternalEclParser.g:9132:1: rule__SnomedIdentifier__Group__3 : rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4 ;
    public final void rule__SnomedIdentifier__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9136:1: ( rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4 )
            // InternalEclParser.g:9137:2: rule__SnomedIdentifier__Group__3__Impl rule__SnomedIdentifier__Group__4
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SnomedIdentifier__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__3"


    // $ANTLR start "rule__SnomedIdentifier__Group__3__Impl"
    // InternalEclParser.g:9144:1: rule__SnomedIdentifier__Group__3__Impl : ( ( rule__SnomedIdentifier__Alternatives_3 ) ) ;
    public final void rule__SnomedIdentifier__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9148:1: ( ( ( rule__SnomedIdentifier__Alternatives_3 ) ) )
            // InternalEclParser.g:9149:1: ( ( rule__SnomedIdentifier__Alternatives_3 ) )
            {
            // InternalEclParser.g:9149:1: ( ( rule__SnomedIdentifier__Alternatives_3 ) )
            // InternalEclParser.g:9150:2: ( rule__SnomedIdentifier__Alternatives_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_3()); 
            }
            // InternalEclParser.g:9151:2: ( rule__SnomedIdentifier__Alternatives_3 )
            // InternalEclParser.g:9151:3: rule__SnomedIdentifier__Alternatives_3
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__3__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__4"
    // InternalEclParser.g:9159:1: rule__SnomedIdentifier__Group__4 : rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5 ;
    public final void rule__SnomedIdentifier__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9163:1: ( rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5 )
            // InternalEclParser.g:9164:2: rule__SnomedIdentifier__Group__4__Impl rule__SnomedIdentifier__Group__5
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__SnomedIdentifier__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__4"


    // $ANTLR start "rule__SnomedIdentifier__Group__4__Impl"
    // InternalEclParser.g:9171:1: rule__SnomedIdentifier__Group__4__Impl : ( ( rule__SnomedIdentifier__Alternatives_4 ) ) ;
    public final void rule__SnomedIdentifier__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9175:1: ( ( ( rule__SnomedIdentifier__Alternatives_4 ) ) )
            // InternalEclParser.g:9176:1: ( ( rule__SnomedIdentifier__Alternatives_4 ) )
            {
            // InternalEclParser.g:9176:1: ( ( rule__SnomedIdentifier__Alternatives_4 ) )
            // InternalEclParser.g:9177:2: ( rule__SnomedIdentifier__Alternatives_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_4()); 
            }
            // InternalEclParser.g:9178:2: ( rule__SnomedIdentifier__Alternatives_4 )
            // InternalEclParser.g:9178:3: rule__SnomedIdentifier__Alternatives_4
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Alternatives_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__4__Impl"


    // $ANTLR start "rule__SnomedIdentifier__Group__5"
    // InternalEclParser.g:9186:1: rule__SnomedIdentifier__Group__5 : rule__SnomedIdentifier__Group__5__Impl ;
    public final void rule__SnomedIdentifier__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9190:1: ( rule__SnomedIdentifier__Group__5__Impl )
            // InternalEclParser.g:9191:2: rule__SnomedIdentifier__Group__5__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__SnomedIdentifier__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__5"


    // $ANTLR start "rule__SnomedIdentifier__Group__5__Impl"
    // InternalEclParser.g:9197:1: rule__SnomedIdentifier__Group__5__Impl : ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) ) ;
    public final void rule__SnomedIdentifier__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9201:1: ( ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) ) )
            // InternalEclParser.g:9202:1: ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) )
            {
            // InternalEclParser.g:9202:1: ( ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* ) )
            // InternalEclParser.g:9203:2: ( ( rule__SnomedIdentifier__Alternatives_5 ) ) ( ( rule__SnomedIdentifier__Alternatives_5 )* )
            {
            // InternalEclParser.g:9203:2: ( ( rule__SnomedIdentifier__Alternatives_5 ) )
            // InternalEclParser.g:9204:3: ( rule__SnomedIdentifier__Alternatives_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }
            // InternalEclParser.g:9205:3: ( rule__SnomedIdentifier__Alternatives_5 )
            // InternalEclParser.g:9205:4: rule__SnomedIdentifier__Alternatives_5
            {
            pushFollow(FollowSets000.FOLLOW_47);
            rule__SnomedIdentifier__Alternatives_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }

            }

            // InternalEclParser.g:9208:2: ( ( rule__SnomedIdentifier__Alternatives_5 )* )
            // InternalEclParser.g:9209:3: ( rule__SnomedIdentifier__Alternatives_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }
            // InternalEclParser.g:9210:3: ( rule__SnomedIdentifier__Alternatives_5 )*
            loop69:
            do {
                int alt69=2;
                alt69 = dfa69.predict(input);
                switch (alt69) {
            	case 1 :
            	    // InternalEclParser.g:9210:4: rule__SnomedIdentifier__Alternatives_5
            	    {
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    rule__SnomedIdentifier__Alternatives_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSnomedIdentifierAccess().getAlternatives_5()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SnomedIdentifier__Group__5__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0"
    // InternalEclParser.g:9220:1: rule__NonNegativeInteger__Group_1__0 : rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 ;
    public final void rule__NonNegativeInteger__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9224:1: ( rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1 )
            // InternalEclParser.g:9225:2: rule__NonNegativeInteger__Group_1__0__Impl rule__NonNegativeInteger__Group_1__1
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__NonNegativeInteger__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__0__Impl"
    // InternalEclParser.g:9232:1: rule__NonNegativeInteger__Group_1__0__Impl : ( RULE_DIGIT_NONZERO ) ;
    public final void rule__NonNegativeInteger__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9236:1: ( ( RULE_DIGIT_NONZERO ) )
            // InternalEclParser.g:9237:1: ( RULE_DIGIT_NONZERO )
            {
            // InternalEclParser.g:9237:1: ( RULE_DIGIT_NONZERO )
            // InternalEclParser.g:9238:2: RULE_DIGIT_NONZERO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }
            match(input,RULE_DIGIT_NONZERO,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getDIGIT_NONZEROTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__0__Impl"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1"
    // InternalEclParser.g:9247:1: rule__NonNegativeInteger__Group_1__1 : rule__NonNegativeInteger__Group_1__1__Impl ;
    public final void rule__NonNegativeInteger__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9251:1: ( rule__NonNegativeInteger__Group_1__1__Impl )
            // InternalEclParser.g:9252:2: rule__NonNegativeInteger__Group_1__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeInteger__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1"


    // $ANTLR start "rule__NonNegativeInteger__Group_1__1__Impl"
    // InternalEclParser.g:9258:1: rule__NonNegativeInteger__Group_1__1__Impl : ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) ;
    public final void rule__NonNegativeInteger__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9262:1: ( ( ( rule__NonNegativeInteger__Alternatives_1_1 )* ) )
            // InternalEclParser.g:9263:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            {
            // InternalEclParser.g:9263:1: ( ( rule__NonNegativeInteger__Alternatives_1_1 )* )
            // InternalEclParser.g:9264:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }
            // InternalEclParser.g:9265:2: ( rule__NonNegativeInteger__Alternatives_1_1 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( ((LA70_0>=RULE_ZERO && LA70_0<=RULE_DIGIT_NONZERO)) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalEclParser.g:9265:3: rule__NonNegativeInteger__Alternatives_1_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    rule__NonNegativeInteger__Alternatives_1_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeIntegerAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeInteger__Group_1__1__Impl"


    // $ANTLR start "rule__Integer__Group__0"
    // InternalEclParser.g:9274:1: rule__Integer__Group__0 : rule__Integer__Group__0__Impl rule__Integer__Group__1 ;
    public final void rule__Integer__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9278:1: ( rule__Integer__Group__0__Impl rule__Integer__Group__1 )
            // InternalEclParser.g:9279:2: rule__Integer__Group__0__Impl rule__Integer__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__Integer__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0"


    // $ANTLR start "rule__Integer__Group__0__Impl"
    // InternalEclParser.g:9286:1: rule__Integer__Group__0__Impl : ( ( rule__Integer__Alternatives_0 )? ) ;
    public final void rule__Integer__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9290:1: ( ( ( rule__Integer__Alternatives_0 )? ) )
            // InternalEclParser.g:9291:1: ( ( rule__Integer__Alternatives_0 )? )
            {
            // InternalEclParser.g:9291:1: ( ( rule__Integer__Alternatives_0 )? )
            // InternalEclParser.g:9292:2: ( rule__Integer__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }
            // InternalEclParser.g:9293:2: ( rule__Integer__Alternatives_0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=RULE_PLUS && LA71_0<=RULE_DASH)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalEclParser.g:9293:3: rule__Integer__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Integer__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__0__Impl"


    // $ANTLR start "rule__Integer__Group__1"
    // InternalEclParser.g:9301:1: rule__Integer__Group__1 : rule__Integer__Group__1__Impl ;
    public final void rule__Integer__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9305:1: ( rule__Integer__Group__1__Impl )
            // InternalEclParser.g:9306:2: rule__Integer__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Integer__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1"


    // $ANTLR start "rule__Integer__Group__1__Impl"
    // InternalEclParser.g:9312:1: rule__Integer__Group__1__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__Integer__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9316:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:9317:1: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:9317:1: ( ruleNonNegativeInteger )
            // InternalEclParser.g:9318:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerAccess().getNonNegativeIntegerParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Integer__Group__1__Impl"


    // $ANTLR start "rule__Decimal__Group__0"
    // InternalEclParser.g:9328:1: rule__Decimal__Group__0 : rule__Decimal__Group__0__Impl rule__Decimal__Group__1 ;
    public final void rule__Decimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9332:1: ( rule__Decimal__Group__0__Impl rule__Decimal__Group__1 )
            // InternalEclParser.g:9333:2: rule__Decimal__Group__0__Impl rule__Decimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_32);
            rule__Decimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0"


    // $ANTLR start "rule__Decimal__Group__0__Impl"
    // InternalEclParser.g:9340:1: rule__Decimal__Group__0__Impl : ( ( rule__Decimal__Alternatives_0 )? ) ;
    public final void rule__Decimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9344:1: ( ( ( rule__Decimal__Alternatives_0 )? ) )
            // InternalEclParser.g:9345:1: ( ( rule__Decimal__Alternatives_0 )? )
            {
            // InternalEclParser.g:9345:1: ( ( rule__Decimal__Alternatives_0 )? )
            // InternalEclParser.g:9346:2: ( rule__Decimal__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }
            // InternalEclParser.g:9347:2: ( rule__Decimal__Alternatives_0 )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( ((LA72_0>=RULE_PLUS && LA72_0<=RULE_DASH)) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalEclParser.g:9347:3: rule__Decimal__Alternatives_0
                    {
                    pushFollow(FollowSets000.FOLLOW_2);
                    rule__Decimal__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__0__Impl"


    // $ANTLR start "rule__Decimal__Group__1"
    // InternalEclParser.g:9355:1: rule__Decimal__Group__1 : rule__Decimal__Group__1__Impl ;
    public final void rule__Decimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9359:1: ( rule__Decimal__Group__1__Impl )
            // InternalEclParser.g:9360:2: rule__Decimal__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__Decimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1"


    // $ANTLR start "rule__Decimal__Group__1__Impl"
    // InternalEclParser.g:9366:1: rule__Decimal__Group__1__Impl : ( ruleNonNegativeDecimal ) ;
    public final void rule__Decimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9370:1: ( ( ruleNonNegativeDecimal ) )
            // InternalEclParser.g:9371:1: ( ruleNonNegativeDecimal )
            {
            // InternalEclParser.g:9371:1: ( ruleNonNegativeDecimal )
            // InternalEclParser.g:9372:2: ruleNonNegativeDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalAccess().getNonNegativeDecimalParserRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Decimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0"
    // InternalEclParser.g:9382:1: rule__NonNegativeDecimal__Group__0 : rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 ;
    public final void rule__NonNegativeDecimal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9386:1: ( rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1 )
            // InternalEclParser.g:9387:2: rule__NonNegativeDecimal__Group__0__Impl rule__NonNegativeDecimal__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_12);
            rule__NonNegativeDecimal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0"


    // $ANTLR start "rule__NonNegativeDecimal__Group__0__Impl"
    // InternalEclParser.g:9394:1: rule__NonNegativeDecimal__Group__0__Impl : ( ruleNonNegativeInteger ) ;
    public final void rule__NonNegativeDecimal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9398:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:9399:1: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:9399:1: ( ruleNonNegativeInteger )
            // InternalEclParser.g:9400:2: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getNonNegativeIntegerParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__0__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1"
    // InternalEclParser.g:9409:1: rule__NonNegativeDecimal__Group__1 : rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 ;
    public final void rule__NonNegativeDecimal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9413:1: ( rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2 )
            // InternalEclParser.g:9414:2: rule__NonNegativeDecimal__Group__1__Impl rule__NonNegativeDecimal__Group__2
            {
            pushFollow(FollowSets000.FOLLOW_25);
            rule__NonNegativeDecimal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1"


    // $ANTLR start "rule__NonNegativeDecimal__Group__1__Impl"
    // InternalEclParser.g:9421:1: rule__NonNegativeDecimal__Group__1__Impl : ( RULE_DOT ) ;
    public final void rule__NonNegativeDecimal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9425:1: ( ( RULE_DOT ) )
            // InternalEclParser.g:9426:1: ( RULE_DOT )
            {
            // InternalEclParser.g:9426:1: ( RULE_DOT )
            // InternalEclParser.g:9427:2: RULE_DOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }
            match(input,RULE_DOT,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getDOTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__1__Impl"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2"
    // InternalEclParser.g:9436:1: rule__NonNegativeDecimal__Group__2 : rule__NonNegativeDecimal__Group__2__Impl ;
    public final void rule__NonNegativeDecimal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9440:1: ( rule__NonNegativeDecimal__Group__2__Impl )
            // InternalEclParser.g:9441:2: rule__NonNegativeDecimal__Group__2__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__NonNegativeDecimal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2"


    // $ANTLR start "rule__NonNegativeDecimal__Group__2__Impl"
    // InternalEclParser.g:9447:1: rule__NonNegativeDecimal__Group__2__Impl : ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) ;
    public final void rule__NonNegativeDecimal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9451:1: ( ( ( rule__NonNegativeDecimal__Alternatives_2 )* ) )
            // InternalEclParser.g:9452:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            {
            // InternalEclParser.g:9452:1: ( ( rule__NonNegativeDecimal__Alternatives_2 )* )
            // InternalEclParser.g:9453:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }
            // InternalEclParser.g:9454:2: ( rule__NonNegativeDecimal__Alternatives_2 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( ((LA73_0>=RULE_ZERO && LA73_0<=RULE_DIGIT_NONZERO)) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalEclParser.g:9454:3: rule__NonNegativeDecimal__Alternatives_2
            	    {
            	    pushFollow(FollowSets000.FOLLOW_47);
            	    rule__NonNegativeDecimal__Alternatives_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNonNegativeDecimalAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NonNegativeDecimal__Group__2__Impl"


    // $ANTLR start "rule__DialectAliasValue__Group__0"
    // InternalEclParser.g:9463:1: rule__DialectAliasValue__Group__0 : rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1 ;
    public final void rule__DialectAliasValue__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9467:1: ( rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1 )
            // InternalEclParser.g:9468:2: rule__DialectAliasValue__Group__0__Impl rule__DialectAliasValue__Group__1
            {
            pushFollow(FollowSets000.FOLLOW_48);
            rule__DialectAliasValue__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__0"


    // $ANTLR start "rule__DialectAliasValue__Group__0__Impl"
    // InternalEclParser.g:9475:1: rule__DialectAliasValue__Group__0__Impl : ( RULE_ALPHA ) ;
    public final void rule__DialectAliasValue__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9479:1: ( ( RULE_ALPHA ) )
            // InternalEclParser.g:9480:1: ( RULE_ALPHA )
            {
            // InternalEclParser.g:9480:1: ( RULE_ALPHA )
            // InternalEclParser.g:9481:2: RULE_ALPHA
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_0()); 
            }
            match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getALPHATerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__0__Impl"


    // $ANTLR start "rule__DialectAliasValue__Group__1"
    // InternalEclParser.g:9490:1: rule__DialectAliasValue__Group__1 : rule__DialectAliasValue__Group__1__Impl ;
    public final void rule__DialectAliasValue__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9494:1: ( rule__DialectAliasValue__Group__1__Impl )
            // InternalEclParser.g:9495:2: rule__DialectAliasValue__Group__1__Impl
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__DialectAliasValue__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__1"


    // $ANTLR start "rule__DialectAliasValue__Group__1__Impl"
    // InternalEclParser.g:9501:1: rule__DialectAliasValue__Group__1__Impl : ( ( rule__DialectAliasValue__Alternatives_1 )* ) ;
    public final void rule__DialectAliasValue__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9505:1: ( ( ( rule__DialectAliasValue__Alternatives_1 )* ) )
            // InternalEclParser.g:9506:1: ( ( rule__DialectAliasValue__Alternatives_1 )* )
            {
            // InternalEclParser.g:9506:1: ( ( rule__DialectAliasValue__Alternatives_1 )* )
            // InternalEclParser.g:9507:2: ( rule__DialectAliasValue__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasValueAccess().getAlternatives_1()); 
            }
            // InternalEclParser.g:9508:2: ( rule__DialectAliasValue__Alternatives_1 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==RULE_ALPHA) ) {
                    int LA74_2 = input.LA(2);

                    if ( (synpred104_InternalEclParser()) ) {
                        alt74=1;
                    }


                }
                else if ( ((LA74_0>=RULE_ZERO && LA74_0<=RULE_DIGIT_NONZERO)||LA74_0==RULE_DASH) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalEclParser.g:9508:3: rule__DialectAliasValue__Alternatives_1
            	    {
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    rule__DialectAliasValue__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasValueAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasValue__Group__1__Impl"


    // $ANTLR start "rule__Script__ConstraintAssignment_1"
    // InternalEclParser.g:9517:1: rule__Script__ConstraintAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__Script__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9521:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:9522:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:9522:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:9523:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getScriptAccess().getConstraintExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Script__ConstraintAssignment_1"


    // $ANTLR start "rule__OrExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:9532:1: rule__OrExpressionConstraint__RightAssignment_1_2 : ( ruleAndExpressionConstraint ) ;
    public final void rule__OrExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9536:1: ( ( ruleAndExpressionConstraint ) )
            // InternalEclParser.g:9537:2: ( ruleAndExpressionConstraint )
            {
            // InternalEclParser.g:9537:2: ( ruleAndExpressionConstraint )
            // InternalEclParser.g:9538:3: ruleAndExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrExpressionConstraintAccess().getRightAndExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__AndExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:9547:1: rule__AndExpressionConstraint__RightAssignment_1_2 : ( ruleExclusionExpressionConstraint ) ;
    public final void rule__AndExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9551:1: ( ( ruleExclusionExpressionConstraint ) )
            // InternalEclParser.g:9552:2: ( ruleExclusionExpressionConstraint )
            {
            // InternalEclParser.g:9552:2: ( ruleExclusionExpressionConstraint )
            // InternalEclParser.g:9553:3: ruleExclusionExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExclusionExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndExpressionConstraintAccess().getRightExclusionExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__ExclusionExpressionConstraint__RightAssignment_1_2"
    // InternalEclParser.g:9562:1: rule__ExclusionExpressionConstraint__RightAssignment_1_2 : ( ruleRefinedExpressionConstraint ) ;
    public final void rule__ExclusionExpressionConstraint__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9566:1: ( ( ruleRefinedExpressionConstraint ) )
            // InternalEclParser.g:9567:2: ( ruleRefinedExpressionConstraint )
            {
            // InternalEclParser.g:9567:2: ( ruleRefinedExpressionConstraint )
            // InternalEclParser.g:9568:3: ruleRefinedExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleRefinedExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExclusionExpressionConstraintAccess().getRightRefinedExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ExclusionExpressionConstraint__RightAssignment_1_2"


    // $ANTLR start "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"
    // InternalEclParser.g:9577:1: rule__RefinedExpressionConstraint__RefinementAssignment_1_2 : ( ruleEclRefinement ) ;
    public final void rule__RefinedExpressionConstraint__RefinementAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9581:1: ( ( ruleEclRefinement ) )
            // InternalEclParser.g:9582:2: ( ruleEclRefinement )
            {
            // InternalEclParser.g:9582:2: ( ruleEclRefinement )
            // InternalEclParser.g:9583:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRefinedExpressionConstraintAccess().getRefinementEclRefinementParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RefinedExpressionConstraint__RefinementAssignment_1_2"


    // $ANTLR start "rule__DottedExpressionConstraint__AttributeAssignment_1_2"
    // InternalEclParser.g:9592:1: rule__DottedExpressionConstraint__AttributeAssignment_1_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__DottedExpressionConstraint__AttributeAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9596:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:9597:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:9597:2: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:9598:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDottedExpressionConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DottedExpressionConstraint__AttributeAssignment_1_2"


    // $ANTLR start "rule__FilteredExpressionConstraint__ExpressionAssignment_0"
    // InternalEclParser.g:9607:1: rule__FilteredExpressionConstraint__ExpressionAssignment_0 : ( ruleSubExpressionConstraint ) ;
    public final void rule__FilteredExpressionConstraint__ExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9611:1: ( ( ruleSubExpressionConstraint ) )
            // InternalEclParser.g:9612:2: ( ruleSubExpressionConstraint )
            {
            // InternalEclParser.g:9612:2: ( ruleSubExpressionConstraint )
            // InternalEclParser.g:9613:3: ruleSubExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getExpressionSubExpressionConstraintParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getExpressionSubExpressionConstraintParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__ExpressionAssignment_0"


    // $ANTLR start "rule__FilteredExpressionConstraint__FiltersAssignment_1"
    // InternalEclParser.g:9622:1: rule__FilteredExpressionConstraint__FiltersAssignment_1 : ( ruleFilterConstraint ) ;
    public final void rule__FilteredExpressionConstraint__FiltersAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9626:1: ( ( ruleFilterConstraint ) )
            // InternalEclParser.g:9627:2: ( ruleFilterConstraint )
            {
            // InternalEclParser.g:9627:2: ( ruleFilterConstraint )
            // InternalEclParser.g:9628:3: ruleFilterConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFilteredExpressionConstraintAccess().getFiltersFilterConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilterConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFilteredExpressionConstraintAccess().getFiltersFilterConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FilteredExpressionConstraint__FiltersAssignment_1"


    // $ANTLR start "rule__ChildOf__ConstraintAssignment_1"
    // InternalEclParser.g:9637:1: rule__ChildOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9641:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9642:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9642:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9643:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ChildOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9652:1: rule__ChildOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ChildOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9656:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9657:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9657:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9658:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getChildOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ChildOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOf__ConstraintAssignment_1"
    // InternalEclParser.g:9667:1: rule__DescendantOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9671:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9672:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9672:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9673:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOf__ConstraintAssignment_1"


    // $ANTLR start "rule__DescendantOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9682:1: rule__DescendantOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__DescendantOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9686:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9687:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9687:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9688:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDescendantOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DescendantOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOf__ConstraintAssignment_1"
    // InternalEclParser.g:9697:1: rule__ParentOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9701:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9702:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9702:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9703:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOf__ConstraintAssignment_1"


    // $ANTLR start "rule__ParentOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9712:1: rule__ParentOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__ParentOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9716:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9717:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9717:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9718:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getParentOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParentOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOf__ConstraintAssignment_1"
    // InternalEclParser.g:9727:1: rule__AncestorOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9731:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9732:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9732:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9733:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOf__ConstraintAssignment_1"


    // $ANTLR start "rule__AncestorOrSelfOf__ConstraintAssignment_1"
    // InternalEclParser.g:9742:1: rule__AncestorOrSelfOf__ConstraintAssignment_1 : ( ruleEclFocusConcept ) ;
    public final void rule__AncestorOrSelfOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9746:1: ( ( ruleEclFocusConcept ) )
            // InternalEclParser.g:9747:2: ( ruleEclFocusConcept )
            {
            // InternalEclParser.g:9747:2: ( ruleEclFocusConcept )
            // InternalEclParser.g:9748:3: ruleEclFocusConcept
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclFocusConcept();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAncestorOrSelfOfAccess().getConstraintEclFocusConceptParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AncestorOrSelfOf__ConstraintAssignment_1"


    // $ANTLR start "rule__MemberOf__ConstraintAssignment_1"
    // InternalEclParser.g:9757:1: rule__MemberOf__ConstraintAssignment_1 : ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) ;
    public final void rule__MemberOf__ConstraintAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9761:1: ( ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) ) )
            // InternalEclParser.g:9762:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            {
            // InternalEclParser.g:9762:2: ( ( rule__MemberOf__ConstraintAlternatives_1_0 ) )
            // InternalEclParser.g:9763:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }
            // InternalEclParser.g:9764:3: ( rule__MemberOf__ConstraintAlternatives_1_0 )
            // InternalEclParser.g:9764:4: rule__MemberOf__ConstraintAlternatives_1_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__MemberOf__ConstraintAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMemberOfAccess().getConstraintAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MemberOf__ConstraintAssignment_1"


    // $ANTLR start "rule__EclConceptReference__IdAssignment_0"
    // InternalEclParser.g:9772:1: rule__EclConceptReference__IdAssignment_0 : ( ruleSnomedIdentifier ) ;
    public final void rule__EclConceptReference__IdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9776:1: ( ( ruleSnomedIdentifier ) )
            // InternalEclParser.g:9777:2: ( ruleSnomedIdentifier )
            {
            // InternalEclParser.g:9777:2: ( ruleSnomedIdentifier )
            // InternalEclParser.g:9778:3: ruleSnomedIdentifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSnomedIdentifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getIdSnomedIdentifierParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__IdAssignment_0"


    // $ANTLR start "rule__EclConceptReference__TermAssignment_1"
    // InternalEclParser.g:9787:1: rule__EclConceptReference__TermAssignment_1 : ( RULE_TERM_STRING ) ;
    public final void rule__EclConceptReference__TermAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9791:1: ( ( RULE_TERM_STRING ) )
            // InternalEclParser.g:9792:2: ( RULE_TERM_STRING )
            {
            // InternalEclParser.g:9792:2: ( RULE_TERM_STRING )
            // InternalEclParser.g:9793:3: RULE_TERM_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_TERM_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceAccess().getTermTERM_STRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReference__TermAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_1"
    // InternalEclParser.g:9802:1: rule__EclConceptReferenceSet__ConceptsAssignment_1 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9806:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:9807:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:9807:2: ( ruleEclConceptReference )
            // InternalEclParser.g:9808:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_1"


    // $ANTLR start "rule__EclConceptReferenceSet__ConceptsAssignment_2"
    // InternalEclParser.g:9817:1: rule__EclConceptReferenceSet__ConceptsAssignment_2 : ( ruleEclConceptReference ) ;
    public final void rule__EclConceptReferenceSet__ConceptsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9821:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:9822:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:9822:2: ( ruleEclConceptReference )
            // InternalEclParser.g:9823:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclConceptReferenceSetAccess().getConceptsEclConceptReferenceParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclConceptReferenceSet__ConceptsAssignment_2"


    // $ANTLR start "rule__OrRefinement__RightAssignment_1_0_2"
    // InternalEclParser.g:9832:1: rule__OrRefinement__RightAssignment_1_0_2 : ( ruleAndRefinement ) ;
    public final void rule__OrRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9836:1: ( ( ruleAndRefinement ) )
            // InternalEclParser.g:9837:2: ( ruleAndRefinement )
            {
            // InternalEclParser.g:9837:2: ( ruleAndRefinement )
            // InternalEclParser.g:9838:3: ruleAndRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRefinementAccess().getRightAndRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__AndRefinement__RightAssignment_1_0_2"
    // InternalEclParser.g:9847:1: rule__AndRefinement__RightAssignment_1_0_2 : ( ruleSubRefinement ) ;
    public final void rule__AndRefinement__RightAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9851:1: ( ( ruleSubRefinement ) )
            // InternalEclParser.g:9852:2: ( ruleSubRefinement )
            {
            // InternalEclParser.g:9852:2: ( ruleSubRefinement )
            // InternalEclParser.g:9853:3: ruleSubRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRefinementAccess().getRightSubRefinementParserRuleCall_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndRefinement__RightAssignment_1_0_2"


    // $ANTLR start "rule__NestedRefinement__NestedAssignment_1"
    // InternalEclParser.g:9862:1: rule__NestedRefinement__NestedAssignment_1 : ( ruleEclRefinement ) ;
    public final void rule__NestedRefinement__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9866:1: ( ( ruleEclRefinement ) )
            // InternalEclParser.g:9867:2: ( ruleEclRefinement )
            {
            // InternalEclParser.g:9867:2: ( ruleEclRefinement )
            // InternalEclParser.g:9868:3: ruleEclRefinement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclRefinement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedRefinementAccess().getNestedEclRefinementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedRefinement__NestedAssignment_1"


    // $ANTLR start "rule__EclAttributeGroup__CardinalityAssignment_0"
    // InternalEclParser.g:9877:1: rule__EclAttributeGroup__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__EclAttributeGroup__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9881:1: ( ( ruleCardinality ) )
            // InternalEclParser.g:9882:2: ( ruleCardinality )
            {
            // InternalEclParser.g:9882:2: ( ruleCardinality )
            // InternalEclParser.g:9883:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__CardinalityAssignment_0"


    // $ANTLR start "rule__EclAttributeGroup__RefinementAssignment_2"
    // InternalEclParser.g:9892:1: rule__EclAttributeGroup__RefinementAssignment_2 : ( ruleEclAttributeSet ) ;
    public final void rule__EclAttributeGroup__RefinementAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9896:1: ( ( ruleEclAttributeSet ) )
            // InternalEclParser.g:9897:2: ( ruleEclAttributeSet )
            {
            // InternalEclParser.g:9897:2: ( ruleEclAttributeSet )
            // InternalEclParser.g:9898:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEclAttributeGroupAccess().getRefinementEclAttributeSetParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EclAttributeGroup__RefinementAssignment_2"


    // $ANTLR start "rule__OrAttributeSet__RightAssignment_1_2"
    // InternalEclParser.g:9907:1: rule__OrAttributeSet__RightAssignment_1_2 : ( ruleAndAttributeSet ) ;
    public final void rule__OrAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9911:1: ( ( ruleAndAttributeSet ) )
            // InternalEclParser.g:9912:2: ( ruleAndAttributeSet )
            {
            // InternalEclParser.g:9912:2: ( ruleAndAttributeSet )
            // InternalEclParser.g:9913:3: ruleAndAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAndAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAttributeSetAccess().getRightAndAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__OrAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__AndAttributeSet__RightAssignment_1_2"
    // InternalEclParser.g:9922:1: rule__AndAttributeSet__RightAssignment_1_2 : ( ruleSubAttributeSet ) ;
    public final void rule__AndAttributeSet__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9926:1: ( ( ruleSubAttributeSet ) )
            // InternalEclParser.g:9927:2: ( ruleSubAttributeSet )
            {
            // InternalEclParser.g:9927:2: ( ruleSubAttributeSet )
            // InternalEclParser.g:9928:3: ruleSubAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleSubAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAttributeSetAccess().getRightSubAttributeSetParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndAttributeSet__RightAssignment_1_2"


    // $ANTLR start "rule__NestedAttributeSet__NestedAssignment_1"
    // InternalEclParser.g:9937:1: rule__NestedAttributeSet__NestedAssignment_1 : ( ruleEclAttributeSet ) ;
    public final void rule__NestedAttributeSet__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9941:1: ( ( ruleEclAttributeSet ) )
            // InternalEclParser.g:9942:2: ( ruleEclAttributeSet )
            {
            // InternalEclParser.g:9942:2: ( ruleEclAttributeSet )
            // InternalEclParser.g:9943:3: ruleEclAttributeSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclAttributeSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedAttributeSetAccess().getNestedEclAttributeSetParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedAttributeSet__NestedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__CardinalityAssignment_0"
    // InternalEclParser.g:9952:1: rule__AttributeConstraint__CardinalityAssignment_0 : ( ruleCardinality ) ;
    public final void rule__AttributeConstraint__CardinalityAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9956:1: ( ( ruleCardinality ) )
            // InternalEclParser.g:9957:2: ( ruleCardinality )
            {
            // InternalEclParser.g:9957:2: ( ruleCardinality )
            // InternalEclParser.g:9958:3: ruleCardinality
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleCardinality();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getCardinalityCardinalityParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__CardinalityAssignment_0"


    // $ANTLR start "rule__AttributeConstraint__ReversedAssignment_1"
    // InternalEclParser.g:9967:1: rule__AttributeConstraint__ReversedAssignment_1 : ( RULE_REVERSED ) ;
    public final void rule__AttributeConstraint__ReversedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9971:1: ( ( RULE_REVERSED ) )
            // InternalEclParser.g:9972:2: ( RULE_REVERSED )
            {
            // InternalEclParser.g:9972:2: ( RULE_REVERSED )
            // InternalEclParser.g:9973:3: RULE_REVERSED
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_REVERSED,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getReversedREVERSEDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ReversedAssignment_1"


    // $ANTLR start "rule__AttributeConstraint__AttributeAssignment_2"
    // InternalEclParser.g:9982:1: rule__AttributeConstraint__AttributeAssignment_2 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeConstraint__AttributeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:9986:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:9987:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:9987:2: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:9988:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getAttributeFilteredExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__AttributeAssignment_2"


    // $ANTLR start "rule__AttributeConstraint__ComparisonAssignment_3"
    // InternalEclParser.g:9997:1: rule__AttributeConstraint__ComparisonAssignment_3 : ( ruleComparison ) ;
    public final void rule__AttributeConstraint__ComparisonAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10001:1: ( ( ruleComparison ) )
            // InternalEclParser.g:10002:2: ( ruleComparison )
            {
            // InternalEclParser.g:10002:2: ( ruleComparison )
            // InternalEclParser.g:10003:3: ruleComparison
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleComparison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeConstraintAccess().getComparisonComparisonParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeConstraint__ComparisonAssignment_3"


    // $ANTLR start "rule__Cardinality__MinAssignment_1"
    // InternalEclParser.g:10012:1: rule__Cardinality__MinAssignment_1 : ( ruleNonNegativeInteger ) ;
    public final void rule__Cardinality__MinAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10016:1: ( ( ruleNonNegativeInteger ) )
            // InternalEclParser.g:10017:2: ( ruleNonNegativeInteger )
            {
            // InternalEclParser.g:10017:2: ( ruleNonNegativeInteger )
            // InternalEclParser.g:10018:3: ruleNonNegativeInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNonNegativeInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMinNonNegativeIntegerParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MinAssignment_1"


    // $ANTLR start "rule__Cardinality__MaxAssignment_3"
    // InternalEclParser.g:10027:1: rule__Cardinality__MaxAssignment_3 : ( ruleMaxValue ) ;
    public final void rule__Cardinality__MaxAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10031:1: ( ( ruleMaxValue ) )
            // InternalEclParser.g:10032:2: ( ruleMaxValue )
            {
            // InternalEclParser.g:10032:2: ( ruleMaxValue )
            // InternalEclParser.g:10033:3: ruleMaxValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleMaxValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCardinalityAccess().getMaxMaxValueParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Cardinality__MaxAssignment_3"


    // $ANTLR start "rule__AttributeComparison__OpAssignment_0"
    // InternalEclParser.g:10042:1: rule__AttributeComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__AttributeComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10046:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10047:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10047:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10048:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__OpAssignment_0"


    // $ANTLR start "rule__AttributeComparison__ValueAssignment_1"
    // InternalEclParser.g:10057:1: rule__AttributeComparison__ValueAssignment_1 : ( ruleFilteredExpressionConstraint ) ;
    public final void rule__AttributeComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10061:1: ( ( ruleFilteredExpressionConstraint ) )
            // InternalEclParser.g:10062:2: ( ruleFilteredExpressionConstraint )
            {
            // InternalEclParser.g:10062:2: ( ruleFilteredExpressionConstraint )
            // InternalEclParser.g:10063:3: ruleFilteredExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilteredExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAttributeComparisonAccess().getValueFilteredExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AttributeComparison__ValueAssignment_1"


    // $ANTLR start "rule__BooleanValueComparison__OpAssignment_0"
    // InternalEclParser.g:10072:1: rule__BooleanValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__BooleanValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10076:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10077:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10077:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10078:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__OpAssignment_0"


    // $ANTLR start "rule__BooleanValueComparison__ValueAssignment_1"
    // InternalEclParser.g:10087:1: rule__BooleanValueComparison__ValueAssignment_1 : ( ruleBoolean ) ;
    public final void rule__BooleanValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10091:1: ( ( ruleBoolean ) )
            // InternalEclParser.g:10092:2: ( ruleBoolean )
            {
            // InternalEclParser.g:10092:2: ( ruleBoolean )
            // InternalEclParser.g:10093:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanValueComparisonAccess().getValueBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__StringValueComparison__OpAssignment_0"
    // InternalEclParser.g:10102:1: rule__StringValueComparison__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__StringValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10106:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10107:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10107:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10108:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__OpAssignment_0"


    // $ANTLR start "rule__StringValueComparison__ValueAssignment_1"
    // InternalEclParser.g:10117:1: rule__StringValueComparison__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__StringValueComparison__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10121:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:10122:2: ( RULE_STRING )
            {
            // InternalEclParser.g:10122:2: ( RULE_STRING )
            // InternalEclParser.g:10123:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStringValueComparisonAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StringValueComparison__ValueAssignment_1"


    // $ANTLR start "rule__IntegerValueComparison__OpAssignment_0"
    // InternalEclParser.g:10132:1: rule__IntegerValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__IntegerValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10136:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEclParser.g:10137:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10137:2: ( ruleNUMERIC_OPERATOR )
            // InternalEclParser.g:10138:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__OpAssignment_0"


    // $ANTLR start "rule__IntegerValueComparison__ValueAssignment_2"
    // InternalEclParser.g:10147:1: rule__IntegerValueComparison__ValueAssignment_2 : ( ruleInteger ) ;
    public final void rule__IntegerValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10151:1: ( ( ruleInteger ) )
            // InternalEclParser.g:10152:2: ( ruleInteger )
            {
            // InternalEclParser.g:10152:2: ( ruleInteger )
            // InternalEclParser.g:10153:3: ruleInteger
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntegerValueComparisonAccess().getValueIntegerParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntegerValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__DecimalValueComparison__OpAssignment_0"
    // InternalEclParser.g:10162:1: rule__DecimalValueComparison__OpAssignment_0 : ( ruleNUMERIC_OPERATOR ) ;
    public final void rule__DecimalValueComparison__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10166:1: ( ( ruleNUMERIC_OPERATOR ) )
            // InternalEclParser.g:10167:2: ( ruleNUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10167:2: ( ruleNUMERIC_OPERATOR )
            // InternalEclParser.g:10168:3: ruleNUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getOpNUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__OpAssignment_0"


    // $ANTLR start "rule__DecimalValueComparison__ValueAssignment_2"
    // InternalEclParser.g:10177:1: rule__DecimalValueComparison__ValueAssignment_2 : ( ruleDecimal ) ;
    public final void rule__DecimalValueComparison__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10181:1: ( ( ruleDecimal ) )
            // InternalEclParser.g:10182:2: ( ruleDecimal )
            {
            // InternalEclParser.g:10182:2: ( ruleDecimal )
            // InternalEclParser.g:10183:3: ruleDecimal
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDecimal();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDecimalValueComparisonAccess().getValueDecimalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DecimalValueComparison__ValueAssignment_2"


    // $ANTLR start "rule__NestedExpression__NestedAssignment_1"
    // InternalEclParser.g:10192:1: rule__NestedExpression__NestedAssignment_1 : ( ruleExpressionConstraint ) ;
    public final void rule__NestedExpression__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10196:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10197:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10197:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10198:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedExpressionAccess().getNestedExpressionConstraintParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedExpression__NestedAssignment_1"


    // $ANTLR start "rule__DisjunctionFilter__RightAssignment_1_2"
    // InternalEclParser.g:10207:1: rule__DisjunctionFilter__RightAssignment_1_2 : ( ruleConjunctionFilter ) ;
    public final void rule__DisjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10211:1: ( ( ruleConjunctionFilter ) )
            // InternalEclParser.g:10212:2: ( ruleConjunctionFilter )
            {
            // InternalEclParser.g:10212:2: ( ruleConjunctionFilter )
            // InternalEclParser.g:10213:3: ruleConjunctionFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleConjunctionFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDisjunctionFilterAccess().getRightConjunctionFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DisjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__ConjunctionFilter__RightAssignment_1_2"
    // InternalEclParser.g:10222:1: rule__ConjunctionFilter__RightAssignment_1_2 : ( rulePropertyFilter ) ;
    public final void rule__ConjunctionFilter__RightAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10226:1: ( ( rulePropertyFilter ) )
            // InternalEclParser.g:10227:2: ( rulePropertyFilter )
            {
            // InternalEclParser.g:10227:2: ( rulePropertyFilter )
            // InternalEclParser.g:10228:3: rulePropertyFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            rulePropertyFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConjunctionFilterAccess().getRightPropertyFilterParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConjunctionFilter__RightAssignment_1_2"


    // $ANTLR start "rule__NestedFilter__NestedAssignment_1"
    // InternalEclParser.g:10237:1: rule__NestedFilter__NestedAssignment_1 : ( ruleFilter ) ;
    public final void rule__NestedFilter__NestedAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10241:1: ( ( ruleFilter ) )
            // InternalEclParser.g:10242:2: ( ruleFilter )
            {
            // InternalEclParser.g:10242:2: ( ruleFilter )
            // InternalEclParser.g:10243:3: ruleFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNestedFilterAccess().getNestedFilterParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NestedFilter__NestedAssignment_1"


    // $ANTLR start "rule__TypedTermFilter__OpAssignment_0"
    // InternalEclParser.g:10252:1: rule__TypedTermFilter__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilter__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10256:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10257:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10257:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10258:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"
    // InternalEclParser.g:10267:1: rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0 : ( ruleLEXICAL_SEARCH_TYPE ) ;
    public final void rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10271:1: ( ( ruleLEXICAL_SEARCH_TYPE ) )
            // InternalEclParser.g:10272:2: ( ruleLEXICAL_SEARCH_TYPE )
            {
            // InternalEclParser.g:10272:2: ( ruleLEXICAL_SEARCH_TYPE )
            // InternalEclParser.g:10273:3: ruleLEXICAL_SEARCH_TYPE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_1_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleLEXICAL_SEARCH_TYPE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getLexicalSearchTypeLEXICAL_SEARCH_TYPEParserRuleCall_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__LexicalSearchTypeAssignment_1_0"


    // $ANTLR start "rule__TypedTermFilter__TermAssignment_2"
    // InternalEclParser.g:10282:1: rule__TypedTermFilter__TermAssignment_2 : ( RULE_STRING ) ;
    public final void rule__TypedTermFilter__TermAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10286:1: ( ( RULE_STRING ) )
            // InternalEclParser.g:10287:2: ( RULE_STRING )
            {
            // InternalEclParser.g:10287:2: ( RULE_STRING )
            // InternalEclParser.g:10288:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }
            match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterAccess().getTermSTRINGTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilter__TermAssignment_2"


    // $ANTLR start "rule__TypedTermFilterSet__OpAssignment_0"
    // InternalEclParser.g:10297:1: rule__TypedTermFilterSet__OpAssignment_0 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypedTermFilterSet__OpAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10301:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10302:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10302:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10303:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__OpAssignment_0"


    // $ANTLR start "rule__TypedTermFilterSet__TermsAssignment_2"
    // InternalEclParser.g:10312:1: rule__TypedTermFilterSet__TermsAssignment_2 : ( ruleTypedTermFilter ) ;
    public final void rule__TypedTermFilterSet__TermsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10316:1: ( ( ruleTypedTermFilter ) )
            // InternalEclParser.g:10317:2: ( ruleTypedTermFilter )
            {
            // InternalEclParser.g:10317:2: ( ruleTypedTermFilter )
            // InternalEclParser.g:10318:3: ruleTypedTermFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__TermsAssignment_2"


    // $ANTLR start "rule__TypedTermFilterSet__TermsAssignment_3"
    // InternalEclParser.g:10327:1: rule__TypedTermFilterSet__TermsAssignment_3 : ( ruleTypedTermFilter ) ;
    public final void rule__TypedTermFilterSet__TermsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10331:1: ( ( ruleTypedTermFilter ) )
            // InternalEclParser.g:10332:2: ( ruleTypedTermFilter )
            {
            // InternalEclParser.g:10332:2: ( ruleTypedTermFilter )
            // InternalEclParser.g:10333:3: ruleTypedTermFilter
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleTypedTermFilter();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypedTermFilterSetAccess().getTermsTypedTermFilterParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypedTermFilterSet__TermsAssignment_3"


    // $ANTLR start "rule__LanguageFilter__OpAssignment_1"
    // InternalEclParser.g:10342:1: rule__LanguageFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__LanguageFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10346:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10347:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10347:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10348:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__OpAssignment_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_0"
    // InternalEclParser.g:10357:1: rule__LanguageFilter__LanguageCodesAssignment_2_0 : ( ruleAlphabetical ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10361:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10362:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10362:2: ( ruleAlphabetical )
            // InternalEclParser.g:10363:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_0"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"
    // InternalEclParser.g:10372:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_1 : ( ruleAlphabetical ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10376:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10377:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10377:2: ( ruleAlphabetical )
            // InternalEclParser.g:10378:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_1"


    // $ANTLR start "rule__LanguageFilter__LanguageCodesAssignment_2_1_2"
    // InternalEclParser.g:10387:1: rule__LanguageFilter__LanguageCodesAssignment_2_1_2 : ( ruleAlphabetical ) ;
    public final void rule__LanguageFilter__LanguageCodesAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10391:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10392:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10392:2: ( ruleAlphabetical )
            // InternalEclParser.g:10393:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageFilterAccess().getLanguageCodesAlphabeticalParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageFilter__LanguageCodesAssignment_2_1_2"


    // $ANTLR start "rule__TypeIdFilter__OpAssignment_1"
    // InternalEclParser.g:10402:1: rule__TypeIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10406:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10407:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10407:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10408:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeIdFilter__TypeAssignment_2"
    // InternalEclParser.g:10417:1: rule__TypeIdFilter__TypeAssignment_2 : ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) ;
    public final void rule__TypeIdFilter__TypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10421:1: ( ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) ) )
            // InternalEclParser.g:10422:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            {
            // InternalEclParser.g:10422:2: ( ( rule__TypeIdFilter__TypeAlternatives_2_0 ) )
            // InternalEclParser.g:10423:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }
            // InternalEclParser.g:10424:3: ( rule__TypeIdFilter__TypeAlternatives_2_0 )
            // InternalEclParser.g:10424:4: rule__TypeIdFilter__TypeAlternatives_2_0
            {
            pushFollow(FollowSets000.FOLLOW_2);
            rule__TypeIdFilter__TypeAlternatives_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeIdFilterAccess().getTypeAlternatives_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeIdFilter__TypeAssignment_2"


    // $ANTLR start "rule__TypeTokenFilter__OpAssignment_1"
    // InternalEclParser.g:10432:1: rule__TypeTokenFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__TypeTokenFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10436:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10437:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10437:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10438:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__OpAssignment_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_0"
    // InternalEclParser.g:10447:1: rule__TypeTokenFilter__TokensAssignment_2_0 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10451:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10452:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10452:2: ( ruleAlphabetical )
            // InternalEclParser.g:10453:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_0"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_1"
    // InternalEclParser.g:10462:1: rule__TypeTokenFilter__TokensAssignment_2_1_1 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10466:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10467:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10467:2: ( ruleAlphabetical )
            // InternalEclParser.g:10468:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_1"


    // $ANTLR start "rule__TypeTokenFilter__TokensAssignment_2_1_2"
    // InternalEclParser.g:10477:1: rule__TypeTokenFilter__TokensAssignment_2_1_2 : ( ruleAlphabetical ) ;
    public final void rule__TypeTokenFilter__TokensAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10481:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10482:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10482:2: ( ruleAlphabetical )
            // InternalEclParser.g:10483:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTypeTokenFilterAccess().getTokensAlphabeticalParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TypeTokenFilter__TokensAssignment_2_1_2"


    // $ANTLR start "rule__DialectIdFilter__OpAssignment_1"
    // InternalEclParser.g:10492:1: rule__DialectIdFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectIdFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10496:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10497:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10497:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10498:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_0"
    // InternalEclParser.g:10507:1: rule__DialectIdFilter__DialectsAssignment_2_0 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10511:1: ( ( ruleDialect ) )
            // InternalEclParser.g:10512:2: ( ruleDialect )
            {
            // InternalEclParser.g:10512:2: ( ruleDialect )
            // InternalEclParser.g:10513:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_1"
    // InternalEclParser.g:10522:1: rule__DialectIdFilter__DialectsAssignment_2_1_1 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10526:1: ( ( ruleDialect ) )
            // InternalEclParser.g:10527:2: ( ruleDialect )
            {
            // InternalEclParser.g:10527:2: ( ruleDialect )
            // InternalEclParser.g:10528:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectIdFilter__DialectsAssignment_2_1_2"
    // InternalEclParser.g:10537:1: rule__DialectIdFilter__DialectsAssignment_2_1_2 : ( ruleDialect ) ;
    public final void rule__DialectIdFilter__DialectsAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10541:1: ( ( ruleDialect ) )
            // InternalEclParser.g:10542:2: ( ruleDialect )
            {
            // InternalEclParser.g:10542:2: ( ruleDialect )
            // InternalEclParser.g:10543:3: ruleDialect
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialect();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectIdFilterAccess().getDialectsDialectParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectIdFilter__DialectsAssignment_2_1_2"


    // $ANTLR start "rule__DialectAliasFilter__OpAssignment_1"
    // InternalEclParser.g:10552:1: rule__DialectAliasFilter__OpAssignment_1 : ( ruleNON_NUMERIC_OPERATOR ) ;
    public final void rule__DialectAliasFilter__OpAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10556:1: ( ( ruleNON_NUMERIC_OPERATOR ) )
            // InternalEclParser.g:10557:2: ( ruleNON_NUMERIC_OPERATOR )
            {
            // InternalEclParser.g:10557:2: ( ruleNON_NUMERIC_OPERATOR )
            // InternalEclParser.g:10558:3: ruleNON_NUMERIC_OPERATOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleNON_NUMERIC_OPERATOR();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getOpNON_NUMERIC_OPERATORParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__OpAssignment_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_0"
    // InternalEclParser.g:10567:1: rule__DialectAliasFilter__DialectsAssignment_2_0 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10571:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:10572:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:10572:2: ( ruleDialectAlias )
            // InternalEclParser.g:10573:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_0"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_1"
    // InternalEclParser.g:10582:1: rule__DialectAliasFilter__DialectsAssignment_2_1_1 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10586:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:10587:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:10587:2: ( ruleDialectAlias )
            // InternalEclParser.g:10588:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_1"


    // $ANTLR start "rule__DialectAliasFilter__DialectsAssignment_2_1_2"
    // InternalEclParser.g:10597:1: rule__DialectAliasFilter__DialectsAssignment_2_1_2 : ( ruleDialectAlias ) ;
    public final void rule__DialectAliasFilter__DialectsAssignment_2_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10601:1: ( ( ruleDialectAlias ) )
            // InternalEclParser.g:10602:2: ( ruleDialectAlias )
            {
            // InternalEclParser.g:10602:2: ( ruleDialectAlias )
            // InternalEclParser.g:10603:3: ruleDialectAlias
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAlias();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasFilterAccess().getDialectsDialectAliasParserRuleCall_2_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAliasFilter__DialectsAssignment_2_1_2"


    // $ANTLR start "rule__Dialect__LanguageRefSetIdAssignment_0"
    // InternalEclParser.g:10612:1: rule__Dialect__LanguageRefSetIdAssignment_0 : ( ruleEclConceptReference ) ;
    public final void rule__Dialect__LanguageRefSetIdAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10616:1: ( ( ruleEclConceptReference ) )
            // InternalEclParser.g:10617:2: ( ruleEclConceptReference )
            {
            // InternalEclParser.g:10617:2: ( ruleEclConceptReference )
            // InternalEclParser.g:10618:3: ruleEclConceptReference
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getLanguageRefSetIdEclConceptReferenceParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__LanguageRefSetIdAssignment_0"


    // $ANTLR start "rule__Dialect__AcceptabilityAssignment_1"
    // InternalEclParser.g:10627:1: rule__Dialect__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__Dialect__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10631:1: ( ( ruleAcceptability ) )
            // InternalEclParser.g:10632:2: ( ruleAcceptability )
            {
            // InternalEclParser.g:10632:2: ( ruleAcceptability )
            // InternalEclParser.g:10633:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Dialect__AcceptabilityAssignment_1"


    // $ANTLR start "rule__DialectAlias__AliasAssignment_0"
    // InternalEclParser.g:10642:1: rule__DialectAlias__AliasAssignment_0 : ( ruleDialectAliasValue ) ;
    public final void rule__DialectAlias__AliasAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10646:1: ( ( ruleDialectAliasValue ) )
            // InternalEclParser.g:10647:2: ( ruleDialectAliasValue )
            {
            // InternalEclParser.g:10647:2: ( ruleDialectAliasValue )
            // InternalEclParser.g:10648:3: ruleDialectAliasValue
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDialectAliasValue();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAliasDialectAliasValueParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AliasAssignment_0"


    // $ANTLR start "rule__DialectAlias__AcceptabilityAssignment_1"
    // InternalEclParser.g:10657:1: rule__DialectAlias__AcceptabilityAssignment_1 : ( ruleAcceptability ) ;
    public final void rule__DialectAlias__AcceptabilityAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10661:1: ( ( ruleAcceptability ) )
            // InternalEclParser.g:10662:2: ( ruleAcceptability )
            {
            // InternalEclParser.g:10662:2: ( ruleAcceptability )
            // InternalEclParser.g:10663:3: ruleAcceptability
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAcceptability();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDialectAliasAccess().getAcceptabilityAcceptabilityParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DialectAlias__AcceptabilityAssignment_1"


    // $ANTLR start "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"
    // InternalEclParser.g:10672:1: rule__AcceptabilityIdSet__AcceptabilitiesAssignment : ( ruleEclConceptReferenceSet ) ;
    public final void rule__AcceptabilityIdSet__AcceptabilitiesAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10676:1: ( ( ruleEclConceptReferenceSet ) )
            // InternalEclParser.g:10677:2: ( ruleEclConceptReferenceSet )
            {
            // InternalEclParser.g:10677:2: ( ruleEclConceptReferenceSet )
            // InternalEclParser.g:10678:3: ruleEclConceptReferenceSet
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleEclConceptReferenceSet();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityIdSetAccess().getAcceptabilitiesEclConceptReferenceSetParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityIdSet__AcceptabilitiesAssignment"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"
    // InternalEclParser.g:10687:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1 : ( ruleAlphabetical ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10691:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10692:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10692:2: ( ruleAlphabetical )
            // InternalEclParser.g:10693:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_1_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_1"


    // $ANTLR start "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2"
    // InternalEclParser.g:10702:1: rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2 : ( ruleAlphabetical ) ;
    public final void rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10706:1: ( ( ruleAlphabetical ) )
            // InternalEclParser.g:10707:2: ( ruleAlphabetical )
            {
            // InternalEclParser.g:10707:2: ( ruleAlphabetical )
            // InternalEclParser.g:10708:3: ruleAlphabetical
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAlphabetical();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptabilityTokenSetAccess().getAcceptabilitiesAlphabeticalParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptabilityTokenSet__AcceptabilitiesAssignment_2"


    // $ANTLR start "rule__ActiveFilter__DomainAssignment_0_0"
    // InternalEclParser.g:10717:1: rule__ActiveFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ActiveFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10721:1: ( ( ruleDOMAIN ) )
            // InternalEclParser.g:10722:2: ( ruleDOMAIN )
            {
            // InternalEclParser.g:10722:2: ( ruleDOMAIN )
            // InternalEclParser.g:10723:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ActiveFilter__ActiveAssignment_3"
    // InternalEclParser.g:10732:1: rule__ActiveFilter__ActiveAssignment_3 : ( ruleBoolean ) ;
    public final void rule__ActiveFilter__ActiveAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10736:1: ( ( ruleBoolean ) )
            // InternalEclParser.g:10737:2: ( ruleBoolean )
            {
            // InternalEclParser.g:10737:2: ( ruleBoolean )
            // InternalEclParser.g:10738:3: ruleBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getActiveFilterAccess().getActiveBooleanParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ActiveFilter__ActiveAssignment_3"


    // $ANTLR start "rule__ModuleFilter__DomainAssignment_0_0"
    // InternalEclParser.g:10747:1: rule__ModuleFilter__DomainAssignment_0_0 : ( ruleDOMAIN ) ;
    public final void rule__ModuleFilter__DomainAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10751:1: ( ( ruleDOMAIN ) )
            // InternalEclParser.g:10752:2: ( ruleDOMAIN )
            {
            // InternalEclParser.g:10752:2: ( ruleDOMAIN )
            // InternalEclParser.g:10753:3: ruleDOMAIN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleDOMAIN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getDomainDOMAINParserRuleCall_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__DomainAssignment_0_0"


    // $ANTLR start "rule__ModuleFilter__ModuleIdAssignment_3"
    // InternalEclParser.g:10762:1: rule__ModuleFilter__ModuleIdAssignment_3 : ( ruleExpressionConstraint ) ;
    public final void rule__ModuleFilter__ModuleIdAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10766:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10767:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10767:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10768:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getModuleFilterAccess().getModuleIdExpressionConstraintParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ModuleFilter__ModuleIdAssignment_3"


    // $ANTLR start "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"
    // InternalEclParser.g:10777:1: rule__PreferredInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__PreferredInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10781:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10782:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10782:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10783:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPreferredInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PreferredInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"
    // InternalEclParser.g:10792:1: rule__AcceptableInFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__AcceptableInFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10796:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10797:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10797:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10798:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAcceptableInFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AcceptableInFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"
    // InternalEclParser.g:10807:1: rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10811:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10812:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10812:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10813:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLanguageRefSetFilterAccess().getLanguageRefSetIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LanguageRefSetFilter__LanguageRefSetIdAssignment_2"


    // $ANTLR start "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"
    // InternalEclParser.g:10822:1: rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2 : ( ruleExpressionConstraint ) ;
    public final void rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalEclParser.g:10826:1: ( ( ruleExpressionConstraint ) )
            // InternalEclParser.g:10827:2: ( ruleExpressionConstraint )
            {
            // InternalEclParser.g:10827:2: ( ruleExpressionConstraint )
            // InternalEclParser.g:10828:3: ruleExpressionConstraint
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleExpressionConstraint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCaseSignificanceFilterAccess().getCaseSignificanceIdExpressionConstraintParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CaseSignificanceFilter__CaseSignificanceIdAssignment_2"

    // $ANTLR start synpred1_InternalEclParser
    public final void synpred1_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2134:5: ( RULE_ALPHA )
        // InternalEclParser.g:2134:5: RULE_ALPHA
        {
        match(input,RULE_ALPHA,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalEclParser

    // $ANTLR start synpred17_InternalEclParser
    public final void synpred17_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2789:2: ( ( ruleAttributeConstraint ) )
        // InternalEclParser.g:2789:2: ( ruleAttributeConstraint )
        {
        // InternalEclParser.g:2789:2: ( ruleAttributeConstraint )
        // InternalEclParser.g:2790:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_InternalEclParser

    // $ANTLR start synpred18_InternalEclParser
    public final void synpred18_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2795:2: ( ( ruleEclAttributeGroup ) )
        // InternalEclParser.g:2795:2: ( ruleEclAttributeGroup )
        {
        // InternalEclParser.g:2795:2: ( ruleEclAttributeGroup )
        // InternalEclParser.g:2796:3: ruleEclAttributeGroup
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubRefinementAccess().getEclAttributeGroupParserRuleCall_1()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleEclAttributeGroup();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalEclParser

    // $ANTLR start synpred20_InternalEclParser
    public final void synpred20_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:2837:2: ( ( ruleAttributeConstraint ) )
        // InternalEclParser.g:2837:2: ( ruleAttributeConstraint )
        {
        // InternalEclParser.g:2837:2: ( ruleAttributeConstraint )
        // InternalEclParser.g:2838:3: ruleAttributeConstraint
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSubAttributeSetAccess().getAttributeConstraintParserRuleCall_0()); 
        }
        pushFollow(FollowSets000.FOLLOW_2);
        ruleAttributeConstraint();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalEclParser

    // $ANTLR start synpred71_InternalEclParser
    public final void synpred71_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:3696:3: ( rule__OrExpressionConstraint__Group_1__0 )
        // InternalEclParser.g:3696:3: rule__OrExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_InternalEclParser

    // $ANTLR start synpred72_InternalEclParser
    public final void synpred72_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:3831:3: ( rule__AndExpressionConstraint__Group_1__0 )
        // InternalEclParser.g:3831:3: rule__AndExpressionConstraint__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndExpressionConstraint__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred72_InternalEclParser

    // $ANTLR start synpred79_InternalEclParser
    public final void synpred79_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:5127:3: ( rule__OrRefinement__Group_1__0 )
        // InternalEclParser.g:5127:3: rule__OrRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__OrRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_InternalEclParser

    // $ANTLR start synpred80_InternalEclParser
    public final void synpred80_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:5289:3: ( rule__AndRefinement__Group_1__0 )
        // InternalEclParser.g:5289:3: rule__AndRefinement__Group_1__0
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__AndRefinement__Group_1__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred80_InternalEclParser

    // $ANTLR start synpred99_InternalEclParser
    public final void synpred99_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:9210:4: ( rule__SnomedIdentifier__Alternatives_5 )
        // InternalEclParser.g:9210:4: rule__SnomedIdentifier__Alternatives_5
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__SnomedIdentifier__Alternatives_5();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalEclParser

    // $ANTLR start synpred104_InternalEclParser
    public final void synpred104_InternalEclParser_fragment() throws RecognitionException {   
        // InternalEclParser.g:9508:3: ( rule__DialectAliasValue__Alternatives_1 )
        // InternalEclParser.g:9508:3: rule__DialectAliasValue__Alternatives_1
        {
        pushFollow(FollowSets000.FOLLOW_2);
        rule__DialectAliasValue__Alternatives_1();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred104_InternalEclParser

    // Delegated rules

    public final boolean synpred18_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalEclParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalEclParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA13 dfa13 = new DFA13(this);
    protected DFA69 dfa69 = new DFA69(this);
    static final String dfa_1s = "\21\uffff";
    static final String dfa_2s = "\1\34\1\0\14\uffff\1\0\2\uffff";
    static final String dfa_3s = "\1\66\1\0\14\uffff\1\0\2\uffff";
    static final String dfa_4s = "\2\uffff\1\1\14\uffff\1\2\1\3";
    static final String dfa_5s = "\1\uffff\1\0\14\uffff\1\1\2\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\3\uffff\1\2\1\uffff\1\17\1\uffff\1\16\1\uffff\1\1\3\uffff\1\2\1\uffff\1\2\2\uffff\10\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2784:1: rule__SubRefinement__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleEclAttributeGroup ) | ( ruleNestedRefinement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_1 = input.LA(1);

                         
                        int index7_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalEclParser()) ) {s = 2;}

                        else if ( (synpred18_InternalEclParser()) ) {s = 15;}

                         
                        input.seek(index7_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_14 = input.LA(1);

                         
                        int index7_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred17_InternalEclParser()) ) {s = 2;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index7_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\20\uffff";
    static final String dfa_8s = "\1\34\15\uffff\1\0\1\uffff";
    static final String dfa_9s = "\1\66\15\uffff\1\0\1\uffff";
    static final String dfa_10s = "\1\uffff\1\1\15\uffff\1\2";
    static final String dfa_11s = "\16\uffff\1\0\1\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\3\uffff\1\1\3\uffff\1\16\1\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\10\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "2832:1: rule__SubAttributeSet__Alternatives : ( ( ruleAttributeConstraint ) | ( ruleNestedAttributeSet ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_14 = input.LA(1);

                         
                        int index9_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalEclParser()) ) {s = 1;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index9_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\22\uffff";
    static final String dfa_14s = "\14\uffff\2\16\2\uffff\2\16";
    static final String dfa_15s = "\1\55\2\22\4\71\2\uffff\3\37\2\20\2\uffff\2\20";
    static final String dfa_16s = "\1\70\2\100\4\71\2\uffff\1\51\2\40\2\73\2\uffff\2\73";
    static final String dfa_17s = "\7\uffff\1\1\1\2\5\uffff\1\3\1\4\2\uffff";
    static final String dfa_18s = "\22\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\1\2\1\4\1\3\6\uffff\1\5\1\6",
            "\1\7\3\uffff\1\7\42\uffff\1\11\6\uffff\1\10",
            "\1\7\3\uffff\1\7\42\uffff\1\11\6\uffff\1\10",
            "\1\11",
            "\1\11",
            "\1\11",
            "\1\11",
            "",
            "",
            "\1\14\1\15\7\uffff\1\12\1\13",
            "\1\14\1\15",
            "\1\14\1\15",
            "\1\16\10\uffff\2\16\3\uffff\1\16\4\uffff\1\16\1\uffff\1\16\5\uffff\1\17\17\uffff\1\16",
            "\1\16\10\uffff\2\16\3\uffff\1\16\1\21\1\20\2\uffff\1\16\1\uffff\1\16\5\uffff\1\17\17\uffff\1\16",
            "",
            "",
            "\1\16\10\uffff\2\16\3\uffff\1\16\1\21\1\20\2\uffff\1\16\1\uffff\1\16\5\uffff\1\17\17\uffff\1\16",
            "\1\16\10\uffff\2\16\3\uffff\1\16\1\21\1\20\2\uffff\1\16\1\uffff\1\16\5\uffff\1\17\17\uffff\1\16"
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2874:1: rule__DataTypeComparison__Alternatives : ( ( ruleBooleanValueComparison ) | ( ruleStringValueComparison ) | ( ruleIntegerValueComparison ) | ( ruleDecimalValueComparison ) );";
        }
    }
    static final String dfa_20s = "\17\uffff";
    static final String dfa_21s = "\1\4\4\uffff\2\53\7\uffff\1\13";
    static final String dfa_22s = "\1\44\4\uffff\2\53\7\uffff\1\16";
    static final String dfa_23s = "\1\uffff\1\1\1\2\1\3\1\4\2\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff";
    static final String dfa_24s = "\17\uffff}>";
    static final String[] dfa_25s = {
            "\1\14\1\12\1\11\1\6\1\10\1\4\1\2\1\13\1\5\1\4\1\7\1\3\5\uffff\1\1\1\uffff\1\3\14\uffff\1\15",
            "",
            "",
            "",
            "",
            "\1\16",
            "\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\13\2\uffff\1\7"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "2928:1: rule__PropertyFilter__Alternatives : ( ( ruleTermFilter ) | ( ruleLanguageFilter ) | ( ruleTypeFilter ) | ( ruleDialectFilter ) | ( ruleActiveFilter ) | ( rulePreferredInFilter ) | ( ruleAcceptableInFilter ) | ( ruleLanguageRefSetFilter ) | ( ruleModuleFilter ) | ( ruleCaseSignificanceFilter ) | ( ruleNestedFilter ) );";
        }
    }
    static final String dfa_26s = "\102\uffff";
    static final String dfa_27s = "\1\1\1\uffff\1\3\1\uffff\36\3\40\uffff";
    static final String dfa_28s = "\1\20\1\uffff\1\20\1\uffff\36\20\40\0";
    static final String dfa_29s = "\1\73\1\uffff\1\73\1\uffff\36\73\40\0";
    static final String dfa_30s = "\1\uffff\1\2\1\uffff\1\1\76\uffff";
    static final String dfa_31s = "\42\uffff\1\25\1\12\1\17\1\24\1\2\1\6\1\5\1\11\1\22\1\30\1\27\1\32\1\33\1\7\1\37\1\34\1\10\1\15\1\14\1\21\1\36\1\0\1\31\1\20\1\1\1\16\1\4\1\3\1\26\1\23\1\13\1\35}>";
    static final String[] dfa_32s = {
            "\1\1\10\uffff\3\1\2\uffff\1\1\1\3\1\2\1\1\1\uffff\3\1\5\uffff\1\1\1\uffff\4\1\6\uffff\2\1\1\uffff\2\1",
            "",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\5\1\4\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\7\1\6\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\11\1\10\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\13\1\12\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\15\1\14\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\17\1\16\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\21\1\20\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\23\1\22\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\25\1\24\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\27\1\26\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\31\1\30\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\33\1\32\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\35\1\34\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\37\1\36\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\41\1\40\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\43\1\42\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\45\1\44\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\47\1\46\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\51\1\50\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\53\1\52\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\55\1\54\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\57\1\56\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\61\1\60\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\63\1\62\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\65\1\64\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\67\1\66\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\71\1\70\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\73\1\72\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\75\1\74\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\77\1\76\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\3\10\uffff\3\3\2\uffff\1\3\1\101\1\100\1\3\1\uffff\3\3\5\uffff\1\3\1\uffff\4\3\6\uffff\2\3\1\uffff\2\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_26;
            this.eof = dfa_27;
            this.min = dfa_28;
            this.max = dfa_29;
            this.accept = dfa_30;
            this.special = dfa_31;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "()* loopback of 9210:3: ( rule__SnomedIdentifier__Alternatives_5 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_55 = input.LA(1);

                         
                        int index69_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_55);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_58 = input.LA(1);

                         
                        int index69_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_58);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_38 = input.LA(1);

                         
                        int index69_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_38);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA69_61 = input.LA(1);

                         
                        int index69_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_61);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA69_60 = input.LA(1);

                         
                        int index69_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_60);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA69_40 = input.LA(1);

                         
                        int index69_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_40);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA69_39 = input.LA(1);

                         
                        int index69_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_39);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA69_47 = input.LA(1);

                         
                        int index69_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_47);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA69_50 = input.LA(1);

                         
                        int index69_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_50);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA69_41 = input.LA(1);

                         
                        int index69_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_41);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA69_35 = input.LA(1);

                         
                        int index69_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_35);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA69_64 = input.LA(1);

                         
                        int index69_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_64);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA69_52 = input.LA(1);

                         
                        int index69_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_52);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA69_51 = input.LA(1);

                         
                        int index69_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_51);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA69_59 = input.LA(1);

                         
                        int index69_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_59);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA69_36 = input.LA(1);

                         
                        int index69_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_36);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA69_57 = input.LA(1);

                         
                        int index69_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_57);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA69_53 = input.LA(1);

                         
                        int index69_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_53);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA69_42 = input.LA(1);

                         
                        int index69_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_42);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA69_63 = input.LA(1);

                         
                        int index69_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_63);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA69_37 = input.LA(1);

                         
                        int index69_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_37);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA69_34 = input.LA(1);

                         
                        int index69_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_34);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA69_62 = input.LA(1);

                         
                        int index69_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_62);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA69_44 = input.LA(1);

                         
                        int index69_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_44);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA69_43 = input.LA(1);

                         
                        int index69_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_43);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA69_56 = input.LA(1);

                         
                        int index69_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_56);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA69_45 = input.LA(1);

                         
                        int index69_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_45);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA69_46 = input.LA(1);

                         
                        int index69_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_46);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA69_49 = input.LA(1);

                         
                        int index69_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_49);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA69_65 = input.LA(1);

                         
                        int index69_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_65);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA69_54 = input.LA(1);

                         
                        int index69_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_54);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA69_48 = input.LA(1);

                         
                        int index69_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalEclParser()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index69_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x007F941100000000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000004000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000004000002L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000042000000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000042000002L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000010000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000200000000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x007F945510000000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000080000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000080000000002L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0400000000000002L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000008000000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000100000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000002100000000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000100000002L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000004400000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x007F945110000000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000800000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0181E00000000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000180000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000100180000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000440000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000030180000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000001000A0FFF0L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0800000000000000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000600000000000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00000000011A0000L,0x0000000000000001L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000602000000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000600000000002L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x1000001000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x1000000000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x1000002000000000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000001100000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000005080L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000200000000000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000001880L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000180000002L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x1000020180000000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x1000020180000002L});
    }


}